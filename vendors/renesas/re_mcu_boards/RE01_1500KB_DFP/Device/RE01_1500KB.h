/*
 * Copyright (C) 2018 - 2020 Renesas Electronics Corporation. All rights reserved.
 *
 * @file     RE01_1500KB.h
 * @brief    CMSIS HeaderFile
 * @version  1.20
 * @date     21. April 2020
 * @note     Generated by SVDConv V3.3.35 on Tuesday, 21.04.2020 17:27:34
 *           from File 'RE01_1500KB.svd',
 *           last modified on Tuesday, 21.04.2020 08:27:23
 */



/** @addtogroup Renesas Electronics Corporation
  * @{
  */


/** @addtogroup RE01_1500KB
  * @{
  */


#ifndef RE01_1500KB_H
#define RE01_1500KB_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup Configuration_of_CMSIS
  * @{
  */



/* =========================================================================================================================== */
/* ================                                Interrupt Number Definition                                ================ */
/* =========================================================================================================================== */

typedef enum {
/* =======================================  ARM Cortex-M0+ Specific Interrupt Numbers  ======================================= */
  Reset_IRQn                = -15,              /*!< -15  Reset Vector, invoked on Power up and warm reset                     */
  NonMaskableInt_IRQn       = -14,              /*!< -14  Non maskable Interrupt, cannot be stopped or preempted               */
  HardFault_IRQn            = -13,              /*!< -13  Hard Fault, all classes of Fault                                     */
  SVCall_IRQn               =  -5,              /*!< -5 System Service Call via SVC instruction                                */
  PendSV_IRQn               =  -2,              /*!< -2 Pendable request for system service                                    */
  SysTick_IRQn              =  -1,              /*!< -1 System Tick Timer                                                      */
/* ========================================  RE01_1500KB Specific Interrupt Numbers  ========================================= */
  IEL0_IRQn                 =   0,              /*!< 0  ICU Interrupt 0                                                        */
  IEL1_IRQn                 =   1,              /*!< 1  ICU Interrupt 1                                                        */
  IEL2_IRQn                 =   2,              /*!< 2  ICU Interrupt 2                                                        */
  IEL3_IRQn                 =   3,              /*!< 3  ICU Interrupt 3                                                        */
  IEL4_IRQn                 =   4,              /*!< 4  ICU Interrupt 4                                                        */
  IEL5_IRQn                 =   5,              /*!< 5  ICU Interrupt 5                                                        */
  IEL6_IRQn                 =   6,              /*!< 6  ICU Interrupt 6                                                        */
  IEL7_IRQn                 =   7,              /*!< 7  ICU Interrupt 7                                                        */
  IEL8_IRQn                 =   8,              /*!< 8  ICU Interrupt 8                                                        */
  IEL9_IRQn                 =   9,              /*!< 9  ICU Interrupt 9                                                        */
  IEL10_IRQn                =  10,              /*!< 10 ICU Interrupt 10                                                       */
  IEL11_IRQn                =  11,              /*!< 11 ICU Interrupt 11                                                       */
  IEL12_IRQn                =  12,              /*!< 12 ICU Interrupt 12                                                       */
  IEL13_IRQn                =  13,              /*!< 13 ICU Interrupt 13                                                       */
  IEL14_IRQn                =  14,              /*!< 14 ICU Interrupt 14                                                       */
  IEL15_IRQn                =  15,              /*!< 15 ICU Interrupt 15                                                       */
  IEL16_IRQn                =  16,              /*!< 16 ICU Interrupt 16                                                       */
  IEL17_IRQn                =  17,              /*!< 17 ICU Interrupt 17                                                       */
  IEL18_IRQn                =  18,              /*!< 18 ICU Interrupt 18                                                       */
  IEL19_IRQn                =  19,              /*!< 19 ICU Interrupt 19                                                       */
  IEL20_IRQn                =  20,              /*!< 20 ICU Interrupt 20                                                       */
  IEL21_IRQn                =  21,              /*!< 21 ICU Interrupt 21                                                       */
  IEL22_IRQn                =  22,              /*!< 22 ICU Interrupt 22                                                       */
  IEL23_IRQn                =  23,              /*!< 23 ICU Interrupt 23                                                       */
  IEL24_IRQn                =  24,              /*!< 24 ICU Interrupt 24                                                       */
  IEL25_IRQn                =  25,              /*!< 25 ICU Interrupt 25                                                       */
  IEL26_IRQn                =  26,              /*!< 26 ICU Interrupt 26                                                       */
  IEL27_IRQn                =  27,              /*!< 27 ICU Interrupt 27                                                       */
  IEL28_IRQn                =  28,              /*!< 28 ICU Interrupt 28                                                       */
  IEL29_IRQn                =  29,              /*!< 29 ICU Interrupt 29                                                       */
  IEL30_IRQn                =  30,              /*!< 30 ICU Interrupt 30                                                       */
  IEL31_IRQn                =  31               /*!< 31 ICU Interrupt 31                                                       */
} IRQn_Type;



/* =========================================================================================================================== */
/* ================                           Processor and Core Peripheral Section                           ================ */
/* =========================================================================================================================== */

/* ==========================  Configuration of the ARM Cortex-M0+ Processor and Core Peripherals  =========================== */
#define __CM0PLUS_REV                 0x0001U   /*!< CM0PLUS Core Revision                                                     */
#define __NVIC_PRIO_BITS               2        /*!< Number of Bits used for Priority Levels                                   */
#define __Vendor_SysTickConfig         0        /*!< Set to 1 if different SysTick Config is used                              */
#define __VTOR_PRESENT                 1        /*!< Set to 1 if CPU supports Vector Table Offset Register                     */
#define __MPU_PRESENT                  1        /*!< MPU present                                                               */
#define __FPU_PRESENT                  0        /*!< FPU present                                                               */
#define __SAUREGION_PRESENT            0        /*!< SAU region present                                                        */


/** @} */ /* End of group Configuration_of_CMSIS */

#include "core_cm0plus.h"                       /*!< ARM Cortex-M0+ processor and core peripherals                             */
#include "system_RE01_1500KB.h"                 /*!< RE01_1500KB System                                                        */

#ifndef __IM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __IM   __I
#endif
#ifndef __OM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __OM   __O
#endif
#ifndef __IOM                                   /*!< Fallback for older CMSIS versions                                         */
  #define __IOM  __IO
#endif


/* ========================================  Start of section using anonymous unions  ======================================== */
#if defined (__CC_ARM)
  #pragma push
  #pragma anon_unions
#elif defined (__ICCARM__)
  #pragma language=extended
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wc11-extensions"
  #pragma clang diagnostic ignored "-Wreserved-id-macro"
  #pragma clang diagnostic ignored "-Wgnu-anonymous-struct"
  #pragma clang diagnostic ignored "-Wnested-anon-types"
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning 586
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#else
  #warning Not supported compiler type
#endif


/* =========================================================================================================================== */
/* ================                            Device Specific Peripheral Section                             ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                           ACMP                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Analog Comparator (ACMP)
  */

typedef struct {                                /*!< (@ 0x40085000) ACMP Structure                                             */
  
  union {
    __IOM uint8_t CMPCTL;                       /*!< (@ 0x00000000) Comparator Control Register                                */
    
    struct {
      __IOM uint8_t CINV        : 1;            /*!< [0..0] Comparator output polarity selection                               */
      __IOM uint8_t COE         : 1;            /*!< [1..1] Comparator output enable                                           */
      __IOM uint8_t CSTEN       : 1;            /*!< [2..2] Interrupt Select                                                   */
      __IOM uint8_t CEG         : 2;            /*!< [4..3] Selection of valid edge (Edge selector)                            */
      __IOM uint8_t CDFS        : 2;            /*!< [6..5] Noise filter selection                                             */
      __IOM uint8_t CMPON       : 1;            /*!< [7..7] Comparator operation control                                       */
    } CMPCTL_b;
  } ;
  __IM  uint8_t   RESERVED[3];
  
  union {
    __IOM uint8_t CMPSEL0;                      /*!< (@ 0x00000004) Comparator Input Select Register                           */
    
    struct {
      __IOM uint8_t CMPSEL      : 1;            /*!< [0..0] Comparator input selection                                         */
            uint8_t             : 7;
    } CMPSEL0_b;
  } ;
  __IM  uint8_t   RESERVED1[3];
  
  union {
    __IOM uint8_t CMPSEL1;                      /*!< (@ 0x00000008) Comparator Reference Voltage Select Register               */
    
    struct {
      __IOM uint8_t CVRS        : 1;            /*!< [0..0] Reference voltage selection                                        */
            uint8_t             : 7;
    } CMPSEL1_b;
  } ;
  __IM  uint8_t   RESERVED2[3];
  
  union {
    __IM  uint8_t CMPMON;                       /*!< (@ 0x0000000C) Comparator Output Monitor Register                         */
    
    struct {
      __IM  uint8_t CMPMON      : 1;            /*!< [0..0] Comparator output monitor                                          */
            uint8_t             : 7;
    } CMPMON_b;
  } ;
  __IM  uint8_t   RESERVED3[3];
  
  union {
    __IOM uint8_t CMPIOC;                       /*!< (@ 0x00000010) CMPIOC                                                     */
    
    struct {
      __IOM uint8_t CPOE        : 1;            /*!< [0..0] Comparator output selection                                        */
            uint8_t             : 7;
    } CMPIOC_b;
  } ;
} ACMP_Type;                                    /*!< Size = 17 (0x11)                                                          */



/* =========================================================================================================================== */
/* ================                                           AGT0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Asynchronous General purpose Timer 0 (AGT0)
  */

typedef struct {                                /*!< (@ 0x40084000) AGT0 Structure                                             */
  
  union {
    __IOM uint16_t AGT;                         /*!< (@ 0x00000000) AGT Counter Register                                       */
    
    struct {
      __IOM uint16_t AGT        : 16;           /*!< [15..0] 16bit counter and reload registerNOTE : When 1 is written
                                                     to the TSTOP bit in the AGTCRn register, the 16-bit counter
                                                     is forcibly stopped and set to FFFFH.                                     */
    } AGT_b;
  } ;
  
  union {
    __IOM uint16_t AGTCMA;                      /*!< (@ 0x00000002) AGT Compare Match A Register                               */
    
    struct {
      __IOM uint16_t AGTCMA     : 16;           /*!< [15..0] AGT Compare Match A RegisterNOTE : When 1 is written
                                                     to the TSTOP bit in the AGTCRn register, set to FFFFH                     */
    } AGTCMA_b;
  } ;
  
  union {
    __IOM uint16_t AGTCMB;                      /*!< (@ 0x00000004) AGT Compare Match B Register                               */
    
    struct {
      __IOM uint16_t AGTCMB     : 16;           /*!< [15..0] AGT Compare Match B RegisterNOTE : When 1 is written
                                                     to the TSTOP bit in the AGTCR register, set to FFFFH                      */
    } AGTCMB_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint8_t AGTCR;                        /*!< (@ 0x00000008) AGT Control Register                                       */
    
    struct {
      __IOM uint8_t TSTART      : 1;            /*!< [0..0] AGT count start                                                    */
      __IOM uint8_t TCSTF       : 1;            /*!< [1..1] AGT count status flag                                              */
      __OM  uint8_t TSTOP       : 1;            /*!< [2..2] AGT count forced stop                                              */
            uint8_t             : 1;
      __IOM uint8_t TEDGF       : 1;            /*!< [4..4] Active edge judgement flag                                         */
      __IOM uint8_t TUNDF       : 1;            /*!< [5..5] AGT underflow flag                                                 */
      __IOM uint8_t TCMAF       : 1;            /*!< [6..6] AGT compare match A flag                                           */
      __IOM uint8_t TCMBF       : 1;            /*!< [7..7] AGT compare match B flag                                           */
    } AGTCR_b;
  } ;
  
  union {
    __IOM uint8_t AGTMR1;                       /*!< (@ 0x00000009) AGT Mode Register 1                                        */
    
    struct {
      __IOM uint8_t TMOD        : 3;            /*!< [2..0] AGT operating mode select                                          */
      __IOM uint8_t TEDGPL      : 1;            /*!< [3..3] AGTIO edge polarity select                                         */
      __IOM uint8_t TCK         : 3;            /*!< [6..4] AGT count source select                                            */
            uint8_t             : 1;
    } AGTMR1_b;
  } ;
  
  union {
    __IOM uint8_t AGTMR2;                       /*!< (@ 0x0000000A) AGT Mode Register 2                                        */
    
    struct {
      __IOM uint8_t CKS         : 3;            /*!< [2..0] AGTLCLK/LAGTSCLK count source clock frequency division
                                                     ratio select                                                              */
            uint8_t             : 4;
      __IOM uint8_t LPM         : 1;            /*!< [7..7] Low Power Mode                                                     */
    } AGTMR2_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t AGTIOC;                       /*!< (@ 0x0000000C) AGT I/O Control Register                                   */
    
    struct {
      __IOM uint8_t TEDGSEL     : 1;            /*!< [0..0] I/O polarity switchFunction varies depending on the operating
                                                     mode.                                                                     */
            uint8_t             : 1;
      __IOM uint8_t TOE         : 1;            /*!< [2..2] AGTO output enable                                                 */
            uint8_t             : 1;
      __IOM uint8_t TIPF        : 2;            /*!< [5..4] AGTIO input filter select                                          */
      __IOM uint8_t TIOGT       : 2;            /*!< [7..6] AGTIO count control                                                */
    } AGTIOC_b;
  } ;
  
  union {
    __IOM uint8_t AGTISR;                       /*!< (@ 0x0000000D) AGT Event Pin Select Register                              */
    
    struct {
            uint8_t             : 2;
      __IOM uint8_t EEPS        : 1;            /*!< [2..2] AGTEEn polarty selection                                           */
            uint8_t             : 5;
    } AGTISR_b;
  } ;
  
  union {
    __IOM uint8_t AGTCMSR;                      /*!< (@ 0x0000000E) AGT Compare Match Function Select Register                 */
    
    struct {
      __IOM uint8_t TCMEA       : 1;            /*!< [0..0] Compare match A register enable                                    */
      __IOM uint8_t TOEA        : 1;            /*!< [1..1] AGTOAn output enable                                               */
      __IOM uint8_t TOPOLA      : 1;            /*!< [2..2] AGTOAn polarity select                                             */
            uint8_t             : 1;
      __IOM uint8_t TCMEB       : 1;            /*!< [4..4] Compare match B register enable                                    */
      __IOM uint8_t TOEB        : 1;            /*!< [5..5] AGTOBn output enable                                               */
      __IOM uint8_t TOPOLB      : 1;            /*!< [6..6] AGTOBn polarity select                                             */
            uint8_t             : 1;
    } AGTCMSR_b;
  } ;
  
  union {
    __IOM uint8_t AGTIOSEL;                     /*!< (@ 0x0000000F) AGT Pin Select Register                                    */
    
    struct {
            uint8_t             : 4;
      __IOM uint8_t TIES        : 1;            /*!< [4..4] AGTIOn input enable                                                */
            uint8_t             : 3;
    } AGTIOSEL_b;
  } ;
} AGT0_Type;                                    /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                           AGT1                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Asynchronous General purpose Timer 1 (AGT1)
  */

typedef struct {                                /*!< (@ 0x40084100) AGT1 Structure                                             */
  
  union {
    __IOM uint16_t AGT;                         /*!< (@ 0x00000000) AGT Counter Register                                       */
    
    struct {
      __IOM uint16_t AGT        : 16;           /*!< [15..0] 16bit counter and reload registerNOTE : When 1 is written
                                                     to the TSTOP bit in the AGTCRn register, the 16-bit counter
                                                     is forcibly stopped and set to FFFFH.                                     */
    } AGT_b;
  } ;
  
  union {
    __IOM uint16_t AGTCMA;                      /*!< (@ 0x00000002) AGT Compare Match A Register                               */
    
    struct {
      __IOM uint16_t AGTCMA     : 16;           /*!< [15..0] AGT Compare Match A RegisterNOTE : When 1 is written
                                                     to the TSTOP bit in the AGTCRn register, set to FFFFH                     */
    } AGTCMA_b;
  } ;
  
  union {
    __IOM uint16_t AGTCMB;                      /*!< (@ 0x00000004) AGT Compare Match B Register                               */
    
    struct {
      __IOM uint16_t AGTCMB     : 16;           /*!< [15..0] AGT Compare Match B RegisterNOTE : When 1 is written
                                                     to the TSTOP bit in the AGTCR register, set to FFFFH                      */
    } AGTCMB_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint8_t AGTCR;                        /*!< (@ 0x00000008) AGT Control Register                                       */
    
    struct {
      __IOM uint8_t TSTART      : 1;            /*!< [0..0] AGT count start                                                    */
      __IOM uint8_t TCSTF       : 1;            /*!< [1..1] AGT count status flag                                              */
      __OM  uint8_t TSTOP       : 1;            /*!< [2..2] AGT count forced stop                                              */
            uint8_t             : 1;
      __IOM uint8_t TEDGF       : 1;            /*!< [4..4] Active edge judgement flag                                         */
      __IOM uint8_t TUNDF       : 1;            /*!< [5..5] AGT underflow flag                                                 */
      __IOM uint8_t TCMAF       : 1;            /*!< [6..6] AGT compare match A flag                                           */
      __IOM uint8_t TCMBF       : 1;            /*!< [7..7] AGT compare match B flag                                           */
    } AGTCR_b;
  } ;
  
  union {
    __IOM uint8_t AGTMR1;                       /*!< (@ 0x00000009) AGT Mode Register 1                                        */
    
    struct {
      __IOM uint8_t TMOD        : 3;            /*!< [2..0] AGT operating mode select                                          */
      __IOM uint8_t TEDGPL      : 1;            /*!< [3..3] AGTIO edge polarity select                                         */
      __IOM uint8_t TCK         : 3;            /*!< [6..4] AGT count source select                                            */
            uint8_t             : 1;
    } AGTMR1_b;
  } ;
  
  union {
    __IOM uint8_t AGTMR2;                       /*!< (@ 0x0000000A) AGT Mode Register 2                                        */
    
    struct {
      __IOM uint8_t CKS         : 3;            /*!< [2..0] AGTLCLK/LAGTSCLK count source clock frequency division
                                                     ratio select                                                              */
            uint8_t             : 4;
      __IOM uint8_t LPM         : 1;            /*!< [7..7] Low Power Mode                                                     */
    } AGTMR2_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t AGTIOC;                       /*!< (@ 0x0000000C) AGT I/O Control Register                                   */
    
    struct {
      __IOM uint8_t TEDGSEL     : 1;            /*!< [0..0] I/O polarity switchFunction varies depending on the operating
                                                     mode.                                                                     */
            uint8_t             : 1;
      __IOM uint8_t TOE         : 1;            /*!< [2..2] AGTO output enable                                                 */
            uint8_t             : 1;
      __IOM uint8_t TIPF        : 2;            /*!< [5..4] AGTIO input filter select                                          */
      __IOM uint8_t TIOGT       : 2;            /*!< [7..6] AGTIO count control                                                */
    } AGTIOC_b;
  } ;
  
  union {
    __IOM uint8_t AGTISR;                       /*!< (@ 0x0000000D) AGT Event Pin Select Register                              */
    
    struct {
            uint8_t             : 2;
      __IOM uint8_t EEPS        : 1;            /*!< [2..2] AGTEEn polarty selection                                           */
            uint8_t             : 5;
    } AGTISR_b;
  } ;
  
  union {
    __IOM uint8_t AGTCMSR;                      /*!< (@ 0x0000000E) AGT Compare Match Function Select Register                 */
    
    struct {
      __IOM uint8_t TCMEA       : 1;            /*!< [0..0] Compare match A register enable                                    */
      __IOM uint8_t TOEA        : 1;            /*!< [1..1] AGTOAn output enable                                               */
      __IOM uint8_t TOPOLA      : 1;            /*!< [2..2] AGTOAn polarity select                                             */
            uint8_t             : 1;
      __IOM uint8_t TCMEB       : 1;            /*!< [4..4] Compare match B register enable                                    */
      __IOM uint8_t TOEB        : 1;            /*!< [5..5] AGTOBn output enable                                               */
      __IOM uint8_t TOPOLB      : 1;            /*!< [6..6] AGTOBn polarity select                                             */
            uint8_t             : 1;
    } AGTCMSR_b;
  } ;
  
  union {
    __IOM uint8_t AGTIOSEL;                     /*!< (@ 0x0000000F) AGT Pin Select Register                                    */
    
    struct {
            uint8_t             : 4;
      __IOM uint8_t TIES        : 1;            /*!< [4..4] AGTIOn input enable                                                */
            uint8_t             : 3;
    } AGTIOSEL_b;
  } ;
} AGT1_Type;                                    /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                            BUS                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief BUS Control (BUS)
  */

typedef struct {                                /*!< (@ 0x40004000) BUS Structure                                              */
  __IM  uint32_t  RESERVED[2];
  
  union {
    __IOM uint16_t BUSMCNTSYS;                  /*!< (@ 0x00000008) Master Bus Control Register SYS                            */
    
    struct {
            uint16_t            : 15;
      __IOM uint16_t IERES      : 1;            /*!< [15..15] Ignore Error Responses                                           */
    } BUSMCNTSYS_b;
  } ;
  __IM  uint16_t  RESERVED1;
  
  union {
    __IOM uint16_t BUSMCNTDMA;                  /*!< (@ 0x0000000C) Master Bus Control Register DMA                            */
    
    struct {
            uint16_t            : 15;
      __IOM uint16_t IERES      : 1;            /*!< [15..15] Ignore Error Responses                                           */
    } BUSMCNTDMA_b;
  } ;
  __IM  uint16_t  RESERVED2;
  __IM  uint32_t  RESERVED3[516];
  
  union {
    __IM  uint32_t BUS3ERRADD;                  /*!< (@ 0x00000820) Bus Error Address Register 3                               */
    
    struct {
      __IM  uint32_t BERAD      : 32;           /*!< [31..0] Bus Error AddressWhen a bus error occurs, It stores
                                                     an error address.                                                         */
    } BUS3ERRADD_b;
  } ;
  
  union {
    __IM  uint8_t BUS3ERRSTAT;                  /*!< (@ 0x00000824) Bus Error Status Register 3                                */
    
    struct {
      __IM  uint8_t ACCSTAT     : 1;            /*!< [0..0] Error access statusThe status at the time of the error             */
            uint8_t             : 6;
      __IM  uint8_t ERRSTAT     : 1;            /*!< [7..7] Bus Error StatusWhen bus error assert, error flag occurs.          */
    } BUS3ERRSTAT_b;
  } ;
  __IM  uint8_t   RESERVED4;
  __IM  uint16_t  RESERVED5;
  __IM  uint32_t  RESERVED6[2];
  
  union {
    __IM  uint32_t BUS4ERRADD;                  /*!< (@ 0x00000830) Bus Error Address Register 4                               */
    
    struct {
      __IM  uint32_t BERAD      : 32;           /*!< [31..0] Bus Error AddressWhen a bus error occurs, It stores
                                                     an error address.                                                         */
    } BUS4ERRADD_b;
  } ;
  
  union {
    __IM  uint8_t BUS4ERRSTAT;                  /*!< (@ 0x00000834) Bus Error Status Register 4                                */
    
    struct {
      __IM  uint8_t ACCSTAT     : 1;            /*!< [0..0] Error access statusThe status at the time of the error             */
            uint8_t             : 6;
      __IM  uint8_t ERRSTAT     : 1;            /*!< [7..7] Bus Error StatusWhen bus error assert, error flag occurs.          */
    } BUS4ERRSTAT_b;
  } ;
  __IM  uint8_t   RESERVED7;
  __IM  uint16_t  RESERVED8;
} BUS_Type;                                     /*!< Size = 2104 (0x838)                                                       */



/* =========================================================================================================================== */
/* ================                                            CAC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Clock Frequency Accuracy Measurement Circuit (CAC)
  */

typedef struct {                                /*!< (@ 0x40044600) CAC Structure                                              */
  
  union {
    __IOM uint8_t CACR0;                        /*!< (@ 0x00000000) CAC Control Register 0                                     */
    
    struct {
      __IOM uint8_t CFME        : 1;            /*!< [0..0] Clock Frequency Measurement Enable.                                */
            uint8_t             : 7;
    } CACR0_b;
  } ;
  
  union {
    __IOM uint8_t CACR1;                        /*!< (@ 0x00000001) CAC Control Register 1                                     */
    
    struct {
      __IOM uint8_t CACREFE     : 1;            /*!< [0..0] CACREF Pin Input Enable                                            */
      __IOM uint8_t FMCS        : 3;            /*!< [3..1] Measurement Target Clock Select                                    */
      __IOM uint8_t TCSS        : 2;            /*!< [5..4] Measurement Target Clock Frequency Division Ratio Select           */
      __IOM uint8_t EDGES       : 2;            /*!< [7..6] Valid Edge Select                                                  */
    } CACR1_b;
  } ;
  
  union {
    __IOM uint8_t CACR2;                        /*!< (@ 0x00000002) CAC Control Register 2                                     */
    
    struct {
      __IOM uint8_t RPS         : 1;            /*!< [0..0] Reference Signal Select                                            */
      __IOM uint8_t RSCS        : 3;            /*!< [3..1] Measurement Reference Clock Select                                 */
      __IOM uint8_t RCDS        : 2;            /*!< [5..4] Measurement Reference Clock Frequency Division Ratio
                                                     Select                                                                    */
      __IOM uint8_t DFS         : 2;            /*!< [7..6] Digital Filter Selection                                           */
    } CACR2_b;
  } ;
  
  union {
    __IOM uint8_t CAICR;                        /*!< (@ 0x00000003) CAC Interrupt Control Register                             */
    
    struct {
      __IOM uint8_t FERRIE      : 1;            /*!< [0..0] Frequency Error Interrupt Request Enable                           */
      __IOM uint8_t MENDIE      : 1;            /*!< [1..1] Measurement End Interrupt Request Enable                           */
      __IOM uint8_t OVFIE       : 1;            /*!< [2..2] Overflow Interrupt Request Enable                                  */
            uint8_t             : 1;
      __IOM uint8_t FERRFCL     : 1;            /*!< [4..4] FERRF Clear                                                        */
      __IOM uint8_t MENDFCL     : 1;            /*!< [5..5] MENDF Clear                                                        */
      __IOM uint8_t OVFFCL      : 1;            /*!< [6..6] OVFF Clear                                                         */
            uint8_t             : 1;
    } CAICR_b;
  } ;
  
  union {
    __IOM uint8_t CASTR;                        /*!< (@ 0x00000004) CAC Status Register                                        */
    
    struct {
      __IM  uint8_t FERRF       : 1;            /*!< [0..0] Frequency Error Flag                                               */
      __IM  uint8_t MENDF       : 1;            /*!< [1..1] Measurement End Flag                                               */
      __IM  uint8_t OVFF        : 1;            /*!< [2..2] Counter Overflow Flag                                              */
            uint8_t             : 5;
    } CASTR_b;
  } ;
  __IM  uint8_t   RESERVED;
  
  union {
    __IOM uint16_t CAULVR;                      /*!< (@ 0x00000006) CAC Upper-Limit Value Setting Register                     */
    
    struct {
      __IOM uint16_t CAULVR     : 16;           /*!< [15..0] CAULVR is a 16-bit readable/writable register that stores
                                                     the upper-limit value of the frequency.                                   */
    } CAULVR_b;
  } ;
  
  union {
    __IOM uint16_t CALLVR;                      /*!< (@ 0x00000008) CAC Lower-Limit Value Setting Register                     */
    
    struct {
      __IOM uint16_t CALLVR     : 16;           /*!< [15..0] CALLVR is a 16-bit readable/writable register that stores
                                                     the lower-limit value of the frequency.                                   */
    } CALLVR_b;
  } ;
  
  union {
    __IM  uint16_t CACNTBR;                     /*!< (@ 0x0000000A) CAC Counter Buffer Register                                */
    
    struct {
      __IM  uint16_t CACNTBR    : 16;           /*!< [15..0] CACNTBR is a 16-bit read-only register that retains
                                                     the counter value at the time a valid reference signal
                                                     edge is input                                                             */
    } CACNTBR_b;
  } ;
} CAC_Type;                                     /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                            CCC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief CCC (CCC)
  */

typedef struct {                                /*!< (@ 0x40080400) CCC Structure                                              */
  
  union {
    __IOM uint32_t ADJUSTR;                     /*!< (@ 0x00000000) ADJUSTR                                                    */
    
    struct {
      __IOM uint32_t ADJUST     : 9;            /*!< [8..0] ADJUST                                                             */
            uint32_t            : 23;
    } ADJUSTR_b;
  } ;
  
  union {
    __IM  uint32_t R128CNT;                     /*!< (@ 0x00000004) R128CNT                                                    */
    
    struct {
      __IM  uint32_t CF128HZ    : 1;            /*!< [0..0] CF128HZ                                                            */
      __IM  uint32_t CF64HZ     : 1;            /*!< [1..1] CF64HZ                                                             */
      __IM  uint32_t CF32HZ     : 1;            /*!< [2..2] CF32HZ                                                             */
      __IM  uint32_t CF16HZ     : 1;            /*!< [3..3] CF16HZ                                                             */
      __IM  uint32_t CF8HZ      : 1;            /*!< [4..4] CF8HZ                                                              */
      __IM  uint32_t CF4HZ      : 1;            /*!< [5..5] CF4HZ                                                              */
      __IM  uint32_t CF2HZ      : 1;            /*!< [6..6] CF2HZ                                                              */
      __IM  uint32_t CF1HZ      : 1;            /*!< [7..7] CF1HZ                                                              */
            uint32_t            : 24;
    } R128CNT_b;
  } ;
  
  union {
    __IOM uint32_t R128CTRL;                    /*!< (@ 0x00000008) R128CTRL                                                   */
    
    struct {
      __IOM uint32_t CADJUSCEN  : 1;            /*!< [0..0] CADJUSCEN                                                          */
      __IOM uint32_t ADJUSTEN   : 1;            /*!< [1..1] ADJUSTEN                                                           */
      __IOM uint32_t CRESET     : 1;            /*!< [2..2] CRESET                                                             */
      __IOM uint32_t COPSEL     : 1;            /*!< [3..3] COPSEL                                                             */
      __IOM uint32_t CRTCOS     : 1;            /*!< [4..4] CRTCOS                                                             */
      __IOM uint32_t CCIE       : 1;            /*!< [5..5] CCIE                                                               */
      __IOM uint32_t CPIE       : 1;            /*!< [6..6] CPIE                                                               */
      __IOM uint32_t CPES       : 2;            /*!< [8..7] CPES                                                               */
      __IOM uint32_t CRTCOE     : 1;            /*!< [9..9] CRTCOE                                                             */
      __IOM uint32_t CEIE       : 1;            /*!< [10..10] CEIE                                                             */
      __IOM uint32_t CPES_EX    : 1;            /*!< [11..11] CPES_EX                                                          */
            uint32_t            : 4;
      __IOM uint32_t PF128HZ    : 1;            /*!< [16..16] PF128HZ                                                          */
      __IOM uint32_t PF64HZ     : 1;            /*!< [17..17] PF64HZ                                                           */
      __IOM uint32_t PF16HZ     : 1;            /*!< [18..18] PF16HZ                                                           */
      __IOM uint32_t PF4HZ      : 1;            /*!< [19..19] PF4HZ                                                            */
      __IOM uint32_t PF2HZ      : 1;            /*!< [20..20] PF2HZ                                                            */
      __IOM uint32_t PF1HZ      : 1;            /*!< [21..21] PF1HZ                                                            */
      __IM  uint32_t PFWR0ST    : 1;            /*!< [22..22] PFWR0ST                                                          */
            uint32_t            : 8;
      __IOM uint32_t PFEN       : 1;            /*!< [31..31] PFEN                                                             */
    } R128CTRL_b;
  } ;
} CCC_Type;                                     /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief CRC Calculator (CRC)
  */

typedef struct {                                /*!< (@ 0x40074000) CRC Structure                                              */
  
  union {
    __IOM uint8_t CRCCR0;                       /*!< (@ 0x00000000) CRC Control Register0                                      */
    
    struct {
      __IOM uint8_t GPS         : 3;            /*!< [2..0] CRC Generating Polynomial Switching                                */
            uint8_t             : 3;
      __IOM uint8_t LMS         : 1;            /*!< [6..6] CRC Calculation Switching                                          */
      __OM  uint8_t DORCLR      : 1;            /*!< [7..7] CRCDOR Register Clear                                              */
    } CRCCR0_b;
  } ;
  
  union {
    __IOM uint8_t CRCCR1;                       /*!< (@ 0x00000001) CRC Control Register1                                      */
    
    struct {
            uint8_t             : 6;
      __IOM uint8_t CRCSWR      : 1;            /*!< [6..6] Snoop-on-write/read switch bit                                     */
      __IOM uint8_t CRCSEN      : 1;            /*!< [7..7] Snoop enable bit                                                   */
    } CRCCR1_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    union {
      __IOM uint32_t CRCDIR;                    /*!< (@ 0x00000004) CRC Data Input Register                                    */
      
      struct {
        __IOM uint32_t CRCDIR   : 32;           /*!< [31..0] Calculation input Data (Case of CRC-32, CRC-32C )                 */
      } CRCDIR_b;
    } ;
    
    union {
      __IOM uint8_t CRCDIR_BY;                  /*!< (@ 0x00000004) CRC Data Input Register (byte access)                      */
      
      struct {
        __IOM uint8_t CRCDIR_BY : 8;            /*!< [7..0] Calculation input Data ( Case of CRC-8, CRC-16 or CRC-CCITT
                                                     )                                                                         */
      } CRCDIR_BY_b;
    } ;
  };
  
  union {
    union {
      __IOM uint32_t CRCDOR;                    /*!< (@ 0x00000008) CRC Data Output Register                                   */
      
      struct {
        __IOM uint32_t CRCDOR   : 32;           /*!< [31..0] Calculation output Data (Case of CRC-32, CRC-32C )                */
      } CRCDOR_b;
    } ;
    
    union {
      __IOM uint16_t CRCDOR_HA;                 /*!< (@ 0x00000008) CRC Data Output Register (halfword access)                 */
      
      struct {
        __IOM uint16_t CRCDOR_HA : 16;          /*!< [15..0] Calculation output Data (Case of CRC-16 or CRC-CCITT
                                                     )                                                                         */
      } CRCDOR_HA_b;
    } ;
    
    union {
      __IOM uint8_t CRCDOR_BY;                  /*!< (@ 0x00000008) CRC Data Output Register(byte access)                      */
      
      struct {
        __IOM uint8_t CRCDOR_BY : 8;            /*!< [7..0] Calculation output Data (Case of CRC-8 )                           */
      } CRCDOR_BY_b;
    } ;
  };
  
  union {
    __IOM uint16_t CRCSAR;                      /*!< (@ 0x0000000C) Snoop Address Register                                     */
    
    struct {
      __IOM uint16_t CRCSA      : 14;           /*!< [13..0] CRCSA                                                             */
            uint16_t            : 2;
    } CRCSAR_b;
  } ;
  __IM  uint16_t  RESERVED1;
} CRC_Type;                                     /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                            DBG                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Debug Function (DBG)
  */

typedef struct {                                /*!< (@ 0x4001B000) DBG Structure                                              */
  
  union {
    __IM  uint32_t DBGSTR;                      /*!< (@ 0x00000000) Debug Status Register                                      */
    
    struct {
            uint32_t            : 28;
      __IM  uint32_t CDBGPWRUPREQ : 1;          /*!< [28..28] Debug power-up request                                           */
      __IM  uint32_t CDBGPWRUPACK : 1;          /*!< [29..29] Debug power-up acknowledge                                       */
            uint32_t            : 2;
    } DBGSTR_b;
  } ;
  __IM  uint32_t  RESERVED[3];
  
  union {
    __IOM uint32_t DBGSTOPCR;                   /*!< (@ 0x00000010) Debug Stop Control Register                                */
    
    struct {
      __IOM uint32_t DBGSTOP_IWDT : 1;          /*!< [0..0] Mask bit for IWDT reset/interrupt                                  */
      __IOM uint32_t DBGSTOP_WDT : 1;           /*!< [1..1] Mask bit for WDT reset/interrupt                                   */
            uint32_t            : 14;
      __IOM uint32_t DBGSTOP_LVD0 : 1;          /*!< [16..16] Mask bit for LVD0 reset or interrupt                             */
      __IOM uint32_t DBGSTOP_LVD1 : 1;          /*!< [17..17] Mask bit for LVD1 reset or interrupt                             */
      __IOM uint32_t DBGSTOP_LVDBAT : 1;        /*!< [18..18] Mask bit for LVDBAT reset or interrupt                           */
            uint32_t            : 13;
    } DBGSTOPCR_b;
  } ;
} DBG_Type;                                     /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                            DIL                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief DIL (DIL)
  */

typedef struct {                                /*!< (@ 0x40084500) DIL Structure                                              */
  
  union {
    __IOM uint32_t IDR0;                        /*!< (@ 0x00000000) IDR0                                                       */
    
    struct {
      __IOM uint32_t IDR0       : 32;           /*!< [31..0] IDR0                                                              */
    } IDR0_b;
  } ;
  
  union {
    __IOM uint32_t IDR1;                        /*!< (@ 0x00000004) IDR1                                                       */
    
    struct {
      __IOM uint32_t IDR1       : 32;           /*!< [31..0] IDR1                                                              */
    } IDR1_b;
  } ;
  
  union {
    __IOM uint32_t IDR2;                        /*!< (@ 0x00000008) IDR2                                                       */
    
    struct {
      __IOM uint32_t IDR2       : 32;           /*!< [31..0] IDR2                                                              */
    } IDR2_b;
  } ;
  
  union {
    __IOM uint32_t IDR3;                        /*!< (@ 0x0000000C) IDR3                                                       */
    
    struct {
      __IOM uint32_t IDR3       : 32;           /*!< [31..0] IDR3                                                              */
    } IDR3_b;
  } ;
  
  union {
    __IM  uint32_t ODR0;                        /*!< (@ 0x00000010) ODR0                                                       */
    
    struct {
      __IM  uint32_t ODR0       : 32;           /*!< [31..0] ODR0                                                              */
    } ODR0_b;
  } ;
  
  union {
    __IM  uint32_t ODR1;                        /*!< (@ 0x00000014) ODR1                                                       */
    
    struct {
      __IM  uint32_t ODR1       : 32;           /*!< [31..0] ODR1                                                              */
    } ODR1_b;
  } ;
  
  union {
    __IM  uint32_t ODR2;                        /*!< (@ 0x00000018) ODR2                                                       */
    
    struct {
      __IM  uint32_t ODR2       : 32;           /*!< [31..0] ODR2                                                              */
    } ODR2_b;
  } ;
  
  union {
    __IM  uint32_t ODR3;                        /*!< (@ 0x0000001C) ODR3                                                       */
    
    struct {
      __IM  uint32_t ODR3       : 32;           /*!< [31..0] ODR3                                                              */
    } ODR3_b;
  } ;
} DIL_Type;                                     /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                            DIV                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief DIV (DIV)
  */

typedef struct {                                /*!< (@ 0x40084600) DIV Structure                                              */
  __IM  uint32_t  RESERVED[32];
  
  union {
    __IOM uint32_t DIVCR;                       /*!< (@ 0x00000080) DIVCR                                                      */
    
    struct {
      __OM  uint32_t EN         : 1;            /*!< [0..0] EN                                                                 */
            uint32_t            : 7;
      __IM  uint32_t CALBUSY    : 1;            /*!< [8..8] CALBUSY                                                            */
      __IM  uint32_t DIVERR     : 1;            /*!< [9..9] DIVERR                                                             */
            uint32_t            : 22;
    } DIVCR_b;
  } ;
  
  union {
    __IOM uint32_t DIVIDEND;                    /*!< (@ 0x00000084) DIVIDEND                                                   */
    
    struct {
      __IOM uint32_t DIVIDEND   : 32;           /*!< [31..0] DIVIDEND                                                          */
    } DIVIDEND_b;
  } ;
  
  union {
    __IOM uint32_t DIVSOR;                      /*!< (@ 0x00000088) DIVSOR                                                     */
    
    struct {
      __IOM uint32_t DIVSOR     : 32;           /*!< [31..0] DIVSOR                                                            */
    } DIVSOR_b;
  } ;
  
  union {
    __IOM uint32_t QUOTIENT;                    /*!< (@ 0x0000008C) QUOTIENT                                                   */
    
    struct {
      __IOM uint32_t QUOTIENT   : 32;           /*!< [31..0] QUOTIENT                                                          */
    } QUOTIENT_b;
  } ;
  
  union {
    __IOM uint32_t REMAINDER;                   /*!< (@ 0x00000090) REMAINDER                                                  */
    
    struct {
      __IOM uint32_t REMAINDER  : 32;           /*!< [31..0] REMAINDER                                                         */
    } REMAINDER_b;
  } ;
} DIV_Type;                                     /*!< Size = 148 (0x94)                                                         */



/* =========================================================================================================================== */
/* ================                                            DMA                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Direct Memory Access Controller Interface 0 (DMA)
  */

typedef struct {                                /*!< (@ 0x40005200) DMA Structure                                              */
  
  union {
    __IOM uint8_t DMAST;                        /*!< (@ 0x00000000) DMAC Module Activation Register                            */
    
    struct {
      __IOM uint8_t DMST        : 1;            /*!< [0..0] DMAC Operation Enable                                              */
            uint8_t             : 7;
    } DMAST_b;
  } ;
} DMA_Type;                                     /*!< Size = 1 (0x1)                                                            */



/* =========================================================================================================================== */
/* ================                                           DMAC0                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Direct Memory Access Controller Interface 0 (DMAC0)
  */

typedef struct {                                /*!< (@ 0x40005000) DMAC0 Structure                                            */
  
  union {
    __IOM uint32_t DMSAR;                       /*!< (@ 0x00000000) DMA Source Address Register                                */
    
    struct {
      __IOM uint32_t DMSAR      : 32;           /*!< [31..0] Set DMSAR while DMAC activation is disabled (the DMST
                                                     bit in DMAST = 0) or DMA transfer is disabled (the DTEbit
                                                     in DMCNT = 0).Note: Address alignment in this register
                                                     must match the transfer data size value selected in the
                                                     SZ bit in DMTMD.                                                          */
    } DMSAR_b;
  } ;
  
  union {
    __IOM uint32_t DMDAR;                       /*!< (@ 0x00000004) DMA Destination Address Register                           */
    
    struct {
      __IOM uint32_t DMDAR      : 32;           /*!< [31..0] Set DMDAR while DMAC activation is disabled (the DMST
                                                     bit in DMAST = 0) or DMA transfer is disabled (the DTEbit
                                                     in DMCNT = 0).Note: Address alignment in this register
                                                     must match the transfer data size value selected in the
                                                     SZ bit in DMTMD.                                                          */
    } DMDAR_b;
  } ;
  
  union {
    __IOM uint32_t DMCRA;                       /*!< (@ 0x00000008) DMA Transfer Count Register                                */
    
    struct {
      __IOM uint32_t DMCRAL     : 16;           /*!< [15..0] Lower bits of transfer count                                      */
      __IOM uint32_t DMCRAH     : 10;           /*!< [25..16] Upper bits of transfer count                                     */
            uint32_t            : 6;
    } DMCRA_b;
  } ;
  
  union {
    __IOM uint16_t DMCRB;                       /*!< (@ 0x0000000C) DMA Block Transfer Count Register                          */
    
    struct {
      __IOM uint16_t DMCRB      : 16;           /*!< [15..0] Specifies the number of block transfer operations or
                                                     repeat transfer operations.0001h to FFFFh: (1 to 65,535)0000h:
                                                     (65,536)                                                                  */
    } DMCRB_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint16_t DMTMD;                       /*!< (@ 0x00000010) DMA Transfer Mode Register                                 */
    
    struct {
      __IOM uint16_t DCTG       : 2;            /*!< [1..0] Transfer Request Source Select                                     */
            uint16_t            : 6;
      __IOM uint16_t SZ         : 2;            /*!< [9..8] Transfer Data Size Select                                          */
            uint16_t            : 2;
      __IOM uint16_t DTS        : 2;            /*!< [13..12] Repeat Area Select                                               */
      __IOM uint16_t MD         : 2;            /*!< [15..14] Transfer Mode Select                                             */
    } DMTMD_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t DMINT;                        /*!< (@ 0x00000013) DMA Interrupt Setting Register                             */
    
    struct {
      __IOM uint8_t DARIE       : 1;            /*!< [0..0] Destination Address Extended Repeat Area Overflow Interrupt
                                                     Enable                                                                    */
      __IOM uint8_t SARIE       : 1;            /*!< [1..1] Source Address Extended Repeat Area Overflow Interrupt
                                                     Enable                                                                    */
      __IOM uint8_t RPTIE       : 1;            /*!< [2..2] Repeat Size End Interrupt Enable                                   */
      __IOM uint8_t ESIE        : 1;            /*!< [3..3] Transfer Escape End Interrupt Enable                               */
      __IOM uint8_t DTIE        : 1;            /*!< [4..4] Transfer End Interrupt Enable                                      */
            uint8_t             : 3;
    } DMINT_b;
  } ;
  
  union {
    __IOM uint16_t DMAMD;                       /*!< (@ 0x00000014) DMA Address Mode Register                                  */
    
    struct {
      __IOM uint16_t DARA       : 5;            /*!< [4..0] Destination Address Extended Repeat Area                           */
            uint16_t            : 1;
      __IOM uint16_t DM         : 2;            /*!< [7..6] Destination Address Update Mode                                    */
      __IOM uint16_t SARA       : 5;            /*!< [12..8] Source Address Extended Repeat Area                               */
            uint16_t            : 1;
      __IOM uint16_t SM         : 2;            /*!< [15..14] Source Address Update Mode                                       */
    } DMAMD_b;
  } ;
  __IM  uint16_t  RESERVED2;
  
  union {
    __IOM uint32_t DMOFR;                       /*!< (@ 0x00000018) DMA Offset Register                                        */
    
    struct {
      __IOM uint32_t DMOFR      : 32;           /*!< [31..0] Specifies the offset when offset addition is selected
                                                     as the address update mode for transfer source or destination.            */
    } DMOFR_b;
  } ;
  
  union {
    __IOM uint8_t DMCNT;                        /*!< (@ 0x0000001C) DMA Transfer Enable Register                               */
    
    struct {
      __IOM uint8_t DTE         : 1;            /*!< [0..0] DMA Transfer Enable                                                */
            uint8_t             : 7;
    } DMCNT_b;
  } ;
  
  union {
    __IOM uint8_t DMREQ;                        /*!< (@ 0x0000001D) DMA Software Start Register                                */
    
    struct {
      __IOM uint8_t SWREQ       : 1;            /*!< [0..0] DMA Software Start                                                 */
            uint8_t             : 3;
      __IOM uint8_t CLRS        : 1;            /*!< [4..4] DMA Software Start Bit Auto Clear Select                           */
            uint8_t             : 3;
    } DMREQ_b;
  } ;
  
  union {
    __IOM uint8_t DMSTS;                        /*!< (@ 0x0000001E) DMA Status Register                                        */
    
    struct {
      __IOM uint8_t ESIF        : 1;            /*!< [0..0] Transfer Escape End Interrupt Flag                                 */
            uint8_t             : 3;
      __IOM uint8_t DTIF        : 1;            /*!< [4..4] Transfer End Interrupt Flag                                        */
            uint8_t             : 2;
      __IM  uint8_t ACT         : 1;            /*!< [7..7] DMA Active Flag                                                    */
    } DMSTS_b;
  } ;
  __IM  uint8_t   RESERVED3;
} DMAC0_Type;                                   /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                           DMAC1                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Direct Memory Access Controller Interface 1 (DMAC1)
  */

typedef struct {                                /*!< (@ 0x40005040) DMAC1 Structure                                            */
  
  union {
    __IOM uint32_t DMSAR;                       /*!< (@ 0x00000000) DMA Source Address Register                                */
    
    struct {
      __IOM uint32_t DMSAR      : 32;           /*!< [31..0] Set DMSAR while DMAC activation is disabled (the DMST
                                                     bit in DMAST = 0) or DMA transfer is disabled (the DTEbit
                                                     in DMCNT = 0).Note: Address alignment in this register
                                                     must match the transfer data size value selected in the
                                                     SZ bit in DMTMD.                                                          */
    } DMSAR_b;
  } ;
  
  union {
    __IOM uint32_t DMDAR;                       /*!< (@ 0x00000004) DMA Destination Address Register                           */
    
    struct {
      __IOM uint32_t DMDAR      : 32;           /*!< [31..0] Set DMDAR while DMAC activation is disabled (the DMST
                                                     bit in DMAST = 0) or DMA transfer is disabled (the DTEbit
                                                     in DMCNT = 0).Note: Address alignment in this register
                                                     must match the transfer data size value selected in the
                                                     SZ bit in DMTMD.                                                          */
    } DMDAR_b;
  } ;
  
  union {
    __IOM uint32_t DMCRA;                       /*!< (@ 0x00000008) DMA Transfer Count Register                                */
    
    struct {
      __IOM uint32_t DMCRAL     : 16;           /*!< [15..0] Lower bits of transfer count                                      */
      __IOM uint32_t DMCRAH     : 10;           /*!< [25..16] Upper bits of transfer count                                     */
            uint32_t            : 6;
    } DMCRA_b;
  } ;
  
  union {
    __IOM uint16_t DMCRB;                       /*!< (@ 0x0000000C) DMA Block Transfer Count Register                          */
    
    struct {
      __IOM uint16_t DMCRB      : 16;           /*!< [15..0] Specifies the number of block transfer operations or
                                                     repeat transfer operations.0001h to FFFFh: (1 to 65,535)0000h:
                                                     (65,536)                                                                  */
    } DMCRB_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint16_t DMTMD;                       /*!< (@ 0x00000010) DMA Transfer Mode Register                                 */
    
    struct {
      __IOM uint16_t DCTG       : 2;            /*!< [1..0] Transfer Request Source Select                                     */
            uint16_t            : 6;
      __IOM uint16_t SZ         : 2;            /*!< [9..8] Transfer Data Size Select                                          */
            uint16_t            : 2;
      __IOM uint16_t DTS        : 2;            /*!< [13..12] Repeat Area Select                                               */
      __IOM uint16_t MD         : 2;            /*!< [15..14] Transfer Mode Select                                             */
    } DMTMD_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t DMINT;                        /*!< (@ 0x00000013) DMA Interrupt Setting Register                             */
    
    struct {
      __IOM uint8_t DARIE       : 1;            /*!< [0..0] Destination Address Extended Repeat Area Overflow Interrupt
                                                     Enable                                                                    */
      __IOM uint8_t SARIE       : 1;            /*!< [1..1] Source Address Extended Repeat Area Overflow Interrupt
                                                     Enable                                                                    */
      __IOM uint8_t RPTIE       : 1;            /*!< [2..2] Repeat Size End Interrupt Enable                                   */
      __IOM uint8_t ESIE        : 1;            /*!< [3..3] Transfer Escape End Interrupt Enable                               */
      __IOM uint8_t DTIE        : 1;            /*!< [4..4] Transfer End Interrupt Enable                                      */
            uint8_t             : 3;
    } DMINT_b;
  } ;
  
  union {
    __IOM uint16_t DMAMD;                       /*!< (@ 0x00000014) DMA Address Mode Register                                  */
    
    struct {
      __IOM uint16_t DARA       : 5;            /*!< [4..0] Destination Address Extended Repeat Area                           */
            uint16_t            : 1;
      __IOM uint16_t DM         : 2;            /*!< [7..6] Destination Address Update Mode                                    */
      __IOM uint16_t SARA       : 5;            /*!< [12..8] Source Address Extended Repeat Area                               */
            uint16_t            : 1;
      __IOM uint16_t SM         : 2;            /*!< [15..14] Source Address Update Mode                                       */
    } DMAMD_b;
  } ;
  __IM  uint16_t  RESERVED2;
  
  union {
    __IOM uint32_t DMOFR;                       /*!< (@ 0x00000018) DMA Offset Register                                        */
    
    struct {
      __IOM uint32_t DMOFR      : 32;           /*!< [31..0] Specifies the offset when offset addition is selected
                                                     as the address update mode for transfer source or destination.            */
    } DMOFR_b;
  } ;
  
  union {
    __IOM uint8_t DMCNT;                        /*!< (@ 0x0000001C) DMA Transfer Enable Register                               */
    
    struct {
      __IOM uint8_t DTE         : 1;            /*!< [0..0] DMA Transfer Enable                                                */
            uint8_t             : 7;
    } DMCNT_b;
  } ;
  
  union {
    __IOM uint8_t DMREQ;                        /*!< (@ 0x0000001D) DMA Software Start Register                                */
    
    struct {
      __IOM uint8_t SWREQ       : 1;            /*!< [0..0] DMA Software Start                                                 */
            uint8_t             : 3;
      __IOM uint8_t CLRS        : 1;            /*!< [4..4] DMA Software Start Bit Auto Clear Select                           */
            uint8_t             : 3;
    } DMREQ_b;
  } ;
  
  union {
    __IOM uint8_t DMSTS;                        /*!< (@ 0x0000001E) DMA Status Register                                        */
    
    struct {
      __IOM uint8_t ESIF        : 1;            /*!< [0..0] Transfer Escape End Interrupt Flag                                 */
            uint8_t             : 3;
      __IOM uint8_t DTIF        : 1;            /*!< [4..4] Transfer End Interrupt Flag                                        */
            uint8_t             : 2;
      __IM  uint8_t ACT         : 1;            /*!< [7..7] DMA Active Flag                                                    */
    } DMSTS_b;
  } ;
  __IM  uint8_t   RESERVED3;
} DMAC1_Type;                                   /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                           DMAC2                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Direct Memory Access Controller Interface 2 (DMAC2)
  */

typedef struct {                                /*!< (@ 0x40005080) DMAC2 Structure                                            */
  
  union {
    __IOM uint32_t DMSAR;                       /*!< (@ 0x00000000) DMA Source Address Register                                */
    
    struct {
      __IOM uint32_t DMSAR      : 32;           /*!< [31..0] Set DMSAR while DMAC activation is disabled (the DMST
                                                     bit in DMAST = 0) or DMA transfer is disabled (the DTEbit
                                                     in DMCNT = 0).Note: Address alignment in this register
                                                     must match the transfer data size value selected in the
                                                     SZ bit in DMTMD.                                                          */
    } DMSAR_b;
  } ;
  
  union {
    __IOM uint32_t DMDAR;                       /*!< (@ 0x00000004) DMA Destination Address Register                           */
    
    struct {
      __IOM uint32_t DMDAR      : 32;           /*!< [31..0] Set DMDAR while DMAC activation is disabled (the DMST
                                                     bit in DMAST = 0) or DMA transfer is disabled (the DTEbit
                                                     in DMCNT = 0).Note: Address alignment in this register
                                                     must match the transfer data size value selected in the
                                                     SZ bit in DMTMD.                                                          */
    } DMDAR_b;
  } ;
  
  union {
    __IOM uint32_t DMCRA;                       /*!< (@ 0x00000008) DMA Transfer Count Register                                */
    
    struct {
      __IOM uint32_t DMCRAL     : 16;           /*!< [15..0] Lower bits of transfer count                                      */
      __IOM uint32_t DMCRAH     : 10;           /*!< [25..16] Upper bits of transfer count                                     */
            uint32_t            : 6;
    } DMCRA_b;
  } ;
  
  union {
    __IOM uint16_t DMCRB;                       /*!< (@ 0x0000000C) DMA Block Transfer Count Register                          */
    
    struct {
      __IOM uint16_t DMCRB      : 16;           /*!< [15..0] Specifies the number of block transfer operations or
                                                     repeat transfer operations.0001h to FFFFh: (1 to 65,535)0000h:
                                                     (65,536)                                                                  */
    } DMCRB_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint16_t DMTMD;                       /*!< (@ 0x00000010) DMA Transfer Mode Register                                 */
    
    struct {
      __IOM uint16_t DCTG       : 2;            /*!< [1..0] Transfer Request Source Select                                     */
            uint16_t            : 6;
      __IOM uint16_t SZ         : 2;            /*!< [9..8] Transfer Data Size Select                                          */
            uint16_t            : 2;
      __IOM uint16_t DTS        : 2;            /*!< [13..12] Repeat Area Select                                               */
      __IOM uint16_t MD         : 2;            /*!< [15..14] Transfer Mode Select                                             */
    } DMTMD_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t DMINT;                        /*!< (@ 0x00000013) DMA Interrupt Setting Register                             */
    
    struct {
      __IOM uint8_t DARIE       : 1;            /*!< [0..0] Destination Address Extended Repeat Area Overflow Interrupt
                                                     Enable                                                                    */
      __IOM uint8_t SARIE       : 1;            /*!< [1..1] Source Address Extended Repeat Area Overflow Interrupt
                                                     Enable                                                                    */
      __IOM uint8_t RPTIE       : 1;            /*!< [2..2] Repeat Size End Interrupt Enable                                   */
      __IOM uint8_t ESIE        : 1;            /*!< [3..3] Transfer Escape End Interrupt Enable                               */
      __IOM uint8_t DTIE        : 1;            /*!< [4..4] Transfer End Interrupt Enable                                      */
            uint8_t             : 3;
    } DMINT_b;
  } ;
  
  union {
    __IOM uint16_t DMAMD;                       /*!< (@ 0x00000014) DMA Address Mode Register                                  */
    
    struct {
      __IOM uint16_t DARA       : 5;            /*!< [4..0] Destination Address Extended Repeat Area                           */
            uint16_t            : 1;
      __IOM uint16_t DM         : 2;            /*!< [7..6] Destination Address Update Mode                                    */
      __IOM uint16_t SARA       : 5;            /*!< [12..8] Source Address Extended Repeat Area                               */
            uint16_t            : 1;
      __IOM uint16_t SM         : 2;            /*!< [15..14] Source Address Update Mode                                       */
    } DMAMD_b;
  } ;
  __IM  uint16_t  RESERVED2;
  
  union {
    __IOM uint32_t DMOFR;                       /*!< (@ 0x00000018) DMA Offset Register                                        */
    
    struct {
      __IOM uint32_t DMOFR      : 32;           /*!< [31..0] Specifies the offset when offset addition is selected
                                                     as the address update mode for transfer source or destination.            */
    } DMOFR_b;
  } ;
  
  union {
    __IOM uint8_t DMCNT;                        /*!< (@ 0x0000001C) DMA Transfer Enable Register                               */
    
    struct {
      __IOM uint8_t DTE         : 1;            /*!< [0..0] DMA Transfer Enable                                                */
            uint8_t             : 7;
    } DMCNT_b;
  } ;
  
  union {
    __IOM uint8_t DMREQ;                        /*!< (@ 0x0000001D) DMA Software Start Register                                */
    
    struct {
      __IOM uint8_t SWREQ       : 1;            /*!< [0..0] DMA Software Start                                                 */
            uint8_t             : 3;
      __IOM uint8_t CLRS        : 1;            /*!< [4..4] DMA Software Start Bit Auto Clear Select                           */
            uint8_t             : 3;
    } DMREQ_b;
  } ;
  
  union {
    __IOM uint8_t DMSTS;                        /*!< (@ 0x0000001E) DMA Status Register                                        */
    
    struct {
      __IOM uint8_t ESIF        : 1;            /*!< [0..0] Transfer Escape End Interrupt Flag                                 */
            uint8_t             : 3;
      __IOM uint8_t DTIF        : 1;            /*!< [4..4] Transfer End Interrupt Flag                                        */
            uint8_t             : 2;
      __IM  uint8_t ACT         : 1;            /*!< [7..7] DMA Active Flag                                                    */
    } DMSTS_b;
  } ;
  __IM  uint8_t   RESERVED3;
} DMAC2_Type;                                   /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                           DMAC3                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Direct Memory Access Controller Interface 3 (DMAC3)
  */

typedef struct {                                /*!< (@ 0x400050C0) DMAC3 Structure                                            */
  
  union {
    __IOM uint32_t DMSAR;                       /*!< (@ 0x00000000) DMA Source Address Register                                */
    
    struct {
      __IOM uint32_t DMSAR      : 32;           /*!< [31..0] Set DMSAR while DMAC activation is disabled (the DMST
                                                     bit in DMAST = 0) or DMA transfer is disabled (the DTEbit
                                                     in DMCNT = 0).Note: Address alignment in this register
                                                     must match the transfer data size value selected in the
                                                     SZ bit in DMTMD.                                                          */
    } DMSAR_b;
  } ;
  
  union {
    __IOM uint32_t DMDAR;                       /*!< (@ 0x00000004) DMA Destination Address Register                           */
    
    struct {
      __IOM uint32_t DMDAR      : 32;           /*!< [31..0] Set DMDAR while DMAC activation is disabled (the DMST
                                                     bit in DMAST = 0) or DMA transfer is disabled (the DTEbit
                                                     in DMCNT = 0).Note: Address alignment in this register
                                                     must match the transfer data size value selected in the
                                                     SZ bit in DMTMD.                                                          */
    } DMDAR_b;
  } ;
  
  union {
    __IOM uint32_t DMCRA;                       /*!< (@ 0x00000008) DMA Transfer Count Register                                */
    
    struct {
      __IOM uint32_t DMCRAL     : 16;           /*!< [15..0] Lower bits of transfer count                                      */
      __IOM uint32_t DMCRAH     : 10;           /*!< [25..16] Upper bits of transfer count                                     */
            uint32_t            : 6;
    } DMCRA_b;
  } ;
  
  union {
    __IOM uint16_t DMCRB;                       /*!< (@ 0x0000000C) DMA Block Transfer Count Register                          */
    
    struct {
      __IOM uint16_t DMCRB      : 16;           /*!< [15..0] Specifies the number of block transfer operations or
                                                     repeat transfer operations.0001h to FFFFh: (1 to 65,535)0000h:
                                                     (65,536)                                                                  */
    } DMCRB_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint16_t DMTMD;                       /*!< (@ 0x00000010) DMA Transfer Mode Register                                 */
    
    struct {
      __IOM uint16_t DCTG       : 2;            /*!< [1..0] Transfer Request Source Select                                     */
            uint16_t            : 6;
      __IOM uint16_t SZ         : 2;            /*!< [9..8] Transfer Data Size Select                                          */
            uint16_t            : 2;
      __IOM uint16_t DTS        : 2;            /*!< [13..12] Repeat Area Select                                               */
      __IOM uint16_t MD         : 2;            /*!< [15..14] Transfer Mode Select                                             */
    } DMTMD_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t DMINT;                        /*!< (@ 0x00000013) DMA Interrupt Setting Register                             */
    
    struct {
      __IOM uint8_t DARIE       : 1;            /*!< [0..0] Destination Address Extended Repeat Area Overflow Interrupt
                                                     Enable                                                                    */
      __IOM uint8_t SARIE       : 1;            /*!< [1..1] Source Address Extended Repeat Area Overflow Interrupt
                                                     Enable                                                                    */
      __IOM uint8_t RPTIE       : 1;            /*!< [2..2] Repeat Size End Interrupt Enable                                   */
      __IOM uint8_t ESIE        : 1;            /*!< [3..3] Transfer Escape End Interrupt Enable                               */
      __IOM uint8_t DTIE        : 1;            /*!< [4..4] Transfer End Interrupt Enable                                      */
            uint8_t             : 3;
    } DMINT_b;
  } ;
  
  union {
    __IOM uint16_t DMAMD;                       /*!< (@ 0x00000014) DMA Address Mode Register                                  */
    
    struct {
      __IOM uint16_t DARA       : 5;            /*!< [4..0] Destination Address Extended Repeat Area                           */
            uint16_t            : 1;
      __IOM uint16_t DM         : 2;            /*!< [7..6] Destination Address Update Mode                                    */
      __IOM uint16_t SARA       : 5;            /*!< [12..8] Source Address Extended Repeat Area                               */
            uint16_t            : 1;
      __IOM uint16_t SM         : 2;            /*!< [15..14] Source Address Update Mode                                       */
    } DMAMD_b;
  } ;
  __IM  uint16_t  RESERVED2;
  
  union {
    __IOM uint32_t DMOFR;                       /*!< (@ 0x00000018) DMA Offset Register                                        */
    
    struct {
      __IOM uint32_t DMOFR      : 32;           /*!< [31..0] Specifies the offset when offset addition is selected
                                                     as the address update mode for transfer source or destination.            */
    } DMOFR_b;
  } ;
  
  union {
    __IOM uint8_t DMCNT;                        /*!< (@ 0x0000001C) DMA Transfer Enable Register                               */
    
    struct {
      __IOM uint8_t DTE         : 1;            /*!< [0..0] DMA Transfer Enable                                                */
            uint8_t             : 7;
    } DMCNT_b;
  } ;
  
  union {
    __IOM uint8_t DMREQ;                        /*!< (@ 0x0000001D) DMA Software Start Register                                */
    
    struct {
      __IOM uint8_t SWREQ       : 1;            /*!< [0..0] DMA Software Start                                                 */
            uint8_t             : 3;
      __IOM uint8_t CLRS        : 1;            /*!< [4..4] DMA Software Start Bit Auto Clear Select                           */
            uint8_t             : 3;
    } DMREQ_b;
  } ;
  
  union {
    __IOM uint8_t DMSTS;                        /*!< (@ 0x0000001E) DMA Status Register                                        */
    
    struct {
      __IOM uint8_t ESIF        : 1;            /*!< [0..0] Transfer Escape End Interrupt Flag                                 */
            uint8_t             : 3;
      __IOM uint8_t DTIF        : 1;            /*!< [4..4] Transfer End Interrupt Flag                                        */
            uint8_t             : 2;
      __IM  uint8_t ACT         : 1;            /*!< [7..7] DMA Active Flag                                                    */
    } DMSTS_b;
  } ;
  __IM  uint8_t   RESERVED3;
} DMAC3_Type;                                   /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                            DOC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Data Operation Circuit (DOC)
  */

typedef struct {                                /*!< (@ 0x40054100) DOC Structure                                              */
  
  union {
    __IOM uint8_t DOCR;                         /*!< (@ 0x00000000) DOC Control Register                                       */
    
    struct {
      __IOM uint8_t OMS         : 2;            /*!< [1..0] Operating Mode Select                                              */
      __IOM uint8_t DCSEL       : 1;            /*!< [2..2] Detection Condition Select                                         */
            uint8_t             : 2;
      __IM  uint8_t DOPCF       : 1;            /*!< [5..5] Data Operation Circuit FlagIndicates the result of an
                                                     operation.                                                                */
      __IOM uint8_t DOPCFCL     : 1;            /*!< [6..6] DOPCF Clear                                                        */
            uint8_t             : 1;
    } DOCR_b;
  } ;
  __IM  uint8_t   RESERVED;
  
  union {
    __IOM uint16_t DODIR;                       /*!< (@ 0x00000002) DOC Data Input Register                                    */
    
    struct {
      __IOM uint16_t DODIR      : 16;           /*!< [15..0] 16-bit read-write register in which 16-bit data for
                                                     use in the operations are stored.                                         */
    } DODIR_b;
  } ;
  
  union {
    __IOM uint16_t DODSR;                       /*!< (@ 0x00000004) DOC Data Setting Register                                  */
    
    struct {
      __IOM uint16_t DODSR      : 16;           /*!< [15..0] This register stores 16-bit data for use as a reference
                                                     in data comparison mode. This register also stores the
                                                     results of operations in data addition and data subtraction
                                                     modes.                                                                    */
    } DODSR_b;
  } ;
} DOC_Type;                                     /*!< Size = 6 (0x6)                                                            */



/* =========================================================================================================================== */
/* ================                                            DTC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Data Transfer Controller (DTC)
  */

typedef struct {                                /*!< (@ 0x40005400) DTC Structure                                              */
  
  union {
    __IOM uint8_t DTCCR;                        /*!< (@ 0x00000000) DTCCR                                                      */
    
    struct {
            uint8_t             : 4;
      __IOM uint8_t RRS         : 1;            /*!< [4..4] RRS                                                                */
            uint8_t             : 3;
    } DTCCR_b;
  } ;
  __IM  uint8_t   RESERVED;
  __IM  uint16_t  RESERVED1;
  
  union {
    __IOM uint32_t DTCVBR;                      /*!< (@ 0x00000004) DTC Vector Base Register                                   */
    
    struct {
      __IOM uint32_t DTCVBR     : 32;           /*!< [31..0] DTC Vector Base Address                                           */
    } DTCVBR_b;
  } ;
  __IM  uint32_t  RESERVED2;
  
  union {
    __IOM uint8_t DTCST;                        /*!< (@ 0x0000000C) DTC Module Start Register                                  */
    
    struct {
      __IOM uint8_t DTCST       : 1;            /*!< [0..0] DTC Module Start                                                   */
            uint8_t             : 7;
    } DTCST_b;
  } ;
  __IM  uint8_t   RESERVED3;
  
  union {
    __IOM uint16_t DTCSTS;                      /*!< (@ 0x0000000E) DTC Status Register                                        */
    
    struct {
      __IM  uint16_t VECN       : 8;            /*!< [7..0] DTC-Activating Vector Number Monitoring                            */
            uint16_t            : 7;
      __IM  uint16_t ACT        : 1;            /*!< [15..15] DTC Active Flag                                                  */
    } DTCSTS_b;
  } ;
} DTC_Type;                                     /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                            EHC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Energy Harvest Control Circuit (EHC)
  */

typedef struct {                                /*!< (@ 0x01008140) EHC Structure                                              */
  __IM  uint16_t  RESERVED;
  
  union {
    __IM  uint16_t EHCRMR;                      /*!< (@ 0x00000002) EHC Registance value monitor register                      */
    
    struct {
      __IM  uint16_t RCFMF0     : 8;            /*!< [7..0] RCFMF0                                                             */
      __IM  uint16_t RCFMF1     : 8;            /*!< [15..8] RCFMF1                                                            */
    } EHCRMR_b;
  } ;
} EHC_Type;                                     /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                            ELC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Event Link Controller (ELC)
  */

typedef struct {                                /*!< (@ 0x40041000) ELC Structure                                              */
  
  union {
    __IOM uint8_t ELCR;                         /*!< (@ 0x00000000) Event Link Controller Register                             */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t ELCON       : 1;            /*!< [7..7] All Event Link Enable                                              */
    } ELCR_b;
  } ;
  __IM  uint8_t   RESERVED;
  
  union {
    __IOM uint8_t ELSEGR0;                      /*!< (@ 0x00000002) ELSEGR0                                                    */
    
    struct {
      __OM  uint8_t SEG         : 1;            /*!< [0..0] SEG                                                                */
            uint8_t             : 5;
      __IOM uint8_t WE          : 1;            /*!< [6..6] WE                                                                 */
      __OM  uint8_t WI          : 1;            /*!< [7..7] WI                                                                 */
    } ELSEGR0_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t ELSEGR1;                      /*!< (@ 0x00000004) ELSEGR1                                                    */
    
    struct {
      __OM  uint8_t SEG         : 1;            /*!< [0..0] SEG                                                                */
            uint8_t             : 5;
      __IOM uint8_t WE          : 1;            /*!< [6..6] WE                                                                 */
      __OM  uint8_t WI          : 1;            /*!< [7..7] WI                                                                 */
    } ELSEGR1_b;
  } ;
  __IM  uint8_t   RESERVED2;
  __IM  uint16_t  RESERVED3[5];
  
  union {
    __IOM uint16_t ELSR0;                       /*!< (@ 0x00000010) Event Link Setting Register 0                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR0_b;
  } ;
  __IM  uint16_t  RESERVED4;
  
  union {
    __IOM uint16_t ELSR1;                       /*!< (@ 0x00000014) Event Link Setting Register 1                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR1_b;
  } ;
  __IM  uint16_t  RESERVED5;
  
  union {
    __IOM uint16_t ELSR2;                       /*!< (@ 0x00000018) Event Link Setting Register 2                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR2_b;
  } ;
  __IM  uint16_t  RESERVED6;
  
  union {
    __IOM uint16_t ELSR3;                       /*!< (@ 0x0000001C) Event Link Setting Register 3                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR3_b;
  } ;
  __IM  uint16_t  RESERVED7[9];
  
  union {
    __IOM uint16_t ELSR8;                       /*!< (@ 0x00000030) Event Link Setting Register 8                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR8_b;
  } ;
  __IM  uint16_t  RESERVED8[7];
  
  union {
    __IOM uint16_t ELSR12;                      /*!< (@ 0x00000040) Event Link Setting Register 12                             */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR12_b;
  } ;
  __IM  uint16_t  RESERVED9[3];
  
  union {
    __IOM uint16_t ELSR14;                      /*!< (@ 0x00000048) Event Link Setting Register 14                             */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR14_b;
  } ;
  __IM  uint16_t  RESERVED10;
  
  union {
    __IOM uint16_t ELSR15;                      /*!< (@ 0x0000004C) Event Link Setting Register 15                             */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR15_b;
  } ;
  __IM  uint16_t  RESERVED11[5];
  
  union {
    __IOM uint16_t ELSR18;                      /*!< (@ 0x00000058) Event Link Setting Register 18                             */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR18_b;
  } ;
  __IM  uint16_t  RESERVED12;
  
  union {
    __IOM uint16_t ELSR19;                      /*!< (@ 0x0000005C) Event Link Setting Register 19                             */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR19_b;
  } ;
} ELC_Type;                                     /*!< Size = 94 (0x5e)                                                          */



/* =========================================================================================================================== */
/* ================                                           FLASH                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief FLASH (FLASH)
  */

typedef struct {                                /*!< (@ 0x01008000) FLASH Structure                                            */
  __IM  uint32_t  RESERVED[100];
  __IM  uint32_t  UIDR0;                        /*!< (@ 0x00000190) Unique ID Register 0                                       */
  __IM  uint32_t  UIDR1;                        /*!< (@ 0x00000194) Unique ID Register 1                                       */
  __IM  uint32_t  UIDR2;                        /*!< (@ 0x00000198) Unique ID Register 2                                       */
  __IM  uint32_t  UIDR3;                        /*!< (@ 0x0000019C) Unique ID Register 3                                       */
  __IM  uint32_t  RESERVED1[264261599];
  
  union {
    __IOM uint8_t FLWT;                         /*!< (@ 0x3F01411C) Flash Wait Cycle Register                                  */
    
    struct {
      __IOM uint8_t FLWT        : 3;            /*!< [2..0] Flash Wait Cycle.                                                  */
            uint8_t             : 5;
    } FLWT_b;
  } ;
  __IM  uint8_t   RESERVED2;
  __IM  uint16_t  RESERVED3;
  __IM  uint32_t  RESERVED4[2237];
  __IM  uint16_t  RESERVED5;
  
  union {
    __IOM uint8_t FWEPROR;                      /*!< (@ 0x3F016416) Flash Write/Erase Protect Register                         */
    
    struct {
      __IOM uint8_t FLWE        : 2;            /*!< [1..0] Flash Programming and Erasure.                                     */
            uint8_t             : 6;
    } FWEPROR_b;
  } ;
  __IM  uint8_t   RESERVED6;
  __IM  uint32_t  RESERVED7[2064126];
  
  union {
    __IOM uint8_t FASTAT;                       /*!< (@ 0x3F7F6010) Flash Access Status Register                               */
    
    struct {
            uint8_t             : 4;
      __IM  uint8_t CMDLK       : 1;            /*!< [4..4] Command Lock Flag.                                                 */
            uint8_t             : 2;
      __IOM uint8_t CFAE        : 1;            /*!< [7..7] Code Flash Memory Access Violation Flag.                           */
    } FASTAT_b;
  } ;
  __IM  uint8_t   RESERVED8;
  __IM  uint16_t  RESERVED9;
  
  union {
    __IOM uint8_t FAEINT;                       /*!< (@ 0x3F7F6014) Flash Access Error Interrupt Enable Register               */
    
    struct {
            uint8_t             : 4;
      __IOM uint8_t CMDLKIE     : 1;            /*!< [4..4] Command Lock Interrupt Enable.                                     */
            uint8_t             : 2;
      __IOM uint8_t CFAEIE      : 1;            /*!< [7..7] Code Flash Memory Access Violation Interrupt Enable.               */
    } FAEINT_b;
  } ;
  __IM  uint8_t   RESERVED10;
  __IM  uint16_t  RESERVED11;
  
  union {
    __IOM uint8_t FRDYIE;                       /*!< (@ 0x3F7F6018) Flash Access Error Interrupt Enable Register               */
    
    struct {
      __IOM uint8_t FRDYIE      : 1;            /*!< [0..0] Flash Ready Interrupt Enable.                                      */
            uint8_t             : 7;
    } FRDYIE_b;
  } ;
  __IM  uint8_t   RESERVED12;
  __IM  uint16_t  RESERVED13;
  __IM  uint32_t  RESERVED14[5];
  
  union {
    __IOM uint32_t FSADDR;                      /*!< (@ 0x3F7F6030) FACI Command Start Address Register                        */
    
    struct {
      __IOM uint32_t FSADDR     : 32;           /*!< [31..0] FSADDR                                                            */
    } FSADDR_b;
  } ;
  __IM  uint32_t  RESERVED15[19];
  
  union {
    __IM  uint32_t FSTATR;                      /*!< (@ 0x3F7F6080) Flash Status Register                                      */
    
    struct {
            uint32_t            : 6;
      __IM  uint32_t FLWEERR    : 1;            /*!< [6..6] Flash Write/Erase Protect Error Flag.                              */
            uint32_t            : 1;
      __IM  uint32_t PRGSPD     : 1;            /*!< [8..8] Programming Suspend Status Flag.                                   */
      __IM  uint32_t ERSSPD     : 1;            /*!< [9..9] Erasure Suspend Status Flag.                                       */
      __IM  uint32_t DBFULL     : 1;            /*!< [10..10] Data Buffer Full Flag.                                           */
      __IM  uint32_t SUSRDY     : 1;            /*!< [11..11] Suspend Ready Flag.                                              */
      __IM  uint32_t PRGERR     : 1;            /*!< [12..12] Programming Error Flag.                                          */
      __IM  uint32_t ERSERR     : 1;            /*!< [13..13] Erasure Error Flag.                                              */
      __IM  uint32_t ILGLERR    : 1;            /*!< [14..14] Illegal Error Flag.                                              */
      __IM  uint32_t FRDY       : 1;            /*!< [15..15] Flash Ready Flag.                                                */
            uint32_t            : 4;
      __IM  uint32_t OTERR      : 1;            /*!< [20..20] Other Error Flag.                                                */
      __IM  uint32_t SECERR     : 1;            /*!< [21..21] Security Error Flag.                                             */
      __IM  uint32_t FESETERR   : 1;            /*!< [22..22] FENTRY Setting Error Flag.                                       */
      __IM  uint32_t ILGCOMERR  : 1;            /*!< [23..23] Illegal Command Error Flag.                                      */
            uint32_t            : 8;
    } FSTATR_b;
  } ;
  
  union {
    __IOM uint16_t FENTRYR;                     /*!< (@ 0x3F7F6084) Flash P/E Mode Entry Register                              */
    
    struct {
      __IOM uint16_t FENTRYC    : 1;            /*!< [0..0] Code Flash P/E Mode Entry.                                         */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } FENTRYR_b;
  } ;
  __IM  uint16_t  RESERVED16;
  __IM  uint32_t  RESERVED17;
  
  union {
    __IOM uint16_t FSUINITR;                    /*!< (@ 0x3F7F608C) Flash Sequencer Set-Up Initialization Register             */
    
    struct {
      __IOM uint16_t SUINIT     : 1;            /*!< [0..0] Set-Up Initialization.                                             */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } FSUINITR_b;
  } ;
  __IM  uint16_t  RESERVED18;
  __IM  uint32_t  RESERVED19[4];
  
  union {
    __IM  uint16_t FCMDR;                       /*!< (@ 0x3F7F60A0) FACI Command Register                                      */
    
    struct {
      __IM  uint16_t PCMDR      : 8;            /*!< [7..0] The command just before the lastest command is stored.             */
      __IM  uint16_t CMDR       : 8;            /*!< [15..8] The lastest command is stored.                                    */
    } FCMDR_b;
  } ;
  __IM  uint16_t  RESERVED20;
  __IM  uint32_t  RESERVED21[14];
  
  union {
    __IM  uint32_t FAWMON;                      /*!< (@ 0x3F7F60DC) Flash Access Window Monitor Register                       */
    
    struct {
      __IM  uint32_t FAWS       : 13;           /*!< [12..0] Start Block Address of Access Window.                             */
            uint32_t            : 2;
      __IM  uint32_t FSPR       : 1;            /*!< [15..15] Protection Flag of programming to set Access Window,
                                                     Boot Flag and Start-up Area Control, Configuration Clear
                                                     command execution                                                         */
      __IM  uint32_t FAWE       : 13;           /*!< [28..16] End Block Address of Access Window.                              */
            uint32_t            : 2;
      __IM  uint32_t BTFLG      : 1;            /*!< [31..31] Flag of Start-Up Area select for Boot Swap.                      */
    } FAWMON_b;
  } ;
  __IM  uint32_t  RESERVED22;
  
  union {
    __IOM uint16_t FPCKAR;                      /*!< (@ 0x3F7F60E4) Flash Sequencer Processing Clock Notification
                                                                    Register                                                   */
    
    struct {
      __IOM uint16_t PCKA       : 8;            /*!< [7..0] Flash Sequencer Operating Clock Notification.                      */
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } FPCKAR_b;
  } ;
  __IM  uint16_t  RESERVED23;
  
  union {
    __IOM uint16_t FSUACR;                      /*!< (@ 0x3F7F60E8) Flash Start-up Area Control Register                       */
    
    struct {
      __IOM uint16_t SAS        : 2;            /*!< [1..0] Start Up Area Select                                               */
            uint16_t            : 6;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } FSUACR_b;
  } ;
  __IM  uint16_t  RESERVED24;
} FLASH_Type;                                   /*!< Size = 1065312492 (0x3f7f60ec)                                            */



/* =========================================================================================================================== */
/* ================                                            GDT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief GDT (GDT)
  */

typedef struct {                                /*!< (@ 0x40070800) GDT Structure                                              */
  
  union {
    __IOM uint32_t GDTCR;                       /*!< (@ 0x00000000) GDTCR                                                      */
    
    struct {
      __IOM uint32_t GDTSTART   : 1;            /*!< [0..0] GDTSTART                                                           */
            uint32_t            : 3;
      __IOM uint32_t IFLPEN     : 1;            /*!< [4..4] IFLPEN                                                             */
      __IOM uint32_t GDTDSZ     : 1;            /*!< [5..5] GDTDSZ                                                             */
            uint32_t            : 1;
      __IOM uint32_t ENDIAN     : 1;            /*!< [7..7] ENDIAN                                                             */
      __IOM uint32_t CIALGEN    : 1;            /*!< [8..8] CIALGEN                                                            */
      __IOM uint32_t CIALGSL    : 1;            /*!< [9..9] CIALGSL                                                            */
      __IOM uint32_t RTTEN      : 1;            /*!< [10..10] RTTEN                                                            */
      __IOM uint32_t RTTFC      : 2;            /*!< [12..11] RTTFC                                                            */
      __IOM uint32_t ISCREN     : 3;            /*!< [15..13] ISCREN                                                           */
      __IOM uint32_t MSYNEN     : 1;            /*!< [16..16] MSYNEN                                                           */
      __IOM uint32_t MPCS       : 1;            /*!< [17..17] MPCS                                                             */
      __IOM uint32_t MBRDEN     : 1;            /*!< [18..18] MBRDEN                                                           */
      __IOM uint32_t CSYNEN     : 1;            /*!< [19..19] CSYNEN                                                           */
      __IOM uint32_t CPTS       : 1;            /*!< [20..20] CPTS                                                             */
      __IOM uint32_t CDCS       : 3;            /*!< [23..21] CDCS                                                             */
            uint32_t            : 1;
      __IOM uint32_t CLREN      : 1;            /*!< [25..25] CLREN                                                            */
      __IOM uint32_t CLRDS0     : 3;            /*!< [28..26] CLRDS0                                                           */
      __IOM uint32_t CLRDS1     : 3;            /*!< [31..29] CLRDS1                                                           */
    } GDTCR_b;
  } ;
  
  union {
    __IOM uint32_t GDTSCR;                      /*!< (@ 0x00000004) GDTSCR                                                     */
    
    struct {
      __IOM uint32_t SHRNKEN    : 1;            /*!< [0..0] SHRNKEN                                                            */
            uint32_t            : 7;
      __IOM uint32_t SHRNKSZ    : 3;            /*!< [10..8] SHRNKSZ                                                           */
            uint32_t            : 5;
      __IOM uint32_t SBCS       : 1;            /*!< [16..16] SBCS                                                             */
            uint32_t            : 7;
      __IOM uint32_t SHRNKNUM   : 3;            /*!< [26..24] SHRNKNUM                                                         */
            uint32_t            : 5;
    } GDTSCR_b;
  } ;
  
  union {
    __IOM uint32_t GDTFDCS;                     /*!< (@ 0x00000008) GDTFDCS                                                    */
    
    struct {
      __IOM uint32_t FDCEN      : 1;            /*!< [0..0] FDCEN                                                              */
            uint32_t            : 3;
      __IOM uint32_t SAC        : 3;            /*!< [6..4] SAC                                                                */
      __IOM uint32_t FDHAD      : 1;            /*!< [7..7] FDHAD                                                              */
      __IOM uint32_t FDIR       : 6;            /*!< [13..8] FDIR                                                              */
            uint32_t            : 2;
      __IOM uint32_t FDLTDSZ    : 6;            /*!< [21..16] FDLTDSZ                                                          */
            uint32_t            : 2;
      __IOM uint32_t FDLNGSZ    : 7;            /*!< [30..24] FDLNGSZ                                                          */
            uint32_t            : 1;
    } GDTFDCS_b;
  } ;
  
  union {
    __IOM uint8_t GDTPIER;                      /*!< (@ 0x0000000C) GDTPIER                                                    */
    
    struct {
      __IOM uint8_t DATIIE      : 1;            /*!< [0..0] DATIIE                                                             */
      __IOM uint8_t DATOIE      : 1;            /*!< [1..1] DATOIE                                                             */
      __IOM uint8_t FDCENDIE    : 1;            /*!< [2..2] FDCENDIE                                                           */
            uint8_t             : 4;
      __IOM uint8_t INTMODE     : 1;            /*!< [7..7] INTMODE                                                            */
    } GDTPIER_b;
  } ;
  __IM  uint8_t   RESERVED;
  __IM  uint16_t  RESERVED1;
  __IM  uint32_t  RESERVED2[60];
  
  union {
    __IOM uint32_t GDTIBUF0;                    /*!< (@ 0x00000100) 0                                                          */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF0_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF1;                    /*!< (@ 0x00000104) 1                                                          */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF1_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF2;                    /*!< (@ 0x00000108) 2                                                          */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF2_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF3;                    /*!< (@ 0x0000010C) 3                                                          */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF3_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF4;                    /*!< (@ 0x00000110) 4                                                          */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF4_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF5;                    /*!< (@ 0x00000114) 5                                                          */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF5_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF6;                    /*!< (@ 0x00000118) 6                                                          */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF6_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF7;                    /*!< (@ 0x0000011C) 7                                                          */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF7_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF8;                    /*!< (@ 0x00000120) 8                                                          */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF8_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF9;                    /*!< (@ 0x00000124) 9                                                          */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF9_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF10;                   /*!< (@ 0x00000128) 10                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF10_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF11;                   /*!< (@ 0x0000012C) 11                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF11_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF12;                   /*!< (@ 0x00000130) 12                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF12_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF13;                   /*!< (@ 0x00000134) 13                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF13_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF14;                   /*!< (@ 0x00000138) 14                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF14_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF15;                   /*!< (@ 0x0000013C) 15                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF15_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF16;                   /*!< (@ 0x00000140) 16                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF16_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF17;                   /*!< (@ 0x00000144) 17                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF17_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF18;                   /*!< (@ 0x00000148) 18                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF18_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF19;                   /*!< (@ 0x0000014C) 19                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF19_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF20;                   /*!< (@ 0x00000150) 20                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF20_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF21;                   /*!< (@ 0x00000154) 21                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF21_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF22;                   /*!< (@ 0x00000158) 22                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF22_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF23;                   /*!< (@ 0x0000015C) 23                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF23_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF24;                   /*!< (@ 0x00000160) 24                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF24_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF25;                   /*!< (@ 0x00000164) 25                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF25_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF26;                   /*!< (@ 0x00000168) 26                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF26_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF27;                   /*!< (@ 0x0000016C) 27                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF27_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF28;                   /*!< (@ 0x00000170) 28                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF28_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF29;                   /*!< (@ 0x00000174) 29                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF29_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF30;                   /*!< (@ 0x00000178) 30                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF30_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF31;                   /*!< (@ 0x0000017C) 31                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF31_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF32;                   /*!< (@ 0x00000180) 32                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF32_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF33;                   /*!< (@ 0x00000184) 33                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF33_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF34;                   /*!< (@ 0x00000188) 34                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF34_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF35;                   /*!< (@ 0x0000018C) 35                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF35_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF36;                   /*!< (@ 0x00000190) 36                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF36_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF37;                   /*!< (@ 0x00000194) 37                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF37_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF38;                   /*!< (@ 0x00000198) 38                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF38_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF39;                   /*!< (@ 0x0000019C) 39                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF39_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF40;                   /*!< (@ 0x000001A0) 40                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF40_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF41;                   /*!< (@ 0x000001A4) 41                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF41_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF42;                   /*!< (@ 0x000001A8) 42                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF42_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF43;                   /*!< (@ 0x000001AC) 43                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF43_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF44;                   /*!< (@ 0x000001B0) 44                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF44_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF45;                   /*!< (@ 0x000001B4) 45                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF45_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF46;                   /*!< (@ 0x000001B8) 46                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF46_b;
  } ;
  
  union {
    __IOM uint32_t GDTIBUF47;                   /*!< (@ 0x000001BC) 47                                                         */
    
    struct {
      __IOM uint32_t GDTIBUF    : 32;           /*!< [31..0] GDTIBUF                                                           */
    } GDTIBUF47_b;
  } ;
  __IM  uint32_t  RESERVED3[16];
  
  union {
    __IOM uint32_t GDTOBUF0;                    /*!< (@ 0x00000200) 0                                                          */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF0_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF1;                    /*!< (@ 0x00000204) 1                                                          */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF1_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF2;                    /*!< (@ 0x00000208) 2                                                          */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF2_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF3;                    /*!< (@ 0x0000020C) 3                                                          */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF3_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF4;                    /*!< (@ 0x00000210) 4                                                          */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF4_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF5;                    /*!< (@ 0x00000214) 5                                                          */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF5_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF6;                    /*!< (@ 0x00000218) 6                                                          */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF6_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF7;                    /*!< (@ 0x0000021C) 7                                                          */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF7_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF8;                    /*!< (@ 0x00000220) 8                                                          */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF8_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF9;                    /*!< (@ 0x00000224) 9                                                          */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF9_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF10;                   /*!< (@ 0x00000228) 10                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF10_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF11;                   /*!< (@ 0x0000022C) 11                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF11_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF12;                   /*!< (@ 0x00000230) 12                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF12_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF13;                   /*!< (@ 0x00000234) 13                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF13_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF14;                   /*!< (@ 0x00000238) 14                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF14_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF15;                   /*!< (@ 0x0000023C) 15                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF15_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF16;                   /*!< (@ 0x00000240) 16                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF16_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF17;                   /*!< (@ 0x00000244) 17                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF17_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF18;                   /*!< (@ 0x00000248) 18                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF18_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF19;                   /*!< (@ 0x0000024C) 19                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF19_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF20;                   /*!< (@ 0x00000250) 20                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF20_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF21;                   /*!< (@ 0x00000254) 21                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF21_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF22;                   /*!< (@ 0x00000258) 22                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF22_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF23;                   /*!< (@ 0x0000025C) 23                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF23_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF24;                   /*!< (@ 0x00000260) 24                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF24_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF25;                   /*!< (@ 0x00000264) 25                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF25_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF26;                   /*!< (@ 0x00000268) 26                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF26_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF27;                   /*!< (@ 0x0000026C) 27                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF27_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF28;                   /*!< (@ 0x00000270) 28                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF28_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF29;                   /*!< (@ 0x00000274) 29                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF29_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF30;                   /*!< (@ 0x00000278) 30                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF30_b;
  } ;
  
  union {
    __IOM uint32_t GDTOBUF31;                   /*!< (@ 0x0000027C) 31                                                         */
    
    struct {
      __IOM uint32_t GDTOBUF    : 32;           /*!< [31..0] GDTOBUF                                                           */
    } GDTOBUF31_b;
  } ;
} GDT_Type;                                     /*!< Size = 640 (0x280)                                                        */



/* =========================================================================================================================== */
/* ================                                          GPT162                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief General PWM Timer 2 (16-bit) (GPT162)
  */

typedef struct {                                /*!< (@ 0x40055200) GPT162 Structure                                           */
  
  union {
    __IOM uint32_t GTWP;                        /*!< (@ 0x00000000) General PWM Timer Write-Protection Register                */
    
    struct {
      __IOM uint32_t WP         : 1;            /*!< [0..0] Register Write Disable                                             */
            uint32_t            : 7;
      __OM  uint32_t PRKEY      : 8;            /*!< [15..8] GTWP Key Code                                                     */
            uint32_t            : 16;
    } GTWP_b;
  } ;
  
  union {
    __IOM uint32_t GTSTR;                       /*!< (@ 0x00000004) General PWM Timer Software Start Register                  */
    
    struct {
      __IOM uint32_t CSTRT0     : 1;            /*!< [0..0] Channel 0 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
      __IOM uint32_t CSTRT1     : 1;            /*!< [1..1] Channel 1 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
      __IOM uint32_t CSTRT2     : 1;            /*!< [2..2] Channel 2 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
      __IOM uint32_t CSTRT3     : 1;            /*!< [3..3] Channel 3 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
      __IOM uint32_t CSTRT4     : 1;            /*!< [4..4] Channel 4 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
      __IOM uint32_t CSTRT5     : 1;            /*!< [5..5] Channel 5 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
            uint32_t            : 26;
    } GTSTR_b;
  } ;
  
  union {
    __IOM uint32_t GTSTP;                       /*!< (@ 0x00000008) General PWM Timer Software Stop Register                   */
    
    struct {
      __IOM uint32_t CSTOP0     : 1;            /*!< [0..0] Channel 0 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
      __IOM uint32_t CSTOP1     : 1;            /*!< [1..1] Channel 1 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
      __IOM uint32_t CSTOP2     : 1;            /*!< [2..2] Channel 2 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
      __IOM uint32_t CSTOP3     : 1;            /*!< [3..3] Channel 3 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
      __IOM uint32_t CSTOP4     : 1;            /*!< [4..4] Channel 4 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
      __IOM uint32_t CSTOP5     : 1;            /*!< [5..5] Channel 5 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
            uint32_t            : 26;
    } GTSTP_b;
  } ;
  
  union {
    __OM  uint32_t GTCLR;                       /*!< (@ 0x0000000C) General PWM Timer Software Clear Register                  */
    
    struct {
      __OM  uint32_t CCLR0      : 1;            /*!< [0..0] Channel 0 GTCNT Count Clear                                        */
      __OM  uint32_t CCLR1      : 1;            /*!< [1..1] Channel 1 GTCNT Count Clear                                        */
      __OM  uint32_t CCLR2      : 1;            /*!< [2..2] Channel 2 GTCNT Count Clear                                        */
      __OM  uint32_t CCLR3      : 1;            /*!< [3..3] Channel 3 GTCNT Count Clear                                        */
      __OM  uint32_t CCLR4      : 1;            /*!< [4..4] Channel 4 GTCNT Count Clear                                        */
      __OM  uint32_t CCLR5      : 1;            /*!< [5..5] Channel 5 GTCNT Count Clear                                        */
            uint32_t            : 26;
    } GTCLR_b;
  } ;
  
  union {
    __IOM uint32_t GTSSR;                       /*!< (@ 0x00000010) General PWM Timer Start Source Select Register             */
    
    struct {
      __IOM uint32_t SSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Start Enable               */
      __IOM uint32_t SSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Start Enable              */
      __IOM uint32_t SSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Start Enable               */
      __IOM uint32_t SSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Start Enable              */
            uint32_t            : 4;
      __IOM uint32_t SSCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSELCA     : 1;            /*!< [16..16] ELCA Event Source Counter Start Enable                           */
      __IOM uint32_t SSELCB     : 1;            /*!< [17..17] ELCB Event Source Counter Start Enable                           */
      __IOM uint32_t SSELCC     : 1;            /*!< [18..18] ELCC Event Source Counter Start Enable                           */
      __IOM uint32_t SSELCD     : 1;            /*!< [19..19] ELCD Event Source Counter Start Enable                           */
            uint32_t            : 11;
      __IOM uint32_t CSTRT      : 1;            /*!< [31..31] Software Source Counter Start Enable                             */
    } GTSSR_b;
  } ;
  
  union {
    __IOM uint32_t GTPSR;                       /*!< (@ 0x00000014) General PWM Timer Stop Source Select Register              */
    
    struct {
      __IOM uint32_t PSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Stop Enable                */
      __IOM uint32_t PSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Stop Enable               */
      __IOM uint32_t PSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Stop Enable                */
      __IOM uint32_t PSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Stop Enable               */
            uint32_t            : 4;
      __IOM uint32_t PSCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSELCA     : 1;            /*!< [16..16] ELCA Event Source Counter Stop Enable                            */
      __IOM uint32_t PSELCB     : 1;            /*!< [17..17] ELCB Event Source Counter Stop Enable                            */
      __IOM uint32_t PSELCC     : 1;            /*!< [18..18] ELCC Event Source Counter Stop Enable                            */
      __IOM uint32_t PSELCD     : 1;            /*!< [19..19] ELCD Event Source Counter Stop Enable                            */
            uint32_t            : 11;
      __IOM uint32_t CSTOP      : 1;            /*!< [31..31] Software Source Counter Stop Enable                              */
    } GTPSR_b;
  } ;
  
  union {
    __IOM uint32_t GTCSR;                       /*!< (@ 0x00000018) General PWM Timer Clear Source Select Register             */
    
    struct {
      __IOM uint32_t CSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Clear Enable               */
      __IOM uint32_t CSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Clear Enable              */
      __IOM uint32_t CSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Clear Enable               */
      __IOM uint32_t CSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Clear Enable              */
            uint32_t            : 4;
      __IOM uint32_t CSCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSELCA     : 1;            /*!< [16..16] ELCA Event Source Counter Clear Enable                           */
      __IOM uint32_t CSELCB     : 1;            /*!< [17..17] ELCB Event Source Counter Clear Enable                           */
      __IOM uint32_t CSELCC     : 1;            /*!< [18..18] ELCC Event Source Counter Clear Enable                           */
      __IOM uint32_t CSELCD     : 1;            /*!< [19..19] ELCD Event Source Counter Clear Enable                           */
            uint32_t            : 11;
      __IOM uint32_t CCLR       : 1;            /*!< [31..31] Software Source Counter Clear Enable                             */
    } GTCSR_b;
  } ;
  
  union {
    __IOM uint32_t GTUPSR;                      /*!< (@ 0x0000001C) General PWM Timer Up Count Source Select Register          */
    
    struct {
      __IOM uint32_t USGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Count Up Enable            */
      __IOM uint32_t USGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Count Up Enable           */
      __IOM uint32_t USGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Count Up Enable            */
      __IOM uint32_t USGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Count Up Enable           */
            uint32_t            : 4;
      __IOM uint32_t USCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USELCA     : 1;            /*!< [16..16] ELCA Event Source Counter Count Up Enable                        */
      __IOM uint32_t USELCB     : 1;            /*!< [17..17] ELCB Event Source Counter Count Up Enable                        */
      __IOM uint32_t USELCC     : 1;            /*!< [18..18] ELCC Event Source Counter Count Up Enable                        */
      __IOM uint32_t USELCD     : 1;            /*!< [19..19] ELCD Event Source Counter Count Up Enable                        */
            uint32_t            : 12;
    } GTUPSR_b;
  } ;
  
  union {
    __IOM uint32_t GTDNSR;                      /*!< (@ 0x00000020) General PWM Timer Down Count Source Select Register        */
    
    struct {
      __IOM uint32_t DSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Count Down Enable          */
      __IOM uint32_t DSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Count Down Enable         */
      __IOM uint32_t DSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Count Down Enable          */
      __IOM uint32_t DSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Count Down Enable         */
            uint32_t            : 4;
      __IOM uint32_t DSCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSELCA     : 1;            /*!< [16..16] ELCA Event Source Counter Count Down Enable                      */
      __IOM uint32_t DSELCB     : 1;            /*!< [17..17] ELCB Event Source Counter Count Down Enable                      */
      __IOM uint32_t DSELCC     : 1;            /*!< [18..18] ELCC Event Source Counter Count Down Enable                      */
      __IOM uint32_t DSELCD     : 1;            /*!< [19..19] ELCD Event Source Counter Count Down Enable                      */
            uint32_t            : 12;
    } GTDNSR_b;
  } ;
  
  union {
    __IOM uint32_t GTICASR;                     /*!< (@ 0x00000024) General PWM Timer Input Capture Source Select
                                                                    Register A                                                 */
    
    struct {
      __IOM uint32_t ASGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
            uint32_t            : 4;
      __IOM uint32_t ASCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASELCA     : 1;            /*!< [16..16] ELCA Event Source GTCCRA Input Capture Enable                    */
      __IOM uint32_t ASELCB     : 1;            /*!< [17..17] ELCB Event Source GTCCRA Input Capture Enable                    */
      __IOM uint32_t ASELCC     : 1;            /*!< [18..18] ELCC Event Source GTCCRA Input Capture Enable                    */
      __IOM uint32_t ASELCD     : 1;            /*!< [19..19] ELCD Event Source GTCCRA Input Capture Enable                    */
            uint32_t            : 12;
    } GTICASR_b;
  } ;
  
  union {
    __IOM uint32_t GTICBSR;                     /*!< (@ 0x00000028) General PWM Timer Input Capture Source Select
                                                                    Register B                                                 */
    
    struct {
      __IOM uint32_t BSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
            uint32_t            : 4;
      __IOM uint32_t BSCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSELCA     : 1;            /*!< [16..16] ELCA Event Source GTCCRB Input Capture Enable                    */
      __IOM uint32_t BSELCB     : 1;            /*!< [17..17] ELCB Event Source GTCCRB Input Capture Enable                    */
      __IOM uint32_t BSELCC     : 1;            /*!< [18..18] ELCC Event Source GTCCRB Input Capture Enable                    */
      __IOM uint32_t BSELCD     : 1;            /*!< [19..19] ELCD Event Source GTCCRB Input Capture Enable                    */
            uint32_t            : 12;
    } GTICBSR_b;
  } ;
  
  union {
    __IOM uint32_t GTCR;                        /*!< (@ 0x0000002C) General PWM Timer Control Register                         */
    
    struct {
      __IOM uint32_t CST        : 1;            /*!< [0..0] Count Start                                                        */
            uint32_t            : 15;
      __IOM uint32_t MD         : 3;            /*!< [18..16] Mode Select                                                      */
            uint32_t            : 5;
      __IOM uint32_t TPCS       : 3;            /*!< [26..24] Timer Prescaler Select                                           */
            uint32_t            : 5;
    } GTCR_b;
  } ;
  
  union {
    __IOM uint32_t GTUDDTYC;                    /*!< (@ 0x00000030) General PWM Timer Count Direction and Duty Setting
                                                                    Register                                                   */
    
    struct {
      __IOM uint32_t UD         : 1;            /*!< [0..0] Count Direction Setting                                            */
      __IOM uint32_t UDF        : 1;            /*!< [1..1] Forcible Count Direction Setting                                   */
            uint32_t            : 14;
      __IOM uint32_t OADTY      : 2;            /*!< [17..16] GTIOCA Output Duty Setting                                       */
      __IOM uint32_t OADTYF     : 1;            /*!< [18..18] Forcible GTIOCA Output Duty Setting                              */
      __IOM uint32_t OADTYR     : 1;            /*!< [19..19] GTIOCA Output Value Selecting after Releasing 0 percent/100
                                                     percent Duty Setting                                                      */
            uint32_t            : 4;
      __IOM uint32_t OBDTY      : 2;            /*!< [25..24] GTIOCB Output Duty Setting                                       */
      __IOM uint32_t OBDTYF     : 1;            /*!< [26..26] Forcible GTIOCB Output Duty Setting                              */
      __IOM uint32_t OBDTYR     : 1;            /*!< [27..27] GTIOCB Output Value Selecting after Releasing 0 percent/100
                                                     percent Duty Setting                                                      */
            uint32_t            : 4;
    } GTUDDTYC_b;
  } ;
  
  union {
    __IOM uint32_t GTIOR;                       /*!< (@ 0x00000034) General PWM Timer I/O Control Register                     */
    
    struct {
      __IOM uint32_t GTIOA      : 5;            /*!< [4..0] GTIOCA Pin Function Select                                         */
            uint32_t            : 1;
      __IOM uint32_t OADFLT     : 1;            /*!< [6..6] GTIOCA Pin Output Value Setting at the Count Stop                  */
      __IOM uint32_t OAHLD      : 1;            /*!< [7..7] GTIOCA Pin Output Setting at the Start/Stop Count                  */
      __IOM uint32_t OAE        : 1;            /*!< [8..8] GTIOCA Pin Output Enable                                           */
      __IOM uint32_t OADF       : 2;            /*!< [10..9] GTIOCA Pin Disable Value Setting                                  */
            uint32_t            : 2;
      __IOM uint32_t NFAEN      : 1;            /*!< [13..13] Noise Filter A Enable                                            */
      __IOM uint32_t NFCSA      : 2;            /*!< [15..14] Noise Filter A Sampling Clock Select                             */
      __IOM uint32_t GTIOB      : 5;            /*!< [20..16] GTIOCB Pin Function Select                                       */
            uint32_t            : 1;
      __IOM uint32_t OBDFLT     : 1;            /*!< [22..22] GTIOCB Pin Output Value Setting at the Count Stop                */
      __IOM uint32_t OBHLD      : 1;            /*!< [23..23] GTIOCB Pin Output Setting at the Start/Stop Count                */
      __IOM uint32_t OBE        : 1;            /*!< [24..24] GTIOCB Pin Output Enable                                         */
      __IOM uint32_t OBDF       : 2;            /*!< [26..25] GTIOCB Pin Disable Value Setting                                 */
            uint32_t            : 2;
      __IOM uint32_t NFBEN      : 1;            /*!< [29..29] Noise Filter B Enable                                            */
      __IOM uint32_t NFCSB      : 2;            /*!< [31..30] Noise Filter B Sampling Clock Select                             */
    } GTIOR_b;
  } ;
  
  union {
    __IOM uint32_t GTINTAD;                     /*!< (@ 0x00000038) General PWM Timer Interrupt Output Setting Register        */
    
    struct {
            uint32_t            : 24;
      __IOM uint32_t GRP0       : 1;            /*!< [24..24] Output Disable Source Select                                     */
            uint32_t            : 4;
      __IOM uint32_t GRPABH     : 1;            /*!< [29..29] Same Time Output Level High Disable Request Enable               */
      __IOM uint32_t GRPABL     : 1;            /*!< [30..30] Same Time Output Level Low Disable Request Enable                */
            uint32_t            : 1;
    } GTINTAD_b;
  } ;
  
  union {
    __IOM uint32_t GTST;                        /*!< (@ 0x0000003C) General PWM Timer Status Register                          */
    
    struct {
      __IOM uint32_t TCFA       : 1;            /*!< [0..0] Input Capture/Compare Match Flag A                                 */
      __IOM uint32_t TCFB       : 1;            /*!< [1..1] Input Capture/Compare Match Flag B                                 */
      __IOM uint32_t TCFC       : 1;            /*!< [2..2] Input Compare Match Flag C                                         */
      __IOM uint32_t TCFD       : 1;            /*!< [3..3] Input Compare Match Flag D                                         */
      __IOM uint32_t TCFE       : 1;            /*!< [4..4] Input Compare Match Flag E                                         */
      __IOM uint32_t TCFF       : 1;            /*!< [5..5] Input Compare Match Flag F                                         */
      __IOM uint32_t TCFPO      : 1;            /*!< [6..6] Overflow Flag                                                      */
      __IOM uint32_t TCFPU      : 1;            /*!< [7..7] Underflow Flag                                                     */
            uint32_t            : 7;
      __IM  uint32_t TUCF       : 1;            /*!< [15..15] Count Direction Flag                                             */
            uint32_t            : 8;
      __IM  uint32_t ODF        : 1;            /*!< [24..24] Output Disable Flag                                              */
            uint32_t            : 4;
      __IM  uint32_t OABHF      : 1;            /*!< [29..29] Same Time Output Level High Disable Request Enable               */
      __IM  uint32_t OABLF      : 1;            /*!< [30..30] Same Time Output Level Low Disable Request Enable                */
            uint32_t            : 1;
    } GTST_b;
  } ;
  
  union {
    __IOM uint32_t GTBER;                       /*!< (@ 0x00000040) General PWM Timer Buffer Enable Register                   */
    
    struct {
      __IOM uint32_t BD         : 2;            /*!< [1..0] BD[1]: GTPR Buffer Operation DisableBD[0]: GTCCR Buffer
                                                     Operation Disable                                                         */
            uint32_t            : 14;
      __IOM uint32_t CCRA       : 2;            /*!< [17..16] GTCCRA Buffer Operation                                          */
      __IOM uint32_t CCRB       : 2;            /*!< [19..18] GTCCRB Buffer Operation                                          */
      __IOM uint32_t PR         : 1;            /*!< [20..20] GTPR Buffer Operation                                            */
            uint32_t            : 1;
      __IOM uint32_t CCRSWT     : 1;            /*!< [22..22] GTCCRA and GTCCRB Forcible Buffer OperationThis bit
                                                     is read as 0.                                                             */
            uint32_t            : 9;
    } GTBER_b;
  } ;
  __IM  uint32_t  RESERVED;
  
  union {
    __IOM uint32_t GTCNT;                       /*!< (@ 0x00000048) General PWM Timer Counter                                  */
    
    struct {
      __IOM uint32_t GTCNT      : 32;           /*!< [31..0] Counter                                                           */
    } GTCNT_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRA;                      /*!< (@ 0x0000004C) General PWM Timer Compare Capture Register A               */
    
    struct {
      __IOM uint32_t GTCCRA     : 16;           /*!< [15..0] Compare Capture Register A                                        */
            uint32_t            : 16;
    } GTCCRA_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRB;                      /*!< (@ 0x00000050) General PWM Timer Compare Capture Register B               */
    
    struct {
      __IOM uint32_t GTCCRB     : 16;           /*!< [15..0] Compare Capture Register B                                        */
            uint32_t            : 16;
    } GTCCRB_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRC;                      /*!< (@ 0x00000054) General PWM Timer Compare Capture Register C               */
    
    struct {
      __IOM uint32_t GTCCRC     : 16;           /*!< [15..0] Compare Capture Register C                                        */
            uint32_t            : 16;
    } GTCCRC_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRE;                      /*!< (@ 0x00000058) General PWM Timer Compare Capture Register E               */
    
    struct {
      __IOM uint32_t GTCCRE     : 16;           /*!< [15..0] Compare Capture Register E                                        */
            uint32_t            : 16;
    } GTCCRE_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRD;                      /*!< (@ 0x0000005C) General PWM Timer Compare Capture Register D               */
    
    struct {
      __IOM uint32_t GTCCRD     : 16;           /*!< [15..0] Compare Capture Register D                                        */
            uint32_t            : 16;
    } GTCCRD_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRF;                      /*!< (@ 0x00000060) General PWM Timer Compare Capture Register F               */
    
    struct {
      __IOM uint32_t GTCCRF     : 16;           /*!< [15..0] Compare Capture Register F                                        */
            uint32_t            : 16;
    } GTCCRF_b;
  } ;
  
  union {
    __IOM uint32_t GTPR;                        /*!< (@ 0x00000064) General PWM Timer Cycle Setting Register                   */
    
    struct {
      __IOM uint32_t GTPR       : 16;           /*!< [15..0] Cycle Setting Register                                            */
            uint32_t            : 16;
    } GTPR_b;
  } ;
  
  union {
    __IOM uint32_t GTPBR;                       /*!< (@ 0x00000068) General PWM Timer Cycle Setting Buffer Register            */
    
    struct {
      __IOM uint32_t GTPBR      : 16;           /*!< [15..0] Cycle Setting Buffer Register                                     */
            uint32_t            : 16;
    } GTPBR_b;
  } ;
  __IM  uint32_t  RESERVED1[7];
  
  union {
    __IOM uint32_t GTDTCR;                      /*!< (@ 0x00000088) General PWM Timer Dead Time Control Register               */
    
    struct {
      __IOM uint32_t TDE        : 1;            /*!< [0..0] Negative-Phase Waveform Setting                                    */
            uint32_t            : 31;
    } GTDTCR_b;
  } ;
  
  union {
    __IOM uint32_t GTDVU;                       /*!< (@ 0x0000008C) General PWM Timer Dead Time Value Register U               */
    
    struct {
      __IOM uint32_t GTDVU      : 16;           /*!< [15..0] Dead Time Value Register U                                        */
            uint32_t            : 16;
    } GTDVU_b;
  } ;
} GPT162_Type;                                  /*!< Size = 144 (0x90)                                                         */



/* =========================================================================================================================== */
/* ================                                          GPT320                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief General PWM Timer 0 (32-bit) (GPT320)
  */

typedef struct {                                /*!< (@ 0x40055000) GPT320 Structure                                           */
  
  union {
    __IOM uint32_t GTWP;                        /*!< (@ 0x00000000) General PWM Timer Write-Protection Register                */
    
    struct {
      __IOM uint32_t WP         : 1;            /*!< [0..0] Register Write Disable                                             */
            uint32_t            : 7;
      __OM  uint32_t PRKEY      : 8;            /*!< [15..8] GTWP Key Code                                                     */
            uint32_t            : 16;
    } GTWP_b;
  } ;
  
  union {
    __IOM uint32_t GTSTR;                       /*!< (@ 0x00000004) General PWM Timer Software Start Register                  */
    
    struct {
      __IOM uint32_t CSTRT0     : 1;            /*!< [0..0] Channel 0 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
      __IOM uint32_t CSTRT1     : 1;            /*!< [1..1] Channel 1 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
      __IOM uint32_t CSTRT2     : 1;            /*!< [2..2] Channel 2 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
      __IOM uint32_t CSTRT3     : 1;            /*!< [3..3] Channel 3 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
      __IOM uint32_t CSTRT4     : 1;            /*!< [4..4] Channel 4 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
      __IOM uint32_t CSTRT5     : 1;            /*!< [5..5] Channel 5 GTCNT Count StartRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter stop. 1
                                                     means counter running.                                                    */
            uint32_t            : 26;
    } GTSTR_b;
  } ;
  
  union {
    __IOM uint32_t GTSTP;                       /*!< (@ 0x00000008) General PWM Timer Software Stop Register                   */
    
    struct {
      __IOM uint32_t CSTOP0     : 1;            /*!< [0..0] Channel 0 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
      __IOM uint32_t CSTOP1     : 1;            /*!< [1..1] Channel 1 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
      __IOM uint32_t CSTOP2     : 1;            /*!< [2..2] Channel 2 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
      __IOM uint32_t CSTOP3     : 1;            /*!< [3..3] Channel 3 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
      __IOM uint32_t CSTOP4     : 1;            /*!< [4..4] Channel 4 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
      __IOM uint32_t CSTOP5     : 1;            /*!< [5..5] Channel 5 GTCNT Count StopRead data shows each channel's
                                                     counter status (GTCR.CST bit). 0 means counter runnning.
                                                     1 means counter stop.                                                     */
            uint32_t            : 26;
    } GTSTP_b;
  } ;
  
  union {
    __OM  uint32_t GTCLR;                       /*!< (@ 0x0000000C) General PWM Timer Software Clear Register                  */
    
    struct {
      __OM  uint32_t CCLR0      : 1;            /*!< [0..0] Channel 0 GTCNT Count Clear                                        */
      __OM  uint32_t CCLR1      : 1;            /*!< [1..1] Channel 1 GTCNT Count Clear                                        */
      __OM  uint32_t CCLR2      : 1;            /*!< [2..2] Channel 2 GTCNT Count Clear                                        */
      __OM  uint32_t CCLR3      : 1;            /*!< [3..3] Channel 3 GTCNT Count Clear                                        */
      __OM  uint32_t CCLR4      : 1;            /*!< [4..4] Channel 4 GTCNT Count Clear                                        */
      __OM  uint32_t CCLR5      : 1;            /*!< [5..5] Channel 5 GTCNT Count Clear                                        */
            uint32_t            : 26;
    } GTCLR_b;
  } ;
  
  union {
    __IOM uint32_t GTSSR;                       /*!< (@ 0x00000010) General PWM Timer Start Source Select Register             */
    
    struct {
      __IOM uint32_t SSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Start Enable               */
      __IOM uint32_t SSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Start Enable              */
      __IOM uint32_t SSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Start Enable               */
      __IOM uint32_t SSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Start Enable              */
            uint32_t            : 4;
      __IOM uint32_t SSCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSELCA     : 1;            /*!< [16..16] ELCA Event Source Counter Start Enable                           */
      __IOM uint32_t SSELCB     : 1;            /*!< [17..17] ELCB Event Source Counter Start Enable                           */
      __IOM uint32_t SSELCC     : 1;            /*!< [18..18] ELCC Event Source Counter Start Enable                           */
      __IOM uint32_t SSELCD     : 1;            /*!< [19..19] ELCD Event Source Counter Start Enable                           */
            uint32_t            : 11;
      __IOM uint32_t CSTRT      : 1;            /*!< [31..31] Software Source Counter Start Enable                             */
    } GTSSR_b;
  } ;
  
  union {
    __IOM uint32_t GTPSR;                       /*!< (@ 0x00000014) General PWM Timer Stop Source Select Register              */
    
    struct {
      __IOM uint32_t PSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Stop Enable                */
      __IOM uint32_t PSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Stop Enable               */
      __IOM uint32_t PSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Stop Enable                */
      __IOM uint32_t PSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Stop Enable               */
            uint32_t            : 4;
      __IOM uint32_t PSCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSELCA     : 1;            /*!< [16..16] ELCA Event Source Counter Stop Enable                            */
      __IOM uint32_t PSELCB     : 1;            /*!< [17..17] ELCB Event Source Counter Stop Enable                            */
      __IOM uint32_t PSELCC     : 1;            /*!< [18..18] ELCC Event Source Counter Stop Enable                            */
      __IOM uint32_t PSELCD     : 1;            /*!< [19..19] ELCD Event Source Counter Stop Enable                            */
            uint32_t            : 11;
      __IOM uint32_t CSTOP      : 1;            /*!< [31..31] Software Source Counter Stop Enable                              */
    } GTPSR_b;
  } ;
  
  union {
    __IOM uint32_t GTCSR;                       /*!< (@ 0x00000018) General PWM Timer Clear Source Select Register             */
    
    struct {
      __IOM uint32_t CSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Clear Enable               */
      __IOM uint32_t CSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Clear Enable              */
      __IOM uint32_t CSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Clear Enable               */
      __IOM uint32_t CSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Clear Enable              */
            uint32_t            : 4;
      __IOM uint32_t CSCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSELCA     : 1;            /*!< [16..16] ELCA Event Source Counter Clear Enable                           */
      __IOM uint32_t CSELCB     : 1;            /*!< [17..17] ELCB Event Source Counter Clear Enable                           */
      __IOM uint32_t CSELCC     : 1;            /*!< [18..18] ELCC Event Source Counter Clear Enable                           */
      __IOM uint32_t CSELCD     : 1;            /*!< [19..19] ELCD Event Source Counter Clear Enable                           */
            uint32_t            : 11;
      __IOM uint32_t CCLR       : 1;            /*!< [31..31] Software Source Counter Clear Enable                             */
    } GTCSR_b;
  } ;
  
  union {
    __IOM uint32_t GTUPSR;                      /*!< (@ 0x0000001C) General PWM Timer Up Count Source Select Register          */
    
    struct {
      __IOM uint32_t USGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Count Up Enable            */
      __IOM uint32_t USGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Count Up Enable           */
      __IOM uint32_t USGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Count Up Enable            */
      __IOM uint32_t USGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Count Up Enable           */
            uint32_t            : 4;
      __IOM uint32_t USCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USELCA     : 1;            /*!< [16..16] ELCA Event Source Counter Count Up Enable                        */
      __IOM uint32_t USELCB     : 1;            /*!< [17..17] ELCB Event Source Counter Count Up Enable                        */
      __IOM uint32_t USELCC     : 1;            /*!< [18..18] ELCC Event Source Counter Count Up Enable                        */
      __IOM uint32_t USELCD     : 1;            /*!< [19..19] ELCD Event Source Counter Count Up Enable                        */
            uint32_t            : 12;
    } GTUPSR_b;
  } ;
  
  union {
    __IOM uint32_t GTDNSR;                      /*!< (@ 0x00000020) General PWM Timer Down Count Source Select Register        */
    
    struct {
      __IOM uint32_t DSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Count Down Enable          */
      __IOM uint32_t DSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Count Down Enable         */
      __IOM uint32_t DSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Count Down Enable          */
      __IOM uint32_t DSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Count Down Enable         */
            uint32_t            : 4;
      __IOM uint32_t DSCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSELCA     : 1;            /*!< [16..16] ELCA Event Source Counter Count Down Enable                      */
      __IOM uint32_t DSELCB     : 1;            /*!< [17..17] ELCB Event Source Counter Count Down Enable                      */
      __IOM uint32_t DSELCC     : 1;            /*!< [18..18] ELCC Event Source Counter Count Down Enable                      */
      __IOM uint32_t DSELCD     : 1;            /*!< [19..19] ELCD Event Source Counter Count Down Enable                      */
            uint32_t            : 12;
    } GTDNSR_b;
  } ;
  
  union {
    __IOM uint32_t GTICASR;                     /*!< (@ 0x00000024) General PWM Timer Input Capture Source Select
                                                                    Register A                                                 */
    
    struct {
      __IOM uint32_t ASGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
            uint32_t            : 4;
      __IOM uint32_t ASCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASELCA     : 1;            /*!< [16..16] ELCA Event Source GTCCRA Input Capture Enable                    */
      __IOM uint32_t ASELCB     : 1;            /*!< [17..17] ELCB Event Source GTCCRA Input Capture Enable                    */
      __IOM uint32_t ASELCC     : 1;            /*!< [18..18] ELCC Event Source GTCCRA Input Capture Enable                    */
      __IOM uint32_t ASELCD     : 1;            /*!< [19..19] ELCD Event Source GTCCRA Input Capture Enable                    */
            uint32_t            : 12;
    } GTICASR_b;
  } ;
  
  union {
    __IOM uint32_t GTICBSR;                     /*!< (@ 0x00000028) General PWM Timer Input Capture Source Select
                                                                    Register B                                                 */
    
    struct {
      __IOM uint32_t BSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
            uint32_t            : 4;
      __IOM uint32_t BSCARBL    : 1;            /*!< [8..8] GTIOCA Pin Rising Input during GTIOCB Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCARBH    : 1;            /*!< [9..9] GTIOCA Pin Rising Input during GTIOCB Value High Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCAFBL    : 1;            /*!< [10..10] GTIOCA Pin Falling Input during GTIOCB Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCAFBH    : 1;            /*!< [11..11] GTIOCA Pin Falling Input during GTIOCB Value High Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCBRAL    : 1;            /*!< [12..12] GTIOCB Pin Rising Input during GTIOCA Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCBRAH    : 1;            /*!< [13..13] GTIOCB Pin Rising Input during GTIOCA Value High Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCBFAL    : 1;            /*!< [14..14] GTIOCB Pin Falling Input during GTIOCA Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCBFAH    : 1;            /*!< [15..15] GTIOCB Pin Falling Input during GTIOCA Value High Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSELCA     : 1;            /*!< [16..16] ELCA Event Source GTCCRB Input Capture Enable                    */
      __IOM uint32_t BSELCB     : 1;            /*!< [17..17] ELCB Event Source GTCCRB Input Capture Enable                    */
      __IOM uint32_t BSELCC     : 1;            /*!< [18..18] ELCC Event Source GTCCRB Input Capture Enable                    */
      __IOM uint32_t BSELCD     : 1;            /*!< [19..19] ELCD Event Source GTCCRB Input Capture Enable                    */
            uint32_t            : 12;
    } GTICBSR_b;
  } ;
  
  union {
    __IOM uint32_t GTCR;                        /*!< (@ 0x0000002C) General PWM Timer Control Register                         */
    
    struct {
      __IOM uint32_t CST        : 1;            /*!< [0..0] Count Start                                                        */
            uint32_t            : 15;
      __IOM uint32_t MD         : 3;            /*!< [18..16] Mode Select                                                      */
            uint32_t            : 5;
      __IOM uint32_t TPCS       : 3;            /*!< [26..24] Timer Prescaler Select                                           */
            uint32_t            : 5;
    } GTCR_b;
  } ;
  
  union {
    __IOM uint32_t GTUDDTYC;                    /*!< (@ 0x00000030) General PWM Timer Count Direction and Duty Setting
                                                                    Register                                                   */
    
    struct {
      __IOM uint32_t UD         : 1;            /*!< [0..0] Count Direction Setting                                            */
      __IOM uint32_t UDF        : 1;            /*!< [1..1] Forcible Count Direction Setting                                   */
            uint32_t            : 14;
      __IOM uint32_t OADTY      : 2;            /*!< [17..16] GTIOCA Output Duty Setting                                       */
      __IOM uint32_t OADTYF     : 1;            /*!< [18..18] Forcible GTIOCA Output Duty Setting                              */
      __IOM uint32_t OADTYR     : 1;            /*!< [19..19] GTIOCA Output Value Selecting after Releasing 0 percent/100
                                                     percent Duty Setting                                                      */
            uint32_t            : 4;
      __IOM uint32_t OBDTY      : 2;            /*!< [25..24] GTIOCB Output Duty Setting                                       */
      __IOM uint32_t OBDTYF     : 1;            /*!< [26..26] Forcible GTIOCB Output Duty Setting                              */
      __IOM uint32_t OBDTYR     : 1;            /*!< [27..27] GTIOCB Output Value Selecting after Releasing 0 percent/100
                                                     percent Duty Setting                                                      */
            uint32_t            : 4;
    } GTUDDTYC_b;
  } ;
  
  union {
    __IOM uint32_t GTIOR;                       /*!< (@ 0x00000034) General PWM Timer I/O Control Register                     */
    
    struct {
      __IOM uint32_t GTIOA      : 5;            /*!< [4..0] GTIOCA Pin Function Select                                         */
            uint32_t            : 1;
      __IOM uint32_t OADFLT     : 1;            /*!< [6..6] GTIOCA Pin Output Value Setting at the Count Stop                  */
      __IOM uint32_t OAHLD      : 1;            /*!< [7..7] GTIOCA Pin Output Setting at the Start/Stop Count                  */
      __IOM uint32_t OAE        : 1;            /*!< [8..8] GTIOCA Pin Output Enable                                           */
      __IOM uint32_t OADF       : 2;            /*!< [10..9] GTIOCA Pin Disable Value Setting                                  */
            uint32_t            : 2;
      __IOM uint32_t NFAEN      : 1;            /*!< [13..13] Noise Filter A Enable                                            */
      __IOM uint32_t NFCSA      : 2;            /*!< [15..14] Noise Filter A Sampling Clock Select                             */
      __IOM uint32_t GTIOB      : 5;            /*!< [20..16] GTIOCB Pin Function Select                                       */
            uint32_t            : 1;
      __IOM uint32_t OBDFLT     : 1;            /*!< [22..22] GTIOCB Pin Output Value Setting at the Count Stop                */
      __IOM uint32_t OBHLD      : 1;            /*!< [23..23] GTIOCB Pin Output Setting at the Start/Stop Count                */
      __IOM uint32_t OBE        : 1;            /*!< [24..24] GTIOCB Pin Output Enable                                         */
      __IOM uint32_t OBDF       : 2;            /*!< [26..25] GTIOCB Pin Disable Value Setting                                 */
            uint32_t            : 2;
      __IOM uint32_t NFBEN      : 1;            /*!< [29..29] Noise Filter B Enable                                            */
      __IOM uint32_t NFCSB      : 2;            /*!< [31..30] Noise Filter B Sampling Clock Select                             */
    } GTIOR_b;
  } ;
  
  union {
    __IOM uint32_t GTINTAD;                     /*!< (@ 0x00000038) General PWM Timer Interrupt Output Setting Register        */
    
    struct {
            uint32_t            : 24;
      __IOM uint32_t GRP0       : 1;            /*!< [24..24] Output Disable Source Select                                     */
            uint32_t            : 4;
      __IOM uint32_t GRPABH     : 1;            /*!< [29..29] Same Time Output Level High Disable Request Enable               */
      __IOM uint32_t GRPABL     : 1;            /*!< [30..30] Same Time Output Level Low Disable Request Enable                */
            uint32_t            : 1;
    } GTINTAD_b;
  } ;
  
  union {
    __IOM uint32_t GTST;                        /*!< (@ 0x0000003C) General PWM Timer Status Register                          */
    
    struct {
      __IOM uint32_t TCFA       : 1;            /*!< [0..0] Input Capture/Compare Match Flag A                                 */
      __IOM uint32_t TCFB       : 1;            /*!< [1..1] Input Capture/Compare Match Flag B                                 */
      __IOM uint32_t TCFC       : 1;            /*!< [2..2] Input Compare Match Flag C                                         */
      __IOM uint32_t TCFD       : 1;            /*!< [3..3] Input Compare Match Flag D                                         */
      __IOM uint32_t TCFE       : 1;            /*!< [4..4] Input Compare Match Flag E                                         */
      __IOM uint32_t TCFF       : 1;            /*!< [5..5] Input Compare Match Flag F                                         */
      __IOM uint32_t TCFPO      : 1;            /*!< [6..6] Overflow Flag                                                      */
      __IOM uint32_t TCFPU      : 1;            /*!< [7..7] Underflow Flag                                                     */
            uint32_t            : 7;
      __IM  uint32_t TUCF       : 1;            /*!< [15..15] Count Direction Flag                                             */
            uint32_t            : 8;
      __IM  uint32_t ODF        : 1;            /*!< [24..24] Output Disable Flag                                              */
            uint32_t            : 4;
      __IM  uint32_t OABHF      : 1;            /*!< [29..29] Same Time Output Level High Disable Request Enable               */
      __IM  uint32_t OABLF      : 1;            /*!< [30..30] Same Time Output Level Low Disable Request Enable                */
            uint32_t            : 1;
    } GTST_b;
  } ;
  
  union {
    __IOM uint32_t GTBER;                       /*!< (@ 0x00000040) General PWM Timer Buffer Enable Register                   */
    
    struct {
      __IOM uint32_t BD         : 2;            /*!< [1..0] BD[1]: GTPR Buffer Operation DisableBD[0]: GTCCR Buffer
                                                     Operation Disable                                                         */
            uint32_t            : 14;
      __IOM uint32_t CCRA       : 2;            /*!< [17..16] GTCCRA Buffer Operation                                          */
      __IOM uint32_t CCRB       : 2;            /*!< [19..18] GTCCRB Buffer Operation                                          */
      __IOM uint32_t PR         : 1;            /*!< [20..20] GTPR Buffer Operation                                            */
            uint32_t            : 1;
      __IOM uint32_t CCRSWT     : 1;            /*!< [22..22] GTCCRA and GTCCRB Forcible Buffer OperationThis bit
                                                     is read as 0.                                                             */
            uint32_t            : 9;
    } GTBER_b;
  } ;
  __IM  uint32_t  RESERVED;
  
  union {
    __IOM uint32_t GTCNT;                       /*!< (@ 0x00000048) General PWM Timer Counter                                  */
    
    struct {
      __IOM uint32_t GTCNT      : 32;           /*!< [31..0] Counter                                                           */
    } GTCNT_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRA;                      /*!< (@ 0x0000004C) General PWM Timer Compare Capture Register A               */
    
    struct {
      __IOM uint32_t GTCCRA     : 32;           /*!< [31..0] Compare Capture Register A                                        */
    } GTCCRA_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRB;                      /*!< (@ 0x00000050) General PWM Timer Compare Capture Register B               */
    
    struct {
      __IOM uint32_t GTCCRB     : 32;           /*!< [31..0] Compare Capture Register B                                        */
    } GTCCRB_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRC;                      /*!< (@ 0x00000054) General PWM Timer Compare Capture Register C               */
    
    struct {
      __IOM uint32_t GTCCRC     : 32;           /*!< [31..0] Compare Capture Register C                                        */
    } GTCCRC_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRE;                      /*!< (@ 0x00000058) General PWM Timer Compare Capture Register E               */
    
    struct {
      __IOM uint32_t GTCCRE     : 32;           /*!< [31..0] Compare Capture Register E                                        */
    } GTCCRE_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRD;                      /*!< (@ 0x0000005C) General PWM Timer Compare Capture Register D               */
    
    struct {
      __IOM uint32_t GTCCRD     : 32;           /*!< [31..0] Compare Capture Register D                                        */
    } GTCCRD_b;
  } ;
  
  union {
    __IOM uint32_t GTCCRF;                      /*!< (@ 0x00000060) General PWM Timer Compare Capture Register F               */
    
    struct {
      __IOM uint32_t GTCCRF     : 32;           /*!< [31..0] Compare Capture Register F                                        */
    } GTCCRF_b;
  } ;
  
  union {
    __IOM uint32_t GTPR;                        /*!< (@ 0x00000064) General PWM Timer Cycle Setting Register                   */
    
    struct {
      __IOM uint32_t GTPR       : 32;           /*!< [31..0] Cycle Setting Register                                            */
    } GTPR_b;
  } ;
  
  union {
    __IOM uint32_t GTPBR;                       /*!< (@ 0x00000068) General PWM Timer Cycle Setting Buffer Register            */
    
    struct {
      __IOM uint32_t GTPBR      : 32;           /*!< [31..0] Cycle Setting Buffer Register                                     */
    } GTPBR_b;
  } ;
  __IM  uint32_t  RESERVED1[7];
  
  union {
    __IOM uint32_t GTDTCR;                      /*!< (@ 0x00000088) General PWM Timer Dead Time Control Register               */
    
    struct {
      __IOM uint32_t TDE        : 1;            /*!< [0..0] Negative-Phase Waveform Setting                                    */
            uint32_t            : 31;
    } GTDTCR_b;
  } ;
  
  union {
    __IOM uint32_t GTDVU;                       /*!< (@ 0x0000008C) General PWM Timer Dead Time Value Register U               */
    
    struct {
      __IOM uint32_t GTDVU      : 32;           /*!< [31..0] Dead Time Value Register U                                        */
    } GTDVU_b;
  } ;
} GPT320_Type;                                  /*!< Size = 144 (0x90)                                                         */



/* =========================================================================================================================== */
/* ================                                          GPT_OPS                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief Output Phase Switching Controller (GPT_OPS)
  */

typedef struct {                                /*!< (@ 0x40055FF0) GPT_OPS Structure                                          */
  
  union {
    __IOM uint32_t OPSCR;                       /*!< (@ 0x00000000) Output Phase Switching Control Register                    */
    
    struct {
      __IOM uint32_t UF         : 1;            /*!< [0..0] Input Phase Soft Setting WFThis bit sets the input phase
                                                     by the software settings.This bit setting is valid when
                                                     the OPSCR.FB bit = 1.                                                     */
      __IOM uint32_t VF         : 1;            /*!< [1..1] Input Phase Soft Setting VFThis bit sets the input phase
                                                     by the software settings.This bit setting is valid when
                                                     the OPSCR.FB bit = 1.                                                     */
      __IOM uint32_t WF         : 1;            /*!< [2..2] Input Phase Soft Setting UFThis bit sets the input phase
                                                     by the software settings.This bit setting is valid when
                                                     the OPSCR.FB bit = 1.                                                     */
            uint32_t            : 1;
      __IM  uint32_t U          : 1;            /*!< [4..4] Input U-Phase MonitorThis bit monitors the state of the
                                                     input phase.OPSCR.FB=0:External input monitoring by PCLKDOPSCR.FB=1:Softw
                                                     re settings (UF/VF/WF)                                                    */
      __IM  uint32_t V          : 1;            /*!< [5..5] Input V-Phase MonitorThis bit monitors the state of the
                                                     input phase.OPSCR.FB=0:External input monitoring by PCLKDOPSCR.FB=1:Softw
                                                     re settings (UF/VF/WF)                                                    */
      __IM  uint32_t W          : 1;            /*!< [6..6] Input W-Phase MonitorThis bit monitors the state of the
                                                     input phase.OPSCR.FB=0:External input monitoring by PCLKDOPSCR.FB=1:Softw
                                                     re settings (UF/VF/WF)                                                    */
            uint32_t            : 1;
      __IOM uint32_t EN         : 1;            /*!< [8..8] Enable-Phase Output Control                                        */
            uint32_t            : 7;
      __IOM uint32_t FB         : 1;            /*!< [16..16] External Feedback Signal EnableThis bit selects the
                                                     input phase from the software settings and external input.                */
      __IOM uint32_t P          : 1;            /*!< [17..17] Positive-Phase Output (P) Control                                */
      __IOM uint32_t N          : 1;            /*!< [18..18] Negative-Phase Output (N) Control                                */
      __IOM uint32_t INV        : 1;            /*!< [19..19] Invert-Phase Output Control                                      */
      __IOM uint32_t RV         : 1;            /*!< [20..20] Output phase rotation direction reversal                         */
      __IM  uint32_t ALIGN      : 1;            /*!< [21..21] Input phase alignment                                            */
            uint32_t            : 2;
      __IOM uint32_t GRP0       : 1;            /*!< [24..24] Output disabled source selection                                 */
            uint32_t            : 1;
      __IOM uint32_t GODF       : 1;            /*!< [26..26] Group output disable function                                    */
            uint32_t            : 2;
      __IOM uint32_t NFEN       : 1;            /*!< [29..29] External Input Noise Filter Enable                               */
      __IOM uint32_t NFCS       : 2;            /*!< [31..30] External Input Noise Filter Clock selectionNoise filter
                                                     sampling clock setting of the external input.                             */
    } OPSCR_b;
  } ;
} GPT_OPS_Type;                                 /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                            ICU                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Interrupt Controller (ICU)
  */

typedef struct {                                /*!< (@ 0x40006000) ICU Structure                                              */
  
  union {
    __IOM uint8_t IRQCR0;                       /*!< (@ 0x00000000) IRQ Control Register 0                                     */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQ Detection Sense Select                                         */
            uint8_t             : 6;
    } IRQCR0_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR1;                       /*!< (@ 0x00000001) IRQ Control Register 1                                     */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQ Detection Sense Select                                         */
            uint8_t             : 6;
    } IRQCR1_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR2;                       /*!< (@ 0x00000002) IRQ Control Register 2                                     */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQ Detection Sense Select                                         */
            uint8_t             : 6;
    } IRQCR2_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR3;                       /*!< (@ 0x00000003) IRQ Control Register 3                                     */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQ Detection Sense Select                                         */
            uint8_t             : 6;
    } IRQCR3_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR4;                       /*!< (@ 0x00000004) IRQ Control Register 4                                     */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQ Detection Sense Select                                         */
            uint8_t             : 6;
    } IRQCR4_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR5;                       /*!< (@ 0x00000005) IRQ Control Register 5                                     */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQ Detection Sense Select                                         */
            uint8_t             : 6;
    } IRQCR5_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR6;                       /*!< (@ 0x00000006) IRQ Control Register 6                                     */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQ Detection Sense Select                                         */
            uint8_t             : 6;
    } IRQCR6_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR7;                       /*!< (@ 0x00000007) IRQ Control Register 7                                     */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQ Detection Sense Select                                         */
            uint8_t             : 6;
    } IRQCR7_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR8;                       /*!< (@ 0x00000008) IRQ Control Register 8                                     */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQ Detection Sense Select                                         */
            uint8_t             : 6;
    } IRQCR8_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR9;                       /*!< (@ 0x00000009) IRQ Control Register 9                                     */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQ Detection Sense Select                                         */
            uint8_t             : 6;
    } IRQCR9_b;
  } ;
  __IM  uint16_t  RESERVED;
  __IM  uint32_t  RESERVED1[61];
  
  union {
    __IOM uint8_t NMICR;                        /*!< (@ 0x00000100) NMI Pin Interrupt Control Register                         */
    
    struct {
      __IOM uint8_t NMIMD       : 1;            /*!< [0..0] NMI Detection Set                                                  */
            uint8_t             : 7;
    } NMICR_b;
  } ;
  __IM  uint8_t   RESERVED2;
  __IM  uint16_t  RESERVED3;
  __IM  uint32_t  RESERVED4[7];
  
  union {
    __IOM uint16_t NMIER;                       /*!< (@ 0x00000120) Non-Maskable Interrupt Enable Register                     */
    
    struct {
      __IOM uint16_t IWDTEN     : 1;            /*!< [0..0] IWDT Underflow/Refresh Error Interrupt Enable                      */
      __IOM uint16_t WDTEN      : 1;            /*!< [1..1] WDT Underflow/Refresh Error Interrupt Enable                       */
      __IOM uint16_t LVD1EN     : 1;            /*!< [2..2] Voltage-Monitoring 1 Interrupt Enable                              */
      __IOM uint16_t LVDBATEN   : 1;            /*!< [3..3] LVDBATEN                                                           */
            uint16_t            : 2;
      __IOM uint16_t OSTEN      : 1;            /*!< [6..6] Oscillation Stop Detection Interrupt Enable                        */
      __IOM uint16_t NMIEN      : 1;            /*!< [7..7] NMI Pin Interrupt Enable                                           */
            uint16_t            : 2;
      __IOM uint16_t BUSSEN     : 1;            /*!< [10..10] BUSSEN                                                           */
      __IOM uint16_t BUSMEN     : 1;            /*!< [11..11] BUSMEN                                                           */
      __IOM uint16_t SPEEN      : 1;            /*!< [12..12] SPEEN                                                            */
            uint16_t            : 3;
    } NMIER_b;
  } ;
  __IM  uint16_t  RESERVED5;
  __IM  uint32_t  RESERVED6[3];
  
  union {
    __IOM uint16_t NMICLR;                      /*!< (@ 0x00000130) Non-Maskable Interrupt Status Clear Register               */
    
    struct {
      __IOM uint16_t IWDTCLR    : 1;            /*!< [0..0] IWDTST Clear                                                       */
      __IOM uint16_t WDTCLR     : 1;            /*!< [1..1] WDTST Clear                                                        */
      __IOM uint16_t LVD1CLR    : 1;            /*!< [2..2] LVD1ST Clear                                                       */
      __IOM uint16_t LVDBATCLR  : 1;            /*!< [3..3] LVDBATCLR                                                          */
            uint16_t            : 2;
      __IOM uint16_t OSTCLR     : 1;            /*!< [6..6] OSTST Clear                                                        */
      __IOM uint16_t NMICLR     : 1;            /*!< [7..7] NMIST Clear                                                        */
            uint16_t            : 2;
      __IOM uint16_t BUSSCLR    : 1;            /*!< [10..10] BUSSCLR                                                          */
      __IOM uint16_t BUSMCLR    : 1;            /*!< [11..11] BUSMCLR                                                          */
      __IOM uint16_t SPECLR     : 1;            /*!< [12..12] SPECLR                                                           */
            uint16_t            : 3;
    } NMICLR_b;
  } ;
  __IM  uint16_t  RESERVED7;
  __IM  uint32_t  RESERVED8[3];
  
  union {
    __IM  uint16_t NMISR;                       /*!< (@ 0x00000140) Non-Maskable Interrupt Status Register                     */
    
    struct {
      __IM  uint16_t IWDTST     : 1;            /*!< [0..0] IWDT Underflow/Refresh Error Status Flag                           */
      __IM  uint16_t WDTST      : 1;            /*!< [1..1] WDT Underflow/Refresh Error Status Flag                            */
      __IM  uint16_t LVD1ST     : 1;            /*!< [2..2] Voltage-Monitoring 1 Interrupt Status Flag                         */
      __IM  uint16_t LVDBATST   : 1;            /*!< [3..3] LVDBATST                                                           */
            uint16_t            : 2;
      __IM  uint16_t OSTST      : 1;            /*!< [6..6] Oscillation Stop Detection Interrupt Status Flag                   */
      __IM  uint16_t NMIST      : 1;            /*!< [7..7] NMI Status Flag                                                    */
            uint16_t            : 2;
      __IM  uint16_t BUSSST     : 1;            /*!< [10..10] BUSSST                                                           */
      __IM  uint16_t BUSMST     : 1;            /*!< [11..11] BUSMST                                                           */
      __IM  uint16_t SPEST      : 1;            /*!< [12..12] SPEST                                                            */
            uint16_t            : 3;
    } NMISR_b;
  } ;
  __IM  uint16_t  RESERVED9;
  __IM  uint32_t  RESERVED10[23];
  
  union {
    __IOM uint32_t WUPEN;                       /*!< (@ 0x000001A0) Wake Up Interrupt Enable Register                          */
    
    struct {
      __IOM uint32_t IRQWUPEN0  : 1;            /*!< [0..0] IRQ0 interrupt S/W standby returns enable bit                      */
      __IOM uint32_t IRQWUPEN1  : 1;            /*!< [1..1] IRQ1 interrupt S/W standby returns enable bit                      */
      __IOM uint32_t IRQWUPEN2  : 1;            /*!< [2..2] IRQ2 interrupt S/W standby returns enable bit                      */
      __IOM uint32_t IRQWUPEN3  : 1;            /*!< [3..3] IRQ3 interrupt S/W standby returns enable bit                      */
      __IOM uint32_t IRQWUPEN4  : 1;            /*!< [4..4] IRQ4 interrupt S/W standby returns enable bit                      */
      __IOM uint32_t IRQWUPEN5  : 1;            /*!< [5..5] IRQ5 interrupt S/W standby returns enable bit                      */
      __IOM uint32_t IRQWUPEN6  : 1;            /*!< [6..6] IRQ6 interrupt S/W standby returns enable bit                      */
      __IOM uint32_t IRQWUPEN7  : 1;            /*!< [7..7] IRQ7 interrupt S/W standby returns enable bit                      */
      __IOM uint32_t IRQWUPEN8  : 1;            /*!< [8..8] IRQ8 interrupt S/W standby returns enable bit                      */
      __IOM uint32_t IRQWUPEN9  : 1;            /*!< [9..9] IRQ9 interrupt S/W standby returns enable bit                      */
            uint32_t            : 6;
      __IOM uint32_t IWDTWUPEN  : 1;            /*!< [16..16] IWDT interrupt S/W standby returns enable bit                    */
      __IOM uint32_t KEYWUPEN   : 1;            /*!< [17..17] Key interrupt S/W standby returns enable bit                     */
      __IOM uint32_t LVD1WUPEN  : 1;            /*!< [18..18] LVD1 interrupt S/W standby returns enable bit                    */
      __IOM uint32_t LVDBATWUPEN : 1;           /*!< [19..19] LVDBAT interrupt S/W standby returns enable bit                  */
            uint32_t            : 2;
      __IOM uint32_t SOLDHWUPEN : 1;            /*!< [22..22] SOLDHWUPEN                                                       */
      __IOM uint32_t ACMP0WUPEN : 1;            /*!< [23..23] ACMP0 interrupt S/W standby returns enable bit                   */
      __IOM uint32_t RTCALMWUPEN : 1;           /*!< [24..24] RTC alarm interrupt S/W standby returns enable bit               */
      __IOM uint32_t RTCPRDWUPEN : 1;           /*!< [25..25] RCT period interrupt S/W standby returns enable bit              */
      __IOM uint32_t CCCPRDWUPEN : 1;           /*!< [26..26] CCC period interrupt S/W standby returns enable bit              */
      __IOM uint32_t USBFSWUPEN : 1;            /*!< [27..27] USBFS interrupt S/W standby returns enable bit                   */
      __IOM uint32_t AGT1UDWUPEN : 1;           /*!< [28..28] AGT1 underflow interrupt S/W standby returns enable
                                                     bit                                                                       */
      __IOM uint32_t AGT1CAWUPEN : 1;           /*!< [29..29] AGT1 compare match A interrupt S/W standby returns
                                                     enable bit                                                                */
      __IOM uint32_t AGT0CAWUPEN : 1;           /*!< [30..30] AGT0 compare match A interrupt S/W standby returns
                                                     enable bit                                                                */
      __IOM uint32_t SOLDLWUPEN : 1;            /*!< [31..31] SOLDLWUPEN                                                       */
    } WUPEN_b;
  } ;
  __IM  uint32_t  RESERVED11[23];
  
  union {
    __IOM uint16_t SELSR0;                      /*!< (@ 0x00000200) SYS Event Link Setting Register                            */
    
    struct {
      __IOM uint16_t SELS       : 8;            /*!< [7..0] SYS Event Link Select                                              */
            uint16_t            : 8;
    } SELSR0_b;
  } ;
  __IM  uint16_t  RESERVED12;
  __IM  uint32_t  RESERVED13[31];
  
  union {
    __IOM uint32_t DELSR0;                      /*!< (@ 0x00000280) 0                                                          */
    
    struct {
      __IOM uint32_t DELS       : 8;            /*!< [7..0] DELS                                                               */
            uint32_t            : 8;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 15;
    } DELSR0_b;
  } ;
  
  union {
    __IOM uint32_t DELSR1;                      /*!< (@ 0x00000284) 1                                                          */
    
    struct {
      __IOM uint32_t DELS       : 8;            /*!< [7..0] DELS                                                               */
            uint32_t            : 8;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 15;
    } DELSR1_b;
  } ;
  
  union {
    __IOM uint32_t DELSR2;                      /*!< (@ 0x00000288) 2                                                          */
    
    struct {
      __IOM uint32_t DELS       : 8;            /*!< [7..0] DELS                                                               */
            uint32_t            : 8;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 15;
    } DELSR2_b;
  } ;
  
  union {
    __IOM uint32_t DELSR3;                      /*!< (@ 0x0000028C) 3                                                          */
    
    struct {
      __IOM uint32_t DELS       : 8;            /*!< [7..0] DELS                                                               */
            uint32_t            : 8;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 15;
    } DELSR3_b;
  } ;
  __IM  uint32_t  RESERVED14[28];
  
  union {
    __IOM uint32_t IELSR0;                      /*!< (@ 0x00000300) ICU Event Link Setting Register 0                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR0_b;
  } ;
  
  union {
    __IOM uint32_t IELSR1;                      /*!< (@ 0x00000304) ICU Event Link Setting Register 1                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR1_b;
  } ;
  
  union {
    __IOM uint32_t IELSR2;                      /*!< (@ 0x00000308) ICU Event Link Setting Register 2                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR2_b;
  } ;
  
  union {
    __IOM uint32_t IELSR3;                      /*!< (@ 0x0000030C) ICU Event Link Setting Register 3                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR3_b;
  } ;
  
  union {
    __IOM uint32_t IELSR4;                      /*!< (@ 0x00000310) ICU Event Link Setting Register 4                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR4_b;
  } ;
  
  union {
    __IOM uint32_t IELSR5;                      /*!< (@ 0x00000314) ICU Event Link Setting Register 5                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR5_b;
  } ;
  
  union {
    __IOM uint32_t IELSR6;                      /*!< (@ 0x00000318) ICU Event Link Setting Register 6                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR6_b;
  } ;
  
  union {
    __IOM uint32_t IELSR7;                      /*!< (@ 0x0000031C) ICU Event Link Setting Register 7                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR7_b;
  } ;
  
  union {
    __IOM uint32_t IELSR8;                      /*!< (@ 0x00000320) ICU Event Link Setting Register 8                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR8_b;
  } ;
  
  union {
    __IOM uint32_t IELSR9;                      /*!< (@ 0x00000324) ICU Event Link Setting Register 9                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR9_b;
  } ;
  
  union {
    __IOM uint32_t IELSR10;                     /*!< (@ 0x00000328) ICU Event Link Setting Register 10                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR10_b;
  } ;
  
  union {
    __IOM uint32_t IELSR11;                     /*!< (@ 0x0000032C) ICU Event Link Setting Register 11                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR11_b;
  } ;
  
  union {
    __IOM uint32_t IELSR12;                     /*!< (@ 0x00000330) ICU Event Link Setting Register 12                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR12_b;
  } ;
  
  union {
    __IOM uint32_t IELSR13;                     /*!< (@ 0x00000334) ICU Event Link Setting Register 13                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR13_b;
  } ;
  
  union {
    __IOM uint32_t IELSR14;                     /*!< (@ 0x00000338) ICU Event Link Setting Register 14                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR14_b;
  } ;
  
  union {
    __IOM uint32_t IELSR15;                     /*!< (@ 0x0000033C) ICU Event Link Setting Register 15                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR15_b;
  } ;
  
  union {
    __IOM uint32_t IELSR16;                     /*!< (@ 0x00000340) ICU Event Link Setting Register 16                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR16_b;
  } ;
  
  union {
    __IOM uint32_t IELSR17;                     /*!< (@ 0x00000344) ICU Event Link Setting Register 17                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR17_b;
  } ;
  
  union {
    __IOM uint32_t IELSR18;                     /*!< (@ 0x00000348) ICU Event Link Setting Register 18                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR18_b;
  } ;
  
  union {
    __IOM uint32_t IELSR19;                     /*!< (@ 0x0000034C) ICU Event Link Setting Register 19                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR19_b;
  } ;
  
  union {
    __IOM uint32_t IELSR20;                     /*!< (@ 0x00000350) ICU Event Link Setting Register 20                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR20_b;
  } ;
  
  union {
    __IOM uint32_t IELSR21;                     /*!< (@ 0x00000354) ICU Event Link Setting Register 21                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR21_b;
  } ;
  
  union {
    __IOM uint32_t IELSR22;                     /*!< (@ 0x00000358) ICU Event Link Setting Register 22                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR22_b;
  } ;
  
  union {
    __IOM uint32_t IELSR23;                     /*!< (@ 0x0000035C) ICU Event Link Setting Register 23                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR23_b;
  } ;
  
  union {
    __IOM uint32_t IELSR24;                     /*!< (@ 0x00000360) ICU Event Link Setting Register 24                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR24_b;
  } ;
  
  union {
    __IOM uint32_t IELSR25;                     /*!< (@ 0x00000364) ICU Event Link Setting Register 25                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR25_b;
  } ;
  
  union {
    __IOM uint32_t IELSR26;                     /*!< (@ 0x00000368) ICU Event Link Setting Register 26                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR26_b;
  } ;
  
  union {
    __IOM uint32_t IELSR27;                     /*!< (@ 0x0000036C) ICU Event Link Setting Register 27                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR27_b;
  } ;
  
  union {
    __IOM uint32_t IELSR28;                     /*!< (@ 0x00000370) ICU Event Link Setting Register 28                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR28_b;
  } ;
  
  union {
    __IOM uint32_t IELSR29;                     /*!< (@ 0x00000374) ICU Event Link Setting Register 29                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR29_b;
  } ;
  
  union {
    __IOM uint32_t IELSR30;                     /*!< (@ 0x00000378) ICU Event Link Setting Register 30                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR30_b;
  } ;
  
  union {
    __IOM uint32_t IELSR31;                     /*!< (@ 0x0000037C) ICU Event Link Setting Register 31                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] IELS                                                               */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR31_b;
  } ;
} ICU_Type;                                     /*!< Size = 896 (0x380)                                                        */



/* =========================================================================================================================== */
/* ================                                           IIC0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Inter-Integrated Circuit 0 (IIC0)
  */

typedef struct {                                /*!< (@ 0x40053000) IIC0 Structure                                             */
  
  union {
    __IOM uint8_t ICCR1;                        /*!< (@ 0x00000000) I2C Bus Control Register 1                                 */
    
    struct {
      __IM  uint8_t SDAI        : 1;            /*!< [0..0] SDA Line Monitor                                                   */
      __IM  uint8_t SCLI        : 1;            /*!< [1..1] SCL Line Monitor                                                   */
      __IOM uint8_t SDAO        : 1;            /*!< [2..2] SDA Output Control/Monitor                                         */
      __IOM uint8_t SCLO        : 1;            /*!< [3..3] SCL Output Control/Monitor                                         */
      __IOM uint8_t SOWP        : 1;            /*!< [4..4] SCLO/SDAO Write Protect                                            */
      __IOM uint8_t CLO         : 1;            /*!< [5..5] Extra SCL Clock Cycle Output                                       */
      __IOM uint8_t IICRST      : 1;            /*!< [6..6] I2C Bus Interface Internal ResetNote:If an internal reset
                                                     is initiated using the IICRST bit for a bus hang-up occurred
                                                     during communication with the master device in slave mode,
                                                     the states may become different between the slave device
                                                     and the master device (due to the difference in the bit
                                                     counter information).                                                     */
      __IOM uint8_t ICE         : 1;            /*!< [7..7] I2C Bus Interface Enable                                           */
    } ICCR1_b;
  } ;
  
  union {
    __IOM uint8_t ICCR2;                        /*!< (@ 0x00000001) I2C Bus Control Register 2                                 */
    
    struct {
            uint8_t             : 1;
      __IOM uint8_t ST          : 1;            /*!< [1..1] Start Condition Issuance RequestNote: Set the ST bit
                                                     to 1 (start condition issuance request) when the BBSY flag
                                                     is set to 0 (bus free state).                                             */
      __IOM uint8_t RS          : 1;            /*!< [2..2] Restart Condition Issuance RequestNote: Do not set the
                                                     RS bit to 1 while issuing a stop condition.                               */
      __IOM uint8_t SP          : 1;            /*!< [3..3] Stop Condition Issuance RequestNote: Writing to the SP
                                                     bit is not possible while the setting of the BBSY flag
                                                     is 0 (bus free state).Note: Do not set the SP bit to 1
                                                     while a restart condition is being issued.                                */
            uint8_t             : 1;
      __IOM uint8_t TRS         : 1;            /*!< [5..5] Transmit/Receive Mode                                              */
      __IOM uint8_t MST         : 1;            /*!< [6..6] Master/Slave Mode                                                  */
      __IM  uint8_t BBSY        : 1;            /*!< [7..7] Bus Busy Detection Flag                                            */
    } ICCR2_b;
  } ;
  
  union {
    __IOM uint8_t ICMR1;                        /*!< (@ 0x00000002) I2C Bus Mode Register 1                                    */
    
    struct {
      __IOM uint8_t BC          : 3;            /*!< [2..0] Bit Counter                                                        */
      __OM  uint8_t BCWP        : 1;            /*!< [3..3] BC Write Protect(This bit is read as 1.)                           */
      __IOM uint8_t CKS         : 3;            /*!< [6..4] Internal Reference Clock (IICphi) Selection                        */
      __IOM uint8_t MTWP        : 1;            /*!< [7..7] MST/TRS Write Protect                                              */
    } ICMR1_b;
  } ;
  
  union {
    __IOM uint8_t ICMR2;                        /*!< (@ 0x00000003) I2C Bus Mode Register 2                                    */
    
    struct {
      __IOM uint8_t TMOS        : 1;            /*!< [0..0] Timeout Detection Time Selection                                   */
      __IOM uint8_t TMOL        : 1;            /*!< [1..1] Timeout L Count Control                                            */
      __IOM uint8_t TMOH        : 1;            /*!< [2..2] Timeout H Count Control                                            */
            uint8_t             : 1;
      __IOM uint8_t SDDL        : 3;            /*!< [6..4] SDA Output Delay Counter                                           */
      __IOM uint8_t DLCS        : 1;            /*!< [7..7] SDA Output Delay Clock Source Selection                            */
    } ICMR2_b;
  } ;
  
  union {
    __IOM uint8_t ICMR3;                        /*!< (@ 0x00000004) I2C Bus Mode Register 3                                    */
    
    struct {
      __IOM uint8_t NF          : 2;            /*!< [1..0] Noise Filter Stage Selection                                       */
      __IM  uint8_t ACKBR       : 1;            /*!< [2..2] Receive Acknowledge                                                */
      __IOM uint8_t ACKBT       : 1;            /*!< [3..3] Transmit Acknowledge                                               */
      __IOM uint8_t ACKWP       : 1;            /*!< [4..4] ACKBT Write Protect                                                */
      __IOM uint8_t RDRFS       : 1;            /*!< [5..5] RDRF Flag Set Timing Selection                                     */
      __IOM uint8_t WAIT        : 1;            /*!< [6..6] WAITNote: When the value of the WAIT bit is to be read,
                                                     be sure to read the ICDRR beforehand.                                     */
      __IOM uint8_t SMBS        : 1;            /*!< [7..7] SMBus/I2C Bus Selection                                            */
    } ICMR3_b;
  } ;
  
  union {
    __IOM uint8_t ICFER;                        /*!< (@ 0x00000005) I2C Bus Function Enable Register                           */
    
    struct {
      __IOM uint8_t TMOE        : 1;            /*!< [0..0] Timeout Function Enable                                            */
      __IOM uint8_t MALE        : 1;            /*!< [1..1] Master Arbitration-Lost Detection Enable                           */
      __IOM uint8_t NALE        : 1;            /*!< [2..2] NACK Transmission Arbitration-Lost Detection Enable                */
      __IOM uint8_t SALE        : 1;            /*!< [3..3] Slave Arbitration-Lost Detection Enable                            */
      __IOM uint8_t NACKE       : 1;            /*!< [4..4] NACK Reception Transfer Suspension Enable                          */
      __IOM uint8_t NFE         : 1;            /*!< [5..5] Digital Noise Filter Circuit Enable                                */
      __IOM uint8_t SCLE        : 1;            /*!< [6..6] SCL Synchronous Circuit Enable                                     */
            uint8_t             : 1;
    } ICFER_b;
  } ;
  
  union {
    __IOM uint8_t ICSER;                        /*!< (@ 0x00000006) I2C Bus Status Enable Register                             */
    
    struct {
      __IOM uint8_t SAR0E       : 1;            /*!< [0..0] Slave Address Register 0 Enable                                    */
      __IOM uint8_t SAR1E       : 1;            /*!< [1..1] Slave Address Register 1 Enable                                    */
      __IOM uint8_t SAR2E       : 1;            /*!< [2..2] Slave Address Register 2 Enable                                    */
      __IOM uint8_t GCAE        : 1;            /*!< [3..3] General Call Address Enable                                        */
            uint8_t             : 1;
      __IOM uint8_t DIDE        : 1;            /*!< [5..5] Device-ID Address Detection Enable                                 */
            uint8_t             : 1;
      __IOM uint8_t HOAE        : 1;            /*!< [7..7] Host Address Enable                                                */
    } ICSER_b;
  } ;
  
  union {
    __IOM uint8_t ICIER;                        /*!< (@ 0x00000007) I2C Bus Interrupt Enable Register                          */
    
    struct {
      __IOM uint8_t TMOIE       : 1;            /*!< [0..0] Timeout Interrupt Request Enable                                   */
      __IOM uint8_t ALIE        : 1;            /*!< [1..1] Arbitration-Lost Interrupt Request Enable                          */
      __IOM uint8_t STIE        : 1;            /*!< [2..2] Start Condition Detection Interrupt Request Enable                 */
      __IOM uint8_t SPIE        : 1;            /*!< [3..3] Stop Condition Detection Interrupt Request Enable                  */
      __IOM uint8_t NAKIE       : 1;            /*!< [4..4] NACK Reception Interrupt Request Enable                            */
      __IOM uint8_t RIE         : 1;            /*!< [5..5] Receive Data Full Interrupt Request Enable                         */
      __IOM uint8_t TEIE        : 1;            /*!< [6..6] Transmit End Interrupt Request Enable                              */
      __IOM uint8_t TIE         : 1;            /*!< [7..7] Transmit Data Empty Interrupt Request Enable                       */
    } ICIER_b;
  } ;
  
  union {
    __IOM uint8_t ICSR1;                        /*!< (@ 0x00000008) I2C Bus Status Register 1                                  */
    
    struct {
      __IOM uint8_t AAS0        : 1;            /*!< [0..0] Slave Address 0 Detection Flag                                     */
      __IOM uint8_t AAS1        : 1;            /*!< [1..1] Slave Address 1 Detection Flag                                     */
      __IOM uint8_t AAS2        : 1;            /*!< [2..2] Slave Address 2 Detection Flag                                     */
      __IOM uint8_t GCA         : 1;            /*!< [3..3] General Call Address Detection Flag                                */
            uint8_t             : 1;
      __IOM uint8_t DID         : 1;            /*!< [5..5] Device-ID Address Detection Flag                                   */
            uint8_t             : 1;
      __IOM uint8_t HOA         : 1;            /*!< [7..7] Host Address Detection Flag                                        */
    } ICSR1_b;
  } ;
  
  union {
    __IOM uint8_t ICSR2;                        /*!< (@ 0x00000009) I2C Bus Status Register 2                                  */
    
    struct {
      __IOM uint8_t TMOF        : 1;            /*!< [0..0] Timeout Detection Flag                                             */
      __IOM uint8_t AL          : 1;            /*!< [1..1] Arbitration-Lost Flag                                              */
      __IOM uint8_t START       : 1;            /*!< [2..2] Start Condition Detection Flag                                     */
      __IOM uint8_t STOP        : 1;            /*!< [3..3] Stop Condition Detection Flag                                      */
      __IOM uint8_t NACKF       : 1;            /*!< [4..4] NACK Detection Flag                                                */
      __IOM uint8_t RDRF        : 1;            /*!< [5..5] Receive Data Full Flag                                             */
      __IOM uint8_t TEND        : 1;            /*!< [6..6] Transmit End Flag                                                  */
      __IM  uint8_t TDRE        : 1;            /*!< [7..7] Transmit Data Empty Flag                                           */
    } ICSR2_b;
  } ;
  
  union {
    __IOM uint8_t SARL0;                        /*!< (@ 0x0000000A) Slave Address Register L0                                  */
    
    struct {
      __IOM uint8_t SVA0        : 1;            /*!< [0..0] 10-Bit Address(bit0)                                               */
      __IOM uint8_t SVA         : 7;            /*!< [7..1] A slave address is set.7-Bit Address = SVA[7:1]10-Bit
                                                     Address = { SVA9,SVA8,SVA[7:1],SVA0 }                                     */
    } SARL0_b;
  } ;
  
  union {
    __IOM uint8_t SARU0;                        /*!< (@ 0x0000000B) Slave Address Register U0                                  */
    
    struct {
      __IOM uint8_t FS          : 1;            /*!< [0..0] 7-Bit/10-Bit Address Format Selection                              */
      __IOM uint8_t SVA         : 2;            /*!< [2..1] 10-Bit Address                                                     */
            uint8_t             : 5;
    } SARU0_b;
  } ;
  
  union {
    __IOM uint8_t SARL1;                        /*!< (@ 0x0000000C) Slave Address Register L1                                  */
    
    struct {
      __IOM uint8_t SVA0        : 1;            /*!< [0..0] 10-Bit Address(bit0)                                               */
      __IOM uint8_t SVA         : 7;            /*!< [7..1] A slave address is set.7-Bit Address = SVA[7:1]10-Bit
                                                     Address = { SVA9,SVA8,SVA[7:1],SVA0 }                                     */
    } SARL1_b;
  } ;
  
  union {
    __IOM uint8_t SARU1;                        /*!< (@ 0x0000000D) Slave Address Register U1                                  */
    
    struct {
      __IOM uint8_t FS          : 1;            /*!< [0..0] 7-Bit/10-Bit Address Format Selection                              */
      __IOM uint8_t SVA         : 2;            /*!< [2..1] 10-Bit Address                                                     */
            uint8_t             : 5;
    } SARU1_b;
  } ;
  
  union {
    __IOM uint8_t SARL2;                        /*!< (@ 0x0000000E) Slave Address Register L2                                  */
    
    struct {
      __IOM uint8_t SVA0        : 1;            /*!< [0..0] 10-Bit Address(bit0)                                               */
      __IOM uint8_t SVA         : 7;            /*!< [7..1] A slave address is set.7-Bit Address = SVA[7:1]10-Bit
                                                     Address = { SVA9,SVA8,SVA[7:1],SVA0 }                                     */
    } SARL2_b;
  } ;
  
  union {
    __IOM uint8_t SARU2;                        /*!< (@ 0x0000000F) Slave Address Register U2                                  */
    
    struct {
      __IOM uint8_t FS          : 1;            /*!< [0..0] 7-Bit/10-Bit Address Format Selection                              */
      __IOM uint8_t SVA         : 2;            /*!< [2..1] 10-Bit Address                                                     */
            uint8_t             : 5;
    } SARU2_b;
  } ;
  
  union {
    __IOM uint8_t ICBRL;                        /*!< (@ 0x00000010) I2C Bus Bit Rate Low-Level Register                        */
    
    struct {
      __IOM uint8_t BRL         : 5;            /*!< [4..0] Bit Rate Low-Level Period(Low-level period of SCL clock)           */
            uint8_t             : 3;
    } ICBRL_b;
  } ;
  
  union {
    __IOM uint8_t ICBRH;                        /*!< (@ 0x00000011) I2C Bus Bit Rate High-Level Register                       */
    
    struct {
      __IOM uint8_t BRH         : 5;            /*!< [4..0] Bit Rate High-Level Period(High-level period of SCL clock)         */
            uint8_t             : 3;
    } ICBRH_b;
  } ;
  
  union {
    __IOM uint8_t ICDRT;                        /*!< (@ 0x00000012) I2C Bus Transmit Data Register                             */
    
    struct {
      __IOM uint8_t ICDRT       : 8;            /*!< [7..0] 8-bit read-write register that stores transmit data.               */
    } ICDRT_b;
  } ;
  
  union {
    __IM  uint8_t ICDRR;                        /*!< (@ 0x00000013) I2C Bus Receive Data Register                              */
    
    struct {
      __IM  uint8_t ICDRR       : 8;            /*!< [7..0] 8-bit register that stores the received data                       */
    } ICDRR_b;
  } ;
} IIC0_Type;                                    /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                           IIC1                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Inter-Integrated Circuit 1 (IIC1)
  */

typedef struct {                                /*!< (@ 0x40053100) IIC1 Structure                                             */
  
  union {
    __IOM uint8_t ICCR1;                        /*!< (@ 0x00000000) I2C Bus Control Register 1                                 */
    
    struct {
      __IM  uint8_t SDAI        : 1;            /*!< [0..0] SDA Line Monitor                                                   */
      __IM  uint8_t SCLI        : 1;            /*!< [1..1] SCL Line Monitor                                                   */
      __IOM uint8_t SDAO        : 1;            /*!< [2..2] SDA Output Control/Monitor                                         */
      __IOM uint8_t SCLO        : 1;            /*!< [3..3] SCL Output Control/Monitor                                         */
      __IOM uint8_t SOWP        : 1;            /*!< [4..4] SCLO/SDAO Write Protect                                            */
      __IOM uint8_t CLO         : 1;            /*!< [5..5] Extra SCL Clock Cycle Output                                       */
      __IOM uint8_t IICRST      : 1;            /*!< [6..6] I2C Bus Interface Internal ResetNote:If an internal reset
                                                     is initiated using the IICRST bit for a bus hang-up occurred
                                                     during communication with the master device in slave mode,
                                                     the states may become different between the slave device
                                                     and the master device (due to the difference in the bit
                                                     counter information).                                                     */
      __IOM uint8_t ICE         : 1;            /*!< [7..7] I2C Bus Interface Enable                                           */
    } ICCR1_b;
  } ;
  
  union {
    __IOM uint8_t ICCR2;                        /*!< (@ 0x00000001) I2C Bus Control Register 2                                 */
    
    struct {
            uint8_t             : 1;
      __IOM uint8_t ST          : 1;            /*!< [1..1] Start Condition Issuance RequestNote: Set the ST bit
                                                     to 1 (start condition issuance request) when the BBSY flag
                                                     is set to 0 (bus free state).                                             */
      __IOM uint8_t RS          : 1;            /*!< [2..2] Restart Condition Issuance RequestNote: Do not set the
                                                     RS bit to 1 while issuing a stop condition.                               */
      __IOM uint8_t SP          : 1;            /*!< [3..3] Stop Condition Issuance RequestNote: Writing to the SP
                                                     bit is not possible while the setting of the BBSY flag
                                                     is 0 (bus free state).Note: Do not set the SP bit to 1
                                                     while a restart condition is being issued.                                */
            uint8_t             : 1;
      __IOM uint8_t TRS         : 1;            /*!< [5..5] Transmit/Receive Mode                                              */
      __IOM uint8_t MST         : 1;            /*!< [6..6] Master/Slave Mode                                                  */
      __IM  uint8_t BBSY        : 1;            /*!< [7..7] Bus Busy Detection Flag                                            */
    } ICCR2_b;
  } ;
  
  union {
    __IOM uint8_t ICMR1;                        /*!< (@ 0x00000002) I2C Bus Mode Register 1                                    */
    
    struct {
      __IOM uint8_t BC          : 3;            /*!< [2..0] Bit Counter                                                        */
      __OM  uint8_t BCWP        : 1;            /*!< [3..3] BC Write Protect(This bit is read as 1.)                           */
      __IOM uint8_t CKS         : 3;            /*!< [6..4] Internal Reference Clock (IIC phi) Selection                       */
      __IOM uint8_t MTWP        : 1;            /*!< [7..7] MST/TRS Write Protect                                              */
    } ICMR1_b;
  } ;
  
  union {
    __IOM uint8_t ICMR2;                        /*!< (@ 0x00000003) I2C Bus Mode Register 2                                    */
    
    struct {
      __IOM uint8_t TMOS        : 1;            /*!< [0..0] Timeout Detection Time Selection                                   */
      __IOM uint8_t TMOL        : 1;            /*!< [1..1] Timeout L Count Control                                            */
      __IOM uint8_t TMOH        : 1;            /*!< [2..2] Timeout H Count Control                                            */
            uint8_t             : 1;
      __IOM uint8_t SDDL        : 3;            /*!< [6..4] SDA Output Delay Counter                                           */
      __IOM uint8_t DLCS        : 1;            /*!< [7..7] SDA Output Delay Clock Source Selection                            */
    } ICMR2_b;
  } ;
  
  union {
    __IOM uint8_t ICMR3;                        /*!< (@ 0x00000004) I2C Bus Mode Register 3                                    */
    
    struct {
      __IOM uint8_t NF          : 2;            /*!< [1..0] Noise Filter Stage Selection                                       */
      __IM  uint8_t ACKBR       : 1;            /*!< [2..2] Receive Acknowledge                                                */
      __IOM uint8_t ACKBT       : 1;            /*!< [3..3] Transmit Acknowledge                                               */
      __IOM uint8_t ACKWP       : 1;            /*!< [4..4] ACKBT Write Protect                                                */
      __IOM uint8_t RDRFS       : 1;            /*!< [5..5] RDRF Flag Set Timing Selection                                     */
      __IOM uint8_t WAIT        : 1;            /*!< [6..6] WAITNote: When the value of the WAIT bit is to be read,
                                                     be sure to read the ICDRR beforehand.                                     */
      __IOM uint8_t SMBS        : 1;            /*!< [7..7] SMBus/I2C Bus Selection                                            */
    } ICMR3_b;
  } ;
  
  union {
    __IOM uint8_t ICFER;                        /*!< (@ 0x00000005) I2C Bus Function Enable Register                           */
    
    struct {
      __IOM uint8_t TMOE        : 1;            /*!< [0..0] Timeout Function Enable                                            */
      __IOM uint8_t MALE        : 1;            /*!< [1..1] Master Arbitration-Lost Detection Enable                           */
      __IOM uint8_t NALE        : 1;            /*!< [2..2] NACK Transmission Arbitration-Lost Detection Enable                */
      __IOM uint8_t SALE        : 1;            /*!< [3..3] Slave Arbitration-Lost Detection Enable                            */
      __IOM uint8_t NACKE       : 1;            /*!< [4..4] NACK Reception Transfer Suspension Enable                          */
      __IOM uint8_t NFE         : 1;            /*!< [5..5] Digital Noise Filter Circuit Enable                                */
      __IOM uint8_t SCLE        : 1;            /*!< [6..6] SCL Synchronous Circuit Enable                                     */
            uint8_t             : 1;
    } ICFER_b;
  } ;
  
  union {
    __IOM uint8_t ICSER;                        /*!< (@ 0x00000006) I2C Bus Status Enable Register                             */
    
    struct {
      __IOM uint8_t SAR0E       : 1;            /*!< [0..0] Slave Address Register 0 Enable                                    */
      __IOM uint8_t SAR1E       : 1;            /*!< [1..1] Slave Address Register 1 Enable                                    */
      __IOM uint8_t SAR2E       : 1;            /*!< [2..2] Slave Address Register 2 Enable                                    */
      __IOM uint8_t GCAE        : 1;            /*!< [3..3] General Call Address Enable                                        */
            uint8_t             : 1;
      __IOM uint8_t DIDE        : 1;            /*!< [5..5] Device-ID Address Detection Enable                                 */
            uint8_t             : 1;
      __IOM uint8_t HOAE        : 1;            /*!< [7..7] Host Address Enable                                                */
    } ICSER_b;
  } ;
  
  union {
    __IOM uint8_t ICIER;                        /*!< (@ 0x00000007) I2C Bus Interrupt Enable Register                          */
    
    struct {
      __IOM uint8_t TMOIE       : 1;            /*!< [0..0] Timeout Interrupt Request Enable                                   */
      __IOM uint8_t ALIE        : 1;            /*!< [1..1] Arbitration-Lost Interrupt Request Enable                          */
      __IOM uint8_t STIE        : 1;            /*!< [2..2] Start Condition Detection Interrupt Request Enable                 */
      __IOM uint8_t SPIE        : 1;            /*!< [3..3] Stop Condition Detection Interrupt Request Enable                  */
      __IOM uint8_t NAKIE       : 1;            /*!< [4..4] NACK Reception Interrupt Request Enable                            */
      __IOM uint8_t RIE         : 1;            /*!< [5..5] Receive Data Full Interrupt Request Enable                         */
      __IOM uint8_t TEIE        : 1;            /*!< [6..6] Transmit End Interrupt Request Enable                              */
      __IOM uint8_t TIE         : 1;            /*!< [7..7] Transmit Data Empty Interrupt Request Enable                       */
    } ICIER_b;
  } ;
  
  union {
    __IOM uint8_t ICSR1;                        /*!< (@ 0x00000008) I2C Bus Status Register 1                                  */
    
    struct {
      __IOM uint8_t AAS0        : 1;            /*!< [0..0] Slave Address 0 Detection Flag                                     */
      __IOM uint8_t AAS1        : 1;            /*!< [1..1] Slave Address 1 Detection Flag                                     */
      __IOM uint8_t AAS2        : 1;            /*!< [2..2] Slave Address 2 Detection Flag                                     */
      __IOM uint8_t GCA         : 1;            /*!< [3..3] General Call Address Detection Flag                                */
            uint8_t             : 1;
      __IOM uint8_t DID         : 1;            /*!< [5..5] Device-ID Address Detection Flag                                   */
            uint8_t             : 1;
      __IOM uint8_t HOA         : 1;            /*!< [7..7] Host Address Detection Flag                                        */
    } ICSR1_b;
  } ;
  
  union {
    __IOM uint8_t ICSR2;                        /*!< (@ 0x00000009) I2C Bus Status Register 2                                  */
    
    struct {
      __IOM uint8_t TMOF        : 1;            /*!< [0..0] Timeout Detection Flag                                             */
      __IOM uint8_t AL          : 1;            /*!< [1..1] Arbitration-Lost Flag                                              */
      __IOM uint8_t START       : 1;            /*!< [2..2] Start Condition Detection Flag                                     */
      __IOM uint8_t STOP        : 1;            /*!< [3..3] Stop Condition Detection Flag                                      */
      __IOM uint8_t NACKF       : 1;            /*!< [4..4] NACK Detection Flag                                                */
      __IOM uint8_t RDRF        : 1;            /*!< [5..5] Receive Data Full Flag                                             */
      __IOM uint8_t TEND        : 1;            /*!< [6..6] Transmit End Flag                                                  */
      __IM  uint8_t TDRE        : 1;            /*!< [7..7] Transmit Data Empty Flag                                           */
    } ICSR2_b;
  } ;
  
  union {
    __IOM uint8_t SARL0;                        /*!< (@ 0x0000000A) Slave Address Register L0                                  */
    
    struct {
      __IOM uint8_t SVA0        : 1;            /*!< [0..0] 10-Bit Address(bit0)                                               */
      __IOM uint8_t SVA         : 7;            /*!< [7..1] A slave address is set.7-Bit Address = SVA[7:1]10-Bit
                                                     Address = { SVA9,SVA8,SVA[7:1],SVA0 }                                     */
    } SARL0_b;
  } ;
  
  union {
    __IOM uint8_t SARU0;                        /*!< (@ 0x0000000B) Slave Address Register U0                                  */
    
    struct {
      __IOM uint8_t FS          : 1;            /*!< [0..0] 7-Bit/10-Bit Address Format Selection                              */
      __IOM uint8_t SVA         : 2;            /*!< [2..1] 10-Bit Address                                                     */
            uint8_t             : 5;
    } SARU0_b;
  } ;
  
  union {
    __IOM uint8_t SARL1;                        /*!< (@ 0x0000000C) Slave Address Register L1                                  */
    
    struct {
      __IOM uint8_t SVA0        : 1;            /*!< [0..0] 10-Bit Address(bit0)                                               */
      __IOM uint8_t SVA         : 7;            /*!< [7..1] A slave address is set.7-Bit Address = SVA[7:1]10-Bit
                                                     Address = { SVA9,SVA8,SVA[7:1],SVA0 }                                     */
    } SARL1_b;
  } ;
  
  union {
    __IOM uint8_t SARU1;                        /*!< (@ 0x0000000D) Slave Address Register U1                                  */
    
    struct {
      __IOM uint8_t FS          : 1;            /*!< [0..0] 7-Bit/10-Bit Address Format Selection                              */
      __IOM uint8_t SVA         : 2;            /*!< [2..1] 10-Bit Address                                                     */
            uint8_t             : 5;
    } SARU1_b;
  } ;
  
  union {
    __IOM uint8_t SARL2;                        /*!< (@ 0x0000000E) Slave Address Register L2                                  */
    
    struct {
      __IOM uint8_t SVA0        : 1;            /*!< [0..0] 10-Bit Address(bit0)                                               */
      __IOM uint8_t SVA         : 7;            /*!< [7..1] A slave address is set.7-Bit Address = SVA[7:1]10-Bit
                                                     Address = { SVA9,SVA8,SVA[7:1],SVA0 }                                     */
    } SARL2_b;
  } ;
  
  union {
    __IOM uint8_t SARU2;                        /*!< (@ 0x0000000F) Slave Address Register U2                                  */
    
    struct {
      __IOM uint8_t FS          : 1;            /*!< [0..0] 7-Bit/10-Bit Address Format Selection                              */
      __IOM uint8_t SVA         : 2;            /*!< [2..1] 10-Bit Address                                                     */
            uint8_t             : 5;
    } SARU2_b;
  } ;
  
  union {
    __IOM uint8_t ICBRL;                        /*!< (@ 0x00000010) I2C Bus Bit Rate Low-Level Register                        */
    
    struct {
      __IOM uint8_t BRL         : 5;            /*!< [4..0] Bit Rate Low-Level Period(Low-level period of SCL clock)           */
            uint8_t             : 3;
    } ICBRL_b;
  } ;
  
  union {
    __IOM uint8_t ICBRH;                        /*!< (@ 0x00000011) I2C Bus Bit Rate High-Level Register                       */
    
    struct {
      __IOM uint8_t BRH         : 5;            /*!< [4..0] Bit Rate High-Level Period(High-level period of SCL clock)         */
            uint8_t             : 3;
    } ICBRH_b;
  } ;
  
  union {
    __IOM uint8_t ICDRT;                        /*!< (@ 0x00000012) I2C Bus Transmit Data Register                             */
    
    struct {
      __IOM uint8_t ICDRT       : 8;            /*!< [7..0] 8-bit read-write register that stores transmit data.               */
    } ICDRT_b;
  } ;
  
  union {
    __IM  uint8_t ICDRR;                        /*!< (@ 0x00000013) I2C Bus Receive Data Register                              */
    
    struct {
      __IM  uint8_t ICDRR       : 8;            /*!< [7..0] 8-bit register that stores the received data                       */
    } ICDRR_b;
  } ;
} IIC1_Type;                                    /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                           IWDT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Independent Watchdog Timer (IWDT)
  */

typedef struct {                                /*!< (@ 0x40044400) IWDT Structure                                             */
  
  union {
    __IOM uint8_t IWDTRR;                       /*!< (@ 0x00000000) IWDT Refresh Register                                      */
    
    struct {
      __IOM uint8_t IWDTRR      : 8;            /*!< [7..0] The counter is refreshed by writing 0x00 and then writing
                                                     0xFF to this register.                                                    */
    } IWDTRR_b;
  } ;
  __IM  uint8_t   RESERVED;
  __IM  uint16_t  RESERVED1;
  
  union {
    __IOM uint16_t IWDTSR;                      /*!< (@ 0x00000004) IWDT Status Register                                       */
    
    struct {
      __IM  uint16_t CNTVAL     : 14;           /*!< [13..0] Counter ValueValue counted by the counter                         */
      __IOM uint16_t UNDFF      : 1;            /*!< [14..14] Underflow Flag                                                   */
      __IOM uint16_t REFEF      : 1;            /*!< [15..15] Refresh Error Flag                                               */
    } IWDTSR_b;
  } ;
} IWDT_Type;                                    /*!< Size = 6 (0x6)                                                            */



/* =========================================================================================================================== */
/* ================                                           IrDA                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Infrared Data Association Interface (IrDA)
  */

typedef struct {                                /*!< (@ 0x40070F00) IrDA Structure                                             */
  
  union {
    __IOM uint8_t IRCR;                         /*!< (@ 0x00000000) IrDA Control Resister                                      */
    
    struct {
            uint8_t             : 2;
      __IOM uint8_t IRRXINV     : 1;            /*!< [2..2] IRRXINV                                                            */
      __IOM uint8_t IRTXINV     : 1;            /*!< [3..3] IRTXINV                                                            */
            uint8_t             : 3;
      __IOM uint8_t IRE         : 1;            /*!< [7..7] IRE                                                                */
    } IRCR_b;
  } ;
} IrDA_Type;                                    /*!< Size = 1 (0x1)                                                            */



/* =========================================================================================================================== */
/* ================                                           KINT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Key Interrupt Function (KINT)
  */

typedef struct {                                /*!< (@ 0x40080000) KINT Structure                                             */
  
  union {
    __IOM uint8_t KRCTL;                        /*!< (@ 0x00000000) KEY Return Control Register                                */
    
    struct {
      __IOM uint8_t KREG        : 1;            /*!< [0..0] Detection Edge Selection (KRF0 to KRF7)                            */
            uint8_t             : 6;
      __IOM uint8_t KRMD        : 1;            /*!< [7..7] Usage of Key Interrupt Flags(KR0 to KR7)                           */
    } KRCTL_b;
  } ;
  __IM  uint8_t   RESERVED[3];
  
  union {
    __IOM uint8_t KRF;                          /*!< (@ 0x00000004) KEY Return Flag Register                                   */
    
    struct {
      __IOM uint8_t KRF0        : 1;            /*!< [0..0] Key interrupt flag 0                                               */
      __IOM uint8_t KRF1        : 1;            /*!< [1..1] Key interrupt flag 1                                               */
      __IOM uint8_t KRF2        : 1;            /*!< [2..2] Key interrupt flag 2                                               */
      __IOM uint8_t KRF3        : 1;            /*!< [3..3] Key interrupt flag 3                                               */
      __IOM uint8_t KRF4        : 1;            /*!< [4..4] Key interrupt flag 4                                               */
      __IOM uint8_t KRF5        : 1;            /*!< [5..5] Key interrupt flag 5                                               */
      __IOM uint8_t KRF6        : 1;            /*!< [6..6] Key interrupt flag 6                                               */
      __IOM uint8_t KRF7        : 1;            /*!< [7..7] Key interrupt flag 7                                               */
    } KRF_b;
  } ;
  __IM  uint8_t   RESERVED1[3];
  
  union {
    __IOM uint8_t KRM;                          /*!< (@ 0x00000008) KEY Return Mode Register                                   */
    
    struct {
      __IOM uint8_t KRM0        : 1;            /*!< [0..0] Key interrupt mode control 0                                       */
      __IOM uint8_t KRM1        : 1;            /*!< [1..1] Key interrupt mode control 1                                       */
      __IOM uint8_t KRM2        : 1;            /*!< [2..2] Key interrupt mode control 2                                       */
      __IOM uint8_t KRM3        : 1;            /*!< [3..3] Key interrupt mode control 3                                       */
      __IOM uint8_t KRM4        : 1;            /*!< [4..4] Key interrupt mode control 4                                       */
      __IOM uint8_t KRM5        : 1;            /*!< [5..5] Key interrupt mode control 5                                       */
      __IOM uint8_t KRM6        : 1;            /*!< [6..6] Key interrupt mode control 6                                       */
      __IOM uint8_t KRM7        : 1;            /*!< [7..7] Key interrupt mode control 7                                       */
    } KRM_b;
  } ;
} KINT_Type;                                    /*!< Size = 9 (0x9)                                                            */



/* =========================================================================================================================== */
/* ================                                            LED                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief LED Controler (LED)
  */

typedef struct {                                /*!< (@ 0x40086900) LED Structure                                              */
  
  union {
    __IOM uint32_t LEPSR;                       /*!< (@ 0x00000000) LEPSR                                                      */
    
    struct {
      __IOM uint32_t LEPS       : 1;            /*!< [0..0] LEPS                                                               */
            uint32_t            : 7;
      __IOM uint32_t LEPSF      : 1;            /*!< [8..8] LEPSF                                                              */
            uint32_t            : 23;
    } LEPSR_b;
  } ;
  
  union {
    __IOM uint32_t LECO;                        /*!< (@ 0x00000004) LECO                                                       */
    
    struct {
      __IOM uint32_t LEO1       : 1;            /*!< [0..0] LEO1                                                               */
      __IOM uint32_t LEO2       : 1;            /*!< [1..1] LEO2                                                               */
      __IOM uint32_t LEO3       : 1;            /*!< [2..2] LEO3                                                               */
            uint32_t            : 13;
      __IOM uint32_t LES1       : 1;            /*!< [16..16] LES1                                                             */
      __IOM uint32_t LES2       : 1;            /*!< [17..17] LES2                                                             */
      __IOM uint32_t LES3       : 1;            /*!< [18..18] LES3                                                             */
            uint32_t            : 13;
    } LECO_b;
  } ;
  
  union {
    __IOM uint32_t LEDWTCR;                     /*!< (@ 0x00000008) LEDWTCR                                                    */
    
    struct {
      __IOM uint32_t LESTS      : 14;           /*!< [13..0] LESTS                                                             */
            uint32_t            : 18;
    } LEDWTCR_b;
  } ;
} LED_Type;                                     /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                            LPG                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Low Speed Pulse Generator (LPG)
  */

typedef struct {                                /*!< (@ 0x40084600) LPG Structure                                              */
  
  union {
    __IOM uint32_t LPGCTL;                      /*!< (@ 0x00000000) Low Speed Pulse Generator Control Resister                 */
    
    struct {
      __IOM uint32_t CNTEN      : 1;            /*!< [0..0] CNTEN                                                              */
      __IOM uint32_t LPGEN      : 1;            /*!< [1..1] LPGEN                                                              */
            uint32_t            : 5;
      __IOM uint32_t LVD1EN     : 1;            /*!< [7..7] LVD1EN                                                             */
            uint32_t            : 24;
    } LPGCTL_b;
  } ;
  
  union {
    __IOM uint32_t LPGSET;                      /*!< (@ 0x00000004) Low Speed Pulse Generator Setting Resister                 */
    
    struct {
      __IOM uint32_t DUTYSEL    : 1;            /*!< [0..0] DUTYSEL                                                            */
      __IOM uint32_t SCALESEL   : 1;            /*!< [1..1] SCALESEL                                                           */
            uint32_t            : 4;
      __IOM uint32_t CLKSEL     : 1;            /*!< [6..6] CLKSEL                                                             */
            uint32_t            : 25;
    } LPGSET_b;
  } ;
} LPG_Type;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                            LST                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Low Speed Clock Timer (LST)
  */

typedef struct {                                /*!< (@ 0x40084400) LST Structure                                              */
  
  union {
    __IOM uint32_t LSTCNT;                      /*!< (@ 0x00000000) Low Speed Clock Timer Count Resister                       */
    
    struct {
      __IM  uint32_t OTHSECCNT  : 4;            /*!< [3..0] OTHSECCNT                                                          */
      __IM  uint32_t OHSECCNT   : 4;            /*!< [7..4] OHSECCNT                                                           */
      __IM  uint32_t OTSECCNT   : 4;            /*!< [11..8] OTSECCNT                                                          */
      __IM  uint32_t SECCNT     : 1;            /*!< [12..12] SECCNT                                                           */
            uint32_t            : 19;
    } LSTCNT_b;
  } ;
  
  union {
    __IOM uint32_t LSTCTRL;                     /*!< (@ 0x00000004) Low Speed Clock Timer Control Resister                     */
    
    struct {
      __IOM uint32_t LSTSTART   : 1;            /*!< [0..0] LSTSTART                                                           */
      __IOM uint32_t LSTRST     : 1;            /*!< [1..1] LSTRST                                                             */
            uint32_t            : 30;
    } LSTCTRL_b;
  } ;
} LST_Type;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                           MLCD                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief MLCD liquid crystal controler (MLCD)
  */

typedef struct {                                /*!< (@ 0x40070200) MLCD Structure                                             */
  
  union {
    __IOM uint32_t MLCDCR;                      /*!< (@ 0x00000000) MLCD Control Register                                      */
    
    struct {
      __IOM uint32_t TE         : 1;            /*!< [0..0] TE                                                                 */
            uint32_t            : 4;
      __OM  uint32_t TEIE       : 1;            /*!< [5..5] TEIE                                                               */
      __IOM uint32_t TEMIE      : 1;            /*!< [6..6] TEMIE                                                              */
            uint32_t            : 1;
      __IOM uint32_t XRST       : 1;            /*!< [8..8] XRST                                                               */
            uint32_t            : 3;
      __IOM uint32_t BITSW      : 1;            /*!< [12..12] BITSW                                                            */
            uint32_t            : 3;
      __IOM uint32_t SCKCR      : 8;            /*!< [23..16] SCKCR                                                            */
            uint32_t            : 4;
      __IOM uint32_t HADDRDEC   : 1;            /*!< [28..28] HADDRDEC                                                         */
      __IOM uint32_t VADDRDEC   : 1;            /*!< [29..29] VADDRDEC                                                         */
            uint32_t            : 2;
    } MLCDCR_b;
  } ;
  
  union {
    __IOM uint32_t MLCDSR;                      /*!< (@ 0x00000004) MLCD Status Register                                       */
    
    struct {
      __IM  uint32_t TEND       : 1;            /*!< [0..0] TEND                                                               */
      __IM  uint32_t TEF        : 1;            /*!< [1..1] TEF                                                                */
            uint32_t            : 14;
      __IOM uint32_t Reserved0  : 16;           /*!< [31..16] These bits are read as 0. The write value should be
                                                     0.                                                                        */
    } MLCDSR_b;
  } ;
  
  union {
    __IOM uint32_t MLCDADDR;                    /*!< (@ 0x00000008) MLCD Address Setting Register                              */
    
    struct {
            uint32_t            : 3;
      __IOM uint32_t HADDR      : 5;            /*!< [7..3] HADDR                                                              */
            uint32_t            : 8;
      __IOM uint32_t VADDR      : 8;            /*!< [23..16] VADDR                                                            */
            uint32_t            : 8;
    } MLCDADDR_b;
  } ;
  
  union {
    __IOM uint32_t MLCDWRCR;                    /*!< (@ 0x0000000C) MLCD Send data size setting register                       */
    
    struct {
      __IOM uint32_t BYTE       : 6;            /*!< [5..0] BYTE                                                               */
            uint32_t            : 10;
      __IOM uint32_t LINE       : 9;            /*!< [24..16] LINE                                                             */
            uint32_t            : 7;
    } MLCDWRCR_b;
  } ;
  
  union {
    __IOM uint32_t MLCDSEND;                    /*!< (@ 0x00000010) MLCD Send data size setting register                       */
    
    struct {
      __OM  uint32_t EN         : 1;            /*!< [0..0] EN                                                                 */
            uint32_t            : 15;
      __IOM uint32_t Reserved0  : 16;           /*!< [31..16] These bits are read as 0. The write value should be
                                                     0.                                                                        */
    } MLCDSEND_b;
  } ;
  
  union {
    __IOM uint32_t MLCDBKCR;                    /*!< (@ 0x00000014) MLCD Block Transfer Setting Register                       */
    
    struct {
      __IOM uint32_t BKEN       : 1;            /*!< [0..0] BKEN                                                               */
            uint32_t            : 7;
      __IOM uint32_t BKMODE     : 2;            /*!< [9..8] BKMODE                                                             */
            uint32_t            : 6;
      __IOM uint32_t BKHNUM     : 5;            /*!< [20..16] BKHNUM                                                           */
            uint32_t            : 3;
      __IOM uint32_t BKVNUM     : 5;            /*!< [28..24] BKVNUM                                                           */
            uint32_t            : 3;
    } MLCDBKCR_b;
  } ;
  
  union {
    __IOM uint32_t MLCDVCOMCTL;                 /*!< (@ 0x00000018) MLCD VCOM Control Register                                 */
    
    struct {
      __IOM uint32_t VCOME      : 1;            /*!< [0..0] VCOME                                                              */
      __IOM uint32_t VCOMW      : 2;            /*!< [2..1] VCOMW                                                              */
            uint32_t            : 25;
      __IOM uint32_t Reserved0  : 4;            /*!< [31..28] These bits are read as 0. The write value should be
                                                     0.                                                                        */
    } MLCDVCOMCTL_b;
  } ;
  
  union {
    __IOM uint32_t MLCDENBCR;                   /*!< (@ 0x0000001C) MLCD Enable Signal Control Register                        */
    
    struct {
      __IOM uint32_t ENBW       : 10;           /*!< [9..0] ENBW                                                               */
            uint32_t            : 6;
      __IOM uint32_t ENBEG      : 8;            /*!< [23..16] ENBEG                                                            */
            uint32_t            : 8;
    } MLCDENBCR_b;
  } ;
  
  union {
    __IOM uint32_t DATA_W0;                     /*!< (@ 0x00000020) MLCD Enable Signal Control Register(32bit)                 */
    
    struct {
      union {
        __IOM uint16_t DATA_HW0;                /*!< (@ 0x00000020) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA0;                /*!< (@ 0x00000020) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA0_b;
          } ;
          
          union {
            __IOM uint8_t DATA1;                /*!< (@ 0x00000021) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA1_b;
          } ;
        };
      };
      
      union {
        __IOM uint16_t DATA_HW1;                /*!< (@ 0x00000022) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA2;                /*!< (@ 0x00000022) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA2_b;
          } ;
          
          union {
            __IOM uint8_t DATA3;                /*!< (@ 0x00000023) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA3_b;
          } ;
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W1;                     /*!< (@ 0x00000024) MLCD Enable Signal Control Register(32bit)                 */
    
    struct {
      union {
        __IOM uint16_t DATA_HW2;                /*!< (@ 0x00000024) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA4;                /*!< (@ 0x00000024) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA4_b;
          } ;
          
          union {
            __IOM uint8_t DATA5;                /*!< (@ 0x00000025) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA5_b;
          } ;
        };
      };
      
      union {
        __IOM uint16_t DATA_HW3;                /*!< (@ 0x00000026) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA6;                /*!< (@ 0x00000026) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA6_b;
          } ;
          
          union {
            __IOM uint8_t DATA7;                /*!< (@ 0x00000027) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA7_b;
          } ;
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W2;                     /*!< (@ 0x00000028) MLCD Enable Signal Control Register(32bit)                 */
    
    struct {
      union {
        __IOM uint16_t DATA_HW4;                /*!< (@ 0x00000028) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA8;                /*!< (@ 0x00000028) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA8_b;
          } ;
          
          union {
            __IOM uint8_t DATA9;                /*!< (@ 0x00000029) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA9_b;
          } ;
        };
      };
      
      union {
        __IOM uint16_t DATA_HW5;                /*!< (@ 0x0000002A) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA10;               /*!< (@ 0x0000002A) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA10_b;
          } ;
          
          union {
            __IOM uint8_t DATA11;               /*!< (@ 0x0000002B) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA11_b;
          } ;
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W3;                     /*!< (@ 0x0000002C) MLCD Enable Signal Control Register(32bit)                 */
    
    struct {
      union {
        __IOM uint16_t DATA_HW6;                /*!< (@ 0x0000002C) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA12;               /*!< (@ 0x0000002C) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA12_b;
          } ;
          
          union {
            __IOM uint8_t DATA13;               /*!< (@ 0x0000002D) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA13_b;
          } ;
        };
      };
      
      union {
        __IOM uint16_t DATA_HW7;                /*!< (@ 0x0000002E) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA14;               /*!< (@ 0x0000002E) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA14_b;
          } ;
          
          union {
            __IOM uint8_t DATA15;               /*!< (@ 0x0000002F) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA15_b;
          } ;
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W4;                     /*!< (@ 0x00000030) MLCD Enable Signal Control Register(32bit)                 */
    
    struct {
      union {
        __IOM uint16_t DATA_HW8;                /*!< (@ 0x00000030) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA16;               /*!< (@ 0x00000030) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA16_b;
          } ;
          
          union {
            __IOM uint8_t DATA17;               /*!< (@ 0x00000031) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA17_b;
          } ;
        };
      };
      
      union {
        __IOM uint16_t DATA_HW9;                /*!< (@ 0x00000032) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA18;               /*!< (@ 0x00000032) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA18_b;
          } ;
          
          union {
            __IOM uint8_t DATA19;               /*!< (@ 0x00000033) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA19_b;
          } ;
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W5;                     /*!< (@ 0x00000034) MLCD Enable Signal Control Register(32bit)                 */
    
    struct {
      union {
        __IOM uint16_t DATA_HW10;               /*!< (@ 0x00000034) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA20;               /*!< (@ 0x00000034) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA20_b;
          } ;
          
          union {
            __IOM uint8_t DATA21;               /*!< (@ 0x00000035) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA21_b;
          } ;
        };
      };
      
      union {
        __IOM uint16_t DATA_HW11;               /*!< (@ 0x00000036) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA22;               /*!< (@ 0x00000036) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA22_b;
          } ;
          
          union {
            __IOM uint8_t DATA23;               /*!< (@ 0x00000037) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA23_b;
          } ;
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W6;                     /*!< (@ 0x00000038) MLCD Enable Signal Control Register(32bit)                 */
    
    struct {
      union {
        __IOM uint16_t DATA_HW12;               /*!< (@ 0x00000038) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA24;               /*!< (@ 0x00000038) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA24_b;
          } ;
          
          union {
            __IOM uint8_t DATA25;               /*!< (@ 0x00000039) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA25_b;
          } ;
        };
      };
      
      union {
        __IOM uint16_t DATA_HW13;               /*!< (@ 0x0000003A) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA26;               /*!< (@ 0x0000003A) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA26_b;
          } ;
          
          union {
            __IOM uint8_t DATA27;               /*!< (@ 0x0000003B) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA27_b;
          } ;
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W7;                     /*!< (@ 0x0000003C) MLCD Enable Signal Control Register(32bit)                 */
    
    struct {
      union {
        __IOM uint16_t DATA_HW14;               /*!< (@ 0x0000003C) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA28;               /*!< (@ 0x0000003C) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA28_b;
          } ;
          
          union {
            __IOM uint8_t DATA29;               /*!< (@ 0x0000003D) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA29_b;
          } ;
        };
      };
      
      union {
        __IOM uint16_t DATA_HW15;               /*!< (@ 0x0000003E) MLCD Enable Signal Control Register(16bit)                 */
        
        struct {
          union {
            __IOM uint8_t DATA30;               /*!< (@ 0x0000003E) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA30_b;
          } ;
          
          union {
            __IOM uint8_t DATA31;               /*!< (@ 0x0000003F) MLCD Enable Signal Control Register                        */
            
            struct {
              __IOM uint8_t DATA : 8;           /*!< [7..0] DATA                                                               */
            } DATA31_b;
          } ;
        };
      };
    };
  };
} MLCD_Type;                                    /*!< Size = 64 (0x40)                                                          */



/* =========================================================================================================================== */
/* ================                                            MMF                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Memory Mirror Function (MMF)
  */

typedef struct {                                /*!< (@ 0x40001000) MMF Structure                                              */
  
  union {
    __IOM uint32_t MMSFR;                       /*!< (@ 0x00000000) MemMirror Special Function Register                        */
    
    struct {
            uint32_t            : 7;
      __IOM uint32_t MEMMIRADDR : 16;           /*!< [22..7] Specifies the memory mirror address.                              */
            uint32_t            : 1;
      __IOM uint32_t KEY        : 8;            /*!< [31..24] MMSFR Key Code                                                   */
    } MMSFR_b;
  } ;
  
  union {
    __IOM uint32_t MMEN;                        /*!< (@ 0x00000004) MemMirror Enable Register                                  */
    
    struct {
      __IOM uint32_t EN         : 1;            /*!< [0..0] Memory Mirror Function Enable                                      */
            uint32_t            : 23;
      __IOM uint32_t KEY        : 8;            /*!< [31..24] MMEN Key Code                                                    */
    } MMEN_b;
  } ;
} MMF_Type;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                           MMPU                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Bus Master MPU (MMPU)
  */

typedef struct {                                /*!< (@ 0x40000000) MMPU Structure                                             */
  
  union {
    __IOM uint16_t MMPUCTLA;                    /*!< (@ 0x00000000) Bus Master MPU Control Register                            */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Master Group Enable                                                */
      __IOM uint16_t OAD        : 1;            /*!< [1..1] Operation After Detection                                          */
            uint16_t            : 6;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Write Keyword The data written to these bits are not
                                                     stored.                                                                   */
    } MMPUCTLA_b;
  } ;
  __IM  uint16_t  RESERVED;
  __IM  uint32_t  RESERVED1[63];
  __IM  uint16_t  RESERVED2;
  
  union {
    __IOM uint16_t MMPUPTA;                     /*!< (@ 0x00000102) Group A Protection of Register                             */
    
    struct {
      __IOM uint16_t PROTECT    : 1;            /*!< [0..0] Protection of register(MMPUSAn, MMPUEAn, MMPUACAn and
                                                     MMPUCTLA )                                                                */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Write Keyword The data written to these bits are not
                                                     stored.                                                                   */
    } MMPUPTA_b;
  } ;
  __IM  uint32_t  RESERVED3[63];
  
  union {
    __IOM uint16_t MMPUACA0;                    /*!< (@ 0x00000200) Group A Region 0 Access Control Register                   */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Region enable                                                      */
      __IOM uint16_t RP         : 1;            /*!< [1..1] Read protection                                                    */
      __IOM uint16_t WP         : 1;            /*!< [2..2] Write protection                                                   */
            uint16_t            : 13;
    } MMPUACA0_b;
  } ;
  __IM  uint16_t  RESERVED4;
  
  union {
    __IOM uint32_t MMPUSA0;                     /*!< (@ 0x00000204) Group A Region 0 Start Address Register                    */
    
    struct {
      __IOM uint32_t MMPUSA0    : 32;           /*!< [31..0] Region Start Address : Address where the region starts,
                                                     for use in region determination.NOTE: The low-order 2 bits
                                                     are fixed to 0.                                                           */
    } MMPUSA0_b;
  } ;
  
  union {
    __IOM uint32_t MMPUEA0;                     /*!< (@ 0x00000208) Group A Region 0 End Address Register                      */
    
    struct {
      __IOM uint32_t MMPUEA0    : 32;           /*!< [31..0] Region End Address : Address where the region ends,
                                                     for use in region determination.NOTE: The low-order 2 bits
                                                     are fixed to 0.                                                           */
    } MMPUEA0_b;
  } ;
  __IM  uint32_t  RESERVED5;
  
  union {
    __IOM uint16_t MMPUACA1;                    /*!< (@ 0x00000210) Group A Region 1 Access Control Register                   */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Region enable                                                      */
      __IOM uint16_t RP         : 1;            /*!< [1..1] Read protection                                                    */
      __IOM uint16_t WP         : 1;            /*!< [2..2] Write protection                                                   */
            uint16_t            : 13;
    } MMPUACA1_b;
  } ;
  __IM  uint16_t  RESERVED6;
  
  union {
    __IOM uint32_t MMPUSA1;                     /*!< (@ 0x00000214) Group A Region 1 Start Address Register                    */
    
    struct {
      __IOM uint32_t MMPUSA1    : 32;           /*!< [31..0] Region Start Address : Address where the region starts,
                                                     for use in region determination.NOTE: The low-order 2 bits
                                                     are fixed to 0.                                                           */
    } MMPUSA1_b;
  } ;
  
  union {
    __IOM uint32_t MMPUEA1;                     /*!< (@ 0x00000218) Group A Region 1 End Address Register                      */
    
    struct {
      __IOM uint32_t MMPUEA1    : 32;           /*!< [31..0] Region End Address : Address where the region ends,
                                                     for use in region determination.NOTE: The low-order 2 bits
                                                     are fixed to 0.                                                           */
    } MMPUEA1_b;
  } ;
  __IM  uint32_t  RESERVED7;
  
  union {
    __IOM uint16_t MMPUACA2;                    /*!< (@ 0x00000220) Group A Region 2 Access Control Register                   */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Region enable                                                      */
      __IOM uint16_t RP         : 1;            /*!< [1..1] Read protection                                                    */
      __IOM uint16_t WP         : 1;            /*!< [2..2] Write protection                                                   */
            uint16_t            : 13;
    } MMPUACA2_b;
  } ;
  __IM  uint16_t  RESERVED8;
  
  union {
    __IOM uint32_t MMPUSA2;                     /*!< (@ 0x00000224) Group A Region 2 Start Address Register                    */
    
    struct {
      __IOM uint32_t MMPUSA2    : 32;           /*!< [31..0] Region Start Address : Address where the region starts,
                                                     for use in region determination.NOTE: The low-order 2 bits
                                                     are fixed to 0.                                                           */
    } MMPUSA2_b;
  } ;
  
  union {
    __IOM uint32_t MMPUEA2;                     /*!< (@ 0x00000228) Group A Region 2 End Address Register                      */
    
    struct {
      __IOM uint32_t MMPUEA2    : 32;           /*!< [31..0] Region End Address : Address where the region ends,
                                                     for use in region determination.NOTE: The low-order 2 bits
                                                     are fixed to 0.                                                           */
    } MMPUEA2_b;
  } ;
  __IM  uint32_t  RESERVED9;
  
  union {
    __IOM uint16_t MMPUACA3;                    /*!< (@ 0x00000230) Group A Region 3 Access Control Register                   */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Region enable                                                      */
      __IOM uint16_t RP         : 1;            /*!< [1..1] Read protection                                                    */
      __IOM uint16_t WP         : 1;            /*!< [2..2] Write protection                                                   */
            uint16_t            : 13;
    } MMPUACA3_b;
  } ;
  __IM  uint16_t  RESERVED10;
  
  union {
    __IOM uint32_t MMPUSA3;                     /*!< (@ 0x00000234) Group A Region 3 Start Address Register                    */
    
    struct {
      __IOM uint32_t MMPUSA3    : 32;           /*!< [31..0] Region Start Address : Address where the region starts,
                                                     for use in region determination.NOTE: The low-order 2 bits
                                                     are fixed to 0.                                                           */
    } MMPUSA3_b;
  } ;
  
  union {
    __IOM uint32_t MMPUEA3;                     /*!< (@ 0x00000238) Group A Region 3 End Address Register                      */
    
    struct {
      __IOM uint32_t MMPUEA3    : 32;           /*!< [31..0] Region End Address : Address where the region ends,
                                                     for use in region determination.NOTE: The low-order 2 bits
                                                     are fixed to 0.                                                           */
    } MMPUEA3_b;
  } ;
} MMPU_Type;                                    /*!< Size = 572 (0x23c)                                                        */



/* =========================================================================================================================== */
/* ================                                           MSTP                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Module Stop Control B,C,D (MSTP)
  */

typedef struct {                                /*!< (@ 0x40047000) MSTP Structure                                             */
  
  union {
    __IOM uint32_t MSTPCRB;                     /*!< (@ 0x00000000) Module Stop Control Register B                             */
    
    struct {
            uint32_t            : 5;
      __IOM uint32_t MSTPB5     : 1;            /*!< [5..5] Infrared Data Association Interface Module Stop                    */
      __IOM uint32_t MSTPB6     : 1;            /*!< [6..6] Quad Peripheral Interface Module Stop                              */
            uint32_t            : 1;
      __IOM uint32_t MSTPB8     : 1;            /*!< [8..8] I2C Bus Interface 1 Module Stop                                    */
      __IOM uint32_t MSTPB9     : 1;            /*!< [9..9] I2C Bus Interface 0 Module Stop                                    */
            uint32_t            : 1;
      __IOM uint32_t MSTPB11    : 1;            /*!< [11..11] Universal Serial Bus 2.0 FS Interface Module Stop                */
            uint32_t            : 6;
      __IOM uint32_t MSTPB18    : 1;            /*!< [18..18] Serial Peripheral Interface 1 Module Stop                        */
      __IOM uint32_t MSTPB19    : 1;            /*!< [19..19] Serial Peripheral Interface 0 Module Stop                        */
            uint32_t            : 2;
      __IOM uint32_t MSTPB22    : 1;            /*!< [22..22] Serial Communication Interface 9 Module Stop                     */
            uint32_t            : 3;
      __IOM uint32_t MSTPB26    : 1;            /*!< [26..26] Serial Communication Interface 5 Module Stop                     */
      __IOM uint32_t MSTPB27    : 1;            /*!< [27..27] Serial Communication Interface 4 Module Stop                     */
      __IOM uint32_t MSTPB28    : 1;            /*!< [28..28] Serial Communication Interface 3 Module Stop                     */
      __IOM uint32_t MSTPB29    : 1;            /*!< [29..29] Serial Communication Interface 2 Module Stop                     */
      __IOM uint32_t MSTPB30    : 1;            /*!< [30..30] Serial Communication Interface 1 Module Stop                     */
      __IOM uint32_t MSTPB31    : 1;            /*!< [31..31] Serial Communication Interface 0 Module Stop                     */
    } MSTPCRB_b;
  } ;
  
  union {
    __IOM uint32_t MSTPCRC;                     /*!< (@ 0x00000004) Module Stop Control Register C                             */
    
    struct {
      __IOM uint32_t MSTPC0     : 1;            /*!< [0..0] CAC Module Stop                                                    */
      __IOM uint32_t MSTPC1     : 1;            /*!< [1..1] CRC Calculator Module Stop                                         */
            uint32_t            : 8;
      __IOM uint32_t MSTPC10    : 1;            /*!< [10..10] MSTPC10                                                          */
            uint32_t            : 2;
      __IOM uint32_t MSTPC13    : 1;            /*!< [13..13] Data Operation Circuit Module Stop                               */
      __IOM uint32_t MSTPC14    : 1;            /*!< [14..14] Event Link Controller Module Stop                                */
      __IOM uint32_t MSTPC15    : 1;            /*!< [15..15] MSTPC15                                                          */
            uint32_t            : 6;
      __IOM uint32_t MSTPC22    : 1;            /*!< [22..22] MSTPC22                                                          */
            uint32_t            : 2;
      __IOM uint32_t MSTPC25    : 1;            /*!< [25..25] MSTPC25                                                          */
      __IOM uint32_t MSTPC26    : 1;            /*!< [26..26] MSTPC26                                                          */
            uint32_t            : 4;
      __IOM uint32_t MSTPC31    : 1;            /*!< [31..31] MSTPC31                                                          */
    } MSTPCRC_b;
  } ;
  
  union {
    __IOM uint32_t MSTPCRD;                     /*!< (@ 0x00000008) Module Stop Control Register D                             */
    
    struct {
      __IOM uint32_t MSTPD0     : 1;            /*!< [0..0] MSTPD0                                                             */
      __IOM uint32_t MSTPD1     : 1;            /*!< [1..1] MSTPD1                                                             */
      __IOM uint32_t MSTPD2     : 1;            /*!< [2..2] MSTPD2                                                             */
      __IOM uint32_t MSTPD3     : 1;            /*!< [3..3] MSTPD3                                                             */
      __IOM uint32_t MSTPD4     : 1;            /*!< [4..4] MSTPD4                                                             */
      __IOM uint32_t MSTPD5     : 1;            /*!< [5..5] GPT ch320 - ch321 Module Stop                                      */
      __IOM uint32_t MSTPD6     : 1;            /*!< [6..6] GPT ch160 - ch163 Module Stop                                      */
      __IOM uint32_t MSTPD7     : 1;            /*!< [7..7] MSTPD7                                                             */
      __IOM uint32_t MSTPD8     : 1;            /*!< [8..8] MSTPD8                                                             */
            uint32_t            : 5;
      __IOM uint32_t MSTPD14    : 1;            /*!< [14..14] MSTPD14                                                          */
            uint32_t            : 1;
      __IOM uint32_t MSTPD16    : 1;            /*!< [16..16] MSTPD16                                                          */
      __IOM uint32_t MSTPD17    : 1;            /*!< [17..17] MSTPD17                                                          */
            uint32_t            : 2;
      __IOM uint32_t MSTPD20    : 1;            /*!< [20..20] MSTPD20                                                          */
            uint32_t            : 1;
      __IOM uint32_t MSTPD22    : 1;            /*!< [22..22] MSTPD22                                                          */
            uint32_t            : 5;
      __IOM uint32_t MSTPD28    : 1;            /*!< [28..28] MSTPD28                                                          */
            uint32_t            : 3;
    } MSTPCRD_b;
  } ;
} MSTP_Type;                                    /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                           MTDV                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Motor Driver Control Circuit (MTDV)
  */

typedef struct {                                /*!< (@ 0x40084800) MTDV Structure                                             */
  
  union {
    __OM  uint16_t PLSENABLE;                   /*!< (@ 0x00000000) Plus Enable Imput Resister                                 */
    
    struct {
      __OM  uint16_t PM1PLSON   : 1;            /*!< [0..0] PM1PLSON                                                           */
      __OM  uint16_t PM2PLSON   : 1;            /*!< [1..1] PM2PLSON                                                           */
      __OM  uint16_t PM3PLSON   : 1;            /*!< [2..2] PM3PLSON                                                           */
            uint16_t            : 1;
      __OM  uint16_t PM5PLSON   : 1;            /*!< [4..4] PM5PLSON                                                           */
      __OM  uint16_t PM6PLSON   : 1;            /*!< [5..5] PM6PLSON                                                           */
            uint16_t            : 2;
      __OM  uint16_t PM1PLSSK   : 1;            /*!< [8..8] PM1PLSSK                                                           */
      __OM  uint16_t PM2PLSSK   : 1;            /*!< [9..9] PM2PLSSK                                                           */
      __OM  uint16_t PM3PLSSK   : 1;            /*!< [10..10] PM3PLSSK                                                         */
            uint16_t            : 1;
      __OM  uint16_t PM5PLSSK   : 1;            /*!< [12..12] PM5PLSSK                                                         */
      __OM  uint16_t PM6PLSSK   : 1;            /*!< [13..13] PM6PLSSK                                                         */
            uint16_t            : 2;
    } PLSENABLE_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __OM  uint16_t REVENABLE;                   /*!< (@ 0x00000004) Reverse Enable Imput Resister                              */
    
    struct {
      __OM  uint16_t PM1REVON   : 1;            /*!< [0..0] PM1REVON                                                           */
      __OM  uint16_t PM2REVON   : 1;            /*!< [1..1] PM2REVON                                                           */
      __OM  uint16_t PM3REVON   : 1;            /*!< [2..2] PM3REVON                                                           */
            uint16_t            : 1;
      __OM  uint16_t PM5REVON   : 1;            /*!< [4..4] PM5REVON                                                           */
      __OM  uint16_t PM6REVON   : 1;            /*!< [5..5] PM6REVON                                                           */
            uint16_t            : 2;
      __OM  uint16_t PM1REVSK   : 1;            /*!< [8..8] PM1REVSK                                                           */
      __OM  uint16_t PM2REVSK   : 1;            /*!< [9..9] PM2REVSK                                                           */
      __OM  uint16_t PM3REVSK   : 1;            /*!< [10..10] PM3REVSK                                                         */
            uint16_t            : 1;
      __OM  uint16_t PM5REVSK   : 1;            /*!< [12..12] PM5REVSK                                                         */
      __OM  uint16_t PM6REVSK   : 1;            /*!< [13..13] PM6REVSK                                                         */
            uint16_t            : 2;
    } REVENABLE_b;
  } ;
  __IM  uint16_t  RESERVED1;
  
  union {
    __OM  uint16_t KYOCON;                      /*!< (@ 0x00000008) Pulse Polarity Reverse Register                            */
    
    struct {
      __OM  uint16_t PM1KYC     : 1;            /*!< [0..0] PM1KYC                                                             */
      __OM  uint16_t PM2KYC     : 1;            /*!< [1..1] PM2KYC                                                             */
      __OM  uint16_t PM3KYC     : 1;            /*!< [2..2] PM3KYC                                                             */
            uint16_t            : 1;
      __OM  uint16_t PM5KYC     : 1;            /*!< [4..4] PM5KYC                                                             */
      __OM  uint16_t PM6KYC     : 1;            /*!< [5..5] PM6KYC                                                             */
            uint16_t            : 10;
    } KYOCON_b;
  } ;
  __IM  uint16_t  RESERVED2;
  
  union {
    __IM  uint16_t PMSTATE1;                    /*!< (@ 0x0000000C) PM Status Register1                                        */
    
    struct {
      __IM  uint16_t PM1ON      : 1;            /*!< [0..0] PM1ON                                                              */
      __IM  uint16_t PM2ON      : 1;            /*!< [1..1] PM2ON                                                              */
      __IM  uint16_t PM3ON      : 1;            /*!< [2..2] PM3ON                                                              */
            uint16_t            : 1;
      __IM  uint16_t PM5ON      : 1;            /*!< [4..4] PM5ON                                                              */
      __IM  uint16_t PM6ON      : 1;            /*!< [5..5] PM6ON                                                              */
            uint16_t            : 2;
      __IM  uint16_t PM1WAIT    : 1;            /*!< [8..8] PM1WAIT                                                            */
      __IM  uint16_t PM2WAIT    : 1;            /*!< [9..9] PM2WAIT                                                            */
      __IM  uint16_t PM3WAIT    : 1;            /*!< [10..10] PM3WAIT                                                          */
            uint16_t            : 1;
      __IM  uint16_t PM5WAIT    : 1;            /*!< [12..12] PM5WAIT                                                          */
      __IM  uint16_t PM6WAIT    : 1;            /*!< [13..13] PM6WAIT                                                          */
            uint16_t            : 2;
    } PMSTATE1_b;
  } ;
  
  union {
    __IM  uint16_t PMSTATE2;                    /*!< (@ 0x0000000E) PM Status Register2                                        */
    
    struct {
      __IM  uint16_t PM1KCIN    : 1;            /*!< [0..0] PM1KCIN                                                            */
      __IM  uint16_t PM2KCIN    : 1;            /*!< [1..1] PM2KCIN                                                            */
      __IM  uint16_t PM3KCIN    : 1;            /*!< [2..2] PM3KCIN                                                            */
            uint16_t            : 1;
      __IM  uint16_t PM5KCIN    : 1;            /*!< [4..4] PM5KCIN                                                            */
      __IM  uint16_t PM6KCIN    : 1;            /*!< [5..5] PM6KCIN                                                            */
            uint16_t            : 10;
    } PMSTATE2_b;
  } ;
  
  union {
    __IOM uint16_t PMDVR;                       /*!< (@ 0x00000010) Driver Direct Control Register                             */
    
    struct {
      __IOM uint16_t O1DVR      : 1;            /*!< [0..0] O1DVR                                                              */
      __IOM uint16_t O2DVR      : 1;            /*!< [1..1] O2DVR                                                              */
            uint16_t            : 1;
      __IOM uint16_t O4DVR      : 1;            /*!< [3..3] O4DVR                                                              */
      __IOM uint16_t O5DVR      : 1;            /*!< [4..4] O5DVR                                                              */
      __IOM uint16_t O6DVR      : 1;            /*!< [5..5] O6DVR                                                              */
      __IOM uint16_t O7DVR      : 1;            /*!< [6..6] O7DVR                                                              */
      __IOM uint16_t O8DVR      : 1;            /*!< [7..7] O8DVR                                                              */
      __IOM uint16_t O9DVR      : 1;            /*!< [8..8] O9DVR                                                              */
            uint16_t            : 7;
    } PMDVR_b;
  } ;
  __IM  uint16_t  RESERVED3;
  
  union {
    __IOM uint16_t VPMCON;                      /*!< (@ 0x00000014) VPM Control Register                                       */
    
    struct {
      __IOM uint16_t VPMAS      : 3;            /*!< [2..0] VPMAS                                                              */
      __IOM uint16_t VPMENA     : 1;            /*!< [3..3] VPMENA                                                             */
      __IOM uint16_t VSYSSEL    : 1;            /*!< [4..4] VSYSSEL                                                            */
            uint16_t            : 1;
      __IOM uint16_t VPMSEL     : 1;            /*!< [6..6] VPMSEL                                                             */
      __IOM uint16_t WAITSKIP   : 1;            /*!< [7..7] WAITSKIP                                                           */
            uint16_t            : 8;
    } VPMCON_b;
  } ;
  __IM  uint16_t  RESERVED4;
  
  union {
    __IOM uint16_t RESREG;                      /*!< (@ 0x00000018) Built-in Registance Setting Register                       */
    
    struct {
      __IOM uint16_t PM1RES     : 3;            /*!< [2..0] PM1RES                                                             */
            uint16_t            : 13;
    } RESREG_b;
  } ;
  __IM  uint16_t  RESERVED5;
  
  union {
    __IOM uint16_t PMCHKTM;                     /*!< (@ 0x0000001C) Interval Time Setting Register                             */
    
    struct {
      __IOM uint16_t CHK        : 10;           /*!< [9..0] CHK                                                                */
            uint16_t            : 6;
    } PMCHKTM_b;
  } ;
  __IM  uint16_t  RESERVED6;
  
  union {
    __IOM uint16_t PMCHKCK;                     /*!< (@ 0x00000020) Interval Time Setting Timer Selection Register             */
    
    struct {
      __IOM uint16_t PM1PLCK    : 1;            /*!< [0..0] PM1PLCK                                                            */
      __IOM uint16_t PM25PLCK   : 1;            /*!< [1..1] PM25PLCK                                                           */
      __IOM uint16_t PM36PLCK   : 1;            /*!< [2..2] PM36PLCK                                                           */
            uint16_t            : 1;
      __IOM uint16_t PM1RVCK    : 1;            /*!< [4..4] PM1RVCK                                                            */
      __IOM uint16_t PM25RVCK   : 1;            /*!< [5..5] PM25RVCK                                                           */
      __IOM uint16_t PM36RVCK   : 1;            /*!< [6..6] PM36RVCK                                                           */
            uint16_t            : 9;
    } PMCHKCK_b;
  } ;
  __IM  uint16_t  RESERVED7;
  
  union {
    __IM  uint16_t PMCHKSTA;                    /*!< (@ 0x00000024) PM Timer Status Register                                   */
    
    struct {
      __IM  uint16_t PM1CKNG    : 1;            /*!< [0..0] PM1CKNG                                                            */
      __IM  uint16_t PM25CKNG   : 1;            /*!< [1..1] PM25CKNG                                                           */
      __IM  uint16_t PM36CKNG   : 1;            /*!< [2..2] PM36CKNG                                                           */
            uint16_t            : 13;
    } PMCHKSTA_b;
  } ;
  __IM  uint16_t  RESERVED8;
  
  union {
    __IOM uint16_t PM1SET;                      /*!< (@ 0x00000028) PM1 Setting Register                                       */
    
    struct {
      __IOM uint16_t PM1PAT     : 2;            /*!< [1..0] PM1PAT                                                             */
            uint16_t            : 3;
      __IOM uint16_t PM1LVINI   : 1;            /*!< [5..5] PM1LVINI                                                           */
      __IOM uint16_t PM1STY     : 1;            /*!< [6..6] PM1STY                                                             */
      __IOM uint16_t PM1LVDW    : 1;            /*!< [7..7] PM1LVDW                                                            */
            uint16_t            : 8;
    } PM1SET_b;
  } ;
  __IM  uint16_t  RESERVED9;
  
  union {
    __IOM uint16_t PM56PAT;                     /*!< (@ 0x0000002C) PM 56 Correctionment Pulse Selection Register              */
    
    struct {
            uint16_t            : 1;
      __IOM uint16_t PM5PAT     : 1;            /*!< [1..1] PM5PAT                                                             */
      __IOM uint16_t PM6PAT     : 1;            /*!< [2..2] PM6PAT                                                             */
            uint16_t            : 13;
    } PM56PAT_b;
  } ;
  __IM  uint16_t  RESERVED10;
  
  union {
    __IM  uint16_t PM1STA;                      /*!< (@ 0x00000030) PM1 Status Register                                        */
    
    struct {
      __IM  uint16_t PM1BIT     : 4;            /*!< [3..0] These bits are read as 0. The write value should be 0.             */
      __IM  uint16_t PM1HPFLG   : 1;            /*!< [4..4] PM1HPFLG                                                           */
            uint16_t            : 11;
    } PM1STA_b;
  } ;
  __IM  uint16_t  RESERVED11[39];
  
  union {
    __IOM uint16_t P1FPCT1ALL;                  /*!< (@ 0x00000080) PM1 Forward Pulse Full Length Setting Register             */
    
    struct {
      __IOM uint16_t P1FPFL     : 8;            /*!< [7..0] P1FPFL                                                             */
            uint16_t            : 8;
    } P1FPCT1ALL_b;
  } ;
  
  union {
    __IOM uint16_t P1FDUTYHL;                   /*!< (@ 0x00000082) PMm Forward Pulse Duty Width Setting Register              */
    
    struct {
      __IOM uint16_t P1LOW      : 5;            /*!< [4..0] P1LOW                                                              */
            uint16_t            : 3;
      __IOM uint16_t P1HIGH     : 5;            /*!< [12..8] P1HIGH                                                            */
            uint16_t            : 3;
    } P1FDUTYHL_b;
  } ;
  
  union {
    __IOM uint16_t P1FPCT1DETVPM;               /*!< (@ 0x00000084) PM1 Rotate Ditection Setting Register                      */
    
    struct {
      __IOM uint16_t P1VPM      : 3;            /*!< [2..0] P1VPM                                                              */
      __IOM uint16_t P1VCCSEL   : 1;            /*!< [3..3] P1VCCSEL                                                           */
            uint16_t            : 1;
      __IOM uint16_t P1INVSEL   : 1;            /*!< [5..5] P1INVSEL                                                           */
            uint16_t            : 2;
      __IOM uint16_t P1KENSYUTSU : 2;           /*!< [9..8] P1KENSYUTSU                                                        */
            uint16_t            : 6;
    } P1FPCT1DETVPM_b;
  } ;
  
  union {
    __IOM uint16_t P1FCOR1ALL;                  /*!< (@ 0x00000086) PM1 Correction Pulse 1 Full Length Setting Register        */
    
    struct {
      __IOM uint16_t P1CP1FL    : 9;            /*!< [8..0] P1CP1FL                                                            */
            uint16_t            : 4;
      __IOM uint16_t P1CP1VPM   : 3;            /*!< [15..13] P1CP1VPM                                                         */
    } P1FCOR1ALL_b;
  } ;
  
  union {
    __IOM uint16_t P1FCOR1B;                    /*!< (@ 0x00000088) PM1 Correction Pulse 1 Beta Setting Register               */
    
    struct {
      __IOM uint16_t P1CP1B     : 9;            /*!< [8..0] P1CP1B                                                             */
            uint16_t            : 7;
    } P1FCOR1B_b;
  } ;
  
  union {
    __IOM uint16_t P1FCOR1HL;                   /*!< (@ 0x0000008A) PM1 Correction Pulse 1 Duty Width Setting Register         */
    
    struct {
      __IOM uint16_t P1CP1LOW   : 5;            /*!< [4..0] P1CP1LOW                                                           */
            uint16_t            : 3;
      __IOM uint16_t P1CP1HIGH  : 5;            /*!< [12..8] P1CP1HIGH                                                         */
            uint16_t            : 3;
    } P1FCOR1HL_b;
  } ;
  
  union {
    __IOM uint16_t P1FCOR2ALL;                  /*!< (@ 0x0000008C) PM1 Correction Pulse 2 Full Length Setting Register        */
    
    struct {
      __IOM uint16_t P1CP2FL    : 9;            /*!< [8..0] P1CP2FL                                                            */
            uint16_t            : 4;
      __IOM uint16_t P1CP2VPM   : 3;            /*!< [15..13] P1CP2VPM                                                         */
    } P1FCOR2ALL_b;
  } ;
  
  union {
    __IOM uint16_t P1FCOR2B;                    /*!< (@ 0x0000008E) PM1 Correction Pulse 2 Beta Setting Register               */
    
    struct {
      __IOM uint16_t P1CP2B     : 9;            /*!< [8..0] P1CP2B                                                             */
            uint16_t            : 7;
    } P1FCOR2B_b;
  } ;
  
  union {
    __IOM uint16_t P1FCOR2HL;                   /*!< (@ 0x00000090) PM1 Correction Pulse 2 Duty Width Setting Register         */
    
    struct {
      __IOM uint16_t P1CP2LOW   : 5;            /*!< [4..0] P1CP2LOW                                                           */
            uint16_t            : 3;
      __IOM uint16_t P1CP2HIGH  : 5;            /*!< [12..8] P1CP2HIGH                                                         */
            uint16_t            : 3;
    } P1FCOR2HL_b;
  } ;
  __IM  uint16_t  RESERVED12[7];
  
  union {
    __IOM uint16_t P2FDRVALL;                   /*!< (@ 0x000000A0) PM2 Forward Rotation Pulse Full Length Setting
                                                                    Register                                                   */
    
    struct {
      __IOM uint16_t P2FPFL     : 9;            /*!< [8..0] P2FPFL                                                             */
            uint16_t            : 6;
      __IOM uint16_t P2FPVPM    : 1;            /*!< [15..15] P2FPVPM                                                          */
    } P2FDRVALL_b;
  } ;
  
  union {
    __IOM uint16_t P3FDRVALL;                   /*!< (@ 0x000000A2) PM3 Forward Rotation Pulse Full Length Setting
                                                                    Register                                                   */
    
    struct {
      __IOM uint16_t P3FPFL     : 9;            /*!< [8..0] P3FPFL                                                             */
            uint16_t            : 6;
      __IOM uint16_t P3FPVPM    : 1;            /*!< [15..15] P3FPVPM                                                          */
    } P3FDRVALL_b;
  } ;
  
  union {
    __IOM uint16_t P2FDRVB;                     /*!< (@ 0x000000A4) PM2 Forward Pulse Beta Setting Register                    */
    
    struct {
      __IOM uint16_t P2FPB      : 9;            /*!< [8..0] P2FPB                                                              */
            uint16_t            : 7;
    } P2FDRVB_b;
  } ;
  
  union {
    __IOM uint16_t P3FDRVB;                     /*!< (@ 0x000000A6) PM3 Forward Pulse Beta Setting Register                    */
    
    struct {
      __IOM uint16_t P3FPB      : 9;            /*!< [8..0] P3FPB                                                              */
            uint16_t            : 7;
    } P3FDRVB_b;
  } ;
  
  union {
    __IOM uint16_t P2FDUTYHL;                   /*!< (@ 0x000000A8) PMm Forward Pulse Duty Width Setting Register              */
    
    struct {
      __IOM uint16_t P2LOW      : 5;            /*!< [4..0] P2LOW                                                              */
            uint16_t            : 3;
      __IOM uint16_t P2HIGH     : 5;            /*!< [12..8] P2HIGH                                                            */
            uint16_t            : 3;
    } P2FDUTYHL_b;
  } ;
  
  union {
    __IOM uint16_t P3FDUTYHL;                   /*!< (@ 0x000000AA) PMm Forward Pulse Duty Width Setting Register              */
    
    struct {
      __IOM uint16_t P3LOW      : 5;            /*!< [4..0] P3LOW                                                              */
            uint16_t            : 3;
      __IOM uint16_t P3HIGH     : 5;            /*!< [12..8] P3HIGH                                                            */
            uint16_t            : 3;
    } P3FDUTYHL_b;
  } ;
  __IM  uint16_t  RESERVED13[2];
  
  union {
    __IOM uint16_t P1RALL;                      /*!< (@ 0x000000B0) PM1 Reversal Pulse Full Length Setting Register            */
    
    struct {
      __IOM uint16_t P1RPFL     : 10;           /*!< [9..0] P1RPFL                                                             */
            uint16_t            : 5;
      __IOM uint16_t P1RPVPM    : 1;            /*!< [15..15] P1RPVPM                                                          */
    } P1RALL_b;
  } ;
  
  union {
    __IOM uint16_t P2RALL;                      /*!< (@ 0x000000B2) PM2 Reversal Pulse Full Length Setting Register            */
    
    struct {
      __IOM uint16_t P2RPFL     : 10;           /*!< [9..0] P2RPFL                                                             */
            uint16_t            : 5;
      __IOM uint16_t P2RPVPM    : 1;            /*!< [15..15] P2RPVPM                                                          */
    } P2RALL_b;
  } ;
  
  union {
    __IOM uint16_t P3RALL;                      /*!< (@ 0x000000B4) PM3 Reversal Pulse Full Length Setting Register            */
    
    struct {
      __IOM uint16_t P3RPFL     : 10;           /*!< [9..0] P3RPFL                                                             */
            uint16_t            : 5;
      __IOM uint16_t P3RPVPM    : 1;            /*!< [15..15] P3RPVPM                                                          */
    } P3RALL_b;
  } ;
  
  union {
    __IOM uint16_t P1RP1SET;                    /*!< (@ 0x000000B6) PM1 Reversal Pulse P1 Setting Register                     */
    
    struct {
      __IOM uint16_t P1REVP1    : 8;            /*!< [7..0] P1REVP1                                                            */
            uint16_t            : 8;
    } P1RP1SET_b;
  } ;
  
  union {
    __IOM uint16_t P2RP1SET;                    /*!< (@ 0x000000B8) PM2 Reversal Pulse P1 Setting Register                     */
    
    struct {
      __IOM uint16_t P2REVP1    : 8;            /*!< [7..0] P2REVP1                                                            */
            uint16_t            : 8;
    } P2RP1SET_b;
  } ;
  
  union {
    __IOM uint16_t P3RP1SET;                    /*!< (@ 0x000000BA) PM3 Reversal Pulse P1 Setting Register                     */
    
    struct {
      __IOM uint16_t P3REVP1    : 8;            /*!< [7..0] P3REVP1                                                            */
            uint16_t            : 8;
    } P3RP1SET_b;
  } ;
  
  union {
    __IOM uint16_t P1RP2SET;                    /*!< (@ 0x000000BC) PM1 Reversal Pulse P2 Setting Register                     */
    
    struct {
      __IOM uint16_t P1REVP2    : 8;            /*!< [7..0] P1REVP2                                                            */
            uint16_t            : 8;
    } P1RP2SET_b;
  } ;
  
  union {
    __IOM uint16_t P2RP2SET;                    /*!< (@ 0x000000BE) PM2 Reversal Pulse P2 Setting Register                     */
    
    struct {
      __IOM uint16_t P2REVP2    : 8;            /*!< [7..0] P2REVP2                                                            */
            uint16_t            : 8;
    } P2RP2SET_b;
  } ;
  
  union {
    __IOM uint16_t P3RP2SET;                    /*!< (@ 0x000000C0) PM3 Reversal Pulse P2 Setting Register                     */
    
    struct {
      __IOM uint16_t P3REVP2    : 8;            /*!< [7..0] P3REVP2                                                            */
            uint16_t            : 8;
    } P3RP2SET_b;
  } ;
  
  union {
    __IOM uint16_t P1RP3SET;                    /*!< (@ 0x000000C2) PM1 Reversal Pulse P3 Setting Register                     */
    
    struct {
      __IOM uint16_t P1REVP3    : 9;            /*!< [8..0] P1REVP3                                                            */
            uint16_t            : 7;
    } P1RP3SET_b;
  } ;
  
  union {
    __IOM uint16_t P2RP3SET;                    /*!< (@ 0x000000C4) PM2 Reversal Pulse P3 Setting Register                     */
    
    struct {
      __IOM uint16_t P2REVP3    : 9;            /*!< [8..0] P2REVP3                                                            */
            uint16_t            : 7;
    } P2RP3SET_b;
  } ;
  
  union {
    __IOM uint16_t P3RP3SET;                    /*!< (@ 0x000000C6) PM3 Reversal Pulse P3 Setting Register                     */
    
    struct {
      __IOM uint16_t P3REVP3    : 9;            /*!< [8..0] P3REVP3                                                            */
            uint16_t            : 7;
    } P3RP3SET_b;
  } ;
  
  union {
    __IOM uint16_t P1RDUTYHL;                   /*!< (@ 0x000000C8) PM1 Reversal Pulse Duty Width Setting Register             */
    
    struct {
      __IOM uint16_t P1REVLOW   : 5;            /*!< [4..0] P1REVLOW                                                           */
            uint16_t            : 3;
      __IOM uint16_t P1REVHIGH  : 5;            /*!< [12..8] P1REVHIGH                                                         */
            uint16_t            : 3;
    } P1RDUTYHL_b;
  } ;
  
  union {
    __IOM uint16_t P2RDUTYHL;                   /*!< (@ 0x000000CA) PM2 Reversal Pulse Duty Width Setting Register             */
    
    struct {
      __IOM uint16_t P2REVLOW   : 5;            /*!< [4..0] P2REVLOW                                                           */
            uint16_t            : 3;
      __IOM uint16_t P2REVHIGH  : 5;            /*!< [12..8] P2REVHIGH                                                         */
            uint16_t            : 3;
    } P2RDUTYHL_b;
  } ;
  
  union {
    __IOM uint16_t P3RDUTYHL;                   /*!< (@ 0x000000CC) PM3 Reversal Pulse Duty Width Setting Register             */
    
    struct {
      __IOM uint16_t P3REVLOW   : 5;            /*!< [4..0] P3REVLOW                                                           */
            uint16_t            : 3;
      __IOM uint16_t P3REVHIGH  : 5;            /*!< [12..8] P3REVHIGH                                                         */
            uint16_t            : 3;
    } P3RDUTYHL_b;
  } ;
  __IM  uint16_t  RESERVED14[9];
  
  union {
    __IOM uint16_t P5COR1ALL;                   /*!< (@ 0x000000E0) PM5 Correction Pulse 1 Full Length Setting Register        */
    
    struct {
      __IOM uint16_t P5CP1FL    : 9;            /*!< [8..0] P5CP1FL                                                            */
            uint16_t            : 4;
      __IOM uint16_t P5CP1VPM   : 3;            /*!< [15..13] P5CP1VPM                                                         */
    } P5COR1ALL_b;
  } ;
  
  union {
    __IOM uint16_t P5COR1P1SET;                 /*!< (@ 0x000000E2) PM5 Correction Pulse 1 P1 Setting Register                 */
    
    struct {
      __IOM uint16_t P5CP1P1    : 8;            /*!< [7..0] P5CP1P1                                                            */
            uint16_t            : 8;
    } P5COR1P1SET_b;
  } ;
  
  union {
    __IOM uint16_t P5COR1P2SET;                 /*!< (@ 0x000000E4) PM5 Correction Pulse 1 P2 Setting Register                 */
    
    struct {
      __IOM uint16_t P5CP1P2    : 8;            /*!< [7..0] P5CP1P2                                                            */
            uint16_t            : 8;
    } P5COR1P2SET_b;
  } ;
  
  union {
    __IOM uint16_t P5COR2ALL;                   /*!< (@ 0x000000E6) PM5 Correction Pulse 2 Full Length Setting Register        */
    
    struct {
      __IOM uint16_t P5CP2FL    : 9;            /*!< [8..0] P5CP2FL                                                            */
            uint16_t            : 4;
      __IOM uint16_t P5CP2VPM   : 3;            /*!< [15..13] P5CP2VPM                                                         */
    } P5COR2ALL_b;
  } ;
  
  union {
    __IOM uint16_t P5COR2P1SET;                 /*!< (@ 0x000000E8) PM5 Correction Pulse 2 P1 Setting Register                 */
    
    struct {
      __IOM uint16_t P5CP2P1    : 8;            /*!< [7..0] P5CP2P1                                                            */
            uint16_t            : 8;
    } P5COR2P1SET_b;
  } ;
  
  union {
    __IOM uint16_t P5COR2P2SET;                 /*!< (@ 0x000000EA) PM5 Correction Pulse 2 P2 Setting Register                 */
    
    struct {
      __IOM uint16_t P5CP2P2    : 8;            /*!< [7..0] P5CP2P2                                                            */
            uint16_t            : 8;
    } P5COR2P2SET_b;
  } ;
  __IM  uint16_t  RESERVED15[2];
  
  union {
    __IOM uint16_t P6COR1ALL;                   /*!< (@ 0x000000F0) PM6 Correction Pulse 1 Full Length Setting Register        */
    
    struct {
      __IOM uint16_t P6CP1FL    : 9;            /*!< [8..0] P6CP1FL                                                            */
            uint16_t            : 4;
      __IOM uint16_t P6CP1VPM   : 3;            /*!< [15..13] P6CP1VPM                                                         */
    } P6COR1ALL_b;
  } ;
  
  union {
    __IOM uint16_t P6COR1P1SET;                 /*!< (@ 0x000000F2) PM6 Correction Pulse 1 P1 Setting Register                 */
    
    struct {
      __IOM uint16_t P6CP1P1    : 8;            /*!< [7..0] P6CP1P1                                                            */
            uint16_t            : 8;
    } P6COR1P1SET_b;
  } ;
  
  union {
    __IOM uint16_t P6COR1P2SET;                 /*!< (@ 0x000000F4) PM6 Correction Pulse 1 P2 Setting Register                 */
    
    struct {
      __IOM uint16_t P6CP1P2    : 8;            /*!< [7..0] P6CP1P2                                                            */
            uint16_t            : 8;
    } P6COR1P2SET_b;
  } ;
  
  union {
    __IOM uint16_t P6COR2ALL;                   /*!< (@ 0x000000F6) PM6 Correction Pulse 2 Full Length Setting Register        */
    
    struct {
      __IOM uint16_t P6CP2FL    : 9;            /*!< [8..0] P6CP2FL                                                            */
            uint16_t            : 4;
      __IOM uint16_t P6CP2VPM   : 3;            /*!< [15..13] P6CP2VPM                                                         */
    } P6COR2ALL_b;
  } ;
  
  union {
    __IOM uint16_t P6COR2P1SET;                 /*!< (@ 0x000000F8) PM6 Correction Pulse 2 P1 Setting Register                 */
    
    struct {
      __IOM uint16_t P6CP2P1    : 8;            /*!< [7..0] P6CP2P1                                                            */
            uint16_t            : 8;
    } P6COR2P1SET_b;
  } ;
  
  union {
    __IOM uint16_t P6COR2P2SET;                 /*!< (@ 0x000000FA) PM6 Correction Pulse 2 P2 Setting Register                 */
    
    struct {
      __IOM uint16_t P6CP2P2    : 8;            /*!< [7..0] P6CP2P2                                                            */
            uint16_t            : 8;
    } P6COR2P2SET_b;
  } ;
} MTDV_Type;                                    /*!< Size = 252 (0xfc)                                                         */



/* =========================================================================================================================== */
/* ================                                            OSM                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Option Setting Memory (OSM)
  */

typedef struct {                                /*!< (@ 0x00000400) OSM Structure                                              */
  
  union {
    __IM  uint32_t OFS0;                        /*!< (@ 0x00000000) Option Function Select Register 0                          */
    
    struct {
            uint32_t            : 1;
      __IM  uint32_t IWDTSTRT   : 1;            /*!< [1..1] IWDT Start Mode Select                                             */
      __IM  uint32_t IWDTTOPS   : 2;            /*!< [3..2] IWDT Timeout Period Select                                         */
      __IM  uint32_t IWDTCKS    : 4;            /*!< [7..4] IWDT-Dedicated Clock Frequency Division Ratio Select               */
      __IM  uint32_t IWDTRPES   : 2;            /*!< [9..8] IWDT Window End Position Select                                    */
      __IM  uint32_t IWDTRPSS   : 2;            /*!< [11..10] IWDT Window Start Position Select                                */
      __IM  uint32_t IWDTRSTIRQS : 1;           /*!< [12..12] IWDT Reset Interrupt Request Select                              */
            uint32_t            : 1;
      __IM  uint32_t IWDTSTPCTL : 1;            /*!< [14..14] IWDT Stop Control                                                */
            uint32_t            : 1;
      __IM  uint32_t WDTCLKSEL  : 1;            /*!< [16..16] WDTCLKSEL                                                        */
      __IM  uint32_t WDTSTRT    : 1;            /*!< [17..17] WDT Start Mode Select                                            */
      __IM  uint32_t WDTTOPS    : 2;            /*!< [19..18] WDT Timeout Period Select                                        */
      __IM  uint32_t WDTCKS     : 4;            /*!< [23..20] WDT Clock Frequency Division Ratio Select                        */
      __IM  uint32_t WDTRPES    : 2;            /*!< [25..24] WDT Window End Position Select                                   */
      __IM  uint32_t WDTRPSS    : 2;            /*!< [27..26] WDT Window Start Position Select                                 */
      __IM  uint32_t WDTRSTIRQS : 1;            /*!< [28..28] WDT Reset Interrupt Request Select                               */
            uint32_t            : 1;
      __IM  uint32_t WDTSTPCTL  : 1;            /*!< [30..30] WDT Stop Control                                                 */
            uint32_t            : 1;
    } OFS0_b;
  } ;
  
  union {
    __IM  uint32_t OFS1;                        /*!< (@ 0x00000004) Option Function Select Register 1                          */
    
    struct {
            uint32_t            : 2;
      __IM  uint32_t LVDAS      : 1;            /*!< [2..2] Voltage Detection 0 Circuit Start                                  */
      __IM  uint32_t VDSEL      : 3;            /*!< [5..3] Voltage Detection 0 Level Select                                   */
            uint32_t            : 2;
      __IM  uint32_t HOCOEN     : 1;            /*!< [8..8] HOCO Oscillation Enable                                            */
      __IM  uint32_t HOCOFRQ    : 1;            /*!< [9..9] HOCO Frequency Setting                                             */
            uint32_t            : 6;
      __IM  uint32_t VBATSEL    : 1;            /*!< [16..16] VBATSEL                                                          */
            uint32_t            : 15;
    } OFS1_b;
  } ;
  
  union {
    __IM  uint32_t SECMPUPCS0;                  /*!< (@ 0x00000008) Security MPU Program Counter Start Address Register
                                                                    0                                                          */
    
    struct {
      __IM  uint32_t SECMPUPCS0 : 32;           /*!< [31..0] SECMPUPCS0                                                        */
    } SECMPUPCS0_b;
  } ;
  
  union {
    __IM  uint32_t SECMPUPCE0;                  /*!< (@ 0x0000000C) Security MPU Program Counter End Address Register
                                                                    0                                                          */
    
    struct {
      __IM  uint32_t SECMPUPCE0 : 32;           /*!< [31..0] SECMPUPCE0                                                        */
    } SECMPUPCE0_b;
  } ;
  
  union {
    __IM  uint32_t SECMPUPCS1;                  /*!< (@ 0x00000010) Security MPU Program Counter Start Address Register
                                                                    1                                                          */
    
    struct {
      __IM  uint32_t SECMPUPCS1 : 32;           /*!< [31..0] SECMPUPCS1                                                        */
    } SECMPUPCS1_b;
  } ;
  
  union {
    __IM  uint32_t SECMPUPCE1;                  /*!< (@ 0x00000014) Security MPU Program Counter End Address Register
                                                                    1                                                          */
    
    struct {
      __IM  uint32_t SECMPUPCE1 : 32;           /*!< [31..0] SECMPUPCE1                                                        */
    } SECMPUPCE1_b;
  } ;
  
  union {
    __IM  uint32_t SECMPUS0;                    /*!< (@ 0x00000018) Security MPU Region 0 Start Address Register               */
    
    struct {
      __IM  uint32_t SECMPUS0   : 32;           /*!< [31..0] SECMPUS0                                                          */
    } SECMPUS0_b;
  } ;
  
  union {
    __IM  uint32_t SECMPUE0;                    /*!< (@ 0x0000001C) Security MPU Region 0 End Address Register                 */
    
    struct {
      __IM  uint32_t SECMPUE0   : 32;           /*!< [31..0] SECMPUE0                                                          */
    } SECMPUE0_b;
  } ;
  
  union {
    __IM  uint32_t SECMPUS1;                    /*!< (@ 0x00000020) Security MPU Region 1 Start Address Register               */
    
    struct {
      __IM  uint32_t SECMPUS1   : 32;           /*!< [31..0] SECMPUS1                                                          */
    } SECMPUS1_b;
  } ;
  
  union {
    __IM  uint32_t SECMPUE1;                    /*!< (@ 0x00000024) Security MPU Region 1 End Address Register                 */
    
    struct {
      __IM  uint32_t SECMPUE1   : 32;           /*!< [31..0] SECMPUE1                                                          */
    } SECMPUE1_b;
  } ;
  
  union {
    __IM  uint32_t SECMPUS2;                    /*!< (@ 0x00000028) Security MPU Region 2 Start Address Register               */
    
    struct {
      __IM  uint32_t SECMPUS2   : 32;           /*!< [31..0] SECMPUS2                                                          */
    } SECMPUS2_b;
  } ;
  
  union {
    __IM  uint32_t SECMPUE2;                    /*!< (@ 0x0000002C) Security MPU Region 2 End Address Register                 */
    
    struct {
      __IM  uint32_t SECMPUE2   : 32;           /*!< [31..0] SECMPUE2                                                          */
    } SECMPUE2_b;
  } ;
  __IM  uint32_t  RESERVED[2];
  
  union {
    __IM  uint16_t SECMPUAC;                    /*!< (@ 0x00000038) Security MPU Access Control Register                       */
    
    struct {
      __IM  uint16_t DIS0       : 1;            /*!< [0..0] Region 0 Disable                                                   */
      __IM  uint16_t DIS1       : 1;            /*!< [1..1] Region 1 Disable                                                   */
      __IM  uint16_t DIS2       : 1;            /*!< [2..2] Region 2 Disable                                                   */
            uint16_t            : 5;
      __IM  uint16_t DISPC0     : 1;            /*!< [8..8] PC Region 0 Disable                                                */
      __IM  uint16_t DISPC1     : 1;            /*!< [9..9] PC Region 1 Disable                                                */
            uint16_t            : 6;
    } SECMPUAC_b;
  } ;
  __IM  uint16_t  RESERVED1;
  __IM  uint32_t  RESERVED2[4204357];
  
  union {
    __IM  uint32_t OSIS[4];                     /*!< (@ 0x01009D50) OCD/Serial Programmer ID Setting Register                  */
    
    struct {
      __IM  uint32_t OSIS       : 32;           /*!< [31..0] These fields hold the ID for use in ID authentication
                                                     for the OCD/serial programmer.                                            */
    } OSIS_b[4];
  } ;
  __IM  uint32_t  RESERVED3;
  
  union {
    __IM  uint32_t AWS;                         /*!< (@ 0x01009D64) Access Window Setting Register                             */
    
    struct {
      __IM  uint32_t FAWS       : 10;           /*!< [9..0] Access Window Start Block AddressThese bits specify the
                                                     start block address for the access window.They do not represent
                                                     the block number of the access window.The access window
                                                     is only valid in the program flash area. The block address
                                                     specifies the first address of the block and consists of
                                                     the address bits [21:10].                                                 */
            uint32_t            : 5;
      __IM  uint32_t FSPR       : 1;            /*!< [15..15] FSPR                                                             */
      __IM  uint32_t FAWE       : 10;           /*!< [25..16] Access Window End Block AddressThese bits specify the
                                                     end block address for the access window.They do not represent
                                                     the block number of the access window.The access window
                                                     is only valid in the program flash area. The end block
                                                     address for the access window is the next block to the
                                                     P/E acceptable region defined by the access window.The
                                                     block address specifies the first address of the block
                                                     and consists of the address bits [21:10].                                 */
            uint32_t            : 5;
      __IM  uint32_t BTFLG      : 1;            /*!< [31..31] BTFLG                                                            */
    } AWS_b;
  } ;
} OSM_Type;                                     /*!< Size = 16817512 (0x1009d68)                                               */



/* =========================================================================================================================== */
/* ================                                            PFS                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Pmn Pin Function Control Register (PFS)
  */

typedef struct {                                /*!< (@ 0x40040800) PFS Structure                                              */
  
  union {
    __IOM uint32_t P000PFS;                     /*!< (@ 0x00000000) P000 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P000PFS_b;
  } ;
  
  union {
    __IOM uint32_t P001PFS;                     /*!< (@ 0x00000004) P001 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P001PFS_b;
  } ;
  
  union {
    __IOM uint32_t P002PFS;                     /*!< (@ 0x00000008) P002 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P002PFS_b;
  } ;
  
  union {
    __IOM uint32_t P003PFS;                     /*!< (@ 0x0000000C) P003 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P003PFS_b;
  } ;
  
  union {
    __IOM uint32_t P004PFS;                     /*!< (@ 0x00000010) P004 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P004PFS_b;
  } ;
  
  union {
    __IOM uint32_t P005PFS;                     /*!< (@ 0x00000014) P005 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P005PFS_b;
  } ;
  
  union {
    __IOM uint32_t P006PFS;                     /*!< (@ 0x00000018) P006 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P006PFS_b;
  } ;
  
  union {
    __IOM uint32_t P007PFS;                     /*!< (@ 0x0000001C) P007 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P007PFS_b;
  } ;
  
  union {
    __IOM uint32_t P008PFS;                     /*!< (@ 0x00000020) P008 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P008PFS_b;
  } ;
  
  union {
    __IOM uint32_t P009PFS;                     /*!< (@ 0x00000024) P009 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P009PFS_b;
  } ;
  
  union {
    __IOM uint32_t P010PFS;                     /*!< (@ 0x00000028) P010 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P010PFS_b;
  } ;
  
  union {
    __IOM uint32_t P011PFS;                     /*!< (@ 0x0000002C) P011 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P011PFS_b;
  } ;
  
  union {
    __IOM uint32_t P012PFS;                     /*!< (@ 0x00000030) P012 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P012PFS_b;
  } ;
  
  union {
    __IOM uint32_t P013PFS;                     /*!< (@ 0x00000034) P013 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P013PFS_b;
  } ;
  
  union {
    __IOM uint32_t P014PFS;                     /*!< (@ 0x00000038) P014 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P014PFS_b;
  } ;
  
  union {
    __IOM uint32_t P015PFS;                     /*!< (@ 0x0000003C) P015 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P015PFS_b;
  } ;
  
  union {
    __IOM uint32_t P100PFS;                     /*!< (@ 0x00000040) P100 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P100PFS_b;
  } ;
  
  union {
    __IOM uint32_t P101PFS;                     /*!< (@ 0x00000044) P101 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P101PFS_b;
  } ;
  
  union {
    __IOM uint32_t P102PFS;                     /*!< (@ 0x00000048) P102 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P102PFS_b;
  } ;
  
  union {
    __IOM uint32_t P103PFS;                     /*!< (@ 0x0000004C) P103 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P103PFS_b;
  } ;
  
  union {
    __IOM uint32_t P104PFS;                     /*!< (@ 0x00000050) P104 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] This bit is read as 0. The write value should be 0.                */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P104PFS_b;
  } ;
  
  union {
    __IOM uint32_t P105PFS;                     /*!< (@ 0x00000054) P105 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] This bit is read as 0. The write value should be 0.                */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P105PFS_b;
  } ;
  
  union {
    __IOM uint32_t P106PFS;                     /*!< (@ 0x00000058) P106 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] This bit is read as 0. The write value should be 0.                */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P106PFS_b;
  } ;
  
  union {
    __IOM uint32_t P107PFS;                     /*!< (@ 0x0000005C) P107 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] This bit is read as 0. The write value should be 0.                */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P107PFS_b;
  } ;
  
  union {
    __IOM uint32_t P108PFS;                     /*!< (@ 0x00000060) P0108 Pin Function Control Register                        */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] This bit is read as 0. The write value should be 0.                */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P108PFS_b;
  } ;
  
  union {
    __IOM uint32_t P109PFS;                     /*!< (@ 0x00000064) P109 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] This bit is read as 0. The write value should be 0.                */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P109PFS_b;
  } ;
  
  union {
    __IOM uint32_t P110PFS;                     /*!< (@ 0x00000068) P110 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] This bit is read as 0. The write value should be 0.                */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P110PFS_b;
  } ;
  
  union {
    __IOM uint32_t P111PFS;                     /*!< (@ 0x0000006C) P111 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P111PFS_b;
  } ;
  
  union {
    __IOM uint32_t P112PFS;                     /*!< (@ 0x00000070) P112 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P112PFS_b;
  } ;
  
  union {
    __IOM uint32_t P113PFS;                     /*!< (@ 0x00000074) P113 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P113PFS_b;
  } ;
  
  union {
    __IOM uint32_t P114PFS;                     /*!< (@ 0x00000078) P114 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P114PFS_b;
  } ;
  __IM  uint32_t  RESERVED;
  
  union {
    __IOM uint32_t P200PFS;                     /*!< (@ 0x00000080) P200 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P200PFS_b;
  } ;
  
  union {
    __IOM uint32_t P201PFS;                     /*!< (@ 0x00000084) P201 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P201PFS_b;
  } ;
  
  union {
    __IOM uint32_t P202PFS;                     /*!< (@ 0x00000088) P202 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P202PFS_b;
  } ;
  
  union {
    __IOM uint32_t P203PFS;                     /*!< (@ 0x0000008C) P203 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P203PFS_b;
  } ;
  
  union {
    __IOM uint32_t P204PFS;                     /*!< (@ 0x00000090) P204 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P204PFS_b;
  } ;
  
  union {
    __IOM uint32_t P205PFS;                     /*!< (@ 0x00000094) P205 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P205PFS_b;
  } ;
  __IM  uint32_t  RESERVED1;
  
  union {
    __IOM uint32_t P207PFS;                     /*!< (@ 0x0000009C) P207 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] This bit is read as 0. The write value should be 0.                */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P207PFS_b;
  } ;
  __IM  uint32_t  RESERVED2[8];
  
  union {
    __IOM uint32_t P300PFS;                     /*!< (@ 0x000000C0) P300 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P300PFS_b;
  } ;
  
  union {
    __IOM uint32_t P301PFS;                     /*!< (@ 0x000000C4) P301 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P301PFS_b;
  } ;
  
  union {
    __IOM uint32_t P302PFS;                     /*!< (@ 0x000000C8) P302 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P302PFS_b;
  } ;
  
  union {
    __IOM uint32_t P303PFS;                     /*!< (@ 0x000000CC) P303 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P303PFS_b;
  } ;
  
  union {
    __IOM uint32_t P304PFS;                     /*!< (@ 0x000000D0) P304 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P304PFS_b;
  } ;
  
  union {
    __IOM uint32_t P305PFS;                     /*!< (@ 0x000000D4) P305 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P305PFS_b;
  } ;
  
  union {
    __IOM uint32_t P306PFS;                     /*!< (@ 0x000000D8) P306 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P306PFS_b;
  } ;
  
  union {
    __IOM uint32_t P307PFS;                     /*!< (@ 0x000000DC) P307 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P307PFS_b;
  } ;
  
  union {
    __IOM uint32_t P308PFS;                     /*!< (@ 0x000000E0) P308 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P308PFS_b;
  } ;
  
  union {
    __IOM uint32_t P309PFS;                     /*!< (@ 0x000000E4) P309 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P309PFS_b;
  } ;
  
  union {
    __IOM uint32_t P310PFS;                     /*!< (@ 0x000000E8) P310 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P310PFS_b;
  } ;
  
  union {
    __IOM uint32_t P311PFS;                     /*!< (@ 0x000000EC) P311 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P311PFS_b;
  } ;
  
  union {
    __IOM uint32_t P312PFS;                     /*!< (@ 0x000000F0) P312 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P312PFS_b;
  } ;
  
  union {
    __IOM uint32_t P313PFS;                     /*!< (@ 0x000000F4) P313 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P313PFS_b;
  } ;
  
  union {
    __IOM uint32_t P314PFS;                     /*!< (@ 0x000000F8) P314 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P314PFS_b;
  } ;
  
  union {
    __IOM uint32_t P315PFS;                     /*!< (@ 0x000000FC) P315 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P315PFS_b;
  } ;
  __IM  uint32_t  RESERVED3[4];
  
  union {
    __IOM uint32_t P404PFS;                     /*!< (@ 0x00000110) P404 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P404PFS_b;
  } ;
  
  union {
    __IOM uint32_t P405PFS;                     /*!< (@ 0x00000114) P405 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P405PFS_b;
  } ;
  
  union {
    __IOM uint32_t P406PFS;                     /*!< (@ 0x00000118) P406 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P406PFS_b;
  } ;
  
  union {
    __IOM uint32_t P407PFS;                     /*!< (@ 0x0000011C) P407 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P407PFS_b;
  } ;
  
  union {
    __IOM uint32_t P408PFS;                     /*!< (@ 0x00000120) P408 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P408PFS_b;
  } ;
  
  union {
    __IOM uint32_t P409PFS;                     /*!< (@ 0x00000124) P409 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P409PFS_b;
  } ;
  
  union {
    __IOM uint32_t P410PFS;                     /*!< (@ 0x00000128) P410 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P410PFS_b;
  } ;
  
  union {
    __IOM uint32_t P411PFS;                     /*!< (@ 0x0000012C) P411 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P411PFS_b;
  } ;
  
  union {
    __IOM uint32_t P412PFS;                     /*!< (@ 0x00000130) P412 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P412PFS_b;
  } ;
  
  union {
    __IOM uint32_t P413PFS;                     /*!< (@ 0x00000134) P413 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P413PFS_b;
  } ;
  __IM  uint32_t  RESERVED4[2];
  
  union {
    __IOM uint32_t P500PFS;                     /*!< (@ 0x00000140) P500 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P500PFS_b;
  } ;
  
  union {
    __IOM uint32_t P501PFS;                     /*!< (@ 0x00000144) P501 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P501PFS_b;
  } ;
  
  union {
    __IOM uint32_t P502PFS;                     /*!< (@ 0x00000148) P502 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P502PFS_b;
  } ;
  
  union {
    __IOM uint32_t P503PFS;                     /*!< (@ 0x0000014C) P503 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P503PFS_b;
  } ;
  
  union {
    __IOM uint32_t P504PFS;                     /*!< (@ 0x00000150) P504 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P504PFS_b;
  } ;
  
  union {
    __IOM uint32_t P505PFS;                     /*!< (@ 0x00000154) P505 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P505PFS_b;
  } ;
  
  union {
    __IOM uint32_t P506PFS;                     /*!< (@ 0x00000158) P506 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P506PFS_b;
  } ;
  
  union {
    __IOM uint32_t P507PFS;                     /*!< (@ 0x0000015C) P507 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P507PFS_b;
  } ;
  
  union {
    __IOM uint32_t P508PFS;                     /*!< (@ 0x00000160) P508 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P508PFS_b;
  } ;
  
  union {
    __IOM uint32_t P509PFS;                     /*!< (@ 0x00000164) P509 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P509PFS_b;
  } ;
  
  union {
    __IOM uint32_t P510PFS;                     /*!< (@ 0x00000168) P510 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P510PFS_b;
  } ;
  
  union {
    __IOM uint32_t P511PFS;                     /*!< (@ 0x0000016C) P511 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P511PFS_b;
  } ;
  
  union {
    __IOM uint32_t P512PFS;                     /*!< (@ 0x00000170) P512 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 2;
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P512PFS_b;
  } ;
  
  union {
    __IOM uint32_t P513PFS;                     /*!< (@ 0x00000174) P513 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 2;
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P513PFS_b;
  } ;
  
  union {
    __IOM uint32_t P514PFS;                     /*!< (@ 0x00000178) P514 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 2;
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P514PFS_b;
  } ;
  __IM  uint32_t  RESERVED5;
  
  union {
    __IOM uint32_t P600PFS;                     /*!< (@ 0x00000180) P600 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P600PFS_b;
  } ;
  
  union {
    __IOM uint32_t P601PFS;                     /*!< (@ 0x00000184) P601 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P601PFS_b;
  } ;
  
  union {
    __IOM uint32_t P602PFS;                     /*!< (@ 0x00000188) P602 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P602PFS_b;
  } ;
  
  union {
    __IOM uint32_t P603PFS;                     /*!< (@ 0x0000018C) P603 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P603PFS_b;
  } ;
  
  union {
    __IOM uint32_t P604PFS;                     /*!< (@ 0x00000190) P604 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P604PFS_b;
  } ;
  
  union {
    __IOM uint32_t P605PFS;                     /*!< (@ 0x00000194) P605 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P605PFS_b;
  } ;
  
  union {
    __IOM uint32_t P606PFS;                     /*!< (@ 0x00000198) P606 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P606PFS_b;
  } ;
  
  union {
    __IOM uint32_t P607PFS;                     /*!< (@ 0x0000019C) P607 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P607PFS_b;
  } ;
  
  union {
    __IOM uint32_t P608PFS;                     /*!< (@ 0x000001A0) P608 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P608PFS_b;
  } ;
  
  union {
    __IOM uint32_t P609PFS;                     /*!< (@ 0x000001A4) P609 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P609PFS_b;
  } ;
  
  union {
    __IOM uint32_t P610PFS;                     /*!< (@ 0x000001A8) P610 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P610PFS_b;
  } ;
  __IM  uint32_t  RESERVED6[5];
  
  union {
    __IOM uint32_t P700PFS;                     /*!< (@ 0x000001C0) P700 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P700PFS_b;
  } ;
  
  union {
    __IOM uint32_t P701PFS;                     /*!< (@ 0x000001C4) P701 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P701PFS_b;
  } ;
  
  union {
    __IOM uint32_t P702PFS;                     /*!< (@ 0x000001C8) P702 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P702PFS_b;
  } ;
  
  union {
    __IOM uint32_t P703PFS;                     /*!< (@ 0x000001CC) P703 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P703PFS_b;
  } ;
  
  union {
    __IOM uint32_t P704PFS;                     /*!< (@ 0x000001D0) P704 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P704PFS_b;
  } ;
  __IM  uint32_t  RESERVED7[11];
  
  union {
    __IOM uint32_t P800PFS;                     /*!< (@ 0x00000200) P800 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P800PFS_b;
  } ;
  
  union {
    __IOM uint32_t P801PFS;                     /*!< (@ 0x00000204) P801 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P801PFS_b;
  } ;
  
  union {
    __IOM uint32_t P802PFS;                     /*!< (@ 0x00000208) P802 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P802PFS_b;
  } ;
  
  union {
    __IOM uint32_t P803PFS;                     /*!< (@ 0x0000020C) P803 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P803PFS_b;
  } ;
  
  union {
    __IOM uint32_t P804PFS;                     /*!< (@ 0x00000210) P804 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P804PFS_b;
  } ;
  
  union {
    __IOM uint32_t P805PFS;                     /*!< (@ 0x00000214) P805 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P805PFS_b;
  } ;
  
  union {
    __IOM uint32_t P806PFS;                     /*!< (@ 0x00000218) P806 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P806PFS_b;
  } ;
  
  union {
    __IOM uint32_t P807PFS;                     /*!< (@ 0x0000021C) P807 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P807PFS_b;
  } ;
  
  union {
    __IOM uint32_t P808PFS;                     /*!< (@ 0x00000220) P808 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P808PFS_b;
  } ;
  
  union {
    __IOM uint32_t P809PFS;                     /*!< (@ 0x00000224) P809 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P809PFS_b;
  } ;
  
  union {
    __IOM uint32_t P810PFS;                     /*!< (@ 0x00000228) P810 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P810PFS_b;
  } ;
  
  union {
    __IOM uint32_t P811PFS;                     /*!< (@ 0x0000022C) P811 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P811PFS_b;
  } ;
  
  union {
    __IOM uint32_t P812PFS;                     /*!< (@ 0x00000230) P812 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P812PFS_b;
  } ;
  
  union {
    __IOM uint32_t P813PFS;                     /*!< (@ 0x00000234) P813 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P813PFS_b;
  } ;
  
  union {
    __IOM uint32_t P814PFS;                     /*!< (@ 0x00000238) P814 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P814PFS_b;
  } ;
  
  union {
    __IOM uint32_t P815PFS;                     /*!< (@ 0x0000023C) P815 Pin Function Control Register                         */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-up Control                                                    */
      __IOM uint32_t PDCR       : 1;            /*!< [5..5] PDCR                                                               */
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open Drain Control                                       */
      __IOM uint32_t PCODR      : 1;            /*!< [7..7] PCODR                                                              */
            uint32_t            : 2;
      __IOM uint32_t DSCR       : 2;            /*!< [11..10] Drive Strength Control Register                                  */
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] EOFR                                                             */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ input enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Port Function SelectThese bits select the peripheral
                                                     function. For individual pin functions, see the MPC table                 */
            uint32_t            : 3;
    } P815PFS_b;
  } ;
} PFS_Type;                                     /*!< Size = 576 (0x240)                                                        */



/* =========================================================================================================================== */
/* ================                                           PMISC                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Miscellaneous Port Control Register (PMISC)
  */

typedef struct {                                /*!< (@ 0x40040D00) PMISC Structure                                            */
  __IM  uint16_t  RESERVED;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t PWPR;                         /*!< (@ 0x00000003) Write-Protect Register                                     */
    
    struct {
            uint8_t             : 6;
      __IOM uint8_t PFSWE       : 1;            /*!< [6..6] PFS Register Write Enable                                          */
      __IOM uint8_t B0WI        : 1;            /*!< [7..7] PFSWE Bit Write Disable                                            */
    } PWPR_b;
  } ;
  __IM  uint16_t  RESERVED2[2];
  
  union {
    __IOM uint16_t INLATCH;                     /*!< (@ 0x00000008) Input PAD Latch Control Register                           */
    
    struct {
      __IOM uint16_t INLON0     : 1;            /*!< [0..0] INLON0                                                             */
      __IOM uint16_t INLON1     : 1;            /*!< [1..1] INLON1                                                             */
      __IOM uint16_t INLON2     : 1;            /*!< [2..2] INLON2                                                             */
      __IOM uint16_t INLON3     : 1;            /*!< [3..3] INLON3                                                             */
      __IOM uint16_t INLON4     : 1;            /*!< [4..4] INLON4                                                             */
      __IOM uint16_t INLON5     : 1;            /*!< [5..5] INLON5                                                             */
      __IOM uint16_t INLON6     : 1;            /*!< [6..6] INLON6                                                             */
      __IOM uint16_t INLON7     : 1;            /*!< [7..7] INLON7                                                             */
      __IOM uint16_t INLON8     : 1;            /*!< [8..8] INLON8                                                             */
            uint16_t            : 7;
    } INLATCH_b;
  } ;
  __IM  uint16_t  RESERVED3;
  
  union {
    __IOM uint16_t INLATCHRSTLV;                /*!< (@ 0x0000000C) Input PAD Latch Level Reset Control Register               */
    
    struct {
      __IOM uint16_t LEVRST0    : 1;            /*!< [0..0] LEVRST0                                                            */
      __IOM uint16_t LEVRST1    : 1;            /*!< [1..1] LEVRST1                                                            */
      __IOM uint16_t LEVRST2    : 1;            /*!< [2..2] LEVRST2                                                            */
      __IOM uint16_t LEVRST3    : 1;            /*!< [3..3] LEVRST3                                                            */
      __IOM uint16_t LEVRST4    : 1;            /*!< [4..4] LEVRST4                                                            */
      __IOM uint16_t LEVRST5    : 1;            /*!< [5..5] LEVRST5                                                            */
      __IOM uint16_t LEVRST6    : 1;            /*!< [6..6] LEVRST6                                                            */
      __IOM uint16_t LEVRST7    : 1;            /*!< [7..7] LEVRST7                                                            */
      __IOM uint16_t LEVRST8    : 1;            /*!< [8..8] LEVRST8                                                            */
            uint16_t            : 7;
    } INLATCHRSTLV_b;
  } ;
  __IM  uint16_t  RESERVED4;
  
  union {
    __IOM uint16_t INLATCHRSTPL;                /*!< (@ 0x00000010) Input PAD Latch Pulse Reset Control Register               */
    
    struct {
      __IOM uint16_t PLSRST0    : 1;            /*!< [0..0] PLSRST0                                                            */
      __IOM uint16_t PLSRST1    : 1;            /*!< [1..1] PLSRST1                                                            */
      __IOM uint16_t PLSRST2    : 1;            /*!< [2..2] PLSRST2                                                            */
      __IOM uint16_t PLSRST3    : 1;            /*!< [3..3] PLSRST3                                                            */
      __IOM uint16_t PLSRST4    : 1;            /*!< [4..4] PLSRST4                                                            */
      __IOM uint16_t PLSRST5    : 1;            /*!< [5..5] PLSRST5                                                            */
      __IOM uint16_t PLSRST6    : 1;            /*!< [6..6] PLSRST6                                                            */
      __IOM uint16_t PLSRST7    : 1;            /*!< [7..7] PLSRST7                                                            */
      __IOM uint16_t PLSRST8    : 1;            /*!< [8..8] PLSRST8                                                            */
            uint16_t            : 7;
    } INLATCHRSTPL_b;
  } ;
} PMISC_Type;                                   /*!< Size = 18 (0x12)                                                          */



/* =========================================================================================================================== */
/* ================                                            POE                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Port Output Enable Module for GPT (POE)
  */

typedef struct {                                /*!< (@ 0x40042000) POE Structure                                              */
  
  union {
    __IOM uint32_t POEGGA;                      /*!< (@ 0x00000000) POEG Group A Setting Register                              */
    
    struct {
      __IOM uint32_t PIDF       : 1;            /*!< [0..0] Port Input Detection Flag                                          */
      __IOM uint32_t IOCF       : 1;            /*!< [1..1] IOCF                                                               */
      __IOM uint32_t OSTPF      : 1;            /*!< [2..2] Oscillation Stop Detection Flag                                    */
      __IOM uint32_t SSF        : 1;            /*!< [3..3] Software Stop Flag                                                 */
      __IOM uint32_t PIDE       : 1;            /*!< [4..4] Port Input Detection EnableNote: Can be modified only
                                                     once after a reset.                                                       */
      __IOM uint32_t IOCE       : 1;            /*!< [5..5] Real Time Overcurrent EnableNote: Can be modified only
                                                     once after a reset.                                                       */
      __IOM uint32_t OSTPE      : 1;            /*!< [6..6] Oscillation Stop Detection EnableNote: Can be modified
                                                     only once after a reset.                                                  */
            uint32_t            : 1;
      __IOM uint32_t CDRE0      : 1;            /*!< [8..8] CDRE0                                                              */
            uint32_t            : 7;
      __IM  uint32_t ST         : 1;            /*!< [16..16] GTETRG Input Status Flag                                         */
            uint32_t            : 11;
      __IOM uint32_t INV        : 1;            /*!< [28..28] GTETRG Input Reverse                                             */
      __IOM uint32_t NFEN       : 1;            /*!< [29..29] Noise Filter Enable                                              */
      __IOM uint32_t NFCS       : 2;            /*!< [31..30] Noise Filter Clock Select                                        */
    } POEGGA_b;
  } ;
  __IM  uint32_t  RESERVED[63];
  
  union {
    __IOM uint32_t POEGGB;                      /*!< (@ 0x00000100) POEG Group B Setting Register                              */
    
    struct {
      __IOM uint32_t PIDF       : 1;            /*!< [0..0] Port Input Detection Flag                                          */
      __IOM uint32_t IOCF       : 1;            /*!< [1..1] IOCF                                                               */
      __IOM uint32_t OSTPF      : 1;            /*!< [2..2] Oscillation Stop Detection Flag                                    */
      __IOM uint32_t SSF        : 1;            /*!< [3..3] Software Stop Flag                                                 */
      __IOM uint32_t PIDE       : 1;            /*!< [4..4] Port Input Detection EnableNote: Can be modified only
                                                     once after a reset.                                                       */
      __IOM uint32_t IOCE       : 1;            /*!< [5..5] Real Time Overcurrent EnableNote: Can be modified only
                                                     once after a reset.                                                       */
      __IOM uint32_t OSTPE      : 1;            /*!< [6..6] Oscillation Stop Detection EnableNote: Can be modified
                                                     only once after a reset.                                                  */
            uint32_t            : 1;
      __IOM uint32_t CDRE0      : 1;            /*!< [8..8] CDRE0                                                              */
            uint32_t            : 7;
      __IM  uint32_t ST         : 1;            /*!< [16..16] GTETRG Input Status Flag                                         */
            uint32_t            : 11;
      __IOM uint32_t INV        : 1;            /*!< [28..28] GTETRG Input Reverse                                             */
      __IOM uint32_t NFEN       : 1;            /*!< [29..29] Noise Filter Enable                                              */
      __IOM uint32_t NFCS       : 2;            /*!< [31..30] Noise Filter Clock Select                                        */
    } POEGGB_b;
  } ;
} POE_Type;                                     /*!< Size = 260 (0x104)                                                        */



/* =========================================================================================================================== */
/* ================                                           PORT0                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Port 0 Control Registers (PORT0)
  */

typedef struct {                                /*!< (@ 0x40040000) PORT0 Structure                                            */
  
  union {
    union {
      __IOM uint32_t PCNTR1;                    /*!< (@ 0x00000000) Port Control Register 1                                    */
      
      struct {
        __IOM uint32_t PDR00    : 1;            /*!< [0..0] PDR00                                                              */
        __IOM uint32_t PDR01    : 1;            /*!< [1..1] PDR01                                                              */
        __IOM uint32_t PDR02    : 1;            /*!< [2..2] PDR02                                                              */
        __IOM uint32_t PDR03    : 1;            /*!< [3..3] PDR03                                                              */
        __IOM uint32_t PDR04    : 1;            /*!< [4..4] PDR04                                                              */
        __IOM uint32_t PDR05    : 1;            /*!< [5..5] PDR05                                                              */
        __IOM uint32_t PDR06    : 1;            /*!< [6..6] PDR06                                                              */
        __IOM uint32_t PDR07    : 1;            /*!< [7..7] PDR07                                                              */
        __IOM uint32_t PDR08    : 1;            /*!< [8..8] PDR08                                                              */
        __IOM uint32_t PDR09    : 1;            /*!< [9..9] PDR09                                                              */
        __IOM uint32_t PDR10    : 1;            /*!< [10..10] PDR10                                                            */
        __IOM uint32_t PDR11    : 1;            /*!< [11..11] PDR11                                                            */
        __IOM uint32_t PDR12    : 1;            /*!< [12..12] PDR12                                                            */
        __IOM uint32_t PDR13    : 1;            /*!< [13..13] PDR13                                                            */
        __IOM uint32_t PDR14    : 1;            /*!< [14..14] PDR14                                                            */
        __IOM uint32_t PDR15    : 1;            /*!< [15..15] PDR15                                                            */
        __IOM uint32_t PODR00   : 1;            /*!< [16..16] PODR00                                                           */
        __IOM uint32_t PODR01   : 1;            /*!< [17..17] PODR01                                                           */
        __IOM uint32_t PODR02   : 1;            /*!< [18..18] PODR02                                                           */
        __IOM uint32_t PODR03   : 1;            /*!< [19..19] PODR03                                                           */
        __IOM uint32_t PODR04   : 1;            /*!< [20..20] PODR04                                                           */
        __IOM uint32_t PODR05   : 1;            /*!< [21..21] PODR05                                                           */
        __IOM uint32_t PODR06   : 1;            /*!< [22..22] PODR06                                                           */
        __IOM uint32_t PODR07   : 1;            /*!< [23..23] PODR07                                                           */
        __IOM uint32_t PODR08   : 1;            /*!< [24..24] PODR08                                                           */
        __IOM uint32_t PODR09   : 1;            /*!< [25..25] PODR09                                                           */
        __IOM uint32_t PODR10   : 1;            /*!< [26..26] PODR10                                                           */
        __IOM uint32_t PODR11   : 1;            /*!< [27..27] PODR11                                                           */
        __IOM uint32_t PODR12   : 1;            /*!< [28..28] PODR12                                                           */
        __IOM uint32_t PODR13   : 1;            /*!< [29..29] PODR13                                                           */
        __IOM uint32_t PODR14   : 1;            /*!< [30..30] PODR14                                                           */
        __IOM uint32_t PODR15   : 1;            /*!< [31..31] PODR15                                                           */
      } PCNTR1_b;
    } ;
    
    struct {
      union {
        __IOM uint16_t PODR;                    /*!< (@ 0x00000000) Output data register                                       */
        
        struct {
          __IOM uint16_t PODR00 : 1;            /*!< [0..0] PODR00                                                             */
          __IOM uint16_t PODR01 : 1;            /*!< [1..1] PODR01                                                             */
          __IOM uint16_t PODR02 : 1;            /*!< [2..2] PODR02                                                             */
          __IOM uint16_t PODR03 : 1;            /*!< [3..3] PODR03                                                             */
          __IOM uint16_t PODR04 : 1;            /*!< [4..4] PODR04                                                             */
          __IOM uint16_t PODR05 : 1;            /*!< [5..5] PODR05                                                             */
          __IOM uint16_t PODR06 : 1;            /*!< [6..6] PODR06                                                             */
          __IOM uint16_t PODR07 : 1;            /*!< [7..7] PODR07                                                             */
          __IOM uint16_t PODR08 : 1;            /*!< [8..8] PODR08                                                             */
          __IOM uint16_t PODR09 : 1;            /*!< [9..9] PODR09                                                             */
          __IOM uint16_t PODR10 : 1;            /*!< [10..10] PODR10                                                           */
          __IOM uint16_t PODR11 : 1;            /*!< [11..11] PODR11                                                           */
          __IOM uint16_t PODR12 : 1;            /*!< [12..12] PODR12                                                           */
          __IOM uint16_t PODR13 : 1;            /*!< [13..13] PODR13                                                           */
          __IOM uint16_t PODR14 : 1;            /*!< [14..14] PODR14                                                           */
          __IOM uint16_t PODR15 : 1;            /*!< [15..15] PODR15                                                           */
        } PODR_b;
      } ;
      
      union {
        __IOM uint16_t PDR;                     /*!< (@ 0x00000002) Direction register                                         */
        
        struct {
          __IOM uint16_t PDR00  : 1;            /*!< [0..0] PDR00                                                              */
          __IOM uint16_t PDR01  : 1;            /*!< [1..1] PDR01                                                              */
          __IOM uint16_t PDR02  : 1;            /*!< [2..2] PDR02                                                              */
          __IOM uint16_t PDR03  : 1;            /*!< [3..3] PDR03                                                              */
          __IOM uint16_t PDR04  : 1;            /*!< [4..4] PDR04                                                              */
          __IOM uint16_t PDR05  : 1;            /*!< [5..5] PDR05                                                              */
          __IOM uint16_t PDR06  : 1;            /*!< [6..6] PDR06                                                              */
          __IOM uint16_t PDR07  : 1;            /*!< [7..7] PDR07                                                              */
          __IOM uint16_t PDR08  : 1;            /*!< [8..8] PDR08                                                              */
          __IOM uint16_t PDR09  : 1;            /*!< [9..9] PDR09                                                              */
          __IOM uint16_t PDR10  : 1;            /*!< [10..10] PDR10                                                            */
          __IOM uint16_t PDR11  : 1;            /*!< [11..11] PDR11                                                            */
          __IOM uint16_t PDR12  : 1;            /*!< [12..12] PDR12                                                            */
          __IOM uint16_t PDR13  : 1;            /*!< [13..13] PDR13                                                            */
          __IOM uint16_t PDR14  : 1;            /*!< [14..14] PDR14                                                            */
          __IOM uint16_t PDR15  : 1;            /*!< [15..15] PDR15                                                            */
        } PDR_b;
      } ;
    };
  };
  
  union {
    union {
      __IM  uint32_t PCNTR2;                    /*!< (@ 0x00000004) Port Control Register 2                                    */
      
      struct {
        __IM  uint32_t PIDR00   : 1;            /*!< [0..0] PIDR00                                                             */
        __IM  uint32_t PIDR01   : 1;            /*!< [1..1] PIDR01                                                             */
        __IM  uint32_t PIDR02   : 1;            /*!< [2..2] PIDR02                                                             */
        __IM  uint32_t PIDR03   : 1;            /*!< [3..3] PIDR03                                                             */
        __IM  uint32_t PIDR04   : 1;            /*!< [4..4] PIDR04                                                             */
        __IM  uint32_t PIDR05   : 1;            /*!< [5..5] PIDR05                                                             */
        __IM  uint32_t PIDR06   : 1;            /*!< [6..6] PIDR06                                                             */
        __IM  uint32_t PIDR07   : 1;            /*!< [7..7] PIDR07                                                             */
        __IM  uint32_t PIDR08   : 1;            /*!< [8..8] PIDR08                                                             */
        __IM  uint32_t PIDR09   : 1;            /*!< [9..9] PIDR09                                                             */
        __IM  uint32_t PIDR10   : 1;            /*!< [10..10] PIDR10                                                           */
        __IM  uint32_t PIDR11   : 1;            /*!< [11..11] PIDR11                                                           */
        __IM  uint32_t PIDR12   : 1;            /*!< [12..12] PIDR12                                                           */
        __IM  uint32_t PIDR13   : 1;            /*!< [13..13] PIDR13                                                           */
        __IM  uint32_t PIDR14   : 1;            /*!< [14..14] PIDR14                                                           */
        __IM  uint32_t PIDR15   : 1;            /*!< [15..15] PIDR15                                                           */
        __IM  uint32_t EIDR00   : 1;            /*!< [16..16] EIDR00                                                           */
        __IM  uint32_t EIDR01   : 1;            /*!< [17..17] EIDR01                                                           */
        __IM  uint32_t EIDR02   : 1;            /*!< [18..18] EIDR02                                                           */
        __IM  uint32_t EIDR03   : 1;            /*!< [19..19] EIDR03                                                           */
        __IM  uint32_t EIDR04   : 1;            /*!< [20..20] EIDR04                                                           */
        __IM  uint32_t EIDR05   : 1;            /*!< [21..21] EIDR05                                                           */
        __IM  uint32_t EIDR06   : 1;            /*!< [22..22] EIDR06                                                           */
        __IM  uint32_t EIDR07   : 1;            /*!< [23..23] EIDR07                                                           */
        __IM  uint32_t EIDR08   : 1;            /*!< [24..24] EIDR08                                                           */
        __IM  uint32_t EIDR09   : 1;            /*!< [25..25] EIDR09                                                           */
        __IM  uint32_t EIDR10   : 1;            /*!< [26..26] EIDR10                                                           */
        __IM  uint32_t EIDR11   : 1;            /*!< [27..27] EIDR11                                                           */
        __IM  uint32_t EIDR12   : 1;            /*!< [28..28] EIDR12                                                           */
        __IM  uint32_t EIDR13   : 1;            /*!< [29..29] EIDR13                                                           */
        __IM  uint32_t EIDR14   : 1;            /*!< [30..30] EIDR14                                                           */
        __IM  uint32_t EIDR15   : 1;            /*!< [31..31] EIDR15                                                           */
      } PCNTR2_b;
    } ;
    
    struct {
      __IM  uint16_t RESERVED;
      
      union {
        __IM  uint16_t PIDR;                    /*!< (@ 0x00000006) Input data register                                        */
        
        struct {
          __IM  uint16_t PIDR00 : 1;            /*!< [0..0] PIDR00                                                             */
          __IM  uint16_t PIDR01 : 1;            /*!< [1..1] PIDR01                                                             */
          __IM  uint16_t PIDR02 : 1;            /*!< [2..2] PIDR02                                                             */
          __IM  uint16_t PIDR03 : 1;            /*!< [3..3] PIDR03                                                             */
          __IM  uint16_t PIDR04 : 1;            /*!< [4..4] PIDR04                                                             */
          __IM  uint16_t PIDR05 : 1;            /*!< [5..5] PIDR05                                                             */
          __IM  uint16_t PIDR06 : 1;            /*!< [6..6] PIDR06                                                             */
          __IM  uint16_t PIDR07 : 1;            /*!< [7..7] PIDR07                                                             */
          __IM  uint16_t PIDR08 : 1;            /*!< [8..8] PIDR08                                                             */
          __IM  uint16_t PIDR09 : 1;            /*!< [9..9] PIDR09                                                             */
          __IM  uint16_t PIDR10 : 1;            /*!< [10..10] PIDR10                                                           */
          __IM  uint16_t PIDR11 : 1;            /*!< [11..11] PIDR11                                                           */
          __IM  uint16_t PIDR12 : 1;            /*!< [12..12] PIDR12                                                           */
          __IM  uint16_t PIDR13 : 1;            /*!< [13..13] PIDR13                                                           */
          __IM  uint16_t PIDR14 : 1;            /*!< [14..14] PIDR14                                                           */
          __IM  uint16_t PIDR15 : 1;            /*!< [15..15] PIDR15                                                           */
        } PIDR_b;
      } ;
    };
  };
  
  union {
    union {
      __OM  uint32_t PCNTR3;                    /*!< (@ 0x00000008) Port Control Register 3                                    */
      
      struct {
        __OM  uint32_t POSR00   : 1;            /*!< [0..0] POSR00                                                             */
        __OM  uint32_t POSR01   : 1;            /*!< [1..1] POSR01                                                             */
        __OM  uint32_t POSR02   : 1;            /*!< [2..2] POSR02                                                             */
        __OM  uint32_t POSR03   : 1;            /*!< [3..3] POSR03                                                             */
        __OM  uint32_t POSR04   : 1;            /*!< [4..4] POSR04                                                             */
        __OM  uint32_t POSR05   : 1;            /*!< [5..5] POSR05                                                             */
        __OM  uint32_t POSR06   : 1;            /*!< [6..6] POSR06                                                             */
        __OM  uint32_t POSR07   : 1;            /*!< [7..7] POSR07                                                             */
        __OM  uint32_t POSR08   : 1;            /*!< [8..8] POSR08                                                             */
        __OM  uint32_t POSR09   : 1;            /*!< [9..9] POSR09                                                             */
        __OM  uint32_t POSR10   : 1;            /*!< [10..10] POSR10                                                           */
        __OM  uint32_t POSR11   : 1;            /*!< [11..11] POSR11                                                           */
        __OM  uint32_t POSR12   : 1;            /*!< [12..12] POSR12                                                           */
        __OM  uint32_t POSR13   : 1;            /*!< [13..13] POSR13                                                           */
        __OM  uint32_t POSR14   : 1;            /*!< [14..14] POSR14                                                           */
        __OM  uint32_t POSR15   : 1;            /*!< [15..15] POSR15                                                           */
        __OM  uint32_t PORR00   : 1;            /*!< [16..16] PORR00                                                           */
        __OM  uint32_t PORR01   : 1;            /*!< [17..17] PORR01                                                           */
        __OM  uint32_t PORR02   : 1;            /*!< [18..18] PORR02                                                           */
        __OM  uint32_t PORR03   : 1;            /*!< [19..19] PORR03                                                           */
        __OM  uint32_t PORR04   : 1;            /*!< [20..20] PORR04                                                           */
        __OM  uint32_t PORR05   : 1;            /*!< [21..21] PORR05                                                           */
        __OM  uint32_t PORR06   : 1;            /*!< [22..22] PORR06                                                           */
        __OM  uint32_t PORR07   : 1;            /*!< [23..23] PORR07                                                           */
        __OM  uint32_t PORR08   : 1;            /*!< [24..24] PORR08                                                           */
        __OM  uint32_t PORR09   : 1;            /*!< [25..25] PORR09                                                           */
        __OM  uint32_t PORR10   : 1;            /*!< [26..26] PORR10                                                           */
        __OM  uint32_t PORR11   : 1;            /*!< [27..27] PORR11                                                           */
        __OM  uint32_t PORR12   : 1;            /*!< [28..28] PORR12                                                           */
        __OM  uint32_t PORR13   : 1;            /*!< [29..29] PORR13                                                           */
        __OM  uint32_t PORR14   : 1;            /*!< [30..30] PORR14                                                           */
        __OM  uint32_t PORR15   : 1;            /*!< [31..31] PORR15                                                           */
      } PCNTR3_b;
    } ;
    
    struct {
      union {
        __OM  uint16_t PORR;                    /*!< (@ 0x00000008) Output reset register                                      */
        
        struct {
          __OM  uint16_t PORR00 : 1;            /*!< [0..0] PORR00                                                             */
          __OM  uint16_t PORR01 : 1;            /*!< [1..1] PORR01                                                             */
          __OM  uint16_t PORR02 : 1;            /*!< [2..2] PORR02                                                             */
          __OM  uint16_t PORR03 : 1;            /*!< [3..3] PORR03                                                             */
          __OM  uint16_t PORR04 : 1;            /*!< [4..4] PORR04                                                             */
          __OM  uint16_t PORR05 : 1;            /*!< [5..5] PORR05                                                             */
          __OM  uint16_t PORR06 : 1;            /*!< [6..6] PORR06                                                             */
          __OM  uint16_t PORR07 : 1;            /*!< [7..7] PORR07                                                             */
          __OM  uint16_t PORR08 : 1;            /*!< [8..8] PORR08                                                             */
          __OM  uint16_t PORR09 : 1;            /*!< [9..9] PORR09                                                             */
          __OM  uint16_t PORR10 : 1;            /*!< [10..10] PORR10                                                           */
          __OM  uint16_t PORR11 : 1;            /*!< [11..11] PORR11                                                           */
          __OM  uint16_t PORR12 : 1;            /*!< [12..12] PORR12                                                           */
          __OM  uint16_t PORR13 : 1;            /*!< [13..13] PORR13                                                           */
          __OM  uint16_t PORR14 : 1;            /*!< [14..14] PORR14                                                           */
          __OM  uint16_t PORR15 : 1;            /*!< [15..15] PORR15                                                           */
        } PORR_b;
      } ;
      
      union {
        __OM  uint16_t POSR;                    /*!< (@ 0x0000000A) Output set register                                        */
        
        struct {
          __OM  uint16_t POSR00 : 1;            /*!< [0..0] POSR00                                                             */
          __OM  uint16_t POSR01 : 1;            /*!< [1..1] POSR01                                                             */
          __OM  uint16_t POSR02 : 1;            /*!< [2..2] POSR02                                                             */
          __OM  uint16_t POSR03 : 1;            /*!< [3..3] POSR03                                                             */
          __OM  uint16_t POSR04 : 1;            /*!< [4..4] POSR04                                                             */
          __OM  uint16_t POSR05 : 1;            /*!< [5..5] POSR05                                                             */
          __OM  uint16_t POSR06 : 1;            /*!< [6..6] POSR06                                                             */
          __OM  uint16_t POSR07 : 1;            /*!< [7..7] POSR07                                                             */
          __OM  uint16_t POSR08 : 1;            /*!< [8..8] POSR08                                                             */
          __OM  uint16_t POSR09 : 1;            /*!< [9..9] POSR09                                                             */
          __OM  uint16_t POSR10 : 1;            /*!< [10..10] POSR10                                                           */
          __OM  uint16_t POSR11 : 1;            /*!< [11..11] POSR11                                                           */
          __OM  uint16_t POSR12 : 1;            /*!< [12..12] POSR12                                                           */
          __OM  uint16_t POSR13 : 1;            /*!< [13..13] POSR13                                                           */
          __OM  uint16_t POSR14 : 1;            /*!< [14..14] POSR14                                                           */
          __OM  uint16_t POSR15 : 1;            /*!< [15..15] POSR15                                                           */
        } POSR_b;
      } ;
    };
  };
} PORT0_Type;                                   /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                           PORT2                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Port 2 Control Registers (PORT2)
  */

typedef struct {                                /*!< (@ 0x40040040) PORT2 Structure                                            */
  
  union {
    union {
      __IOM uint32_t PCNTR1;                    /*!< (@ 0x00000000) Port Control Register 1                                    */
      
      struct {
        __IOM uint32_t PDR00    : 1;            /*!< [0..0] PDR00                                                              */
        __IOM uint32_t PDR01    : 1;            /*!< [1..1] PDR01                                                              */
        __IOM uint32_t PDR02    : 1;            /*!< [2..2] PDR02                                                              */
        __IOM uint32_t PDR03    : 1;            /*!< [3..3] PDR03                                                              */
        __IOM uint32_t PDR04    : 1;            /*!< [4..4] PDR04                                                              */
        __IOM uint32_t PDR05    : 1;            /*!< [5..5] PDR05                                                              */
        __IOM uint32_t PDR06    : 1;            /*!< [6..6] PDR06                                                              */
        __IOM uint32_t PDR07    : 1;            /*!< [7..7] PDR07                                                              */
        __IOM uint32_t PDR08    : 1;            /*!< [8..8] PDR08                                                              */
        __IOM uint32_t PDR09    : 1;            /*!< [9..9] PDR09                                                              */
        __IOM uint32_t PDR10    : 1;            /*!< [10..10] PDR10                                                            */
        __IOM uint32_t PDR11    : 1;            /*!< [11..11] PDR11                                                            */
        __IOM uint32_t PDR12    : 1;            /*!< [12..12] PDR12                                                            */
        __IOM uint32_t PDR13    : 1;            /*!< [13..13] PDR13                                                            */
        __IOM uint32_t PDR14    : 1;            /*!< [14..14] PDR14                                                            */
        __IOM uint32_t PDR15    : 1;            /*!< [15..15] PDR15                                                            */
        __IOM uint32_t PODR00   : 1;            /*!< [16..16] PODR00                                                           */
        __IOM uint32_t PODR01   : 1;            /*!< [17..17] PODR01                                                           */
        __IOM uint32_t PODR02   : 1;            /*!< [18..18] PODR02                                                           */
        __IOM uint32_t PODR03   : 1;            /*!< [19..19] PODR03                                                           */
        __IOM uint32_t PODR04   : 1;            /*!< [20..20] PODR04                                                           */
        __IOM uint32_t PODR05   : 1;            /*!< [21..21] PODR05                                                           */
        __IOM uint32_t PODR06   : 1;            /*!< [22..22] PODR06                                                           */
        __IOM uint32_t PODR07   : 1;            /*!< [23..23] PODR07                                                           */
        __IOM uint32_t PODR08   : 1;            /*!< [24..24] PODR08                                                           */
        __IOM uint32_t PODR09   : 1;            /*!< [25..25] PODR09                                                           */
        __IOM uint32_t PODR10   : 1;            /*!< [26..26] PODR10                                                           */
        __IOM uint32_t PODR11   : 1;            /*!< [27..27] PODR11                                                           */
        __IOM uint32_t PODR12   : 1;            /*!< [28..28] PODR12                                                           */
        __IOM uint32_t PODR13   : 1;            /*!< [29..29] PODR13                                                           */
        __IOM uint32_t PODR14   : 1;            /*!< [30..30] PODR14                                                           */
        __IOM uint32_t PODR15   : 1;            /*!< [31..31] PODR15                                                           */
      } PCNTR1_b;
    } ;
    
    struct {
      union {
        __IOM uint16_t PODR;                    /*!< (@ 0x00000000) Output data register                                       */
        
        struct {
          __IOM uint16_t PODR00 : 1;            /*!< [0..0] PODR00                                                             */
          __IOM uint16_t PODR01 : 1;            /*!< [1..1] PODR01                                                             */
          __IOM uint16_t PODR02 : 1;            /*!< [2..2] PODR02                                                             */
          __IOM uint16_t PODR03 : 1;            /*!< [3..3] PODR03                                                             */
          __IOM uint16_t PODR04 : 1;            /*!< [4..4] PODR04                                                             */
          __IOM uint16_t PODR05 : 1;            /*!< [5..5] PODR05                                                             */
          __IOM uint16_t PODR06 : 1;            /*!< [6..6] PODR06                                                             */
          __IOM uint16_t PODR07 : 1;            /*!< [7..7] PODR07                                                             */
          __IOM uint16_t PODR08 : 1;            /*!< [8..8] PODR08                                                             */
          __IOM uint16_t PODR09 : 1;            /*!< [9..9] PODR09                                                             */
          __IOM uint16_t PODR10 : 1;            /*!< [10..10] PODR10                                                           */
          __IOM uint16_t PODR11 : 1;            /*!< [11..11] PODR11                                                           */
          __IOM uint16_t PODR12 : 1;            /*!< [12..12] PODR12                                                           */
          __IOM uint16_t PODR13 : 1;            /*!< [13..13] PODR13                                                           */
          __IOM uint16_t PODR14 : 1;            /*!< [14..14] PODR14                                                           */
          __IOM uint16_t PODR15 : 1;            /*!< [15..15] PODR15                                                           */
        } PODR_b;
      } ;
      
      union {
        __IOM uint16_t PDR;                     /*!< (@ 0x00000002) Direction register                                         */
        
        struct {
          __IOM uint16_t PDR00  : 1;            /*!< [0..0] PDR00                                                              */
          __IOM uint16_t PDR01  : 1;            /*!< [1..1] PDR01                                                              */
          __IOM uint16_t PDR02  : 1;            /*!< [2..2] PDR02                                                              */
          __IOM uint16_t PDR03  : 1;            /*!< [3..3] PDR03                                                              */
          __IOM uint16_t PDR04  : 1;            /*!< [4..4] PDR04                                                              */
          __IOM uint16_t PDR05  : 1;            /*!< [5..5] PDR05                                                              */
          __IOM uint16_t PDR06  : 1;            /*!< [6..6] PDR06                                                              */
          __IOM uint16_t PDR07  : 1;            /*!< [7..7] PDR07                                                              */
          __IOM uint16_t PDR08  : 1;            /*!< [8..8] PDR08                                                              */
          __IOM uint16_t PDR09  : 1;            /*!< [9..9] PDR09                                                              */
          __IOM uint16_t PDR10  : 1;            /*!< [10..10] PDR10                                                            */
          __IOM uint16_t PDR11  : 1;            /*!< [11..11] PDR11                                                            */
          __IOM uint16_t PDR12  : 1;            /*!< [12..12] PDR12                                                            */
          __IOM uint16_t PDR13  : 1;            /*!< [13..13] PDR13                                                            */
          __IOM uint16_t PDR14  : 1;            /*!< [14..14] PDR14                                                            */
          __IOM uint16_t PDR15  : 1;            /*!< [15..15] PDR15                                                            */
        } PDR_b;
      } ;
    };
  };
  
  union {
    union {
      __IM  uint32_t PCNTR2;                    /*!< (@ 0x00000004) Port Control Register 2                                    */
      
      struct {
        __IM  uint32_t PIDR00   : 1;            /*!< [0..0] PIDR00                                                             */
        __IM  uint32_t PIDR01   : 1;            /*!< [1..1] PIDR01                                                             */
        __IM  uint32_t PIDR02   : 1;            /*!< [2..2] PIDR02                                                             */
        __IM  uint32_t PIDR03   : 1;            /*!< [3..3] PIDR03                                                             */
        __IM  uint32_t PIDR04   : 1;            /*!< [4..4] PIDR04                                                             */
        __IM  uint32_t PIDR05   : 1;            /*!< [5..5] PIDR05                                                             */
        __IM  uint32_t PIDR06   : 1;            /*!< [6..6] PIDR06                                                             */
        __IM  uint32_t PIDR07   : 1;            /*!< [7..7] PIDR07                                                             */
        __IM  uint32_t PIDR08   : 1;            /*!< [8..8] PIDR08                                                             */
        __IM  uint32_t PIDR09   : 1;            /*!< [9..9] PIDR09                                                             */
        __IM  uint32_t PIDR10   : 1;            /*!< [10..10] PIDR10                                                           */
        __IM  uint32_t PIDR11   : 1;            /*!< [11..11] PIDR11                                                           */
        __IM  uint32_t PIDR12   : 1;            /*!< [12..12] PIDR12                                                           */
        __IM  uint32_t PIDR13   : 1;            /*!< [13..13] PIDR13                                                           */
        __IM  uint32_t PIDR14   : 1;            /*!< [14..14] PIDR14                                                           */
        __IM  uint32_t PIDR15   : 1;            /*!< [15..15] PIDR15                                                           */
        __IM  uint32_t EIDR00   : 1;            /*!< [16..16] EIDR00                                                           */
        __IM  uint32_t EIDR01   : 1;            /*!< [17..17] EIDR01                                                           */
        __IM  uint32_t EIDR02   : 1;            /*!< [18..18] EIDR02                                                           */
        __IM  uint32_t EIDR03   : 1;            /*!< [19..19] EIDR03                                                           */
        __IM  uint32_t EIDR04   : 1;            /*!< [20..20] EIDR04                                                           */
        __IM  uint32_t EIDR05   : 1;            /*!< [21..21] EIDR05                                                           */
        __IM  uint32_t EIDR06   : 1;            /*!< [22..22] EIDR06                                                           */
        __IM  uint32_t EIDR07   : 1;            /*!< [23..23] EIDR07                                                           */
        __IM  uint32_t EIDR08   : 1;            /*!< [24..24] EIDR08                                                           */
        __IM  uint32_t EIDR09   : 1;            /*!< [25..25] EIDR09                                                           */
        __IM  uint32_t EIDR10   : 1;            /*!< [26..26] EIDR10                                                           */
        __IM  uint32_t EIDR11   : 1;            /*!< [27..27] EIDR11                                                           */
        __IM  uint32_t EIDR12   : 1;            /*!< [28..28] EIDR12                                                           */
        __IM  uint32_t EIDR13   : 1;            /*!< [29..29] EIDR13                                                           */
        __IM  uint32_t EIDR14   : 1;            /*!< [30..30] EIDR14                                                           */
        __IM  uint32_t EIDR15   : 1;            /*!< [31..31] EIDR15                                                           */
      } PCNTR2_b;
    } ;
    
    struct {
      union {
        __IM  uint16_t EIDR;                    /*!< (@ 0x00000004) Input data register                                        */
        
        struct {
          __IM  uint16_t EIDR00 : 1;            /*!< [0..0] EIDR00                                                             */
          __IM  uint16_t EIDR01 : 1;            /*!< [1..1] EIDR01                                                             */
          __IM  uint16_t EIDR02 : 1;            /*!< [2..2] EIDR02                                                             */
          __IM  uint16_t EIDR03 : 1;            /*!< [3..3] EIDR03                                                             */
          __IM  uint16_t EIDR04 : 1;            /*!< [4..4] EIDR04                                                             */
          __IM  uint16_t EIDR05 : 1;            /*!< [5..5] EIDR05                                                             */
          __IM  uint16_t EIDR06 : 1;            /*!< [6..6] EIDR06                                                             */
          __IM  uint16_t EIDR07 : 1;            /*!< [7..7] EIDR07                                                             */
          __IM  uint16_t EIDR08 : 1;            /*!< [8..8] EIDR08                                                             */
          __IM  uint16_t EIDR09 : 1;            /*!< [9..9] EIDR09                                                             */
          __IM  uint16_t EIDR10 : 1;            /*!< [10..10] EIDR10                                                           */
          __IM  uint16_t EIDR11 : 1;            /*!< [11..11] EIDR11                                                           */
          __IM  uint16_t EIDR12 : 1;            /*!< [12..12] EIDR12                                                           */
          __IM  uint16_t EIDR13 : 1;            /*!< [13..13] EIDR13                                                           */
          __IM  uint16_t EIDR14 : 1;            /*!< [14..14] EIDR14                                                           */
          __IM  uint16_t EIDR15 : 1;            /*!< [15..15] EIDR15                                                           */
        } EIDR_b;
      } ;
      
      union {
        __IM  uint16_t PIDR;                    /*!< (@ 0x00000006) Input data register                                        */
        
        struct {
          __IM  uint16_t PIDR00 : 1;            /*!< [0..0] PIDR00                                                             */
          __IM  uint16_t PIDR01 : 1;            /*!< [1..1] PIDR01                                                             */
          __IM  uint16_t PIDR02 : 1;            /*!< [2..2] PIDR02                                                             */
          __IM  uint16_t PIDR03 : 1;            /*!< [3..3] PIDR03                                                             */
          __IM  uint16_t PIDR04 : 1;            /*!< [4..4] PIDR04                                                             */
          __IM  uint16_t PIDR05 : 1;            /*!< [5..5] PIDR05                                                             */
          __IM  uint16_t PIDR06 : 1;            /*!< [6..6] PIDR06                                                             */
          __IM  uint16_t PIDR07 : 1;            /*!< [7..7] PIDR07                                                             */
          __IM  uint16_t PIDR08 : 1;            /*!< [8..8] PIDR08                                                             */
          __IM  uint16_t PIDR09 : 1;            /*!< [9..9] PIDR09                                                             */
          __IM  uint16_t PIDR10 : 1;            /*!< [10..10] PIDR10                                                           */
          __IM  uint16_t PIDR11 : 1;            /*!< [11..11] PIDR11                                                           */
          __IM  uint16_t PIDR12 : 1;            /*!< [12..12] PIDR12                                                           */
          __IM  uint16_t PIDR13 : 1;            /*!< [13..13] PIDR13                                                           */
          __IM  uint16_t PIDR14 : 1;            /*!< [14..14] PIDR14                                                           */
          __IM  uint16_t PIDR15 : 1;            /*!< [15..15] PIDR15                                                           */
        } PIDR_b;
      } ;
    };
  };
  
  union {
    union {
      __OM  uint32_t PCNTR3;                    /*!< (@ 0x00000008) Port Control Register 3                                    */
      
      struct {
        __OM  uint32_t POSR00   : 1;            /*!< [0..0] POSR00                                                             */
        __OM  uint32_t POSR01   : 1;            /*!< [1..1] POSR01                                                             */
        __OM  uint32_t POSR02   : 1;            /*!< [2..2] POSR02                                                             */
        __OM  uint32_t POSR03   : 1;            /*!< [3..3] POSR03                                                             */
        __OM  uint32_t POSR04   : 1;            /*!< [4..4] POSR04                                                             */
        __OM  uint32_t POSR05   : 1;            /*!< [5..5] POSR05                                                             */
        __OM  uint32_t POSR06   : 1;            /*!< [6..6] POSR06                                                             */
        __OM  uint32_t POSR07   : 1;            /*!< [7..7] POSR07                                                             */
        __OM  uint32_t POSR08   : 1;            /*!< [8..8] POSR08                                                             */
        __OM  uint32_t POSR09   : 1;            /*!< [9..9] POSR09                                                             */
        __OM  uint32_t POSR10   : 1;            /*!< [10..10] POSR10                                                           */
        __OM  uint32_t POSR11   : 1;            /*!< [11..11] POSR11                                                           */
        __OM  uint32_t POSR12   : 1;            /*!< [12..12] POSR12                                                           */
        __OM  uint32_t POSR13   : 1;            /*!< [13..13] POSR13                                                           */
        __OM  uint32_t POSR14   : 1;            /*!< [14..14] POSR14                                                           */
        __OM  uint32_t POSR15   : 1;            /*!< [15..15] POSR15                                                           */
        __OM  uint32_t PORR00   : 1;            /*!< [16..16] PORR00                                                           */
        __OM  uint32_t PORR01   : 1;            /*!< [17..17] PORR01                                                           */
        __OM  uint32_t PORR02   : 1;            /*!< [18..18] PORR02                                                           */
        __OM  uint32_t PORR03   : 1;            /*!< [19..19] PORR03                                                           */
        __OM  uint32_t PORR04   : 1;            /*!< [20..20] PORR04                                                           */
        __OM  uint32_t PORR05   : 1;            /*!< [21..21] PORR05                                                           */
        __OM  uint32_t PORR06   : 1;            /*!< [22..22] PORR06                                                           */
        __OM  uint32_t PORR07   : 1;            /*!< [23..23] PORR07                                                           */
        __OM  uint32_t PORR08   : 1;            /*!< [24..24] PORR08                                                           */
        __OM  uint32_t PORR09   : 1;            /*!< [25..25] PORR09                                                           */
        __OM  uint32_t PORR10   : 1;            /*!< [26..26] PORR10                                                           */
        __OM  uint32_t PORR11   : 1;            /*!< [27..27] PORR11                                                           */
        __OM  uint32_t PORR12   : 1;            /*!< [28..28] PORR12                                                           */
        __OM  uint32_t PORR13   : 1;            /*!< [29..29] PORR13                                                           */
        __OM  uint32_t PORR14   : 1;            /*!< [30..30] PORR14                                                           */
        __OM  uint32_t PORR15   : 1;            /*!< [31..31] PORR15                                                           */
      } PCNTR3_b;
    } ;
    
    struct {
      union {
        __OM  uint16_t PORR;                    /*!< (@ 0x00000008) Output reset register                                      */
        
        struct {
          __OM  uint16_t PORR00 : 1;            /*!< [0..0] PORR00                                                             */
          __OM  uint16_t PORR01 : 1;            /*!< [1..1] PORR01                                                             */
          __OM  uint16_t PORR02 : 1;            /*!< [2..2] PORR02                                                             */
          __OM  uint16_t PORR03 : 1;            /*!< [3..3] PORR03                                                             */
          __OM  uint16_t PORR04 : 1;            /*!< [4..4] PORR04                                                             */
          __OM  uint16_t PORR05 : 1;            /*!< [5..5] PORR05                                                             */
          __OM  uint16_t PORR06 : 1;            /*!< [6..6] PORR06                                                             */
          __OM  uint16_t PORR07 : 1;            /*!< [7..7] PORR07                                                             */
          __OM  uint16_t PORR08 : 1;            /*!< [8..8] PORR08                                                             */
          __OM  uint16_t PORR09 : 1;            /*!< [9..9] PORR09                                                             */
          __OM  uint16_t PORR10 : 1;            /*!< [10..10] PORR10                                                           */
          __OM  uint16_t PORR11 : 1;            /*!< [11..11] PORR11                                                           */
          __OM  uint16_t PORR12 : 1;            /*!< [12..12] PORR12                                                           */
          __OM  uint16_t PORR13 : 1;            /*!< [13..13] PORR13                                                           */
          __OM  uint16_t PORR14 : 1;            /*!< [14..14] PORR14                                                           */
          __OM  uint16_t PORR15 : 1;            /*!< [15..15] PORR15                                                           */
        } PORR_b;
      } ;
      
      union {
        __OM  uint16_t POSR;                    /*!< (@ 0x0000000A) Output set register                                        */
        
        struct {
          __OM  uint16_t POSR00 : 1;            /*!< [0..0] POSR00                                                             */
          __OM  uint16_t POSR01 : 1;            /*!< [1..1] POSR01                                                             */
          __OM  uint16_t POSR02 : 1;            /*!< [2..2] POSR02                                                             */
          __OM  uint16_t POSR03 : 1;            /*!< [3..3] POSR03                                                             */
          __OM  uint16_t POSR04 : 1;            /*!< [4..4] POSR04                                                             */
          __OM  uint16_t POSR05 : 1;            /*!< [5..5] POSR05                                                             */
          __OM  uint16_t POSR06 : 1;            /*!< [6..6] POSR06                                                             */
          __OM  uint16_t POSR07 : 1;            /*!< [7..7] POSR07                                                             */
          __OM  uint16_t POSR08 : 1;            /*!< [8..8] POSR08                                                             */
          __OM  uint16_t POSR09 : 1;            /*!< [9..9] POSR09                                                             */
          __OM  uint16_t POSR10 : 1;            /*!< [10..10] POSR10                                                           */
          __OM  uint16_t POSR11 : 1;            /*!< [11..11] POSR11                                                           */
          __OM  uint16_t POSR12 : 1;            /*!< [12..12] POSR12                                                           */
          __OM  uint16_t POSR13 : 1;            /*!< [13..13] POSR13                                                           */
          __OM  uint16_t POSR14 : 1;            /*!< [14..14] POSR14                                                           */
          __OM  uint16_t POSR15 : 1;            /*!< [15..15] POSR15                                                           */
        } POSR_b;
      } ;
    };
  };
  
  union {
    union {
      __IOM uint32_t PCNTR4;                    /*!< (@ 0x0000000C) Port Control Register 4                                    */
      
      struct {
        __IOM uint32_t EOSR00   : 1;            /*!< [0..0] EOSR00                                                             */
        __IOM uint32_t EOSR01   : 1;            /*!< [1..1] EOSR01                                                             */
        __IOM uint32_t EOSR02   : 1;            /*!< [2..2] EOSR02                                                             */
        __IOM uint32_t EOSR03   : 1;            /*!< [3..3] EOSR03                                                             */
        __IOM uint32_t EOSR04   : 1;            /*!< [4..4] EOSR04                                                             */
        __IOM uint32_t EOSR05   : 1;            /*!< [5..5] EOSR05                                                             */
        __IOM uint32_t EOSR06   : 1;            /*!< [6..6] EOSR06                                                             */
        __IOM uint32_t EOSR07   : 1;            /*!< [7..7] EOSR07                                                             */
        __IOM uint32_t EOSR08   : 1;            /*!< [8..8] EOSR08                                                             */
        __IOM uint32_t EOSR09   : 1;            /*!< [9..9] EOSR09                                                             */
        __IOM uint32_t EOSR10   : 1;            /*!< [10..10] EOSR10                                                           */
        __IOM uint32_t EOSR11   : 1;            /*!< [11..11] EOSR11                                                           */
        __IOM uint32_t EOSR12   : 1;            /*!< [12..12] EOSR12                                                           */
        __IOM uint32_t EOSR13   : 1;            /*!< [13..13] EOSR13                                                           */
        __IOM uint32_t EOSR14   : 1;            /*!< [14..14] EOSR14                                                           */
        __IOM uint32_t EOSR15   : 1;            /*!< [15..15] EOSR15                                                           */
        __IOM uint32_t EORR00   : 1;            /*!< [16..16] EORR00                                                           */
        __IOM uint32_t EORR01   : 1;            /*!< [17..17] EORR01                                                           */
        __IOM uint32_t EORR02   : 1;            /*!< [18..18] EORR02                                                           */
        __IOM uint32_t EORR03   : 1;            /*!< [19..19] EORR03                                                           */
        __IOM uint32_t EORR04   : 1;            /*!< [20..20] EORR04                                                           */
        __IOM uint32_t EORR05   : 1;            /*!< [21..21] EORR05                                                           */
        __IOM uint32_t EORR06   : 1;            /*!< [22..22] EORR06                                                           */
        __IOM uint32_t EORR07   : 1;            /*!< [23..23] EORR07                                                           */
        __IOM uint32_t EORR08   : 1;            /*!< [24..24] EORR08                                                           */
        __IOM uint32_t EORR09   : 1;            /*!< [25..25] EORR09                                                           */
        __IOM uint32_t EORR10   : 1;            /*!< [26..26] EORR10                                                           */
        __IOM uint32_t EORR11   : 1;            /*!< [27..27] EORR11                                                           */
        __IOM uint32_t EORR12   : 1;            /*!< [28..28] EORR12                                                           */
        __IOM uint32_t EORR13   : 1;            /*!< [29..29] EORR13                                                           */
        __IOM uint32_t EORR14   : 1;            /*!< [30..30] EORR14                                                           */
        __IOM uint32_t EORR15   : 1;            /*!< [31..31] EORR15                                                           */
      } PCNTR4_b;
    } ;
    
    struct {
      union {
        __IOM uint16_t EORR;                    /*!< (@ 0x0000000C) Output reset register                                      */
        
        struct {
          __IOM uint16_t EORR00 : 1;            /*!< [0..0] EORR00                                                             */
          __IOM uint16_t EORR01 : 1;            /*!< [1..1] EORR01                                                             */
          __IOM uint16_t EORR02 : 1;            /*!< [2..2] EORR02                                                             */
          __IOM uint16_t EORR03 : 1;            /*!< [3..3] EORR03                                                             */
          __IOM uint16_t EORR04 : 1;            /*!< [4..4] EORR04                                                             */
          __IOM uint16_t EORR05 : 1;            /*!< [5..5] EORR05                                                             */
          __IOM uint16_t EORR06 : 1;            /*!< [6..6] EORR06                                                             */
          __IOM uint16_t EORR07 : 1;            /*!< [7..7] EORR07                                                             */
          __IOM uint16_t EORR08 : 1;            /*!< [8..8] EORR08                                                             */
          __IOM uint16_t EORR09 : 1;            /*!< [9..9] EORR09                                                             */
          __IOM uint16_t EORR10 : 1;            /*!< [10..10] EORR10                                                           */
          __IOM uint16_t EORR11 : 1;            /*!< [11..11] EORR11                                                           */
          __IOM uint16_t EORR12 : 1;            /*!< [12..12] EORR12                                                           */
          __IOM uint16_t EORR13 : 1;            /*!< [13..13] EORR13                                                           */
          __IOM uint16_t EORR14 : 1;            /*!< [14..14] EORR14                                                           */
          __IOM uint16_t EORR15 : 1;            /*!< [15..15] EORR15                                                           */
        } EORR_b;
      } ;
      
      union {
        __IOM uint16_t EOSR;                    /*!< (@ 0x0000000E) Output set register                                        */
        
        struct {
          __IOM uint16_t EOSR00 : 1;            /*!< [0..0] EOSR00                                                             */
          __IOM uint16_t EOSR01 : 1;            /*!< [1..1] EOSR01                                                             */
          __IOM uint16_t EOSR02 : 1;            /*!< [2..2] EOSR02                                                             */
          __IOM uint16_t EOSR03 : 1;            /*!< [3..3] EOSR03                                                             */
          __IOM uint16_t EOSR04 : 1;            /*!< [4..4] EOSR04                                                             */
          __IOM uint16_t EOSR05 : 1;            /*!< [5..5] EOSR05                                                             */
          __IOM uint16_t EOSR06 : 1;            /*!< [6..6] EOSR06                                                             */
          __IOM uint16_t EOSR07 : 1;            /*!< [7..7] EOSR07                                                             */
          __IOM uint16_t EOSR08 : 1;            /*!< [8..8] EOSR08                                                             */
          __IOM uint16_t EOSR09 : 1;            /*!< [9..9] EOSR09                                                             */
          __IOM uint16_t EOSR10 : 1;            /*!< [10..10] EOSR10                                                           */
          __IOM uint16_t EOSR11 : 1;            /*!< [11..11] EOSR11                                                           */
          __IOM uint16_t EOSR12 : 1;            /*!< [12..12] EOSR12                                                           */
          __IOM uint16_t EOSR13 : 1;            /*!< [13..13] EOSR13                                                           */
          __IOM uint16_t EOSR14 : 1;            /*!< [14..14] EOSR14                                                           */
          __IOM uint16_t EOSR15 : 1;            /*!< [15..15] EOSR15                                                           */
        } EOSR_b;
      } ;
    };
  };
} PORT2_Type;                                   /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                           QSPI                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Quad Serial Peripheral Interface (QSPI)
  */

typedef struct {                                /*!< (@ 0x64000000) QSPI Structure                                             */
  
  union {
    __IOM uint32_t SFMSMD;                      /*!< (@ 0x00000000) Transfer Mode Control Register                             */
    
    struct {
      __IOM uint32_t SFMRM      : 3;            /*!< [2..0] Serial interface read mode select                                  */
            uint32_t            : 1;
      __IOM uint32_t SFMSE      : 2;            /*!< [5..4] QSSL extension function select after SPI bus access                */
      __IOM uint32_t SFMPFE     : 1;            /*!< [6..6] Prefetch function select                                           */
      __IOM uint32_t SFMPAE     : 1;            /*!< [7..7] Function select for stopping prefetch at locations other
                                                     than on byte boundaries                                                   */
      __IOM uint32_t SFMMD3     : 1;            /*!< [8..8] SPI mode select. An initial value is determined by input
                                                     to CFGMD3                                                                 */
      __IOM uint32_t SFMOEX     : 1;            /*!< [9..9] Extension select for the I/O buffer output enable signal
                                                     for the serial interface                                                  */
            uint32_t            : 5;
      __IOM uint32_t SFMCCE     : 1;            /*!< [15..15] Read instruction code select                                     */
            uint32_t            : 16;
    } SFMSMD_b;
  } ;
  
  union {
    __IOM uint32_t SFMSSC;                      /*!< (@ 0x00000004) Clock Control Register                                     */
    
    struct {
      __IOM uint32_t SFMSW      : 4;            /*!< [3..0] Minimum high-level width select for QSSL signal                    */
      __IOM uint32_t SFMSHD     : 1;            /*!< [4..4] QSSL signal release timing select                                  */
      __IOM uint32_t SFMSLD     : 1;            /*!< [5..5] QSSL signal output timing select                                   */
            uint32_t            : 26;
    } SFMSSC_b;
  } ;
  
  union {
    __IOM uint32_t SFMSKC;                      /*!< (@ 0x00000008) Clock Control Register                                     */
    
    struct {
      __IOM uint32_t SFMDV      : 5;            /*!< [4..0] Serial interface reference cycle select (pay attention
                                                     to the irregularity)                                                      */
      __IOM uint32_t SFMDTY     : 1;            /*!< [5..5] Duty ratio correction function select for the QSPCLK
                                                     signal                                                                    */
            uint32_t            : 26;
    } SFMSKC_b;
  } ;
  
  union {
    __IM  uint32_t SFMSST;                      /*!< (@ 0x0000000C) Status Register                                            */
    
    struct {
      __IM  uint32_t PFCNT      : 5;            /*!< [4..0] Number of bytes of prefetched data                                 */
            uint32_t            : 1;
      __IM  uint32_t PFFUL      : 1;            /*!< [6..6] Prefetch buffer state                                              */
      __IM  uint32_t PFOFF      : 1;            /*!< [7..7] Prefetch function operation state                                  */
            uint32_t            : 24;
    } SFMSST_b;
  } ;
  
  union {
    __IOM uint32_t SFMCOM;                      /*!< (@ 0x00000010) Communication Port Register                                */
    
    struct {
      __IOM uint32_t SFMD       : 8;            /*!< [7..0] Port for direct communication with the SPI busInput to
                                                     and output from this port is converted to an SPI bus cycle.This
                                                     port is accessible in the direct communication mode, when
                                                     DCOM = 1. Access to this port is ignored in the ROM access
                                                     mode.                                                                     */
            uint32_t            : 24;
    } SFMCOM_b;
  } ;
  
  union {
    __IOM uint32_t SFMCMD;                      /*!< (@ 0x00000014) Communication Mode Register                                */
    
    struct {
      __IOM uint32_t DCOM       : 1;            /*!< [0..0] Mode select for communication with the SPI bus                     */
            uint32_t            : 31;
    } SFMCMD_b;
  } ;
  
  union {
    __IOM uint32_t SFMCST;                      /*!< (@ 0x00000018) Communication Status Register                              */
    
    struct {
      __IM  uint32_t COMBSY     : 1;            /*!< [0..0] SPI bus cycle completion state in direct communication             */
            uint32_t            : 6;
      __IOM uint32_t EROMR      : 1;            /*!< [7..7] ROM access detection status in direct communication mode           */
            uint32_t            : 24;
    } SFMCST_b;
  } ;
  __IM  uint32_t  RESERVED;
  
  union {
    __IOM uint32_t SFMSIC;                      /*!< (@ 0x00000020) Instruction Code Register                                  */
    
    struct {
      __IOM uint32_t SFMCIC     : 8;            /*!< [7..0] Serial flash instruction code to substitute                        */
            uint32_t            : 24;
    } SFMSIC_b;
  } ;
  
  union {
    __IOM uint32_t SFMSAC;                      /*!< (@ 0x00000024) Address Mode Control Register                              */
    
    struct {
      __IOM uint32_t SFMAS      : 2;            /*!< [1..0] Number of address bytes select for the serial interface            */
            uint32_t            : 2;
      __IOM uint32_t SFM4BC     : 1;            /*!< [4..4] Default instruction code select, when serial interface
                                                     address width is 4 bytes                                                  */
            uint32_t            : 27;
    } SFMSAC_b;
  } ;
  
  union {
    __IOM uint32_t SFMSDC;                      /*!< (@ 0x00000028) Dummy Cycle Control Registe                                */
    
    struct {
      __IOM uint32_t SFMDN      : 4;            /*!< [3..0] Number of dummy cycles select for Fast Read instructions           */
            uint32_t            : 2;
      __IM  uint32_t SFMXST     : 1;            /*!< [6..6] XIP mode status                                                    */
      __IOM uint32_t SFMXEN     : 1;            /*!< [7..7] XIP mode permission                                                */
      __IOM uint32_t SFMXD      : 8;            /*!< [15..8] Mode data for serial flash(control XIP mode)                      */
            uint32_t            : 16;
    } SFMSDC_b;
  } ;
  __IM  uint32_t  RESERVED1;
  
  union {
    __IOM uint32_t SFMSPC;                      /*!< (@ 0x00000030) SPI Protocol Control Register                              */
    
    struct {
      __IOM uint32_t SFMSPI     : 2;            /*!< [1..0] SPI protocol select                                                */
            uint32_t            : 2;
      __IOM uint32_t SFMSDE     : 1;            /*!< [4..4] Minimum time select for input output switch, when dual
                                                     SPI protocol or quad SPI protocol is selected and in standard
                                                     read mode                                                                 */
            uint32_t            : 27;
    } SFMSPC_b;
  } ;
  
  union {
    __IOM uint32_t SFMPMD;                      /*!< (@ 0x00000034) Port Control Register                                      */
    
    struct {
            uint32_t            : 2;
      __IOM uint32_t SFMWPL     : 1;            /*!< [2..2] WP pin specification                                               */
            uint32_t            : 29;
    } SFMPMD_b;
  } ;
  __IM  uint32_t  RESERVED2[499];
  
  union {
    __IOM uint32_t SFMCNT1;                     /*!< (@ 0x00000804) External QSPI Address Register                             */
    
    struct {
            uint32_t            : 26;
      __IOM uint32_t QSPI_EXT   : 6;            /*!< [31..26] Bank switching address.When accessing from 6000 0000h
                                                     to 63FF FFFFh, address bus is set from QSPI_EXT[5:0] to
                                                     upper 6 bits of internal bus address.                                     */
    } SFMCNT1_b;
  } ;
} QSPI_Type;                                    /*!< Size = 2056 (0x808)                                                       */



/* =========================================================================================================================== */
/* ================                                           R12DA                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief 12-bit D/A converter (R12DA)
  */

typedef struct {                                /*!< (@ 0x4005E000) R12DA Structure                                            */
  
  union {
    __IOM uint16_t DADR0;                       /*!< (@ 0x00000000) D/A Data Register 0                                        */
    
    struct {
      __IOM uint16_t DADR0      : 16;           /*!< [15..0] D/A Data RegisterNOTE: When DADPR.DPSEL = 0, the high-order
                                                     4 bits are fixed to 0: right justified format. When DADPR.DPSEL
                                                     = 1, the low-order 4 bits are fixed to 0: left justified
                                                     format.                                                                   */
    } DADR0_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint8_t DACR;                         /*!< (@ 0x00000004) D/A Control Register                                       */
    
    struct {
            uint8_t             : 6;
      __IOM uint8_t DAOE0       : 1;            /*!< [6..6] D/A Output Enable 0                                                */
            uint8_t             : 1;
    } DACR_b;
  } ;
  
  union {
    __IOM uint8_t DADPR;                        /*!< (@ 0x00000005) DADR0 Format Select Register                               */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t DPSEL       : 1;            /*!< [7..7] DADRm Format Select                                                */
    } DADPR_b;
  } ;
  __IM  uint16_t  RESERVED1;
  
  union {
    __IOM uint8_t DAAMPCR;                      /*!< (@ 0x00000008) DAAMPCR                                                    */
    
    struct {
            uint8_t             : 6;
      __IOM uint8_t DAAMP0      : 1;            /*!< [6..6] DAAMP0                                                             */
            uint8_t             : 1;
    } DAAMPCR_b;
  } ;
  __IM  uint8_t   RESERVED2;
  __IM  uint16_t  RESERVED3;
} R12DA_Type;                                   /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Realtime Clock (RTC)
  */

typedef struct {                                /*!< (@ 0x40044000) RTC Structure                                              */
  
  union {
    __IM  uint8_t R64CNT;                       /*!< (@ 0x00000000) 64-Hz Counter                                              */
    
    struct {
      __IM  uint8_t F64HZ       : 1;            /*!< [0..0] 64Hz                                                               */
      __IM  uint8_t F32HZ       : 1;            /*!< [1..1] 32Hz                                                               */
      __IM  uint8_t F16HZ       : 1;            /*!< [2..2] 16Hz                                                               */
      __IM  uint8_t F8HZ        : 1;            /*!< [3..3] 8Hz                                                                */
      __IM  uint8_t F4HZ        : 1;            /*!< [4..4] 4Hz                                                                */
      __IM  uint8_t F2HZ        : 1;            /*!< [5..5] 2Hz                                                                */
      __IM  uint8_t F1HZ        : 1;            /*!< [6..6] 1Hz                                                                */
            uint8_t             : 1;
    } R64CNT_b;
  } ;
  __IM  uint8_t   RESERVED;
  
  union {
    union {
      __IOM uint8_t RSECCNT;                    /*!< (@ 0x00000002) Second Counter                                             */
      
      struct {
        __IOM uint8_t SEC1      : 4;            /*!< [3..0] 1-Second Count Counts from 0 to 9 every second. When
                                                     a carry is generated, 1 is added to the tens place.                       */
        __IOM uint8_t SEC10     : 3;            /*!< [6..4] 10-Second Count Counts from 0 to 5 for 60-second counting.         */
              uint8_t           : 1;
      } RSECCNT_b;
    } ;
    
    union {
      __IOM uint8_t BCNT0;                      /*!< (@ 0x00000002) Binary Counter 0                                           */
      
      struct {
        __IOM uint8_t BCNT0     : 8;            /*!< [7..0] The BCNT0 counter is a readable/writable 32-bit binary
                                                     counter b7 to b0.                                                         */
      } BCNT0_b;
    } ;
  };
  __IM  uint8_t   RESERVED1;
  
  union {
    union {
      __IOM uint8_t RMINCNT;                    /*!< (@ 0x00000004) Minute Counter                                             */
      
      struct {
        __IOM uint8_t MIN1      : 4;            /*!< [3..0] 1-Minute Count Counts from 0 to 9 every minute. When
                                                     a carry is generated, 1 is added to the tens place.                       */
        __IOM uint8_t MIN10     : 3;            /*!< [6..4] 10-Minute Count Counts from 0 to 5 for 60-minute counting.         */
              uint8_t           : 1;
      } RMINCNT_b;
    } ;
    
    union {
      __IOM uint8_t BCNT1;                      /*!< (@ 0x00000004) Binary Counter 1                                           */
      
      struct {
        __IOM uint8_t BCNT1     : 8;            /*!< [7..0] The BCNT1 counter is a readable/writable 32-bit binary
                                                     counter b15 to b8.                                                        */
      } BCNT1_b;
    } ;
  };
  __IM  uint8_t   RESERVED2;
  
  union {
    union {
      __IOM uint8_t RHRCNT;                     /*!< (@ 0x00000006) Hour Counter                                               */
      
      struct {
        __IOM uint8_t HR1       : 4;            /*!< [3..0] 1-Hour Count Counts from 0 to 9 once per hour. When a
                                                     carry is generated, 1 is added to the tens place.                         */
        __IOM uint8_t HR10      : 2;            /*!< [5..4] 10-Hour Count Counts from 0 to 2 once per carry from
                                                     the ones place.                                                           */
        __IOM uint8_t PM        : 1;            /*!< [6..6] Time Counter Setting for a.m./p.m.                                 */
              uint8_t           : 1;
      } RHRCNT_b;
    } ;
    
    union {
      __IOM uint8_t BCNT2;                      /*!< (@ 0x00000006) Binary Counter 2                                           */
      
      struct {
        __IOM uint8_t BCNT2     : 8;            /*!< [7..0] The BCNT2 counter is a readable/writable 32-bit binary
                                                     counter b23 to b16.                                                       */
      } BCNT2_b;
    } ;
  };
  __IM  uint8_t   RESERVED3;
  
  union {
    union {
      __IOM uint8_t RWKCNT;                     /*!< (@ 0x00000008) Day-of-Week Counter                                        */
      
      struct {
        __IOM uint8_t DAYW      : 3;            /*!< [2..0] Day-of-Week Counting                                               */
              uint8_t           : 5;
      } RWKCNT_b;
    } ;
    
    union {
      __IOM uint8_t BCNT3;                      /*!< (@ 0x00000008) Binary Counter 3                                           */
      
      struct {
        __IOM uint8_t BCNT3     : 8;            /*!< [7..0] The BCNT3 counter is a readable/writable 32-bit binary
                                                     counter b31 to b24.                                                       */
      } BCNT3_b;
    } ;
  };
  __IM  uint8_t   RESERVED4;
  
  union {
    __IOM uint8_t RDAYCNT;                      /*!< (@ 0x0000000A) Day Counter                                                */
    
    struct {
      __IOM uint8_t DATE1       : 4;            /*!< [3..0] 1-Day Count Counts from 0 to 9 once per day. When a carry
                                                     is generated, 1 is added to the tens place.                               */
      __IOM uint8_t DATE10      : 2;            /*!< [5..4] 10-Day Count Counts from 0 to 3 once per carry from the
                                                     ones place.                                                               */
            uint8_t             : 2;
    } RDAYCNT_b;
  } ;
  __IM  uint8_t   RESERVED5;
  
  union {
    __IOM uint8_t RMONCNT;                      /*!< (@ 0x0000000C) Month Counter                                              */
    
    struct {
      __IOM uint8_t MON1        : 4;            /*!< [3..0] 1-Month Count Counts from 0 to 9 once per month. When
                                                     a carry is generated, 1 is added to the tens place.                       */
      __IOM uint8_t MON10       : 1;            /*!< [4..4] 10-Month Count Counts from 0 to 1 once per carry from
                                                     the ones place.                                                           */
            uint8_t             : 3;
    } RMONCNT_b;
  } ;
  __IM  uint8_t   RESERVED6;
  
  union {
    __IOM uint16_t RYRCNT;                      /*!< (@ 0x0000000E) Year Counter                                               */
    
    struct {
      __IOM uint16_t YR1        : 4;            /*!< [3..0] 1-Year Count Counts from 0 to 9 once per year. When a
                                                     carry is generated, 1 is added to the tens place.                         */
      __IOM uint16_t YR10       : 4;            /*!< [7..4] 10-Year Count Counts from 0 to 9 once per carry from
                                                     ones place. When a carry is generated in the tens place,
                                                     1 is added to the hundreds place.                                         */
            uint16_t            : 8;
    } RYRCNT_b;
  } ;
  
  union {
    union {
      __IOM uint8_t RSECAR;                     /*!< (@ 0x00000010) Second Alarm Register                                      */
      
      struct {
        __IOM uint8_t SEC1      : 4;            /*!< [3..0] 1-Second Value for the ones place of seconds                       */
        __IOM uint8_t SEC10     : 3;            /*!< [6..4] 10-Seconds Value for the tens place of seconds                     */
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RSECAR_b;
    } ;
    
    union {
      __IOM uint8_t BCNT0AR;                    /*!< (@ 0x00000010) Binary Counter 0 Alarm Register                            */
      
      struct {
        __IOM uint8_t BCNT0AR   : 8;            /*!< [7..0] he BCNT0AR counter is a readable/writable alarm register
                                                     corresponding to 32-bit binary counter b7 to b0.                          */
      } BCNT0AR_b;
    } ;
  };
  __IM  uint8_t   RESERVED7;
  
  union {
    union {
      __IOM uint8_t RMINAR;                     /*!< (@ 0x00000012) Minute Alarm Register                                      */
      
      struct {
        __IOM uint8_t MIN1      : 4;            /*!< [3..0] 1-Minute Count Value for the ones place of minutes                 */
        __IOM uint8_t MIN10     : 3;            /*!< [6..4] 10-Minute Count Value for the tens place of minutes                */
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RMINAR_b;
    } ;
    
    union {
      __IOM uint8_t BCNT1AR;                    /*!< (@ 0x00000012) Binary Counter 1 Alarm Register                            */
      
      struct {
        __IOM uint8_t BCNT1AR   : 8;            /*!< [7..0] he BCNT1AR counter is a readable/writable alarm register
                                                     corresponding to 32-bit binary counter b15 to b8.                         */
      } BCNT1AR_b;
    } ;
  };
  __IM  uint8_t   RESERVED8;
  
  union {
    union {
      __IOM uint8_t RHRAR;                      /*!< (@ 0x00000014) Hour Alarm Register                                        */
      
      struct {
        __IOM uint8_t HR1       : 4;            /*!< [3..0] 1-Hour Count Value for the ones place of hours                     */
        __IOM uint8_t HR10      : 2;            /*!< [5..4] 10-Hour Count Value for the tens place of hours                    */
        __IOM uint8_t PM        : 1;            /*!< [6..6] Time Counter Setting for a.m./p.m.                                 */
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RHRAR_b;
    } ;
    
    union {
      __IOM uint8_t BCNT2AR;                    /*!< (@ 0x00000014) Binary Counter 2 Alarm Register                            */
      
      struct {
        __IOM uint8_t BCNT2AR   : 8;            /*!< [7..0] The BCNT2AR counter is a readable/writable 32-bit binary
                                                     counter b23 to b16.                                                       */
      } BCNT2AR_b;
    } ;
  };
  __IM  uint8_t   RESERVED9;
  
  union {
    union {
      __IOM uint8_t RWKAR;                      /*!< (@ 0x00000016) Day-of-Week Alarm Register                                 */
      
      struct {
        __IOM uint8_t DAYW      : 3;            /*!< [2..0] Day-of-Week Counting                                               */
              uint8_t           : 4;
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RWKAR_b;
    } ;
    
    union {
      __IOM uint8_t BCNT3AR;                    /*!< (@ 0x00000016) Binary Counter 3 Alarm Register                            */
      
      struct {
        __IOM uint8_t BCNT3AR   : 8;            /*!< [7..0] The BCNT3AR counter is a readable/writable 32-bit binary
                                                     counter b31 to b24.                                                       */
      } BCNT3AR_b;
    } ;
  };
  __IM  uint8_t   RESERVED10;
  
  union {
    union {
      __IOM uint8_t RDAYAR;                     /*!< (@ 0x00000018) Date Alarm Register                                        */
      
      struct {
        __IOM uint8_t DATE1     : 4;            /*!< [3..0] 1 Day Value for the ones place of days                             */
        __IOM uint8_t DATE10    : 2;            /*!< [5..4] 10 Days Value for the tens place of days                           */
              uint8_t           : 1;
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RDAYAR_b;
    } ;
    
    union {
      __IOM uint8_t BCNT0AER;                   /*!< (@ 0x00000018) Binary Counter 0 Alarm Enable Register                     */
      
      struct {
        __IOM uint8_t ENB       : 8;            /*!< [7..0] The BCNT0AER register is a readable/writable register
                                                     for setting the alarm enable corresponding to 32-bit binary
                                                     counter b7 to b0.                                                         */
      } BCNT0AER_b;
    } ;
  };
  __IM  uint8_t   RESERVED11;
  
  union {
    union {
      __IOM uint8_t RMONAR;                     /*!< (@ 0x0000001A) Month Alarm Register                                       */
      
      struct {
        __IOM uint8_t MON1      : 4;            /*!< [3..0] 1 Month Value for the ones place of months                         */
        __IOM uint8_t MON10     : 1;            /*!< [4..4] 10 Months Value for the tens place of months                       */
              uint8_t           : 2;
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RMONAR_b;
    } ;
    
    union {
      __IOM uint8_t BCNT1AER;                   /*!< (@ 0x0000001A) Binary Counter 1 Alarm Enable Register                     */
      
      struct {
        __IOM uint8_t ENB       : 8;            /*!< [7..0] The BCNT1AER register is a readable/writable register
                                                     for setting the alarm enable corresponding to 32-bit binary
                                                     counter b15 to b8.                                                        */
      } BCNT1AER_b;
    } ;
  };
  __IM  uint8_t   RESERVED12;
  
  union {
    union {
      __IOM uint16_t RYRAR;                     /*!< (@ 0x0000001C) Year Alarm Register                                        */
      
      struct {
        __IOM uint16_t YR1      : 4;            /*!< [3..0] 1 Year Value for the ones place of years                           */
        __IOM uint16_t YR10     : 4;            /*!< [7..4] 10 Years Value for the tens place of years                         */
              uint16_t          : 8;
      } RYRAR_b;
    } ;
    
    union {
      __IOM uint16_t BCNT2AER;                  /*!< (@ 0x0000001C) Binary Counter 2 Alarm Enable Register                     */
      
      struct {
        __IOM uint16_t ENB      : 8;            /*!< [7..0] The BCNT2AER register is a readable/writable register
                                                     for setting the alarm enable corresponding to 32-bit binary
                                                     counter b23 to b16.                                                       */
              uint16_t          : 8;
      } BCNT2AER_b;
    } ;
  };
  
  union {
    union {
      __IOM uint8_t RYRAREN;                    /*!< (@ 0x0000001E) Year Alarm Enable Register                                 */
      
      struct {
              uint8_t           : 7;
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RYRAREN_b;
    } ;
    
    union {
      __IOM uint8_t BCNT3AER;                   /*!< (@ 0x0000001E) Binary Counter 3 Alarm Enable Register                     */
      
      struct {
        __IOM uint8_t ENB       : 8;            /*!< [7..0] The BCNT3AER register is a readable/writable register
                                                     for setting the alarm enable corresponding to 32-bit binary
                                                     counter b31 to b24.                                                       */
      } BCNT3AER_b;
    } ;
  };
  __IM  uint8_t   RESERVED13;
  __IM  uint16_t  RESERVED14;
  
  union {
    __IOM uint8_t RCR1;                         /*!< (@ 0x00000022) RTC Control Register 1                                     */
    
    struct {
      __IOM uint8_t AIE         : 1;            /*!< [0..0] Alarm Interrupt Enable                                             */
      __IOM uint8_t CIE         : 1;            /*!< [1..1] Carry Interrupt Enable                                             */
      __IOM uint8_t PIE         : 1;            /*!< [2..2] Periodic Interrupt Enable                                          */
      __IOM uint8_t RTCOS       : 1;            /*!< [3..3] RTCOUT Output Select                                               */
      __IOM uint8_t PES         : 4;            /*!< [7..4] Periodic Interrupt Select                                          */
    } RCR1_b;
  } ;
  __IM  uint8_t   RESERVED15;
  
  union {
    __IOM uint8_t RCR2;                         /*!< (@ 0x00000024) RTC Control Register 2                                     */
    
    struct {
      __IOM uint8_t START       : 1;            /*!< [0..0] Start                                                              */
      __IOM uint8_t RESET       : 1;            /*!< [1..1] RTC Software Reset                                                 */
      __IOM uint8_t ADJ30       : 1;            /*!< [2..2] 30-Second Adjustment                                               */
      __IOM uint8_t RTCOE       : 1;            /*!< [3..3] RTCOUT Output Enable                                               */
      __IOM uint8_t AADJE       : 1;            /*!< [4..4] Automatic Adjustment Enable (When the LOCO clock is selected,
                                                     the setting of this bit is disabled.)                                     */
      __IOM uint8_t AADJP       : 1;            /*!< [5..5] Automatic Adjustment Period Select (When the LOCO clock
                                                     is selected, the setting of this bit is disabled.)                        */
      __IOM uint8_t HR24        : 1;            /*!< [6..6] Hours Mode                                                         */
      __IOM uint8_t CNTMD       : 1;            /*!< [7..7] Count Mode Select                                                  */
    } RCR2_b;
  } ;
  __IM  uint8_t   RESERVED16;
  
  union {
    __IOM uint8_t RCPE;                         /*!< (@ 0x00000026) RTC Capture Pin Enable Register                            */
    
    struct {
      __IOM uint8_t RTCEN       : 1;            /*!< [0..0] RTCEN                                                              */
            uint8_t             : 7;
    } RCPE_b;
  } ;
  __IM  uint8_t   RESERVED17;
  
  union {
    __IOM uint8_t RCR4;                         /*!< (@ 0x00000028) RTC Control Register 4                                     */
    
    struct {
      __IOM uint8_t RCKSEL      : 1;            /*!< [0..0] Count Source Select                                                */
            uint8_t             : 7;
    } RCR4_b;
  } ;
  __IM  uint8_t   RESERVED18;
  
  union {
    __IOM uint16_t RFRH;                        /*!< (@ 0x0000002A) Frequency Register H                                       */
    
    struct {
      __IOM uint16_t RFC16      : 1;            /*!< [0..0] RFC16                                                              */
            uint16_t            : 15;
    } RFRH_b;
  } ;
  
  union {
    __IOM uint16_t RFRL;                        /*!< (@ 0x0000002C) Frequency Register L                                       */
    
    struct {
      __IOM uint16_t RFC        : 16;           /*!< [15..0] RFC                                                               */
    } RFRL_b;
  } ;
  
  union {
    __IOM uint8_t RADJ;                         /*!< (@ 0x0000002E) Time Error Adjustment Register                             */
    
    struct {
      __IOM uint8_t ADJ         : 6;            /*!< [5..0] Adjustment Value These bits specify the adjustment value
                                                     from the prescaler.                                                       */
      __IOM uint8_t PMADJ       : 2;            /*!< [7..6] Plus-Minus                                                         */
    } RADJ_b;
  } ;
  __IM  uint8_t   RESERVED19;
  __IM  uint16_t  RESERVED20[8];
  
  union {
    __IOM uint8_t RTCCR0;                       /*!< (@ 0x00000040) 0                                                          */
    
    struct {
      __IOM uint8_t TCCT        : 2;            /*!< [1..0] TCCT                                                               */
      __IOM uint8_t TCST        : 1;            /*!< [2..2] TCST                                                               */
            uint8_t             : 1;
      __IOM uint8_t TCNF        : 2;            /*!< [5..4] TCNF                                                               */
            uint8_t             : 1;
      __IOM uint8_t TCEN        : 1;            /*!< [7..7] TCEN                                                               */
    } RTCCR0_b;
  } ;
  __IM  uint8_t   RESERVED21;
  
  union {
    __IOM uint8_t RTCCR1;                       /*!< (@ 0x00000042) 1                                                          */
    
    struct {
      __IOM uint8_t TCCT        : 2;            /*!< [1..0] TCCT                                                               */
      __IOM uint8_t TCST        : 1;            /*!< [2..2] TCST                                                               */
            uint8_t             : 1;
      __IOM uint8_t TCNF        : 2;            /*!< [5..4] TCNF                                                               */
            uint8_t             : 1;
      __IOM uint8_t TCEN        : 1;            /*!< [7..7] TCEN                                                               */
    } RTCCR1_b;
  } ;
  __IM  uint8_t   RESERVED22;
  
  union {
    __IOM uint8_t RTCCR2;                       /*!< (@ 0x00000044) 2                                                          */
    
    struct {
      __IOM uint8_t TCCT        : 2;            /*!< [1..0] TCCT                                                               */
      __IOM uint8_t TCST        : 1;            /*!< [2..2] TCST                                                               */
            uint8_t             : 1;
      __IOM uint8_t TCNF        : 2;            /*!< [5..4] TCNF                                                               */
            uint8_t             : 1;
      __IOM uint8_t TCEN        : 1;            /*!< [7..7] TCEN                                                               */
    } RTCCR2_b;
  } ;
  __IM  uint8_t   RESERVED23;
  __IM  uint16_t  RESERVED24[6];
  
  union {
    union {
      __IM  uint8_t RSECCP0;                    /*!< (@ 0x00000052) 0                                                          */
      
      struct {
        __IM  uint8_t SEC1      : 4;            /*!< [3..0] SEC1                                                               */
        __IM  uint8_t SEC10     : 3;            /*!< [6..4] SEC10                                                              */
              uint8_t           : 1;
      } RSECCP0_b;
    } ;
    
    union {
      __IM  uint8_t BCNT0CP0;                   /*!< (@ 0x00000052) BCNT0CP0                                                   */
      
      struct {
        __IM  uint8_t BCNTCP0   : 8;            /*!< [7..0] BCNTCP0                                                            */
      } BCNT0CP0_b;
    } ;
  };
  __IM  uint8_t   RESERVED25;
  
  union {
    union {
      __IM  uint8_t RMINCP0;                    /*!< (@ 0x00000054) 0                                                          */
      
      struct {
        __IM  uint8_t MIN1      : 4;            /*!< [3..0] MIN1                                                               */
        __IM  uint8_t MIN10     : 3;            /*!< [6..4] MIN10                                                              */
              uint8_t           : 1;
      } RMINCP0_b;
    } ;
    
    union {
      __IM  uint8_t BCNT1CP0;                   /*!< (@ 0x00000054) BCNT1CP0                                                   */
      
      struct {
        __IM  uint8_t BCNTCP0   : 8;            /*!< [7..0] BCNTCP0                                                            */
      } BCNT1CP0_b;
    } ;
  };
  __IM  uint8_t   RESERVED26;
  
  union {
    union {
      __IM  uint8_t RHRCP0;                     /*!< (@ 0x00000056) 0                                                          */
      
      struct {
        __IM  uint8_t HR1       : 4;            /*!< [3..0] HR1                                                                */
        __IM  uint8_t HR10      : 2;            /*!< [5..4] HR10                                                               */
        __IM  uint8_t PM        : 1;            /*!< [6..6] PM                                                                 */
              uint8_t           : 1;
      } RHRCP0_b;
    } ;
    
    union {
      __IM  uint8_t BCNT2CP0;                   /*!< (@ 0x00000056) BCNT2CP0                                                   */
      
      struct {
        __IM  uint8_t BCNTCP0   : 8;            /*!< [7..0] BCNTCP0                                                            */
      } BCNT2CP0_b;
    } ;
  };
  __IM  uint8_t   RESERVED27;
  __IM  uint16_t  RESERVED28;
  
  union {
    union {
      __IM  uint8_t RDAYCP0;                    /*!< (@ 0x0000005A) 0                                                          */
      
      struct {
        __IM  uint8_t DATE1     : 4;            /*!< [3..0] DATE1                                                              */
        __IM  uint8_t DATE10    : 2;            /*!< [5..4] DATE10                                                             */
              uint8_t           : 2;
      } RDAYCP0_b;
    } ;
    
    union {
      __IM  uint8_t BCNT3CP0;                   /*!< (@ 0x0000005A) BCNT3CP0                                                   */
      
      struct {
        __IM  uint8_t BCNTCP0   : 8;            /*!< [7..0] BCNTCP0                                                            */
      } BCNT3CP0_b;
    } ;
  };
  __IM  uint8_t   RESERVED29;
  
  union {
    __IM  uint8_t RMONCP0;                      /*!< (@ 0x0000005C) 0                                                          */
    
    struct {
      __IM  uint8_t MON1        : 4;            /*!< [3..0] MON1                                                               */
      __IM  uint8_t MON10       : 1;            /*!< [4..4] MON10                                                              */
            uint8_t             : 3;
    } RMONCP0_b;
  } ;
  __IM  uint8_t   RESERVED30;
  __IM  uint16_t  RESERVED31[2];
  
  union {
    union {
      __IM  uint8_t RSECCP1;                    /*!< (@ 0x00000062) 1                                                          */
      
      struct {
        __IM  uint8_t SEC1      : 4;            /*!< [3..0] SEC1                                                               */
        __IM  uint8_t SEC10     : 3;            /*!< [6..4] SEC10                                                              */
              uint8_t           : 1;
      } RSECCP1_b;
    } ;
    
    union {
      __IM  uint8_t BCNT0CP1;                   /*!< (@ 0x00000062) BCNT0CP1                                                   */
      
      struct {
        __IM  uint8_t BCNTCP1   : 8;            /*!< [7..0] BCNTCP1                                                            */
      } BCNT0CP1_b;
    } ;
  };
  __IM  uint8_t   RESERVED32;
  
  union {
    union {
      __IM  uint8_t RMINCP1;                    /*!< (@ 0x00000064) 1                                                          */
      
      struct {
        __IM  uint8_t MIN1      : 4;            /*!< [3..0] MIN1                                                               */
        __IM  uint8_t MIN10     : 3;            /*!< [6..4] MIN10                                                              */
              uint8_t           : 1;
      } RMINCP1_b;
    } ;
    
    union {
      __IM  uint8_t BCNT1CP1;                   /*!< (@ 0x00000064) BCNT1CP1                                                   */
      
      struct {
        __IM  uint8_t BCNTCP1   : 8;            /*!< [7..0] BCNTCP1                                                            */
      } BCNT1CP1_b;
    } ;
  };
  __IM  uint8_t   RESERVED33;
  
  union {
    union {
      __IM  uint8_t RHRCP1;                     /*!< (@ 0x00000066) 1                                                          */
      
      struct {
        __IM  uint8_t HR1       : 4;            /*!< [3..0] HR1                                                                */
        __IM  uint8_t HR10      : 2;            /*!< [5..4] HR10                                                               */
        __IM  uint8_t PM        : 1;            /*!< [6..6] PM                                                                 */
              uint8_t           : 1;
      } RHRCP1_b;
    } ;
    
    union {
      __IM  uint8_t BCNT2CP1;                   /*!< (@ 0x00000066) BCNT2CP1                                                   */
      
      struct {
        __IM  uint8_t BCNTCP1   : 8;            /*!< [7..0] BCNTCP1                                                            */
      } BCNT2CP1_b;
    } ;
  };
  __IM  uint8_t   RESERVED34;
  __IM  uint16_t  RESERVED35;
  
  union {
    union {
      __IM  uint8_t RDAYCP1;                    /*!< (@ 0x0000006A) 1                                                          */
      
      struct {
        __IM  uint8_t DATE1     : 4;            /*!< [3..0] DATE1                                                              */
        __IM  uint8_t DATE10    : 2;            /*!< [5..4] DATE10                                                             */
              uint8_t           : 2;
      } RDAYCP1_b;
    } ;
    
    union {
      __IM  uint8_t BCNT3CP1;                   /*!< (@ 0x0000006A) BCNT3CP1                                                   */
      
      struct {
        __IM  uint8_t BCNTCP1   : 8;            /*!< [7..0] BCNTCP1                                                            */
      } BCNT3CP1_b;
    } ;
  };
  __IM  uint8_t   RESERVED36;
  
  union {
    __IM  uint8_t RMONCP1;                      /*!< (@ 0x0000006C) 1                                                          */
    
    struct {
      __IM  uint8_t MON1        : 4;            /*!< [3..0] MON1                                                               */
      __IM  uint8_t MON10       : 1;            /*!< [4..4] MON10                                                              */
            uint8_t             : 3;
    } RMONCP1_b;
  } ;
  __IM  uint8_t   RESERVED37;
  __IM  uint16_t  RESERVED38[2];
  
  union {
    union {
      __IM  uint8_t RSECCP2;                    /*!< (@ 0x00000072) 2                                                          */
      
      struct {
        __IM  uint8_t SEC1      : 4;            /*!< [3..0] SEC1                                                               */
        __IM  uint8_t SEC10     : 3;            /*!< [6..4] SEC10                                                              */
              uint8_t           : 1;
      } RSECCP2_b;
    } ;
    
    union {
      __IM  uint8_t BCNT0CP2;                   /*!< (@ 0x00000072) BCNT0CP2                                                   */
      
      struct {
        __IM  uint8_t BCNTCP2   : 8;            /*!< [7..0] BCNTCP2                                                            */
      } BCNT0CP2_b;
    } ;
  };
  __IM  uint8_t   RESERVED39;
  
  union {
    union {
      __IM  uint8_t RMINCP2;                    /*!< (@ 0x00000074) 2                                                          */
      
      struct {
        __IM  uint8_t MIN1      : 4;            /*!< [3..0] MIN1                                                               */
        __IM  uint8_t MIN10     : 3;            /*!< [6..4] MIN10                                                              */
              uint8_t           : 1;
      } RMINCP2_b;
    } ;
    
    union {
      __IM  uint8_t BCNT1CP2;                   /*!< (@ 0x00000074) BCNT1CP2                                                   */
      
      struct {
        __IM  uint8_t BCNTCP2   : 8;            /*!< [7..0] BCNTCP2                                                            */
      } BCNT1CP2_b;
    } ;
  };
  __IM  uint8_t   RESERVED40;
  
  union {
    union {
      __IM  uint8_t RHRCP2;                     /*!< (@ 0x00000076) 2                                                          */
      
      struct {
        __IM  uint8_t HR1       : 4;            /*!< [3..0] HR1                                                                */
        __IM  uint8_t HR10      : 2;            /*!< [5..4] HR10                                                               */
        __IM  uint8_t PM        : 1;            /*!< [6..6] PM                                                                 */
              uint8_t           : 1;
      } RHRCP2_b;
    } ;
    
    union {
      __IM  uint8_t BCNT2CP2;                   /*!< (@ 0x00000076) BCNT2CP2                                                   */
      
      struct {
        __IM  uint8_t BCNTCP2   : 8;            /*!< [7..0] BCNTCP2                                                            */
      } BCNT2CP2_b;
    } ;
  };
  __IM  uint8_t   RESERVED41;
  __IM  uint16_t  RESERVED42;
  
  union {
    union {
      __IM  uint8_t RDAYCP2;                    /*!< (@ 0x0000007A) 2                                                          */
      
      struct {
        __IM  uint8_t DATE1     : 4;            /*!< [3..0] DATE1                                                              */
        __IM  uint8_t DATE10    : 2;            /*!< [5..4] DATE10                                                             */
              uint8_t           : 2;
      } RDAYCP2_b;
    } ;
    
    union {
      __IM  uint8_t BCNT3CP2;                   /*!< (@ 0x0000007A) BCNT3CP2                                                   */
      
      struct {
        __IM  uint8_t BCNTCP2   : 8;            /*!< [7..0] BCNTCP2                                                            */
      } BCNT3CP2_b;
    } ;
  };
  __IM  uint8_t   RESERVED43;
  
  union {
    __IM  uint8_t RMONCP2;                      /*!< (@ 0x0000007C) 2                                                          */
    
    struct {
      __IM  uint8_t MON1        : 4;            /*!< [3..0] MON1                                                               */
      __IM  uint8_t MON10       : 1;            /*!< [4..4] MON10                                                              */
            uint8_t             : 3;
    } RMONCP2_b;
  } ;
  __IM  uint8_t   RESERVED44;
  __IM  uint16_t  RESERVED45;
} RTC_Type;                                     /*!< Size = 128 (0x80)                                                         */



/* =========================================================================================================================== */
/* ================                                           S14AD                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief 14bit A/D Converter (S14AD)
  */

typedef struct {                                /*!< (@ 0x4005C000) S14AD Structure                                            */
  
  union {
    __IOM uint16_t ADCSR;                       /*!< (@ 0x00000000) A/D Control Register                                       */
    
    struct {
      __IOM uint16_t DBLANS     : 5;            /*!< [4..0] Double Trigger Channel SelectThese bits select one analog
                                                     input channel for double triggered operation. The setting
                                                     is only effective while double trigger mode is selected.                  */
            uint16_t            : 1;
      __IOM uint16_t GBADIE     : 1;            /*!< [6..6] Group B Scan End Interrupt Enable                                  */
      __IOM uint16_t DBLE       : 1;            /*!< [7..7] Double Trigger Mode Select                                         */
      __IOM uint16_t EXTRG      : 1;            /*!< [8..8] Trigger Select                                                     */
      __IOM uint16_t TRGE       : 1;            /*!< [9..9] Trigger Start Enable                                               */
            uint16_t            : 2;
      __IOM uint16_t ADIE       : 1;            /*!< [12..12] ADIE                                                             */
      __IOM uint16_t ADCS       : 2;            /*!< [14..13] Scan Mode Select                                                 */
      __IOM uint16_t ADST       : 1;            /*!< [15..15] A/D Conversion Start                                             */
    } ADCSR_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint16_t ADANSA0;                     /*!< (@ 0x00000004) A/D Channel Select Register A0                             */
    
    struct {
      __IOM uint16_t ANSA00     : 1;            /*!< [0..0] AN000 Select                                                       */
      __IOM uint16_t ANSA01     : 1;            /*!< [1..1] AN001 Select                                                       */
      __IOM uint16_t ANSA02     : 1;            /*!< [2..2] AN002 Select                                                       */
      __IOM uint16_t ANSA03     : 1;            /*!< [3..3] AN003 Select                                                       */
      __IOM uint16_t ANSA04     : 1;            /*!< [4..4] AN004 Select                                                       */
      __IOM uint16_t ANSA05     : 1;            /*!< [5..5] AN005 Select                                                       */
      __IOM uint16_t ANSA06     : 1;            /*!< [6..6] AN006 Select                                                       */
            uint16_t            : 9;
    } ADANSA0_b;
  } ;
  
  union {
    __IOM uint16_t ADANSA1;                     /*!< (@ 0x00000006) A/D Channel Select Register A1                             */
    
    struct {
      __IOM uint16_t ANSA16     : 1;            /*!< [0..0] AN0016 Select                                                      */
      __IOM uint16_t ANSA17     : 1;            /*!< [1..1] AN0017 Select                                                      */
            uint16_t            : 2;
      __IOM uint16_t ANSA20     : 1;            /*!< [4..4] AN0020 Select                                                      */
      __IOM uint16_t ANSA21     : 1;            /*!< [5..5] AN0021 Select                                                      */
      __IOM uint16_t ANSA22     : 1;            /*!< [6..6] AN0022 Select                                                      */
      __IOM uint16_t ANSA23     : 1;            /*!< [7..7] AN0023 Select                                                      */
      __IOM uint16_t ANSA24     : 1;            /*!< [8..8] AN0024 Select                                                      */
      __IOM uint16_t ANSA25     : 1;            /*!< [9..9] AN0025 Select                                                      */
      __IOM uint16_t ANSA26     : 1;            /*!< [10..10] AN0026 Select                                                    */
      __IOM uint16_t ANSA27     : 1;            /*!< [11..11] AN0027 Select                                                    */
      __IOM uint16_t ANSA28     : 1;            /*!< [12..12] AN0028 Select                                                    */
            uint16_t            : 3;
    } ADANSA1_b;
  } ;
  
  union {
    __IOM uint16_t ADADS0;                      /*!< (@ 0x00000008) A/D-Converted Value Addition/Average Channel
                                                                    Select Register 0                                          */
    
    struct {
      __IOM uint16_t ADS00      : 1;            /*!< [0..0] A/D-Converted Value Addition/Average Channel AN000 Select          */
      __IOM uint16_t ADS01      : 1;            /*!< [1..1] A/D-Converted Value Addition/Average Channel AN001 Select          */
      __IOM uint16_t ADS02      : 1;            /*!< [2..2] A/D-Converted Value Addition/Average Channel AN002 Select          */
      __IOM uint16_t ADS03      : 1;            /*!< [3..3] A/D-Converted Value Addition/Average Channel AN003 Select          */
      __IOM uint16_t ADS04      : 1;            /*!< [4..4] A/D-Converted Value Addition/Average Channel AN004 Select          */
      __IOM uint16_t ADS05      : 1;            /*!< [5..5] A/D-Converted Value Addition/Average Channel AN005 Select          */
      __IOM uint16_t ADS06      : 1;            /*!< [6..6] A/D-Converted Value Addition/Average Channel AN006 Select          */
            uint16_t            : 9;
    } ADADS0_b;
  } ;
  
  union {
    __IOM uint16_t ADADS1;                      /*!< (@ 0x0000000A) A/D-Converted Value Addition/Average Channel
                                                                    Select Register 1                                          */
    
    struct {
      __IOM uint16_t ADS16      : 1;            /*!< [0..0] A/D-Converted Value Addition/Average Channel AN016 Select          */
      __IOM uint16_t ADS17      : 1;            /*!< [1..1] A/D-Converted Value Addition/Average Channel AN017 Select          */
            uint16_t            : 2;
      __IOM uint16_t ADS20      : 1;            /*!< [4..4] A/D-Converted Value Addition/Average Channel AN020 Select          */
      __IOM uint16_t ADS21      : 1;            /*!< [5..5] A/D-Converted Value Addition/Average Channel AN021 Select          */
      __IOM uint16_t ADS22      : 1;            /*!< [6..6] A/D-Converted Value Addition/Average Channel AN022 Select          */
      __IOM uint16_t ADS23      : 1;            /*!< [7..7] A/D-Converted Value Addition/Average Channel AN023 Select          */
      __IOM uint16_t ADS24      : 1;            /*!< [8..8] A/D-Converted Value Addition/Average Channel AN024 Select          */
      __IOM uint16_t ADS25      : 1;            /*!< [9..9] A/D-Converted Value Addition/Average Channel AN025 Select          */
      __IOM uint16_t ADS26      : 1;            /*!< [10..10] A/D-Converted Value Addition/Average Channel AN026
                                                     Select                                                                    */
      __IOM uint16_t ADS27      : 1;            /*!< [11..11] A/D-Converted Value Addition/Average Channel AN027
                                                     Select                                                                    */
      __IOM uint16_t ADS28      : 1;            /*!< [12..12] A/D-Converted Value Addition/Average Channel AN028
                                                     Select                                                                    */
            uint16_t            : 3;
    } ADADS1_b;
  } ;
  
  union {
    __IOM uint8_t ADADC;                        /*!< (@ 0x0000000C) A/D-Converted Value Addition/Average Count Select
                                                                    Register                                                   */
    
    struct {
      __IOM uint8_t ADC         : 3;            /*!< [2..0] Addition frequency selection bit.                                  */
            uint8_t             : 4;
      __IOM uint8_t AVEE        : 1;            /*!< [7..7] Average Mode Enable                                                */
    } ADADC_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint16_t ADCER;                       /*!< (@ 0x0000000E) A/D Control Extended Register                              */
    
    struct {
            uint16_t            : 1;
      __IOM uint16_t ADPRC      : 2;            /*!< [2..1] A/D Conversion Accuracy Specify                                    */
            uint16_t            : 2;
      __IOM uint16_t ACE        : 1;            /*!< [5..5] A/D Data Register Automatic Clearing Enable                        */
            uint16_t            : 2;
      __IOM uint16_t DIAGVAL    : 2;            /*!< [9..8] Self-Diagnosis Conversion Voltage Select                           */
      __IOM uint16_t DIAGLD     : 1;            /*!< [10..10] Self-Diagnosis Mode Select                                       */
      __IOM uint16_t DIAGM      : 1;            /*!< [11..11] Self-Diagnosis Enable                                            */
            uint16_t            : 3;
      __IOM uint16_t ADRFMT     : 1;            /*!< [15..15] A/D Data Register Format Select                                  */
    } ADCER_b;
  } ;
  
  union {
    __IOM uint16_t ADSTRGR;                     /*!< (@ 0x00000010) A/D Conversion Start Trigger Select Register               */
    
    struct {
      __IOM uint16_t TRSB       : 6;            /*!< [5..0] A/D Conversion Start Trigger Select for Group BSelect
                                                     the A/D conversion start trigger for group B in group scan
                                                     mode.                                                                     */
            uint16_t            : 2;
      __IOM uint16_t TRSA       : 6;            /*!< [13..8] A/D Conversion Start Trigger SelectSelect the A/D conversion
                                                     start trigger in single scan mode and continuous mode.
                                                     In group scan mode, the A/D conversion start trigger for
                                                     group A is selected.                                                      */
            uint16_t            : 2;
    } ADSTRGR_b;
  } ;
  
  union {
    __IOM uint16_t ADEXICR;                     /*!< (@ 0x00000012) A/D Conversion Extended Input Control Register             */
    
    struct {
      __IOM uint16_t TSSAD      : 1;            /*!< [0..0] Temperature Sensor Output A/D converted Value Addition/Average
                                                     Mode Select                                                               */
            uint16_t            : 7;
      __IOM uint16_t TSSA       : 1;            /*!< [8..8] Temperature Sensor Output A/D Conversion Select                    */
            uint16_t            : 1;
      __IOM uint16_t TSSB       : 1;            /*!< [10..10] Temperature Sensor Output A/D Conversion Select for
                                                     group B                                                                   */
            uint16_t            : 5;
    } ADEXICR_b;
  } ;
  
  union {
    __IOM uint16_t ADANSB0;                     /*!< (@ 0x00000014) A/D Channel Select Register B0                             */
    
    struct {
      __IOM uint16_t ANSB00     : 1;            /*!< [0..0] AN000 Select                                                       */
      __IOM uint16_t ANSB01     : 1;            /*!< [1..1] AN001 Select                                                       */
      __IOM uint16_t ANSB02     : 1;            /*!< [2..2] AN002 Select                                                       */
      __IOM uint16_t ANSB03     : 1;            /*!< [3..3] AN003 Select                                                       */
      __IOM uint16_t ANSB04     : 1;            /*!< [4..4] AN004 Select                                                       */
      __IOM uint16_t ANSB05     : 1;            /*!< [5..5] AN005 Select                                                       */
      __IOM uint16_t ANSB06     : 1;            /*!< [6..6] AN006 Select                                                       */
            uint16_t            : 9;
    } ADANSB0_b;
  } ;
  
  union {
    __IOM uint16_t ADANSB1;                     /*!< (@ 0x00000016) A/D Channel Select Register B1                             */
    
    struct {
      __IOM uint16_t ANSB16     : 1;            /*!< [0..0] AN0016 Select                                                      */
      __IOM uint16_t ANSB17     : 1;            /*!< [1..1] AN0017 Select                                                      */
            uint16_t            : 2;
      __IOM uint16_t ANSB20     : 1;            /*!< [4..4] AN0020 Select                                                      */
      __IOM uint16_t ANSB21     : 1;            /*!< [5..5] AN0021 Select                                                      */
      __IOM uint16_t ANSB22     : 1;            /*!< [6..6] AN0022 Select                                                      */
      __IOM uint16_t ANSB23     : 1;            /*!< [7..7] AN0023 Select                                                      */
      __IOM uint16_t ANSB24     : 1;            /*!< [8..8] AN0024 Select                                                      */
      __IOM uint16_t ANSB25     : 1;            /*!< [9..9] AN0025 Select                                                      */
      __IOM uint16_t ANSB26     : 1;            /*!< [10..10] AN0026 Select                                                    */
      __IOM uint16_t ANSB27     : 1;            /*!< [11..11] AN0027 Select                                                    */
      __IOM uint16_t ANSB28     : 1;            /*!< [12..12] AN0028 Select                                                    */
            uint16_t            : 3;
    } ADANSB1_b;
  } ;
  
  union {
    __IM  uint16_t ADDBLDR;                     /*!< (@ 0x00000018) A/D Data Duplication Register                              */
    
    struct {
      __IM  uint16_t ADDBLDR    : 16;           /*!< [15..0] This is a 16-bit read-only register for storing the
                                                     result of A/D conversion in response to the second trigger
                                                     in double trigger mode.                                                   */
    } ADDBLDR_b;
  } ;
  
  union {
    __IM  uint16_t ADTSDR;                      /*!< (@ 0x0000001A) A/D Temperature Sensor Data Register                       */
    
    struct {
      __IM  uint16_t ADTSDR     : 16;           /*!< [15..0] This is a 16-bit read-only register for storing the
                                                     A/D conversion result of temperature sensor output.                       */
    } ADTSDR_b;
  } ;
  __IM  uint16_t  RESERVED2;
  
  union {
    __IM  uint16_t ADRD;                        /*!< (@ 0x0000001E) A/D Self-Diagnosis Data Register                           */
    
    struct {
      __IM  uint16_t AD         : 14;           /*!< [13..0] A/D-converted value (right-justified)NOTE: Unused bits
                                                     in the AD bit field are fixed 0                                           */
      __IM  uint16_t DIAGST     : 2;            /*!< [15..14] Self-Diagnosis StatusNote:Reference voltage refers
                                                     to VREFH0.                                                                */
    } ADRD_b;
  } ;
  
  union {
    __IM  uint16_t ADDR0;                       /*!< (@ 0x00000020) A/D Data Register 0                                        */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR0_b;
  } ;
  
  union {
    __IM  uint16_t ADDR1;                       /*!< (@ 0x00000022) A/D Data Register 1                                        */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR1_b;
  } ;
  
  union {
    __IM  uint16_t ADDR2;                       /*!< (@ 0x00000024) A/D Data Register 2                                        */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR2_b;
  } ;
  
  union {
    __IM  uint16_t ADDR3;                       /*!< (@ 0x00000026) A/D Data Register 3                                        */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR3_b;
  } ;
  
  union {
    __IM  uint16_t ADDR4;                       /*!< (@ 0x00000028) A/D Data Register 4                                        */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR4_b;
  } ;
  
  union {
    __IM  uint16_t ADDR5;                       /*!< (@ 0x0000002A) A/D Data Register 5                                        */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR5_b;
  } ;
  
  union {
    __IM  uint16_t ADDR6;                       /*!< (@ 0x0000002C) A/D Data Register 6                                        */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR6_b;
  } ;
  __IM  uint16_t  RESERVED3[9];
  
  union {
    __IM  uint16_t ADDR16;                      /*!< (@ 0x00000040) A/D Data Register 16                                       */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR16_b;
  } ;
  
  union {
    __IM  uint16_t ADDR17;                      /*!< (@ 0x00000042) A/D Data Register 17                                       */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR17_b;
  } ;
  __IM  uint16_t  RESERVED4[2];
  
  union {
    __IM  uint16_t ADDR20;                      /*!< (@ 0x00000048) A/D Data Register 20                                       */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR20_b;
  } ;
  
  union {
    __IM  uint16_t ADDR21;                      /*!< (@ 0x0000004A) A/D Data Register 21                                       */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR21_b;
  } ;
  
  union {
    __IM  uint16_t ADDR22;                      /*!< (@ 0x0000004C) A/D Data Register 22                                       */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR22_b;
  } ;
  
  union {
    __IM  uint16_t ADDR23;                      /*!< (@ 0x0000004E) A/D Data Register 23                                       */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR23_b;
  } ;
  
  union {
    __IM  uint16_t ADDR24;                      /*!< (@ 0x00000050) A/D Data Register 24                                       */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR24_b;
  } ;
  
  union {
    __IM  uint16_t ADDR25;                      /*!< (@ 0x00000052) A/D Data Register 25                                       */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR25_b;
  } ;
  
  union {
    __IM  uint16_t ADDR26;                      /*!< (@ 0x00000054) A/D Data Register 26                                       */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR26_b;
  } ;
  
  union {
    __IM  uint16_t ADDR27;                      /*!< (@ 0x00000056) A/D Data Register 27                                       */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR27_b;
  } ;
  
  union {
    __IM  uint16_t ADDR28;                      /*!< (@ 0x00000058) A/D Data Register 28                                       */
    
    struct {
      __IM  uint16_t ADDR       : 16;           /*!< [15..0] The ADDR register is a 16-bit read-only registers for
                                                     storing the result of A/D conversion.                                     */
    } ADDR28_b;
  } ;
  __IM  uint16_t  RESERVED5[5];
  
  union {
    __IOM uint8_t ADSCLKCR;                     /*!< (@ 0x00000064) ADSCLKCR                                                   */
    
    struct {
      __IOM uint8_t SCLKEN      : 1;            /*!< [0..0] SCLKEN                                                             */
            uint8_t             : 7;
    } ADSCLKCR_b;
  } ;
  __IM  uint8_t   RESERVED6;
  __IM  uint16_t  RESERVED7[10];
  
  union {
    __IOM uint8_t ADDISCR;                      /*!< (@ 0x0000007A) A/D Disconnection Detection Control Register               */
    
    struct {
      __IOM uint8_t ADNDIS      : 5;            /*!< [4..0] Disconnection Detection Assist SettingNOTE:When the A/D
                                                     conversion of temperature sensor output is selected, ADNDIS[4:0]
                                                     are set to 0Fh for discharging.                                           */
            uint8_t             : 3;
    } ADDISCR_b;
  } ;
  __IM  uint8_t   RESERVED8[2];
  
  union {
    __IOM uint8_t ADELCCR;                      /*!< (@ 0x0000007D) ADELCCR                                                    */
    
    struct {
      __IOM uint8_t ELCC        : 2;            /*!< [1..0] Event Link Control                                                 */
      __IOM uint8_t GCELC       : 1;            /*!< [2..2] Group C Event Link Control                                         */
            uint8_t             : 5;
    } ADELCCR_b;
  } ;
  __IM  uint16_t  RESERVED9;
  
  union {
    __IOM uint16_t ADGSPCR;                     /*!< (@ 0x00000080) A/D Group Scan Priority Control Register                   */
    
    struct {
      __IOM uint16_t PGS        : 1;            /*!< [0..0] Group priority control setting bit.Note: When the PGS
                                                     bit is to be set to 1, the ADCSR.ADCS[1:0] bits must be
                                                     set to 01b (group scan mode). If the bits are set to any
                                                     other values, proper operation is not guaranteed.                         */
      __IOM uint16_t GBRSCN     : 1;            /*!< [1..1] Low priority group Restart Setting(Enabled only when
                                                     PGS = 1. Reserved when PGS = 0.)                                          */
            uint16_t            : 12;
      __IOM uint16_t LGRRS      : 1;            /*!< [14..14] LGRRS                                                            */
      __IOM uint16_t GBRP       : 1;            /*!< [15..15] Single Scan Continuous Start(Enabled only when PGS
                                                     = 1. Reserved when PGS = 0.)Note: When the GBRP bit has
                                                     been set to 1, single scan is performed continuously for
                                                     the lowest priority group regardless of the setting of
                                                     the GBRSCN bit.                                                           */
    } ADGSPCR_b;
  } ;
  __IM  uint16_t  RESERVED10[4];
  
  union {
    __IOM uint8_t ADHVREFCNT;                   /*!< (@ 0x0000008A) A/D High-Potential/Low-Potential Reference Voltage
                                                                    Control Register                                           */
    
    struct {
      __IOM uint8_t HVSEL       : 2;            /*!< [1..0] High-Potential Reference Voltage Select                            */
            uint8_t             : 2;
      __IOM uint8_t LVSEL       : 1;            /*!< [4..4] Low-Potential Reference Voltage Select                             */
            uint8_t             : 3;
    } ADHVREFCNT_b;
  } ;
  __IM  uint8_t   RESERVED11;
  
  union {
    __IM  uint8_t ADWINMON;                     /*!< (@ 0x0000008C) A/D Compare Function Window A/B Status Monitor
                                                                    Register                                                   */
    
    struct {
      __IM  uint8_t MONCOMB     : 1;            /*!< [0..0] Combination result monitorThis bit indicates the combination
                                                     result.This bit is valid when both window A operation and
                                                     window B operation are enabled.                                           */
            uint8_t             : 3;
      __IM  uint8_t MONCMPA     : 1;            /*!< [4..4] Comparison Result Monitor A                                        */
      __IM  uint8_t MONCMPB     : 1;            /*!< [5..5] Comparison Result Monitor B                                        */
            uint8_t             : 2;
    } ADWINMON_b;
  } ;
  __IM  uint8_t   RESERVED12;
  __IM  uint16_t  RESERVED13;
  
  union {
    __IOM uint16_t ADCMPCR;                     /*!< (@ 0x00000090) A/D Compare Function Control Register                      */
    
    struct {
      __IOM uint16_t CMPAB      : 2;            /*!< [1..0] Window A/B Composite Conditions SettingNOTE: These bits
                                                     are valid when both window A and window B are enabled (CMPAE
                                                     = 1 and CMPBE = 1).                                                       */
            uint16_t            : 7;
      __IOM uint16_t CMPBE      : 1;            /*!< [9..9] Compare Window B Operation Enable                                  */
            uint16_t            : 1;
      __IOM uint16_t CMPAE      : 1;            /*!< [11..11] Compare Window A Operation Enable                                */
            uint16_t            : 1;
      __IOM uint16_t CMPBIE     : 1;            /*!< [13..13] Compare B Interrupt Enable                                       */
      __IOM uint16_t WCMPE      : 1;            /*!< [14..14] Window Function Setting                                          */
      __IOM uint16_t CMPAIE     : 1;            /*!< [15..15] Compare A Interrupt Enable                                       */
    } ADCMPCR_b;
  } ;
  
  union {
    __IOM uint8_t ADCMPANSER;                   /*!< (@ 0x00000092) A/D Compare Function Window A Extended Input
                                                                    Select Register                                            */
    
    struct {
      __IOM uint8_t CMPTSA      : 1;            /*!< [0..0] Temperature sensor output Compare selection bit.                   */
            uint8_t             : 7;
    } ADCMPANSER_b;
  } ;
  
  union {
    __IOM uint8_t ADCMPLER;                     /*!< (@ 0x00000093) A/D Compare Function Window A Extended Input
                                                                    Comparison Condition Setting Register                      */
    
    struct {
      __IOM uint8_t CMPLTSA     : 1;            /*!< [0..0] Compare Window A Temperature Sensor Output Comparison
                                                     Condition Select                                                          */
            uint8_t             : 7;
    } ADCMPLER_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPANSR0;                  /*!< (@ 0x00000094) A/D Compare Function Window A Channel Select
                                                                    Register 0                                                 */
    
    struct {
      __IOM uint16_t CMPCHA00   : 1;            /*!< [0..0] AN000 Select                                                       */
      __IOM uint16_t CMPCHA01   : 1;            /*!< [1..1] AN001 Select                                                       */
      __IOM uint16_t CMPCHA02   : 1;            /*!< [2..2] AN002 Select                                                       */
      __IOM uint16_t CMPCHA03   : 1;            /*!< [3..3] AN003 Select                                                       */
      __IOM uint16_t CMPCHA04   : 1;            /*!< [4..4] AN004 Select                                                       */
      __IOM uint16_t CMPCHA05   : 1;            /*!< [5..5] AN005 Select                                                       */
      __IOM uint16_t CMPCHA06   : 1;            /*!< [6..6] AN006 Select                                                       */
            uint16_t            : 9;
    } ADCMPANSR0_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPANSR1;                  /*!< (@ 0x00000096) A/D Compare Function Window A Channel Select
                                                                    Register 1                                                 */
    
    struct {
      __IOM uint16_t CMPCHA16   : 1;            /*!< [0..0] AN0016 Select                                                      */
      __IOM uint16_t CMPCHA17   : 1;            /*!< [1..1] AN0017 Select                                                      */
            uint16_t            : 2;
      __IOM uint16_t CMPCHA20   : 1;            /*!< [4..4] AN0020 Select                                                      */
      __IOM uint16_t CMPCHA21   : 1;            /*!< [5..5] AN0021 Select                                                      */
      __IOM uint16_t CMPCHA22   : 1;            /*!< [6..6] AN0022 Select                                                      */
      __IOM uint16_t CMPCHA23   : 1;            /*!< [7..7] AN0023 Select                                                      */
      __IOM uint16_t CMPCHA24   : 1;            /*!< [8..8] AN0024 Select                                                      */
      __IOM uint16_t CMPCHA25   : 1;            /*!< [9..9] AN0025 Select                                                      */
      __IOM uint16_t CMPCHA26   : 1;            /*!< [10..10] AN0026 Select                                                    */
      __IOM uint16_t CMPCHA27   : 1;            /*!< [11..11] AN0027 Select                                                    */
      __IOM uint16_t CMPCHA28   : 1;            /*!< [12..12] AN0028 Select                                                    */
            uint16_t            : 3;
    } ADCMPANSR1_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPLR0;                    /*!< (@ 0x00000098) A/D Compare Function Window A Comparison Condition
                                                                    Setting Register 0                                         */
    
    struct {
      __IOM uint16_t CMPLCHA00  : 1;            /*!< [0..0] Comparison condition of AN000                                      */
      __IOM uint16_t CMPLCHA01  : 1;            /*!< [1..1] Comparison condition of AN001                                      */
      __IOM uint16_t CMPLCHA02  : 1;            /*!< [2..2] Comparison condition of AN002                                      */
      __IOM uint16_t CMPLCHA03  : 1;            /*!< [3..3] Comparison condition of AN003                                      */
      __IOM uint16_t CMPLCHA04  : 1;            /*!< [4..4] Comparison condition of AN004                                      */
      __IOM uint16_t CMPLCHA05  : 1;            /*!< [5..5] Comparison condition of AN005                                      */
      __IOM uint16_t CMPLCHA06  : 1;            /*!< [6..6] Comparison condition of AN006                                      */
            uint16_t            : 9;
    } ADCMPLR0_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPLR1;                    /*!< (@ 0x0000009A) A/D Compare Function Window A Comparison Condition
                                                                    Setting Register 1                                         */
    
    struct {
      __IOM uint16_t CMPLCHA16  : 1;            /*!< [0..0] Comparison condition of AN0016                                     */
      __IOM uint16_t CMPLCHA17  : 1;            /*!< [1..1] Comparison condition of AN0017                                     */
            uint16_t            : 2;
      __IOM uint16_t CMPLCHA20  : 1;            /*!< [4..4] Comparison condition of AN0020                                     */
      __IOM uint16_t CMPLCHA21  : 1;            /*!< [5..5] Comparison condition of AN0021                                     */
      __IOM uint16_t CMPLCHA22  : 1;            /*!< [6..6] Comparison condition of AN0022                                     */
      __IOM uint16_t CMPLCHA23  : 1;            /*!< [7..7] Comparison condition of AN0023                                     */
      __IOM uint16_t CMPLCHA24  : 1;            /*!< [8..8] Comparison condition of AN0024                                     */
      __IOM uint16_t CMPLCHA25  : 1;            /*!< [9..9] Comparison condition of AN0025                                     */
      __IOM uint16_t CMPLCHA26  : 1;            /*!< [10..10] Comparison condition of AN0026                                   */
      __IOM uint16_t CMPLCHA27  : 1;            /*!< [11..11] Comparison condition of AN0027                                   */
      __IOM uint16_t CMPLCHA28  : 1;            /*!< [12..12] Comparison condition of AN0028                                   */
            uint16_t            : 3;
    } ADCMPLR1_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPDR0;                    /*!< (@ 0x0000009C) A/D Compare Function Window A Lower-Side Level
                                                                    Setting Register                                           */
    
    struct {
      __IOM uint16_t ADCMPDR0   : 16;           /*!< [15..0] The ADCMPDR0 register sets the reference data when the
                                                     compare window A function is used. ADCMPDR0 sets the lower-side
                                                     level of window A.                                                        */
    } ADCMPDR0_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPDR1;                    /*!< (@ 0x0000009E) A/D Compare Function Window A Upper-Side Level
                                                                    Setting Register                                           */
    
    struct {
      __IOM uint16_t ADCMPDR1   : 16;           /*!< [15..0] The ADCMPDR1 register sets the reference data when the
                                                     compare window A function is used. ADCMPDR1 sets the upper-side
                                                     level of window A..                                                       */
    } ADCMPDR1_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPSR0;                    /*!< (@ 0x000000A0) A/D Compare Function Window A Channel Status
                                                                    Register 0                                                 */
    
    struct {
      __IOM uint16_t CMPSTCHA00 : 1;            /*!< [0..0] Compare window A flag of AN000                                     */
      __IOM uint16_t CMPSTCHA01 : 1;            /*!< [1..1] Compare window A flag of AN001                                     */
      __IOM uint16_t CMPSTCHA02 : 1;            /*!< [2..2] Compare window A flag of AN002                                     */
      __IOM uint16_t CMPSTCHA03 : 1;            /*!< [3..3] Compare window A flag of AN003                                     */
      __IOM uint16_t CMPSTCHA04 : 1;            /*!< [4..4] Compare window A flag of AN004                                     */
      __IOM uint16_t CMPSTCHA05 : 1;            /*!< [5..5] Compare window A flag of AN005                                     */
      __IOM uint16_t CMPSTCHA06 : 1;            /*!< [6..6] Compare window A flag of AN006                                     */
            uint16_t            : 9;
    } ADCMPSR0_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPSR1;                    /*!< (@ 0x000000A2) A/D Compare Function Window A Channel Status
                                                                    Register 1                                                 */
    
    struct {
      __IOM uint16_t CMPSTCHA16 : 1;            /*!< [0..0] Compare window A flag of AN0016                                    */
      __IOM uint16_t CMPSTCHA17 : 1;            /*!< [1..1] Compare window A flag of AN0017                                    */
            uint16_t            : 2;
      __IOM uint16_t CMPSTCHA20 : 1;            /*!< [4..4] Compare window A flag of AN0020                                    */
      __IOM uint16_t CMPSTCHA21 : 1;            /*!< [5..5] Compare window A flag of AN0021                                    */
      __IOM uint16_t CMPSTCHA22 : 1;            /*!< [6..6] Compare window A flag of AN0022                                    */
      __IOM uint16_t CMPSTCHA23 : 1;            /*!< [7..7] Compare window A flag of AN0023                                    */
      __IOM uint16_t CMPSTCHA24 : 1;            /*!< [8..8] Compare window A flag of AN0024                                    */
      __IOM uint16_t CMPSTCHA25 : 1;            /*!< [9..9] Compare window A flag of AN0025                                    */
      __IOM uint16_t CMPSTCHA26 : 1;            /*!< [10..10] Compare window A flag of AN0026                                  */
      __IOM uint16_t CMPSTCHA27 : 1;            /*!< [11..11] Compare window A flag of AN0027                                  */
      __IOM uint16_t CMPSTCHA28 : 1;            /*!< [12..12] Compare window A flag of AN0028                                  */
            uint16_t            : 3;
    } ADCMPSR1_b;
  } ;
  
  union {
    __IOM uint8_t ADCMPSER;                     /*!< (@ 0x000000A4) A/D Compare Function Window A Extended Input
                                                                    Channel Status Register                                    */
    
    struct {
      __IOM uint8_t CMPSTTSA    : 1;            /*!< [0..0] Compare Window A Temperature Sensor Output Compare Flag
                                                     When window A operation is enabled (ADCMPCR.CMPAE = 1b),
                                                     this bit indicates the temperature sensor output comparison
                                                     result.                                                                   */
            uint8_t             : 7;
    } ADCMPSER_b;
  } ;
  __IM  uint8_t   RESERVED14;
  
  union {
    __IOM uint8_t ADCMPBNSR;                    /*!< (@ 0x000000A6) A/D Compare Function Window B Channel Selection
                                                                    Register                                                   */
    
    struct {
      __IOM uint8_t CMPCHB      : 6;            /*!< [5..0] Compare window B channel selection bit.The channel that
                                                     compares it on the condition of compare window B is selected.             */
            uint8_t             : 1;
      __IOM uint8_t CMPLB       : 1;            /*!< [7..7] Compare window B Compare condition setting bit.                    */
    } ADCMPBNSR_b;
  } ;
  __IM  uint8_t   RESERVED15;
  
  union {
    __IOM uint16_t ADWINLLB;                    /*!< (@ 0x000000A8) A/D Compare Function Window B Lower-Side Level
                                                                    Setting Register                                           */
    
    struct {
      __IOM uint16_t ADWINLLB   : 16;           /*!< [15..0] This register is used to compare A window function is
                                                     used to set the lower level of the window B.                              */
    } ADWINLLB_b;
  } ;
  
  union {
    __IOM uint16_t ADWINULB;                    /*!< (@ 0x000000AA) A/D Compare Function Window B Upper-Side Level
                                                                    Setting Register                                           */
    
    struct {
      __IOM uint16_t ADWINULB   : 16;           /*!< [15..0] This register is used to compare A window function is
                                                     used to set the higher level of the window B.                             */
    } ADWINULB_b;
  } ;
  
  union {
    __IOM uint8_t ADCMPBSR;                     /*!< (@ 0x000000AC) A/D Compare Function Window B Status Register              */
    
    struct {
      __IOM uint8_t CMPSTB      : 1;            /*!< [0..0] Compare window B flag.It is a status flag that shows
                                                     the comparative result of CH (AN000-AN019 and temperature
                                                     sensor) made the object of window B relation condition.                   */
            uint8_t             : 7;
    } ADCMPBSR_b;
  } ;
  __IM  uint8_t   RESERVED16;
  __IM  uint16_t  RESERVED17[19];
  
  union {
    __IOM uint16_t ADANSC0;                     /*!< (@ 0x000000D4) A/D Channel Select Register C0                             */
    
    struct {
      __IOM uint16_t ANSC00     : 1;            /*!< [0..0] AN000 Select                                                       */
      __IOM uint16_t ANSC01     : 1;            /*!< [1..1] AN001 Select                                                       */
      __IOM uint16_t ANSC02     : 1;            /*!< [2..2] AN002 Select                                                       */
      __IOM uint16_t ANSC03     : 1;            /*!< [3..3] AN003 Select                                                       */
      __IOM uint16_t ANSC04     : 1;            /*!< [4..4] AN004 Select                                                       */
      __IOM uint16_t ANSC05     : 1;            /*!< [5..5] AN005 Select                                                       */
      __IOM uint16_t ANSC06     : 1;            /*!< [6..6] AN006 Select                                                       */
            uint16_t            : 9;
    } ADANSC0_b;
  } ;
  
  union {
    __IOM uint16_t ADANSC1;                     /*!< (@ 0x000000D6) A/D Channel Select Register C1                             */
    
    struct {
      __IOM uint16_t ANSC16     : 1;            /*!< [0..0] AN0016 Select                                                      */
      __IOM uint16_t ANSC17     : 1;            /*!< [1..1] AN0017 Select                                                      */
            uint16_t            : 2;
      __IOM uint16_t ANSC20     : 1;            /*!< [4..4] AN0020 Select                                                      */
      __IOM uint16_t ANSC21     : 1;            /*!< [5..5] AN0021 Select                                                      */
      __IOM uint16_t ANSC22     : 1;            /*!< [6..6] AN0022 Select                                                      */
      __IOM uint16_t ANSC23     : 1;            /*!< [7..7] AN0023 Select                                                      */
      __IOM uint16_t ANSC24     : 1;            /*!< [8..8] AN0024 Select                                                      */
      __IOM uint16_t ANSC25     : 1;            /*!< [9..9] AN0025 Select                                                      */
      __IOM uint16_t ANSC26     : 1;            /*!< [10..10] AN0026 Select                                                    */
      __IOM uint16_t ANSC27     : 1;            /*!< [11..11] AN0027 Select                                                    */
      __IOM uint16_t ANSC28     : 1;            /*!< [12..12] AN0028 Select                                                    */
            uint16_t            : 3;
    } ADANSC1_b;
  } ;
  
  union {
    __IOM uint8_t ADGCEXCR;                     /*!< (@ 0x000000D8) ADGCEXCR                                                   */
    
    struct {
      __IOM uint8_t TSSC        : 1;            /*!< [0..0] TSSC                                                               */
            uint8_t             : 7;
    } ADGCEXCR_b;
  } ;
  
  union {
    __IOM uint8_t ADGCTRGR;                     /*!< (@ 0x000000D9) ADGCTRGR                                                   */
    
    struct {
      __IOM uint8_t TRSC        : 6;            /*!< [5..0] TRSC                                                               */
      __IOM uint8_t GCADIE      : 1;            /*!< [6..6] GCADIE                                                             */
      __IOM uint8_t GRCE        : 1;            /*!< [7..7] GRCE                                                               */
    } ADGCTRGR_b;
  } ;
  __IM  uint16_t  RESERVED18;
  __IM  uint8_t   RESERVED19;
  
  union {
    __IOM uint8_t ADSSTRL;                      /*!< (@ 0x000000DD) A/D Sampling State Register L                              */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting (AN016-AN019)                                */
    } ADSSTRL_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTRT;                      /*!< (@ 0x000000DE) A/D Sampling State Register T                              */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting (temperature sensor output)                  */
    } ADSSTRT_b;
  } ;
  __IM  uint8_t   RESERVED20;
  
  union {
    __IOM uint8_t ADSSTR0;                      /*!< (@ 0x000000E0) A/D Sampling State Register 0                              */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling time setting                                              */
    } ADSSTR0_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR1;                      /*!< (@ 0x000000E1) A/D Sampling State Register 1                              */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling time setting                                              */
    } ADSSTR1_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR2;                      /*!< (@ 0x000000E2) A/D Sampling State Register 2                              */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling time setting                                              */
    } ADSSTR2_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR3;                      /*!< (@ 0x000000E3) A/D Sampling State Register 3                              */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling time setting                                              */
    } ADSSTR3_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR4;                      /*!< (@ 0x000000E4) A/D Sampling State Register 4                              */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling time setting                                              */
    } ADSSTR4_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR5;                      /*!< (@ 0x000000E5) A/D Sampling State Register 5                              */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling time setting                                              */
    } ADSSTR5_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR6;                      /*!< (@ 0x000000E6) A/D Sampling State Register 6                              */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling time setting                                              */
    } ADSSTR6_b;
  } ;
  __IM  uint8_t   RESERVED21;
  __IM  uint16_t  RESERVED22[44];
  
  union {
    __IOM uint8_t ADCALC;                       /*!< (@ 0x00000140) ADCALC                                                     */
    
    struct {
            uint8_t             : 6;
      __IOM uint8_t CALEN       : 1;            /*!< [6..6] CALEN                                                              */
      __IOM uint8_t CALST       : 1;            /*!< [7..7] CALST                                                              */
    } ADCALC_b;
  } ;
  __IM  uint8_t   RESERVED23;
  __IM  uint16_t  RESERVED24[23];
  
  union {
    __IOM uint16_t ADEDCR0;                     /*!< (@ 0x00000170) ADEDCR0                                                    */
    
    struct {
      __IOM uint16_t EDANC0     : 2;            /*!< [1..0] EDANC0                                                             */
            uint16_t            : 2;
      __IOM uint16_t EDANC1     : 2;            /*!< [5..4] EDANC1                                                             */
            uint16_t            : 2;
      __IOM uint16_t EDANC2     : 2;            /*!< [9..8] EDANC2                                                             */
            uint16_t            : 2;
      __IOM uint16_t EDANC3     : 2;            /*!< [13..12] EDANC3                                                           */
            uint16_t            : 2;
    } ADEDCR0_b;
  } ;
  
  union {
    __IOM uint16_t ADEDCR1;                     /*!< (@ 0x00000172) ADEDCR1                                                    */
    
    struct {
      __IOM uint16_t EDANC4     : 2;            /*!< [1..0] EDANC4                                                             */
            uint16_t            : 2;
      __IOM uint16_t EDANC5     : 2;            /*!< [5..4] EDANC5                                                             */
            uint16_t            : 2;
      __IOM uint16_t EDANC6     : 2;            /*!< [9..8] EDANC6                                                             */
            uint16_t            : 6;
    } ADEDCR1_b;
  } ;
  __IM  uint16_t  RESERVED25[2];
  
  union {
    __IOM uint16_t ADEDCR4;                     /*!< (@ 0x00000178) ADEDCR4                                                    */
    
    struct {
      __IOM uint16_t EDANC16    : 2;            /*!< [1..0] EDANC16                                                            */
            uint16_t            : 2;
      __IOM uint16_t EDANC17    : 2;            /*!< [5..4] EDANC17                                                            */
            uint16_t            : 10;
    } ADEDCR4_b;
  } ;
  
  union {
    __IOM uint16_t ADEDCR5;                     /*!< (@ 0x0000017A) ADEDCR5                                                    */
    
    struct {
      __IOM uint16_t EDANC20    : 2;            /*!< [1..0] EDANC20                                                            */
            uint16_t            : 2;
      __IOM uint16_t EDANC21    : 2;            /*!< [5..4] EDANC21                                                            */
            uint16_t            : 2;
      __IOM uint16_t EDANC22    : 2;            /*!< [9..8] EDANC22                                                            */
            uint16_t            : 2;
      __IOM uint16_t EDANC23    : 2;            /*!< [13..12] EDANC23                                                          */
            uint16_t            : 2;
    } ADEDCR5_b;
  } ;
  
  union {
    __IOM uint16_t ADEDCR6;                     /*!< (@ 0x0000017C) ADEDCR6                                                    */
    
    struct {
      __IOM uint16_t EDANC24    : 2;            /*!< [1..0] EDANC24                                                            */
            uint16_t            : 2;
      __IOM uint16_t EDANC25    : 2;            /*!< [5..4] EDANC25                                                            */
            uint16_t            : 2;
      __IOM uint16_t EDANC26    : 2;            /*!< [9..8] EDANC26                                                            */
            uint16_t            : 2;
      __IOM uint16_t EDANC27    : 2;            /*!< [13..12] EDANC27                                                          */
            uint16_t            : 2;
    } ADEDCR6_b;
  } ;
  
  union {
    __IOM uint16_t ADEDCR7;                     /*!< (@ 0x0000017E) ADEDCR7                                                    */
    
    struct {
      __IOM uint16_t EDANC28    : 2;            /*!< [1..0] EDANC28                                                            */
            uint16_t            : 14;
    } ADEDCR7_b;
  } ;
  
  union {
    __IOM uint16_t ADEDEXCR;                    /*!< (@ 0x00000180) ADEDEXCR                                                   */
    
    struct {
      __IOM uint16_t EDDIAGC    : 2;            /*!< [1..0] EDDIAGC                                                            */
            uint16_t            : 2;
      __IOM uint16_t EDTSC      : 2;            /*!< [5..4] EDTSC                                                              */
            uint16_t            : 10;
    } ADEDEXCR_b;
  } ;
  
  union {
    __IOM uint16_t ADEDDMY0;                    /*!< (@ 0x00000182) ADEDDMY0                                                   */
    
    struct {
      __IOM uint16_t EDDMY0     : 14;           /*!< [13..0] EDDMY0                                                            */
            uint16_t            : 2;
    } ADEDDMY0_b;
  } ;
  
  union {
    __IOM uint16_t ADEDDMY1;                    /*!< (@ 0x00000184) ADEDDMY1                                                   */
    
    struct {
      __IOM uint16_t EDDMY1     : 14;           /*!< [13..0] EDDMY1                                                            */
            uint16_t            : 2;
    } ADEDDMY1_b;
  } ;
  __IM  uint16_t  RESERVED26[29];
  
  union {
    __IOM uint8_t ADSCS0;                       /*!< (@ 0x000001C0) ADSCS0                                                     */
    
    struct {
      __IOM uint8_t SCS00       : 5;            /*!< [4..0] SCS00                                                              */
            uint8_t             : 3;
    } ADSCS0_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS1;                       /*!< (@ 0x000001C1) ADSCS1                                                     */
    
    struct {
      __IOM uint8_t SCS01       : 5;            /*!< [4..0] SCS01                                                              */
            uint8_t             : 3;
    } ADSCS1_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS2;                       /*!< (@ 0x000001C2) ADSCS2                                                     */
    
    struct {
      __IOM uint8_t SCS02       : 5;            /*!< [4..0] SCS02                                                              */
            uint8_t             : 3;
    } ADSCS2_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS3;                       /*!< (@ 0x000001C3) ADSCS3                                                     */
    
    struct {
      __IOM uint8_t SCS03       : 5;            /*!< [4..0] SCS03                                                              */
            uint8_t             : 3;
    } ADSCS3_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS4;                       /*!< (@ 0x000001C4) ADSCS4                                                     */
    
    struct {
      __IOM uint8_t SCS04       : 5;            /*!< [4..0] SCS04                                                              */
            uint8_t             : 3;
    } ADSCS4_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS5;                       /*!< (@ 0x000001C5) ADSCS5                                                     */
    
    struct {
      __IOM uint8_t SCS05       : 5;            /*!< [4..0] SCS05                                                              */
            uint8_t             : 3;
    } ADSCS5_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS6;                       /*!< (@ 0x000001C6) ADSCS6                                                     */
    
    struct {
      __IOM uint8_t SCS06       : 5;            /*!< [4..0] SCS06                                                              */
            uint8_t             : 3;
    } ADSCS6_b;
  } ;
  __IM  uint8_t   RESERVED27;
  __IM  uint16_t  RESERVED28[4];
  
  union {
    __IOM uint8_t ADSCS16;                      /*!< (@ 0x000001D0) ADSCS16                                                    */
    
    struct {
      __IOM uint8_t SCS07       : 5;            /*!< [4..0] SCS07                                                              */
            uint8_t             : 3;
    } ADSCS16_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS17;                      /*!< (@ 0x000001D1) ADSCS17                                                    */
    
    struct {
      __IOM uint8_t SCS08       : 5;            /*!< [4..0] SCS08                                                              */
            uint8_t             : 3;
    } ADSCS17_b;
  } ;
  __IM  uint16_t  RESERVED29;
  
  union {
    __IOM uint8_t ADSCS20;                      /*!< (@ 0x000001D4) ADSCS20                                                    */
    
    struct {
      __IOM uint8_t SCS11       : 5;            /*!< [4..0] SCS11                                                              */
            uint8_t             : 3;
    } ADSCS20_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS21;                      /*!< (@ 0x000001D5) ADSCS21                                                    */
    
    struct {
      __IOM uint8_t SCS12       : 5;            /*!< [4..0] SCS12                                                              */
            uint8_t             : 3;
    } ADSCS21_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS22;                      /*!< (@ 0x000001D6) ADSCS22                                                    */
    
    struct {
      __IOM uint8_t SCS13       : 5;            /*!< [4..0] SCS13                                                              */
            uint8_t             : 3;
    } ADSCS22_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS23;                      /*!< (@ 0x000001D7) ADSCS23                                                    */
    
    struct {
      __IOM uint8_t SCS14       : 5;            /*!< [4..0] SCS14                                                              */
            uint8_t             : 3;
    } ADSCS23_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS24;                      /*!< (@ 0x000001D8) ADSCS24                                                    */
    
    struct {
      __IOM uint8_t SCS15       : 5;            /*!< [4..0] SCS15                                                              */
            uint8_t             : 3;
    } ADSCS24_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS25;                      /*!< (@ 0x000001D9) ADSCS25                                                    */
    
    struct {
      __IOM uint8_t SCS16       : 5;            /*!< [4..0] SCS16                                                              */
            uint8_t             : 3;
    } ADSCS25_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS26;                      /*!< (@ 0x000001DA) ADSCS26                                                    */
    
    struct {
      __IOM uint8_t SCS17       : 5;            /*!< [4..0] SCS17                                                              */
            uint8_t             : 3;
    } ADSCS26_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS27;                      /*!< (@ 0x000001DB) ADSCS27                                                    */
    
    struct {
      __IOM uint8_t SCS18       : 5;            /*!< [4..0] SCS18                                                              */
            uint8_t             : 3;
    } ADSCS27_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS28;                      /*!< (@ 0x000001DC) ADSCS28                                                    */
    
    struct {
      __IOM uint8_t SCS19       : 5;            /*!< [4..0] SCS19                                                              */
            uint8_t             : 3;
    } ADSCS28_b;
  } ;
  __IM  uint8_t   RESERVED30;
  __IM  uint16_t  RESERVED31;
} S14AD_Type;                                   /*!< Size = 480 (0x1e0)                                                        */



/* =========================================================================================================================== */
/* ================                                           SCI0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Communication Interface 0 (SCI0)
  */

typedef struct {                                /*!< (@ 0x40070000) SCI0 Structure                                             */
  
  union {
    union {
      __IOM uint8_t SMR;                        /*!< (@ 0x00000000) Serial Mode Register (SCMR.SMIF = 0)                       */
      
      struct {
        __IOM uint8_t CKS       : 2;            /*!< [1..0] Clock Select                                                       */
        __IOM uint8_t MP        : 1;            /*!< [2..2] Multi-Processor Mode(Valid only in asynchronous mode)              */
        __IOM uint8_t STOP      : 1;            /*!< [3..3] Stop Bit Length(Valid only in asynchronous mode)                   */
        __IOM uint8_t PM        : 1;            /*!< [4..4] Parity Mode (Valid only when the PE bit is 1)                      */
        __IOM uint8_t PE        : 1;            /*!< [5..5] Parity Enable(Valid only in asynchronous mode)                     */
        __IOM uint8_t CHR       : 1;            /*!< [6..6] Character Length(Valid only in asynchronous mode)                  */
        __IOM uint8_t CM        : 1;            /*!< [7..7] Communications Mode                                                */
      } SMR_b;
    } ;
    
    union {
      __IOM uint8_t SMR_SMCI;                   /*!< (@ 0x00000000) Serial mode register (SCMR.SMIF = 1)                       */
      
      struct {
        __IOM uint8_t CKS       : 2;            /*!< [1..0] Clock Select                                                       */
        __IOM uint8_t BCP       : 2;            /*!< [3..2] Base Clock Pulse                                                   */
        __IOM uint8_t PM        : 1;            /*!< [4..4] Parity Mode (Valid only when the PE bit is 1)                      */
        __IOM uint8_t PE        : 1;            /*!< [5..5] Parity Enable(Valid only in asynchronous mode)                     */
        __IOM uint8_t BLK       : 1;            /*!< [6..6] Block Transfer Mode                                                */
        __IOM uint8_t GM        : 1;            /*!< [7..7] GSM Mode                                                           */
      } SMR_SMCI_b;
    } ;
  };
  
  union {
    __IOM uint8_t BRR;                          /*!< (@ 0x00000001) Bit Rate Register                                          */
    
    struct {
      __IOM uint8_t BRR         : 8;            /*!< [7..0] BRR is an 8-bit register that adjusts the bit rate.                */
    } BRR_b;
  } ;
  
  union {
    union {
      __IOM uint8_t SCR;                        /*!< (@ 0x00000002) Serial Control Register (SCMR.SMIF = 0)                    */
      
      struct {
        __IOM uint8_t CKE       : 2;            /*!< [1..0] Clock Enable                                                       */
        __IOM uint8_t TEIE      : 1;            /*!< [2..2] Transmit End Interrupt Enable                                      */
        __IOM uint8_t MPIE      : 1;            /*!< [3..3] Multi-Processor Interrupt Enable(Valid in asynchronous
                                                     mode when SMR.MP = 1)                                                     */
        __IOM uint8_t RE        : 1;            /*!< [4..4] Receive Enable                                                     */
        __IOM uint8_t TE        : 1;            /*!< [5..5] Transmit Enable                                                    */
        __IOM uint8_t RIE       : 1;            /*!< [6..6] Receive Interrupt Enable                                           */
        __IOM uint8_t TIE       : 1;            /*!< [7..7] Transmit Interrupt Enable                                          */
      } SCR_b;
    } ;
    
    union {
      __IOM uint8_t SCR_SMCI;                   /*!< (@ 0x00000002) Serial Control Register (SCMR.SMIF =1)                     */
      
      struct {
        __IOM uint8_t CKE       : 2;            /*!< [1..0] Clock Enable                                                       */
        __IOM uint8_t TEIE      : 1;            /*!< [2..2] This bit should be 0 in smart card interface mode.                 */
        __IOM uint8_t MPIE      : 1;            /*!< [3..3] This bit should be 0 in smart card interface mode.                 */
        __IOM uint8_t RE        : 1;            /*!< [4..4] Receive Enable                                                     */
        __IOM uint8_t TE        : 1;            /*!< [5..5] Transmit Enable                                                    */
        __IOM uint8_t RIE       : 1;            /*!< [6..6] Receive Interrupt Enable                                           */
        __IOM uint8_t TIE       : 1;            /*!< [7..7] Transmit Interrupt Enable                                          */
      } SCR_SMCI_b;
    } ;
  };
  
  union {
    __IOM uint8_t TDR;                          /*!< (@ 0x00000003) Transmit Data Register                                     */
    
    struct {
      __IOM uint8_t TDR         : 8;            /*!< [7..0] TDR is an 8-bit register that stores transmit data.                */
    } TDR_b;
  } ;
  
  union {
    union {
      __IOM uint8_t SSR;                        /*!< (@ 0x00000004) Serial Status Register(SCMR.SMIF = 0 and FCR.FM=0)         */
      
      struct {
        __IOM uint8_t MPBT      : 1;            /*!< [0..0] Multi-Processor Bit Transfer. Sets the multi-processor
                                                     bit for adding to the transmission frame                                  */
        __IM  uint8_t MPB       : 1;            /*!< [1..1] Multi-Processor Bit. Value of the multi-processor bit
                                                     in the reception frame                                                    */
        __IM  uint8_t TEND      : 1;            /*!< [2..2] Transmit End Flag                                                  */
        __IOM uint8_t PER       : 1;            /*!< [3..3] Parity Error Flag                                                  */
        __IOM uint8_t FER       : 1;            /*!< [4..4] Framing Error Flag                                                 */
        __IOM uint8_t ORER      : 1;            /*!< [5..5] Overrun Error Flag                                                 */
        __IOM uint8_t RDRF      : 1;            /*!< [6..6] Receive Data Full Flag                                             */
        __IOM uint8_t TDRE      : 1;            /*!< [7..7] Transmit Data Empty Flag                                           */
      } SSR_b;
    } ;
    
    union {
      __IOM uint8_t SSR_FIFO;                   /*!< (@ 0x00000004) Serial Status Register(SCMR.SMIF = 0 and FCR.FM=1)         */
      
      struct {
        __IOM uint8_t DR        : 1;            /*!< [0..0] Receive Data Ready flag(Valid only in asynchronous mode
                                                     and FIFO selected)                                                        */
              uint8_t           : 1;
        __IOM uint8_t TEND      : 1;            /*!< [2..2] Transmit End Flag                                                  */
        __IOM uint8_t PER       : 1;            /*!< [3..3] Parity Error Flag                                                  */
        __IOM uint8_t FER       : 1;            /*!< [4..4] Framing Error Flag                                                 */
        __IOM uint8_t ORER      : 1;            /*!< [5..5] Overrun Error Flag                                                 */
        __IOM uint8_t RDF       : 1;            /*!< [6..6] Receive FIFO data full flag                                        */
        __IOM uint8_t TDFE      : 1;            /*!< [7..7] Transmit FIFO data empty flag                                      */
      } SSR_FIFO_b;
    } ;
    
    union {
      __IOM uint8_t SSR_SMCI;                   /*!< (@ 0x00000004) Serial Status Register(SCMR.SMIF = 1)                      */
      
      struct {
        __IOM uint8_t MPBT      : 1;            /*!< [0..0] Multi-Processor Bit TransferThis bit should be 0 in smart
                                                     card interface mode.                                                      */
        __IM  uint8_t MPB       : 1;            /*!< [1..1] Multi-ProcessorThis bit should be 0 in smart card interface
                                                     mode.                                                                     */
        __IM  uint8_t TEND      : 1;            /*!< [2..2] Transmit End Flag                                                  */
        __IOM uint8_t PER       : 1;            /*!< [3..3] Parity Error Flag                                                  */
        __IOM uint8_t ERS       : 1;            /*!< [4..4] Error Signal Status Flag                                           */
        __IOM uint8_t ORER      : 1;            /*!< [5..5] Overrun Error Flag                                                 */
        __IOM uint8_t RDRF      : 1;            /*!< [6..6] Receive Data Full Flag                                             */
        __IOM uint8_t TDRE      : 1;            /*!< [7..7] Transmit Data Empty Flag                                           */
      } SSR_SMCI_b;
    } ;
  };
  
  union {
    __IM  uint8_t RDR;                          /*!< (@ 0x00000005) Receive Data Register                                      */
    
    struct {
      __IM  uint8_t RDR         : 8;            /*!< [7..0] RDR is an 8-bit register that stores receive data.                 */
    } RDR_b;
  } ;
  
  union {
    __IOM uint8_t SCMR;                         /*!< (@ 0x00000006) Smart Card Mode Register                                   */
    
    struct {
      __IOM uint8_t SMIF        : 1;            /*!< [0..0] Smart Card Interface Mode Select                                   */
            uint8_t             : 1;
      __IOM uint8_t SINV        : 1;            /*!< [2..2] Transmitted/Received Data InvertSet this bit to 0 if
                                                     operation is to be in simple I2C mode.                                    */
      __IOM uint8_t SDIR        : 1;            /*!< [3..3] Transmitted/Received Data Transfer DirectionNOTE: The
                                                     setting is invalid and a fixed data length of 8 bits is
                                                     used in modes other than asynchronous mode.Set this bit
                                                     to 1 if operation is to be in simple I2C mode.                            */
      __IOM uint8_t CHR1        : 1;            /*!< [4..4] Character Length 1(Only valid in asynchronous mode)                */
            uint8_t             : 2;
      __IOM uint8_t BCP2        : 1;            /*!< [7..7] Base Clock Pulse 2Selects the number of base clock cycles
                                                     in combination with the SMR.BCP[1:0] bits                                 */
    } SCMR_b;
  } ;
  
  union {
    __IOM uint8_t SEMR;                         /*!< (@ 0x00000007) Serial Extended Mode Register                              */
    
    struct {
            uint8_t             : 2;
      __IOM uint8_t BRME        : 1;            /*!< [2..2] Bit Rate Modulation Enable                                         */
      __IOM uint8_t ABCSE       : 1;            /*!< [3..3] Asynchronous Mode Extended Base Clock Select1(Valid only
                                                     in asynchronous mode and SCR.CKE[1]=0)                                    */
      __IOM uint8_t ABCS        : 1;            /*!< [4..4] Asynchronous Mode Base Clock Select(Valid only in asynchronous
                                                     mode)                                                                     */
      __IOM uint8_t NFEN        : 1;            /*!< [5..5] Digital Noise Filter Function Enable(The NFEN bit should
                                                     be 0 without simple I2C mode and asynchronous mode.)In
                                                     asynchronous mode, for RXDn input only. In simple I2C mode,
                                                     for RXDn/TxDn input.                                                      */
      __IOM uint8_t BGDM        : 1;            /*!< [6..6] Baud Rate Generator Double-Speed Mode Select(Only valid
                                                     the CKE[1] bit in SCR is 0 in asynchronous mode).                         */
      __IOM uint8_t RXDESEL     : 1;            /*!< [7..7] Asynchronous Start Bit Edge Detection Select(Valid only
                                                     in asynchronous mode)                                                     */
    } SEMR_b;
  } ;
  
  union {
    __IOM uint8_t SNFR;                         /*!< (@ 0x00000008) Noise Filter Setting Register                              */
    
    struct {
      __IOM uint8_t NFCS        : 3;            /*!< [2..0] Noise Filter Clock Select                                          */
            uint8_t             : 5;
    } SNFR_b;
  } ;
  
  union {
    __IOM uint8_t SIMR1;                        /*!< (@ 0x00000009) I2C Mode Register 1                                        */
    
    struct {
      __IOM uint8_t IICM        : 1;            /*!< [0..0] Simple I2C Mode Select                                             */
            uint8_t             : 2;
      __IOM uint8_t IICDL       : 5;            /*!< [7..3] SSDA Delay Output SelectCycles below are of the clock
                                                     signal from the on-chip baud rate generator.                              */
    } SIMR1_b;
  } ;
  
  union {
    __IOM uint8_t SIMR2;                        /*!< (@ 0x0000000A) I2C Mode Register 2                                        */
    
    struct {
      __IOM uint8_t IICINTM     : 1;            /*!< [0..0] I2C Interrupt Mode Select                                          */
      __IOM uint8_t IICCSC      : 1;            /*!< [1..1] Clock Synchronization                                              */
            uint8_t             : 3;
      __IOM uint8_t IICACKT     : 1;            /*!< [5..5] ACK Transmission Data                                              */
            uint8_t             : 2;
    } SIMR2_b;
  } ;
  
  union {
    __IOM uint8_t SIMR3;                        /*!< (@ 0x0000000B) IIC Mode Register 3                                        */
    
    struct {
      __IOM uint8_t IICSTAREQ   : 1;            /*!< [0..0] Start Condition Generation                                         */
      __IOM uint8_t IICRSTAREQ  : 1;            /*!< [1..1] Restart Condition Generation                                       */
      __IOM uint8_t IICSTPREQ   : 1;            /*!< [2..2] Stop Condition Generation                                          */
      __IOM uint8_t IICSTIF     : 1;            /*!< [3..3] Issuing of Start, Restart, or Stop Condition Completed
                                                     Flag(When 0 is written to IICSTIF, it is cleared to 0.)                   */
      __IOM uint8_t IICSDAS     : 2;            /*!< [5..4] SDA Output Select                                                  */
      __IOM uint8_t IICSCLS     : 2;            /*!< [7..6] SCL Output Select                                                  */
    } SIMR3_b;
  } ;
  
  union {
    __IM  uint8_t SISR;                         /*!< (@ 0x0000000C) IIC Status Register                                        */
    
    struct {
      __IM  uint8_t IICACKR     : 1;            /*!< [0..0] ACK Reception Data Flag                                            */
            uint8_t             : 7;
    } SISR_b;
  } ;
  
  union {
    __IOM uint8_t SPMR;                         /*!< (@ 0x0000000D) SPI Mode Register                                          */
    
    struct {
      __IOM uint8_t SSE         : 1;            /*!< [0..0] SSn# Pin Function Enable                                           */
      __IOM uint8_t CTSE        : 1;            /*!< [1..1] CTS Enable                                                         */
      __IOM uint8_t MSS         : 1;            /*!< [2..2] Master Slave Select                                                */
            uint8_t             : 1;
      __IOM uint8_t MFF         : 1;            /*!< [4..4] Mode Fault Flag                                                    */
            uint8_t             : 1;
      __IOM uint8_t CKPOL       : 1;            /*!< [6..6] Clock Polarity Select                                              */
      __IOM uint8_t CKPH        : 1;            /*!< [7..7] Clock Phase Select                                                 */
    } SPMR_b;
  } ;
  
  union {
    union {
      __IOM uint16_t TDRHL;                     /*!< (@ 0x0000000E) Transmit 9-bit Data Register                               */
      
      struct {
        __IOM uint16_t TDRHL    : 16;           /*!< [15..0] TDRHL is a 16-bit register that stores transmit data.             */
      } TDRHL_b;
    } ;
    
    union {
      __OM  uint16_t FTDRHL;                    /*!< (@ 0x0000000E) Transmit FIFO Data Register HL                             */
      
      struct {
        __OM  uint16_t TDAT     : 9;            /*!< [8..0] Serial transmit data (Valid only in asynchronous mode(including
                                                     multi-processor) or clock synchronous mode, and FIFO selected)            */
        __OM  uint16_t MPBT     : 1;            /*!< [9..9] Multi-processor transfer bit flag(Valid only in asynchronous
                                                     mode and SMR.MP=1 and FIFO selected)                                      */
              uint16_t          : 6;
      } FTDRHL_b;
    } ;
    
    struct {
      union {
        __OM  uint8_t FTDRH;                    /*!< (@ 0x0000000E) Transmit FIFO Data Register H                              */
        
        struct {
          __OM  uint8_t TDATH   : 1;            /*!< [0..0] Serial transmit data (b8) (Valid only in asynchronous
                                                     mode(including multi-processor) or clock synchronous mode,
                                                     and FIFO selected)                                                        */
          __OM  uint8_t MPBT    : 1;            /*!< [1..1] Multi-processor transfer bit flag(Valid only in asynchronous
                                                     mode and SMR.MP=1 and FIFO selected)                                      */
                uint8_t         : 6;
        } FTDRH_b;
      } ;
      
      union {
        __OM  uint8_t FTDRL;                    /*!< (@ 0x0000000F) Transmit FIFO Data Register L                              */
        
        struct {
          __OM  uint8_t TDATL   : 8;            /*!< [7..0] Serial transmit data(b7-b0) (Valid only in asynchronous
                                                     mode(including multi-processor) or clock synchronous mode,
                                                     and FIFO selected)                                                        */
        } FTDRL_b;
      } ;
    };
  };
  
  union {
    union {
      __IM  uint16_t RDRHL;                     /*!< (@ 0x00000010) Receive 9-bit Data Register                                */
      
      struct {
        __IM  uint16_t RDRHL    : 16;           /*!< [15..0] RDRHL is an 16-bit register that stores receive data.             */
      } RDRHL_b;
    } ;
    
    union {
      __IM  uint16_t FRDRHL;                    /*!< (@ 0x00000010) Receive FIFO Data Register HL                              */
      
      struct {
        __IM  uint16_t RDAT     : 9;            /*!< [8..0] Serial receive data(Valid only in asynchronous mode(including
                                                     multi-processor) or clock synchronous mode, and FIFO selected)            */
        __IM  uint16_t MPB      : 1;            /*!< [9..9] Multi-processor bit flag(Valid only in asynchronous mode
                                                     with SMR.MP=1 and FIFO selected) It can read multi-processor
                                                     bit corresponded to serial receive data(RDATA[8:0])                       */
        __IM  uint16_t DR       : 1;            /*!< [10..10] Receive data ready flag(It is same as SSR.DR)                    */
        __IM  uint16_t PER      : 1;            /*!< [11..11] Parity error flag                                                */
        __IM  uint16_t FER      : 1;            /*!< [12..12] Framing error flag                                               */
        __IM  uint16_t ORER     : 1;            /*!< [13..13] Overrun error flag(It is same as SSR.ORER)                       */
        __IM  uint16_t RDF      : 1;            /*!< [14..14] Receive FIFO data full flag(It is same as SSR.RDF)               */
              uint16_t          : 1;
      } FRDRHL_b;
    } ;
    
    struct {
      union {
        __IM  uint8_t FRDRH;                    /*!< (@ 0x00000010) Receive FIFO Data Register H                               */
        
        struct {
          __IM  uint8_t RDATH   : 1;            /*!< [0..0] Serial receive data(b8)(Valid only in asynchronous mode(including
                                                     multi-processor) or clock synchronous mode, and FIFO selected)            */
          __IM  uint8_t MPB     : 1;            /*!< [1..1] Multi-processor bit flag(Valid only in asynchronous mode
                                                     with SMR.MP=1 and FIFO selected) It can read multi-processor
                                                     bit corresponded to serial receive data(RDATA[8:0])                       */
          __IM  uint8_t DR      : 1;            /*!< [2..2] Receive data ready flag(It is same as SSR.DR)                      */
          __IM  uint8_t PER     : 1;            /*!< [3..3] Parity error flag                                                  */
          __IM  uint8_t FER     : 1;            /*!< [4..4] Framing error flag                                                 */
          __IM  uint8_t ORER    : 1;            /*!< [5..5] Overrun error flag(It is same as SSR.ORER)                         */
          __IM  uint8_t RDF     : 1;            /*!< [6..6] Receive FIFO data full flag(It is same as SSR.RDF)                 */
                uint8_t         : 1;
        } FRDRH_b;
      } ;
      
      union {
        __IM  uint8_t FRDRL;                    /*!< (@ 0x00000011) Receive FIFO Data Register L                               */
        
        struct {
          __IM  uint8_t RDATL   : 8;            /*!< [7..0] Serial receive data(Valid only in asynchronous mode(including
                                                     multi-processor) or clock synchronous mode, and FIFO selected)NOTE:
                                                     When reading both of FRDRH register and FRDRL register,
                                                     please read by an order of the FRDRH register and the FRDRL
                                                     register.                                                                 */
        } FRDRL_b;
      } ;
    };
  };
  
  union {
    __IOM uint8_t MDDR;                         /*!< (@ 0x00000012) Modulation Duty Register                                   */
    
    struct {
      __IOM uint8_t MDDR        : 8;            /*!< [7..0] MDDR corrects the bit rate adjusted by the BRR register.           */
    } MDDR_b;
  } ;
  
  union {
    __IOM uint8_t DCCR;                         /*!< (@ 0x00000013) Data Compare Match Control Register                        */
    
    struct {
      __IOM uint8_t DCMF        : 1;            /*!< [0..0] Data Compare Match Flag                                            */
            uint8_t             : 2;
      __IOM uint8_t DPER        : 1;            /*!< [3..3] Data Compare Match Parity Error Flag                               */
      __IOM uint8_t DFER        : 1;            /*!< [4..4] Data Compare Match Framing Error Flag                              */
            uint8_t             : 1;
      __IOM uint8_t IDSEL       : 1;            /*!< [6..6] ID frame select Bit(Valid only in asynchronous mode(including
                                                     multi-processor)                                                          */
      __IOM uint8_t DCME        : 1;            /*!< [7..7] Data Compare Match Enable(Valid only in asynchronous
                                                     mode(including multi-processor)                                           */
    } DCCR_b;
  } ;
  
  union {
    __IOM uint16_t FCR;                         /*!< (@ 0x00000014) FIFO Control Register                                      */
    
    struct {
      __IOM uint16_t FM         : 1;            /*!< [0..0] FIFO Mode Select(Valid only in asynchronous mode(including
                                                     multi-processor) or clock synchronous mode)                               */
      __IOM uint16_t RFRST      : 1;            /*!< [1..1] Receive FIFO Data Register Reset(Valid only in FCR.FM=1)           */
      __IOM uint16_t TFRST      : 1;            /*!< [2..2] Transmit FIFO Data Register Reset(Valid only in FCR.FM=1)          */
      __IOM uint16_t DRES       : 1;            /*!< [3..3] Receive data ready error select bit(When detecting a
                                                     reception data ready, the interrupt request is selected.)                 */
      __IOM uint16_t TTRG       : 4;            /*!< [7..4] Transmit FIFO data trigger number(Valid only in asynchronous
                                                     mode(including multi-processor) or clock synchronous mode)                */
      __IOM uint16_t RTRG       : 4;            /*!< [11..8] Receive FIFO data trigger number                                  */
      __IOM uint16_t RSTRG      : 4;            /*!< [15..12] RTS# Output Active Trigger Number Select(Valid only
                                                     in asynchronous mode(including multi-processor) or clock
                                                     synchronous mode)                                                         */
    } FCR_b;
  } ;
  
  union {
    __IM  uint16_t FDR;                         /*!< (@ 0x00000016) FIFO Data Count Register                                   */
    
    struct {
      __IM  uint16_t R          : 5;            /*!< [4..0] Receive FIFO Data CountIndicate the quantity of receive
                                                     data stored in FRDRH and FRDRL(Valid only in asynchronous
                                                     mode(including multi-processor) or clock synchronous mode,
                                                     while FCR.FM=1)                                                           */
            uint16_t            : 3;
      __IM  uint16_t T          : 5;            /*!< [12..8] Transmit FIFO Data CountIndicate the quantity of non-transmit
                                                     data stored in FTDRH and FTDRL(Valid only in asynchronous
                                                     mode(including multi-processor) or clock synchronous mode,
                                                     while FCR.FM=1)                                                           */
            uint16_t            : 3;
    } FDR_b;
  } ;
  
  union {
    __IM  uint16_t LSR;                         /*!< (@ 0x00000018) Line Status Register                                       */
    
    struct {
      __IM  uint16_t ORER       : 1;            /*!< [0..0] Overrun Error Flag (Valid only in asynchronous mode(including
                                                     multi-processor) or clock synchronous mode, and FIFO selected)            */
            uint16_t            : 1;
      __IM  uint16_t FNUM       : 5;            /*!< [6..2] Framing Error CountIndicates the quantity of data with
                                                     a framing error among the receive data stored in the receive
                                                     FIFO data register (FRDRHL).                                              */
            uint16_t            : 1;
      __IM  uint16_t PNUM       : 5;            /*!< [12..8] Parity Error CountIndicates the quantity of data with
                                                     a parity error among the receive data stored in the receive
                                                     FIFO data register (FRDRHL).                                              */
            uint16_t            : 3;
    } LSR_b;
  } ;
  
  union {
    __IOM uint16_t CDR;                         /*!< (@ 0x0000001A) Compare Match Data Register                                */
    
    struct {
      __IOM uint16_t CMPD       : 9;            /*!< [8..0] Compare Match DataCompare data pattern for address match
                                                     wake-up function                                                          */
            uint16_t            : 7;
    } CDR_b;
  } ;
  
  union {
    __IOM uint8_t SPTR;                         /*!< (@ 0x0000001C) Serial Port Register                                       */
    
    struct {
      __IM  uint8_t RXDMON      : 1;            /*!< [0..0] Serial input data monitor bit(The state of the RXD terminal
                                                     is shown.)                                                                */
      __IOM uint8_t SPB2DT      : 1;            /*!< [1..1] Serial port break data select bit(The output level of
                                                     TxD terminal is selected when SCR.TE = 0.)                                */
      __IOM uint8_t SPB2IO      : 1;            /*!< [2..2] Serial port break I/O bit(It's selected whether the value
                                                     of SPB2DT is output to TxD terminal.)                                     */
            uint8_t             : 5;
    } SPTR_b;
  } ;
  __IM  uint8_t   RESERVED;
  __IM  uint16_t  RESERVED1;
} SCI0_Type;                                    /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                           SCI2                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Communication Interface 2 (SCI2)
  */

typedef struct {                                /*!< (@ 0x40041240) SCI2 Structure                                             */
  
  union {
    union {
      __IOM uint8_t SMR;                        /*!< (@ 0x00000000) Serial Mode Register (SCMR.SMIF = 0)                       */
      
      struct {
        __IOM uint8_t CKS       : 2;            /*!< [1..0] Clock Select                                                       */
        __IOM uint8_t MP        : 1;            /*!< [2..2] Multi-Processor Mode(Valid only in asynchronous mode)              */
        __IOM uint8_t STOP      : 1;            /*!< [3..3] Stop Bit Length(Valid only in asynchronous mode)                   */
        __IOM uint8_t PM        : 1;            /*!< [4..4] Parity Mode (Valid only when the PE bit is 1)                      */
        __IOM uint8_t PE        : 1;            /*!< [5..5] Parity Enable(Valid only in asynchronous mode)                     */
        __IOM uint8_t CHR       : 1;            /*!< [6..6] Character Length(Valid only in asynchronous mode)                  */
        __IOM uint8_t CM        : 1;            /*!< [7..7] Communications Mode                                                */
      } SMR_b;
    } ;
    
    union {
      __IOM uint8_t SMR_SMCI;                   /*!< (@ 0x00000000) Serial mode register (SCMR.SMIF = 1)                       */
      
      struct {
        __IOM uint8_t CKS       : 2;            /*!< [1..0] Clock Select                                                       */
        __IOM uint8_t BCP       : 2;            /*!< [3..2] Base Clock Pulse                                                   */
        __IOM uint8_t PM        : 1;            /*!< [4..4] Parity Mode (Valid only when the PE bit is 1)                      */
        __IOM uint8_t PE        : 1;            /*!< [5..5] Parity Enable(Valid only in asynchronous mode)                     */
        __IOM uint8_t BLK       : 1;            /*!< [6..6] Block Transfer Mode                                                */
        __IOM uint8_t GM        : 1;            /*!< [7..7] GSM Mode                                                           */
      } SMR_SMCI_b;
    } ;
  };
  
  union {
    __IOM uint8_t BRR;                          /*!< (@ 0x00000001) Bit Rate Register                                          */
    
    struct {
      __IOM uint8_t BRR         : 8;            /*!< [7..0] BRR is an 8-bit register that adjusts the bit rate.                */
    } BRR_b;
  } ;
  
  union {
    union {
      __IOM uint8_t SCR;                        /*!< (@ 0x00000002) Serial Control Register (SCMR.SMIF = 0)                    */
      
      struct {
        __IOM uint8_t CKE       : 2;            /*!< [1..0] Clock Enable                                                       */
        __IOM uint8_t TEIE      : 1;            /*!< [2..2] Transmit End Interrupt Enable                                      */
        __IOM uint8_t MPIE      : 1;            /*!< [3..3] Multi-Processor Interrupt Enable(Valid in asynchronous
                                                     mode when SMR.MP = 1)                                                     */
        __IOM uint8_t RE        : 1;            /*!< [4..4] Receive Enable                                                     */
        __IOM uint8_t TE        : 1;            /*!< [5..5] Transmit Enable                                                    */
        __IOM uint8_t RIE       : 1;            /*!< [6..6] Receive Interrupt Enable                                           */
        __IOM uint8_t TIE       : 1;            /*!< [7..7] Transmit Interrupt Enable                                          */
      } SCR_b;
    } ;
    
    union {
      __IOM uint8_t SCR_SMCI;                   /*!< (@ 0x00000002) Serial Control Register (SCMR.SMIF =1)                     */
      
      struct {
        __IOM uint8_t CKE       : 2;            /*!< [1..0] Clock Enable                                                       */
        __IOM uint8_t TEIE      : 1;            /*!< [2..2] This bit should be 0 in smart card interface mode.                 */
        __IOM uint8_t MPIE      : 1;            /*!< [3..3] This bit should be 0 in smart card interface mode.                 */
        __IOM uint8_t RE        : 1;            /*!< [4..4] Receive Enable                                                     */
        __IOM uint8_t TE        : 1;            /*!< [5..5] Transmit Enable                                                    */
        __IOM uint8_t RIE       : 1;            /*!< [6..6] Receive Interrupt Enable                                           */
        __IOM uint8_t TIE       : 1;            /*!< [7..7] Transmit Interrupt Enable                                          */
      } SCR_SMCI_b;
    } ;
  };
  
  union {
    __IOM uint8_t TDR;                          /*!< (@ 0x00000003) Transmit Data Register                                     */
    
    struct {
      __IOM uint8_t TDR         : 8;            /*!< [7..0] TDR is an 8-bit register that stores transmit data.                */
    } TDR_b;
  } ;
  
  union {
    union {
      __IOM uint8_t SSR;                        /*!< (@ 0x00000004) Serial Status Register(SCMR.SMIF = 0 and FCR.FM=0)         */
      
      struct {
        __IOM uint8_t MPBT      : 1;            /*!< [0..0] Multi-Processor Bit Transfer. Sets the multi-processor
                                                     bit for adding to the transmission frame                                  */
        __IM  uint8_t MPB       : 1;            /*!< [1..1] Multi-Processor Bit. Value of the multi-processor bit
                                                     in the reception frame                                                    */
        __IM  uint8_t TEND      : 1;            /*!< [2..2] Transmit End Flag                                                  */
        __IOM uint8_t PER       : 1;            /*!< [3..3] Parity Error Flag                                                  */
        __IOM uint8_t FER       : 1;            /*!< [4..4] Framing Error Flag                                                 */
        __IOM uint8_t ORER      : 1;            /*!< [5..5] Overrun Error Flag                                                 */
        __IOM uint8_t RDRF      : 1;            /*!< [6..6] Receive Data Full Flag                                             */
        __IOM uint8_t TDRE      : 1;            /*!< [7..7] Transmit Data Empty Flag                                           */
      } SSR_b;
    } ;
    
    union {
      __IOM uint8_t SSR_SMCI;                   /*!< (@ 0x00000004) Serial Status Register(SCMR.SMIF = 1)                      */
      
      struct {
        __IOM uint8_t MPBT      : 1;            /*!< [0..0] Multi-Processor Bit TransferThis bit should be 0 in smart
                                                     card interface mode.                                                      */
        __IM  uint8_t MPB       : 1;            /*!< [1..1] Multi-ProcessorThis bit should be 0 in smart card interface
                                                     mode.                                                                     */
        __IM  uint8_t TEND      : 1;            /*!< [2..2] Transmit End Flag                                                  */
        __IOM uint8_t PER       : 1;            /*!< [3..3] Parity Error Flag                                                  */
        __IOM uint8_t ERS       : 1;            /*!< [4..4] Error Signal Status Flag                                           */
        __IOM uint8_t ORER      : 1;            /*!< [5..5] Overrun Error Flag                                                 */
        __IOM uint8_t RDRF      : 1;            /*!< [6..6] Receive Data Full Flag                                             */
        __IOM uint8_t TDRE      : 1;            /*!< [7..7] Transmit Data Empty Flag                                           */
      } SSR_SMCI_b;
    } ;
  };
  
  union {
    __IM  uint8_t RDR;                          /*!< (@ 0x00000005) Receive Data Register                                      */
    
    struct {
      __IM  uint8_t RDR         : 8;            /*!< [7..0] RDR is an 8-bit register that stores receive data.                 */
    } RDR_b;
  } ;
  
  union {
    __IOM uint8_t SCMR;                         /*!< (@ 0x00000006) Smart Card Mode Register                                   */
    
    struct {
      __IOM uint8_t SMIF        : 1;            /*!< [0..0] Smart Card Interface Mode Select                                   */
            uint8_t             : 1;
      __IOM uint8_t SINV        : 1;            /*!< [2..2] Transmitted/Received Data InvertSet this bit to 0 if
                                                     operation is to be in simple I2C mode.                                    */
      __IOM uint8_t SDIR        : 1;            /*!< [3..3] Transmitted/Received Data Transfer DirectionNOTE: The
                                                     setting is invalid and a fixed data length of 8 bits is
                                                     used in modes other than asynchronous mode.Set this bit
                                                     to 1 if operation is to be in simple I2C mode.                            */
      __IOM uint8_t CHR1        : 1;            /*!< [4..4] Character Length 1(Only valid in asynchronous mode)                */
            uint8_t             : 2;
      __IOM uint8_t BCP2        : 1;            /*!< [7..7] Base Clock Pulse 2Selects the number of base clock cycles
                                                     in combination with the SMR.BCP[1:0] bits                                 */
    } SCMR_b;
  } ;
  
  union {
    __IOM uint8_t SEMR;                         /*!< (@ 0x00000007) Serial Extended Mode Register                              */
    
    struct {
            uint8_t             : 2;
      __IOM uint8_t BRME        : 1;            /*!< [2..2] Bit Rate Modulation Enable                                         */
      __IOM uint8_t ABCSE       : 1;            /*!< [3..3] Asynchronous Mode Extended Base Clock Select1(Valid only
                                                     in asynchronous mode and SCR.CKE[1]=0)                                    */
      __IOM uint8_t ABCS        : 1;            /*!< [4..4] Asynchronous Mode Base Clock Select(Valid only in asynchronous
                                                     mode)                                                                     */
      __IOM uint8_t NFEN        : 1;            /*!< [5..5] Digital Noise Filter Function Enable(The NFEN bit should
                                                     be 0 without simple I2C mode and asynchronous mode.)In
                                                     asynchronous mode, for RXDn input only. In simple I2C mode,
                                                     for RXDn/TxDn input.                                                      */
      __IOM uint8_t BGDM        : 1;            /*!< [6..6] Baud Rate Generator Double-Speed Mode Select(Only valid
                                                     the CKE[1] bit in SCR is 0 in asynchronous mode).                         */
      __IOM uint8_t RXDESEL     : 1;            /*!< [7..7] Asynchronous Start Bit Edge Detection Select(Valid only
                                                     in asynchronous mode)                                                     */
    } SEMR_b;
  } ;
  
  union {
    __IOM uint8_t SNFR;                         /*!< (@ 0x00000008) Noise Filter Setting Register                              */
    
    struct {
      __IOM uint8_t NFCS        : 3;            /*!< [2..0] Noise Filter Clock Select                                          */
            uint8_t             : 5;
    } SNFR_b;
  } ;
  
  union {
    __IOM uint8_t SIMR1;                        /*!< (@ 0x00000009) I2C Mode Register 1                                        */
    
    struct {
      __IOM uint8_t IICM        : 1;            /*!< [0..0] Simple I2C Mode Select                                             */
            uint8_t             : 2;
      __IOM uint8_t IICDL       : 5;            /*!< [7..3] SSDA Delay Output SelectCycles below are of the clock
                                                     signal from the on-chip baud rate generator.                              */
    } SIMR1_b;
  } ;
  
  union {
    __IOM uint8_t SIMR2;                        /*!< (@ 0x0000000A) I2C Mode Register 2                                        */
    
    struct {
      __IOM uint8_t IICINTM     : 1;            /*!< [0..0] I2C Interrupt Mode Select                                          */
      __IOM uint8_t IICCSC      : 1;            /*!< [1..1] Clock Synchronization                                              */
            uint8_t             : 3;
      __IOM uint8_t IICACKT     : 1;            /*!< [5..5] ACK Transmission Data                                              */
            uint8_t             : 2;
    } SIMR2_b;
  } ;
  
  union {
    __IOM uint8_t SIMR3;                        /*!< (@ 0x0000000B) IIC Mode Register 3                                        */
    
    struct {
      __IOM uint8_t IICSTAREQ   : 1;            /*!< [0..0] Start Condition Generation                                         */
      __IOM uint8_t IICRSTAREQ  : 1;            /*!< [1..1] Restart Condition Generation                                       */
      __IOM uint8_t IICSTPREQ   : 1;            /*!< [2..2] Stop Condition Generation                                          */
      __IOM uint8_t IICSTIF     : 1;            /*!< [3..3] Issuing of Start, Restart, or Stop Condition Completed
                                                     Flag(When 0 is written to IICSTIF, it is cleared to 0.)                   */
      __IOM uint8_t IICSDAS     : 2;            /*!< [5..4] SDA Output Select                                                  */
      __IOM uint8_t IICSCLS     : 2;            /*!< [7..6] SCL Output Select                                                  */
    } SIMR3_b;
  } ;
  
  union {
    __IM  uint8_t SISR;                         /*!< (@ 0x0000000C) IIC Status Register                                        */
    
    struct {
      __IM  uint8_t IICACKR     : 1;            /*!< [0..0] ACK Reception Data Flag                                            */
            uint8_t             : 7;
    } SISR_b;
  } ;
  
  union {
    __IOM uint8_t SPMR;                         /*!< (@ 0x0000000D) SPI Mode Register                                          */
    
    struct {
      __IOM uint8_t SSE         : 1;            /*!< [0..0] SSn# Pin Function Enable                                           */
      __IOM uint8_t CTSE        : 1;            /*!< [1..1] CTS Enable                                                         */
      __IOM uint8_t MSS         : 1;            /*!< [2..2] Master Slave Select                                                */
            uint8_t             : 1;
      __IOM uint8_t MFF         : 1;            /*!< [4..4] Mode Fault Flag                                                    */
            uint8_t             : 1;
      __IOM uint8_t CKPOL       : 1;            /*!< [6..6] Clock Polarity Select                                              */
      __IOM uint8_t CKPH        : 1;            /*!< [7..7] Clock Phase Select                                                 */
    } SPMR_b;
  } ;
  
  union {
    __IOM uint16_t TDRHL;                       /*!< (@ 0x0000000E) Transmit 9-bit Data Register                               */
    
    struct {
      __IOM uint16_t TDRHL      : 16;           /*!< [15..0] TDRHL is a 16-bit register that stores transmit data.             */
    } TDRHL_b;
  } ;
  
  union {
    __IM  uint16_t RDRHL;                       /*!< (@ 0x00000010) Receive 9-bit Data Register                                */
    
    struct {
      __IM  uint16_t RDRHL      : 16;           /*!< [15..0] RDRHL is an 16-bit register that stores receive data.             */
    } RDRHL_b;
  } ;
  
  union {
    __IOM uint8_t MDDR;                         /*!< (@ 0x00000012) Modulation Duty Register                                   */
    
    struct {
      __IOM uint8_t MDDR        : 8;            /*!< [7..0] MDDR corrects the bit rate adjusted by the BRR register.           */
    } MDDR_b;
  } ;
  
  union {
    __IOM uint8_t DCCR;                         /*!< (@ 0x00000013) Data Compare Match Control Register                        */
    
    struct {
      __IOM uint8_t DCMF        : 1;            /*!< [0..0] Data Compare Match Flag                                            */
            uint8_t             : 2;
      __IOM uint8_t DPER        : 1;            /*!< [3..3] Data Compare Match Parity Error Flag                               */
      __IOM uint8_t DFER        : 1;            /*!< [4..4] Data Compare Match Framing Error Flag                              */
            uint8_t             : 1;
      __IOM uint8_t IDSEL       : 1;            /*!< [6..6] ID frame select Bit(Valid only in asynchronous mode(including
                                                     multi-processor)                                                          */
      __IOM uint8_t DCME        : 1;            /*!< [7..7] Data Compare Match Enable(Valid only in asynchronous
                                                     mode(including multi-processor)                                           */
    } DCCR_b;
  } ;
  __IM  uint16_t  RESERVED[3];
  
  union {
    __IOM uint16_t CDR;                         /*!< (@ 0x0000001A) Compare Match Data Register                                */
    
    struct {
      __IOM uint16_t CMPD       : 9;            /*!< [8..0] Compare Match DataCompare data pattern for address match
                                                     wake-up function                                                          */
            uint16_t            : 7;
    } CDR_b;
  } ;
  
  union {
    __IOM uint8_t SPTR;                         /*!< (@ 0x0000001C) Serial Port Register                                       */
    
    struct {
      __IM  uint8_t RXDMON      : 1;            /*!< [0..0] Serial input data monitor bit(The state of the RXD terminal
                                                     is shown.)                                                                */
      __IOM uint8_t SPB2DT      : 1;            /*!< [1..1] Serial port break data select bit(The output level of
                                                     TxD terminal is selected when SCR.TE = 0.)                                */
      __IOM uint8_t SPB2IO      : 1;            /*!< [2..2] Serial port break I/O bit(It's selected whether the value
                                                     of SPB2DT is output to TxD terminal.)                                     */
            uint8_t             : 5;
    } SPTR_b;
  } ;
  __IM  uint8_t   RESERVED1;
  __IM  uint16_t  RESERVED2;
} SCI2_Type;                                    /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                           SMPU                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Bus Slave MPU (SMPU)
  */

typedef struct {                                /*!< (@ 0x40000C00) SMPU Structure                                             */
  
  union {
    __IOM uint16_t SMPUCTL;                     /*!< (@ 0x00000000) Slave MPU Control Register                                 */
    
    struct {
      __IOM uint16_t OAD        : 1;            /*!< [0..0] Operation after detection                                          */
      __IOM uint16_t PROTECT    : 1;            /*!< [1..1] Protection of register                                             */
            uint16_t            : 6;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code This bit is used to enable or disable writing
                                                     of the PROTECT and OAD bit.The data written to these bits
                                                     are not stored.                                                           */
    } SMPUCTL_b;
  } ;
  __IM  uint16_t  RESERVED[7];
  
  union {
    __IOM uint16_t SMPUMBIU;                    /*!< (@ 0x00000010) Access Control Register for MBIU                           */
    
    struct {
            uint16_t            : 2;
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master Group A Read protection                                     */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master Group A Write protection                                    */
            uint16_t            : 12;
    } SMPUMBIU_b;
  } ;
  __IM  uint16_t  RESERVED1;
  
  union {
    __IOM uint16_t SMPUFBIU;                    /*!< (@ 0x00000014) Access Control Register for FBIU                           */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master Group A Read protection                                     */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master Group A Write protection                                    */
            uint16_t            : 12;
    } SMPUFBIU_b;
  } ;
  __IM  uint16_t  RESERVED2;
  
  union {
    __IOM uint16_t SMPUSRAM0;                   /*!< (@ 0x00000018) Access Control Register for SRAM0                          */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master Group A Read protection                                     */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master Group A Write protection                                    */
            uint16_t            : 12;
    } SMPUSRAM0_b;
  } ;
  __IM  uint16_t  RESERVED3;
  
  union {
    __IOM uint16_t SMPUSRAM1;                   /*!< (@ 0x0000001C) Access Control Register for SRAM1                          */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master Group A Read protection                                     */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master Group A Write protection                                    */
            uint16_t            : 12;
    } SMPUSRAM1_b;
  } ;
  __IM  uint16_t  RESERVED4;
  
  union {
    __IOM uint16_t SMPUP0BIU;                   /*!< (@ 0x00000020) Access Control Register for P0BIU                          */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master Group A Read protection                                     */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master Group A Write protection                                    */
            uint16_t            : 12;
    } SMPUP0BIU_b;
  } ;
  __IM  uint16_t  RESERVED5;
  
  union {
    __IOM uint16_t SMPUP2BIU;                   /*!< (@ 0x00000024) Access Control Register for P2BIU                          */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master Group A Read protection                                     */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master Group A Write protection                                    */
            uint16_t            : 12;
    } SMPUP2BIU_b;
  } ;
  __IM  uint16_t  RESERVED6[7];
  
  union {
    __IOM uint16_t SMPUEXBIU2;                  /*!< (@ 0x00000034) Access Control Register for EXBIU2                         */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master Group A Read protection                                     */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master Group A Write protection                                    */
            uint16_t            : 12;
    } SMPUEXBIU2_b;
  } ;
} SMPU_Type;                                    /*!< Size = 54 (0x36)                                                          */



/* =========================================================================================================================== */
/* ================                                           SPI0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Peripheral Interface 0 (SPI0)
  */

typedef struct {                                /*!< (@ 0x40072000) SPI0 Structure                                             */
  
  union {
    __IOM uint8_t SPCR;                         /*!< (@ 0x00000000) SPI Control Register                                       */
    
    struct {
      __IOM uint8_t SPMS        : 1;            /*!< [0..0] SPI Mode Select                                                    */
      __IOM uint8_t TXMD        : 1;            /*!< [1..1] Communications Operating Mode Select                               */
      __IOM uint8_t MODFEN      : 1;            /*!< [2..2] Mode Fault Error Detection Enable                                  */
      __IOM uint8_t MSTR        : 1;            /*!< [3..3] SPI Master/Slave Mode Select                                       */
      __IOM uint8_t SPEIE       : 1;            /*!< [4..4] SPI Error Interrupt Enable                                         */
      __IOM uint8_t SPTIE       : 1;            /*!< [5..5] Transmit Buffer Empty Interrupt Enable                             */
      __IOM uint8_t SPE         : 1;            /*!< [6..6] SPI Function Enable                                                */
      __IOM uint8_t SPRIE       : 1;            /*!< [7..7] SPI Receive Buffer Full Interrupt Enable                           */
    } SPCR_b;
  } ;
  
  union {
    __IOM uint8_t SSLP;                         /*!< (@ 0x00000001) SPI Slave Select Polarity Register                         */
    
    struct {
      __IOM uint8_t SSL0P       : 1;            /*!< [0..0] SSL0 Signal Polarity Setting                                       */
      __IOM uint8_t SSL1P       : 1;            /*!< [1..1] SSL1 Signal Polarity Setting                                       */
      __IOM uint8_t SSL2P       : 1;            /*!< [2..2] SSL2 Signal Polarity Setting                                       */
      __IOM uint8_t SSL3P       : 1;            /*!< [3..3] SSL3 Signal Polarity Setting                                       */
            uint8_t             : 4;
    } SSLP_b;
  } ;
  
  union {
    __IOM uint8_t SPPCR;                        /*!< (@ 0x00000002) SPI Pin Control Register                                   */
    
    struct {
      __IOM uint8_t SPLP        : 1;            /*!< [0..0] SPI Loopback                                                       */
      __IOM uint8_t SPLP2       : 1;            /*!< [1..1] SPI Loopback 2                                                     */
            uint8_t             : 2;
      __IOM uint8_t MOIFV       : 1;            /*!< [4..4] MOSI Idle Fixed Value                                              */
      __IOM uint8_t MOIFE       : 1;            /*!< [5..5] MOSI Idle Value Fixing Enable                                      */
            uint8_t             : 2;
    } SPPCR_b;
  } ;
  
  union {
    __IOM uint8_t SPSR;                         /*!< (@ 0x00000003) SPI Status Register                                        */
    
    struct {
      __IOM uint8_t OVRF        : 1;            /*!< [0..0] Overrun Error Flag                                                 */
      __IM  uint8_t IDLNF       : 1;            /*!< [1..1] SPI Idle Flag                                                      */
      __IOM uint8_t MODF        : 1;            /*!< [2..2] Mode Fault Error Flag                                              */
      __IOM uint8_t PERF        : 1;            /*!< [3..3] Parity Error Flag                                                  */
      __IOM uint8_t UDRF        : 1;            /*!< [4..4] Underrun Error Flag(When MODF is 0, This bit is invalid.)          */
      __IOM uint8_t SPTEF       : 1;            /*!< [5..5] SPI Transmit Buffer Empty Flag                                     */
            uint8_t             : 1;
      __IOM uint8_t SPRF        : 1;            /*!< [7..7] SPI Receive Buffer Full Flag                                       */
    } SPSR_b;
  } ;
  
  union {
    union {
      __IOM uint32_t SPDR;                      /*!< (@ 0x00000004) SPI Data Register                                          */
      
      struct {
        __IOM uint32_t SPDR     : 32;           /*!< [31..0] SPDR is the interface with the buffers that hold data
                                                     for transmission and reception by the RSPI.When accessing
                                                     in word (SPDCR.SPLW=1), access SPDR.                                      */
      } SPDR_b;
    } ;
    
    union {
      __IOM uint16_t SPDR_HA;                   /*!< (@ 0x00000004) SPI Data Register ( halfword access )                      */
      
      struct {
        __IOM uint16_t SPDR_HA  : 16;           /*!< [15..0] SPDR is the interface with the buffers that hold data
                                                     for transmission and reception by the SPI.When accessing
                                                     in halfword (SPDCR.SPLW=0), access SPDR_HA.                               */
      } SPDR_HA_b;
    } ;
    __IOM uint8_t SPDR_HH;                      /*!< (@ 0x00000004) SPI Data Register ( byte access )                          */
  };
  
  union {
    __IOM uint8_t SPSCR;                        /*!< (@ 0x00000008) SPI Sequence Control Register                              */
    
    struct {
      __IOM uint8_t SPSLN       : 3;            /*!< [2..0] SPSLN                                                              */
            uint8_t             : 5;
    } SPSCR_b;
  } ;
  
  union {
    __IOM uint8_t SPSSR;                        /*!< (@ 0x00000009) SPI Sequence Status Register                               */
    
    struct {
      __IOM uint8_t SPCP        : 3;            /*!< [2..0] SPCP                                                               */
            uint8_t             : 1;
      __IM  uint8_t SPECM       : 3;            /*!< [6..4] SPECM                                                              */
            uint8_t             : 1;
    } SPSSR_b;
  } ;
  
  union {
    __IOM uint8_t SPBR;                         /*!< (@ 0x0000000A) SPI Bit Rate Register                                      */
    
    struct {
      __IOM uint8_t SPBR        : 8;            /*!< [7..0] SPBR sets the bit rate in master mode.                             */
    } SPBR_b;
  } ;
  
  union {
    __IOM uint8_t SPDCR;                        /*!< (@ 0x0000000B) SPI Data Control Register                                  */
    
    struct {
      __IOM uint8_t SPFC        : 2;            /*!< [1..0] SPFC                                                               */
            uint8_t             : 2;
      __IOM uint8_t SPRDTD      : 1;            /*!< [4..4] SPI Receive/Transmit Data Selection                                */
      __IOM uint8_t SPLW        : 1;            /*!< [5..5] SPI Word Access/Halfword Access Specification                      */
      __IOM uint8_t SPBYT       : 1;            /*!< [6..6] SPBYT                                                              */
            uint8_t             : 1;
    } SPDCR_b;
  } ;
  
  union {
    __IOM uint8_t SPCKD;                        /*!< (@ 0x0000000C) SPI Clock Delay Register                                   */
    
    struct {
      __IOM uint8_t SCKDL       : 3;            /*!< [2..0] RSPCK Delay Setting                                                */
            uint8_t             : 5;
    } SPCKD_b;
  } ;
  
  union {
    __IOM uint8_t SSLND;                        /*!< (@ 0x0000000D) SPI Slave Select Negation Delay Register                   */
    
    struct {
      __IOM uint8_t SLNDL       : 3;            /*!< [2..0] SSL Negation Delay Setting                                         */
            uint8_t             : 5;
    } SSLND_b;
  } ;
  
  union {
    __IOM uint8_t SPND;                         /*!< (@ 0x0000000E) SPI Next-Access Delay Register                             */
    
    struct {
      __IOM uint8_t SPNDL       : 3;            /*!< [2..0] SPI Next-Access Delay Setting                                      */
            uint8_t             : 5;
    } SPND_b;
  } ;
  
  union {
    __IOM uint8_t SPCR2;                        /*!< (@ 0x0000000F) SPI Control Register 2                                     */
    
    struct {
      __IOM uint8_t SPPE        : 1;            /*!< [0..0] Parity Enable                                                      */
      __IOM uint8_t SPOE        : 1;            /*!< [1..1] Parity Mode                                                        */
      __IOM uint8_t SPIIE       : 1;            /*!< [2..2] SPI Idle Interrupt Enable                                          */
      __IOM uint8_t PTE         : 1;            /*!< [3..3] Parity Self-Testing                                                */
      __IOM uint8_t SCKASE      : 1;            /*!< [4..4] RSPCK Auto-Stop Function Enable                                    */
            uint8_t             : 3;
    } SPCR2_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD0;                      /*!< (@ 0x00000010) SPI Command Register 0~7                                   */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 2;            /*!< [5..4] SSL Signal Assertion Setting                                       */
            uint16_t            : 1;
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSLKP                                                              */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD0_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD1;                      /*!< (@ 0x00000012) SPI Command Register 0~7                                   */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 2;            /*!< [5..4] SSL Signal Assertion Setting                                       */
            uint16_t            : 1;
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSLKP                                                              */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD1_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD2;                      /*!< (@ 0x00000014) SPI Command Register 0~7                                   */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 2;            /*!< [5..4] SSL Signal Assertion Setting                                       */
            uint16_t            : 1;
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSLKP                                                              */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD2_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD3;                      /*!< (@ 0x00000016) SPI Command Register 0~7                                   */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 2;            /*!< [5..4] SSL Signal Assertion Setting                                       */
            uint16_t            : 1;
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSLKP                                                              */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD3_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD4;                      /*!< (@ 0x00000018) SPI Command Register 0~7                                   */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 2;            /*!< [5..4] SSL Signal Assertion Setting                                       */
            uint16_t            : 1;
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSLKP                                                              */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD4_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD5;                      /*!< (@ 0x0000001A) SPI Command Register 0~7                                   */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 2;            /*!< [5..4] SSL Signal Assertion Setting                                       */
            uint16_t            : 1;
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSLKP                                                              */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD5_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD6;                      /*!< (@ 0x0000001C) SPI Command Register 0~7                                   */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 2;            /*!< [5..4] SSL Signal Assertion Setting                                       */
            uint16_t            : 1;
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSLKP                                                              */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD6_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD7;                      /*!< (@ 0x0000001E) SPI Command Register 0~7                                   */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 2;            /*!< [5..4] SSL Signal Assertion Setting                                       */
            uint16_t            : 1;
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSLKP                                                              */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD7_b;
  } ;
} SPI0_Type;                                    /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                           SPI1                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Peripheral Interface 0 (SPI1)
  */

typedef struct {                                /*!< (@ 0x40072100) SPI1 Structure                                             */
  
  union {
    __IOM uint8_t SPCR;                         /*!< (@ 0x00000000) SPI Control Register                                       */
    
    struct {
      __IOM uint8_t SPMS        : 1;            /*!< [0..0] SPI Mode Select                                                    */
      __IOM uint8_t TXMD        : 1;            /*!< [1..1] Communications Operating Mode Select                               */
      __IOM uint8_t MODFEN      : 1;            /*!< [2..2] Mode Fault Error Detection Enable                                  */
      __IOM uint8_t MSTR        : 1;            /*!< [3..3] SPI Master/Slave Mode Select                                       */
      __IOM uint8_t SPEIE       : 1;            /*!< [4..4] SPI Error Interrupt Enable                                         */
      __IOM uint8_t SPTIE       : 1;            /*!< [5..5] Transmit Buffer Empty Interrupt Enable                             */
      __IOM uint8_t SPE         : 1;            /*!< [6..6] SPI Function Enable                                                */
      __IOM uint8_t SPRIE       : 1;            /*!< [7..7] SPI Receive Buffer Full Interrupt Enable                           */
    } SPCR_b;
  } ;
  
  union {
    __IOM uint8_t SSLP;                         /*!< (@ 0x00000001) SPI Slave Select Polarity Register                         */
    
    struct {
      __IOM uint8_t SSL0P       : 1;            /*!< [0..0] SSL0 Signal Polarity Setting                                       */
      __IOM uint8_t SSL1P       : 1;            /*!< [1..1] SSL1 Signal Polarity Setting                                       */
      __IOM uint8_t SSL2P       : 1;            /*!< [2..2] SSL2 Signal Polarity Setting                                       */
      __IOM uint8_t SSL3P       : 1;            /*!< [3..3] SSL3 Signal Polarity Setting                                       */
            uint8_t             : 4;
    } SSLP_b;
  } ;
  
  union {
    __IOM uint8_t SPPCR;                        /*!< (@ 0x00000002) SPI Pin Control Register                                   */
    
    struct {
      __IOM uint8_t SPLP        : 1;            /*!< [0..0] SPI Loopback                                                       */
      __IOM uint8_t SPLP2       : 1;            /*!< [1..1] SPI Loopback 2                                                     */
            uint8_t             : 2;
      __IOM uint8_t MOIFV       : 1;            /*!< [4..4] MOSI Idle Fixed Value                                              */
      __IOM uint8_t MOIFE       : 1;            /*!< [5..5] MOSI Idle Value Fixing Enable                                      */
            uint8_t             : 2;
    } SPPCR_b;
  } ;
  
  union {
    __IOM uint8_t SPSR;                         /*!< (@ 0x00000003) SPI Status Register                                        */
    
    struct {
      __IOM uint8_t OVRF        : 1;            /*!< [0..0] Overrun Error Flag                                                 */
      __IM  uint8_t IDLNF       : 1;            /*!< [1..1] SPI Idle Flag                                                      */
      __IOM uint8_t MODF        : 1;            /*!< [2..2] Mode Fault Error Flag                                              */
      __IOM uint8_t PERF        : 1;            /*!< [3..3] Parity Error Flag                                                  */
      __IOM uint8_t UDRF        : 1;            /*!< [4..4] Underrun Error Flag(When MODF is 0, This bit is invalid.)          */
      __IOM uint8_t SPTEF       : 1;            /*!< [5..5] SPI Transmit Buffer Empty Flag                                     */
            uint8_t             : 1;
      __IOM uint8_t SPRF        : 1;            /*!< [7..7] SPI Receive Buffer Full Flag                                       */
    } SPSR_b;
  } ;
  
  union {
    union {
      __IOM uint32_t SPDR;                      /*!< (@ 0x00000004) SPI Data Register                                          */
      
      struct {
        __IOM uint32_t SPDR     : 32;           /*!< [31..0] SPDR is the interface with the buffers that hold data
                                                     for transmission and reception by the RSPI.When accessing
                                                     in word (SPDCR.SPLW=1), access SPDR.                                      */
      } SPDR_b;
    } ;
    
    union {
      __IOM uint16_t SPDR_HA;                   /*!< (@ 0x00000004) SPI Data Register ( halfword access )                      */
      
      struct {
        __IOM uint16_t SPDR_HA  : 16;           /*!< [15..0] SPDR is the interface with the buffers that hold data
                                                     for transmission and reception by the SPI.When accessing
                                                     in halfword (SPDCR.SPLW=0), access SPDR_HA.                               */
      } SPDR_HA_b;
    } ;
    __IOM uint8_t SPDR_HH;                      /*!< (@ 0x00000004) SPI Data Register ( byte access )                          */
  };
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint8_t SPBR;                         /*!< (@ 0x0000000A) SPI Bit Rate Register                                      */
    
    struct {
      __IOM uint8_t SPBR        : 8;            /*!< [7..0] SPBR sets the bit rate in master mode.                             */
    } SPBR_b;
  } ;
  
  union {
    __IOM uint8_t SPDCR;                        /*!< (@ 0x0000000B) SPI Data Control Register                                  */
    
    struct {
            uint8_t             : 4;
      __IOM uint8_t SPRDTD      : 1;            /*!< [4..4] SPI Receive/Transmit Data Selection                                */
      __IOM uint8_t SPLW        : 1;            /*!< [5..5] SPI Word Access/Halfword Access Specification                      */
      __IOM uint8_t SPBYT       : 1;            /*!< [6..6] SPBYT                                                              */
            uint8_t             : 1;
    } SPDCR_b;
  } ;
  
  union {
    __IOM uint8_t SPCKD;                        /*!< (@ 0x0000000C) SPI Clock Delay Register                                   */
    
    struct {
      __IOM uint8_t SCKDL       : 3;            /*!< [2..0] RSPCK Delay Setting                                                */
            uint8_t             : 5;
    } SPCKD_b;
  } ;
  
  union {
    __IOM uint8_t SSLND;                        /*!< (@ 0x0000000D) SPI Slave Select Negation Delay Register                   */
    
    struct {
      __IOM uint8_t SLNDL       : 3;            /*!< [2..0] SSL Negation Delay Setting                                         */
            uint8_t             : 5;
    } SSLND_b;
  } ;
  
  union {
    __IOM uint8_t SPND;                         /*!< (@ 0x0000000E) SPI Next-Access Delay Register                             */
    
    struct {
      __IOM uint8_t SPNDL       : 3;            /*!< [2..0] SPI Next-Access Delay Setting                                      */
            uint8_t             : 5;
    } SPND_b;
  } ;
  
  union {
    __IOM uint8_t SPCR2;                        /*!< (@ 0x0000000F) SPI Control Register 2                                     */
    
    struct {
      __IOM uint8_t SPPE        : 1;            /*!< [0..0] Parity Enable                                                      */
      __IOM uint8_t SPOE        : 1;            /*!< [1..1] Parity Mode                                                        */
      __IOM uint8_t SPIIE       : 1;            /*!< [2..2] SPI Idle Interrupt Enable                                          */
      __IOM uint8_t PTE         : 1;            /*!< [3..3] Parity Self-Testing                                                */
      __IOM uint8_t SCKASE      : 1;            /*!< [4..4] RSPCK Auto-Stop Function Enable                                    */
            uint8_t             : 3;
    } SPCR2_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD0;                      /*!< (@ 0x00000010) SPI Command Register 0                                     */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 2;            /*!< [5..4] SSL Signal Assertion Setting                                       */
            uint16_t            : 2;
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD0_b;
  } ;
  __IM  uint16_t  RESERVED1;
} SPI1_Type;                                    /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                           SPMON                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief CPU Stack Pointer Monitor (SPMON)
  */

typedef struct {                                /*!< (@ 0x40000D00) SPMON Structure                                            */
  
  union {
    __IOM uint16_t MSPMPUOAD;                   /*!< (@ 0x00000000) Stack Pointer Monitor Operation After Detection
                                                                    Register                                                   */
    
    struct {
      __IOM uint16_t OAD        : 1;            /*!< [0..0] Operation after detection                                          */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Write Keyword The data written to these bits are not
                                                     stored.                                                                   */
    } MSPMPUOAD_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint16_t MSPMPUCTL;                   /*!< (@ 0x00000004) Stack Pointer Monitor Access Control Register              */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] SP_main monitor enable                                             */
            uint16_t            : 7;
      __IOM uint16_t ERROR      : 1;            /*!< [8..8] SP_main monitor error flag                                         */
            uint16_t            : 7;
    } MSPMPUCTL_b;
  } ;
  
  union {
    __IOM uint16_t MSPMPUPT;                    /*!< (@ 0x00000006) Stack Pointer Monitor Protection Register                  */
    
    struct {
      __IOM uint16_t PROTECT    : 1;            /*!< [0..0] Protection of register (MSPMPUCTL, MSPMPUSA and MSPMPUEA)          */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Write Keyword The data written to these bits are not
                                                     stored.                                                                   */
    } MSPMPUPT_b;
  } ;
  
  union {
    __IOM uint32_t MSPMPUSA;                    /*!< (@ 0x00000008) Main Stack Pointer Monitor Start Address Register          */
    
    struct {
      __IOM uint32_t MSPMPUSA   : 32;           /*!< [31..0] Region start address resister                                     */
    } MSPMPUSA_b;
  } ;
  
  union {
    __IOM uint32_t MSPMPUEA;                    /*!< (@ 0x0000000C) Main Stack Pointer Monitor End Address Register            */
    
    struct {
      __IOM uint32_t MSPMPUEA   : 32;           /*!< [31..0] Region end address resister                                       */
    } MSPMPUEA_b;
  } ;
  
  union {
    __IOM uint16_t PSPMPUOAD;                   /*!< (@ 0x00000010) Stack Pointer Monitor Operation After Detection
                                                                    Register                                                   */
    
    struct {
      __IOM uint16_t OAD        : 1;            /*!< [0..0] Operation after detection                                          */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Write Keyword The data written to these bits are not
                                                     stored.                                                                   */
    } PSPMPUOAD_b;
  } ;
  __IM  uint16_t  RESERVED1;
  
  union {
    __IOM uint16_t PSPMPUCTL;                   /*!< (@ 0x00000014) Stack Pointer Monitor Access Control Register              */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] SP_process monitor enable                                          */
            uint16_t            : 7;
      __IOM uint16_t ERROR      : 1;            /*!< [8..8] SP_process monitor error flag                                      */
            uint16_t            : 7;
    } PSPMPUCTL_b;
  } ;
  
  union {
    __IOM uint16_t PSPMPUPT;                    /*!< (@ 0x00000016) Stack Pointer Monitor Protection Register                  */
    
    struct {
      __IOM uint16_t PROTECT    : 1;            /*!< [0..0] Protection of register (MSPMPUCTL, MSPMPUSA and MSPMPUEA)          */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Write Keyword The data written to these bits are not
                                                     stored.                                                                   */
    } PSPMPUPT_b;
  } ;
  
  union {
    __IOM uint32_t PSPMPUSA;                    /*!< (@ 0x00000018) Process Stack Pointer Monitor Start Address Register       */
    
    struct {
      __IOM uint32_t PSPMPUSA   : 32;           /*!< [31..0] Region start address resister                                     */
    } PSPMPUSA_b;
  } ;
  
  union {
    __IOM uint32_t PSPMPUEA;                    /*!< (@ 0x0000001C) Process Stack Pointer Monitor End Address Register         */
    
    struct {
      __IOM uint32_t PSPMPUEA   : 32;           /*!< [31..0] Region end address resister                                       */
    } PSPMPUEA_b;
  } ;
} SPMON_Type;                                   /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                          SYSTEM                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Energy Harvest Control Circuit (SYSTEM)
  */

typedef struct {                                /*!< (@ 0x4001E000) SYSTEM Structure                                           */
  __IM  uint32_t  RESERVED[3];
  
  union {
    __IOM uint16_t SBYCR;                       /*!< (@ 0x0000000C) Standby Control Register                                   */
    
    struct {
            uint16_t            : 12;
      __IOM uint16_t RETPM      : 1;            /*!< [12..12] RETPM                                                            */
            uint16_t            : 1;
      __IOM uint16_t SSBYMP     : 1;            /*!< [14..14] SSBYMP                                                           */
      __IOM uint16_t SSBY       : 1;            /*!< [15..15] Software Standby                                                 */
    } SBYCR_b;
  } ;
  
  union {
    __IOM uint8_t RAMSDCR;                      /*!< (@ 0x0000000E) RAMSDCR                                                    */
    
    struct {
      __IOM uint8_t RAMSD0      : 1;            /*!< [0..0] RAMSD0                                                             */
      __IOM uint8_t RAMSD1      : 1;            /*!< [1..1] RAMSD1                                                             */
      __IOM uint8_t RAMSD2      : 1;            /*!< [2..2] RAMSD2                                                             */
      __IOM uint8_t RAMSD3      : 1;            /*!< [3..3] RAMSD3                                                             */
      __IOM uint8_t RAMSD4      : 1;            /*!< [4..4] RAMSD4                                                             */
      __IOM uint8_t RAMSD5      : 1;            /*!< [5..5] RAMSD5                                                             */
      __IOM uint8_t RAMSD6      : 1;            /*!< [6..6] RAMSD6                                                             */
      __IOM uint8_t RAMSD7      : 1;            /*!< [7..7] RAMSD7                                                             */
    } RAMSDCR_b;
  } ;
  __IM  uint8_t   RESERVED1;
  __IM  uint32_t  RESERVED2[3];
  
  union {
    __IOM uint32_t MSTPCRA;                     /*!< (@ 0x0000001C) Module Stop Control Register A                             */
    
    struct {
            uint32_t            : 22;
      __IOM uint32_t MSTPA22    : 1;            /*!< [22..22] Data Transfer Controller Module Stop                             */
            uint32_t            : 9;
    } MSTPCRA_b;
  } ;
  
  union {
    __IOM uint32_t SCKDIVCR;                    /*!< (@ 0x00000020) System Clock Division Control Register                     */
    
    struct {
            uint32_t            : 8;
      __IOM uint32_t PCKB       : 3;            /*!< [10..8] Peripheral Module Clock B (PCLKB) Select                          */
            uint32_t            : 13;
      __IOM uint32_t ICK        : 3;            /*!< [26..24] System Clock (ICLK)/Peripheral Module Clock A(PCLKA)
                                                     Select                                                                    */
            uint32_t            : 5;
    } SCKDIVCR_b;
  } ;
  __IM  uint16_t  RESERVED3;
  
  union {
    __IOM uint8_t SCKSCR;                       /*!< (@ 0x00000026) System Clock Source Control Register                       */
    
    struct {
      __IOM uint8_t CKSEL       : 3;            /*!< [2..0] Clock Source Select                                                */
            uint8_t             : 5;
    } SCKSCR_b;
  } ;
  __IM  uint8_t   RESERVED4;
  
  union {
    __IOM uint16_t PLLCCR;                      /*!< (@ 0x00000028) PLL Clock Control Register                                 */
    
    struct {
      __IOM uint16_t PLIDIV     : 2;            /*!< [1..0] PLL Input Frequency Division Ratio Select                          */
            uint16_t            : 6;
      __IOM uint16_t PLLMUL     : 3;            /*!< [10..8] PLL Frequency Multiplication Factor Select                        */
            uint16_t            : 3;
      __IOM uint16_t FSEL0      : 1;            /*!< [14..14] FSEL0                                                            */
            uint16_t            : 1;
    } PLLCCR_b;
  } ;
  
  union {
    __IOM uint8_t PLLCR;                        /*!< (@ 0x0000002A) PLL Control Register                                       */
    
    struct {
      __IOM uint8_t PLLSTP      : 1;            /*!< [0..0] PLL Stop Control                                                   */
            uint8_t             : 7;
    } PLLCR_b;
  } ;
  __IM  uint8_t   RESERVED5;
  __IM  uint32_t  RESERVED6;
  __IM  uint16_t  RESERVED7;
  
  union {
    __IOM uint8_t MOSCCR;                       /*!< (@ 0x00000032) Main Clock Oscillator Control Register                     */
    
    struct {
      __IOM uint8_t MOSTP       : 1;            /*!< [0..0] Main Clock Oscillator Stop                                         */
            uint8_t             : 7;
    } MOSCCR_b;
  } ;
  __IM  uint8_t   RESERVED8;
  __IM  uint16_t  RESERVED9;
  
  union {
    __IOM uint8_t HOCOCR;                       /*!< (@ 0x00000036) High-Speed On-Chip Oscillator Control Register             */
    
    struct {
      __IOM uint8_t HCSTP       : 1;            /*!< [0..0] HOCO Stop                                                          */
            uint8_t             : 7;
    } HOCOCR_b;
  } ;
  
  union {
    __IOM uint8_t HOCOMCR;                      /*!< (@ 0x00000037) High-Speed On-Chip Oscillator Mode Control Register        */
    
    struct {
      __IOM uint8_t HCFRQ       : 2;            /*!< [1..0] HOCO Frequency Select                                              */
            uint8_t             : 6;
    } HOCOMCR_b;
  } ;
  
  union {
    __IOM uint8_t MOCOCR;                       /*!< (@ 0x00000038) Middle-Speed On-Chip Oscillator Control Register           */
    
    struct {
      __IOM uint8_t MCSTP       : 1;            /*!< [0..0] MOCO Stop                                                          */
            uint8_t             : 7;
    } MOCOCR_b;
  } ;
  __IM  uint8_t   RESERVED10;
  __IM  uint16_t  RESERVED11;
  
  union {
    __IOM uint8_t OSCSF;                        /*!< (@ 0x0000003C) Oscillation Stabilization Flag Register                    */
    
    struct {
      __IM  uint8_t HOCOSF      : 1;            /*!< [0..0] HOCO Clock Oscillation Stabilization Flag                          */
            uint8_t             : 2;
      __IM  uint8_t MOSCSF      : 1;            /*!< [3..3] Main Clock Oscillation Stabilization Flag                          */
            uint8_t             : 1;
      __IM  uint8_t PLLSF       : 1;            /*!< [5..5] PLL Clock Oscillation Stabilization Flag                           */
            uint8_t             : 2;
    } OSCSF_b;
  } ;
  
  union {
    __IOM uint8_t CKO32CR;                      /*!< (@ 0x0000003D) 32kHz Clock Out Control Register                           */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t CKO32EN     : 1;            /*!< [7..7] 32kHz Clock Out enable                                             */
    } CKO32CR_b;
  } ;
  
  union {
    __IOM uint8_t CKOCR;                        /*!< (@ 0x0000003E) Clock Out Control Register                                 */
    
    struct {
      __IOM uint8_t CKOSEL      : 3;            /*!< [2..0] Clock Out Source Select                                            */
            uint8_t             : 1;
      __IOM uint8_t CKODIV      : 3;            /*!< [6..4] Clock Out input frequency Division Select                          */
      __IOM uint8_t CKOEN       : 1;            /*!< [7..7] Clock Out enable                                                   */
    } CKOCR_b;
  } ;
  __IM  uint8_t   RESERVED12;
  
  union {
    __IOM uint8_t OSTDCR;                       /*!< (@ 0x00000040) Oscillation Stop Detection Control Register                */
    
    struct {
      __IOM uint8_t OSTDIE      : 1;            /*!< [0..0] Oscillation Stop Detection Interrupt Enable                        */
            uint8_t             : 3;
      __IOM uint8_t OSTDDIVSEL  : 1;            /*!< [4..4] OSTDDIVSEL                                                         */
            uint8_t             : 2;
      __IOM uint8_t OSTDE       : 1;            /*!< [7..7] Oscillation Stop Detection Function Enable                         */
    } OSTDCR_b;
  } ;
  
  union {
    __IOM uint8_t OSTDSR;                       /*!< (@ 0x00000041) Oscillation Stop Detection Status Register                 */
    
    struct {
      __IOM uint8_t OSTDF       : 1;            /*!< [0..0] Oscillation Stop Detection Flag                                    */
            uint8_t             : 7;
    } OSTDSR_b;
  } ;
  __IM  uint16_t  RESERVED13;
  __IM  uint32_t  RESERVED14[19];
  __IM  uint16_t  RESERVED15;
  
  union {
    __IOM uint8_t SNZCR;                        /*!< (@ 0x00000092) Snooze Control Register                                    */
    
    struct {
      __IOM uint8_t RXDREQEN    : 1;            /*!< [0..0] RXD0 Snooze Request Enable NOTE: Do not set to 1 other
                                                     than in asynchronous mode.                                                */
      __IOM uint8_t SNZDTCEN    : 1;            /*!< [1..1] DTC Enable in Snooze Mode                                          */
            uint8_t             : 5;
      __IOM uint8_t SNZE        : 1;            /*!< [7..7] Snooze Mode Enable                                                 */
    } SNZCR_b;
  } ;
  __IM  uint8_t   RESERVED16;
  
  union {
    __IOM uint8_t SNZEDCR;                      /*!< (@ 0x00000094) Snooze End Control Register                                */
    
    struct {
      __IOM uint8_t AGTUNFED    : 1;            /*!< [0..0] AGT1 underflow Snooze End Enable                                   */
      __IOM uint8_t DTCZRED     : 1;            /*!< [1..1] Last DTC transmission completion Snooze End Enable                 */
      __IOM uint8_t DTCNZRED    : 1;            /*!< [2..2] Not Last DTC transmission completion Snooze End Enable             */
      __IOM uint8_t AD0MATED    : 1;            /*!< [3..3] AD compare match 0 Snooze End Enable                               */
      __IOM uint8_t AD0UMTED    : 1;            /*!< [4..4] AD compare mismatch 0 Snooze End Enable                            */
            uint8_t             : 2;
      __IOM uint8_t SCI0UMTED   : 1;            /*!< [7..7] SCI0 address unmatch Snooze End Enable                             */
    } SNZEDCR_b;
  } ;
  __IM  uint8_t   RESERVED17;
  __IM  uint16_t  RESERVED18;
  
  union {
    __IOM uint32_t SNZREQCR;                    /*!< (@ 0x00000098) Snooze Request Control Register                            */
    
    struct {
      __IOM uint32_t SNZREQEN0  : 1;            /*!< [0..0] Snooze Request Enable 0Enable IRQ0 pin snooze request              */
      __IOM uint32_t SNZREQEN1  : 1;            /*!< [1..1] Snooze Request Enable 1Enable IRQ1 pin snooze request              */
      __IOM uint32_t SNZREQEN2  : 1;            /*!< [2..2] Snooze Request Enable 2Enable IRQ2 pin snooze request              */
      __IOM uint32_t SNZREQEN3  : 1;            /*!< [3..3] Snooze Request Enable 3Enable IRQ3 pin snooze request              */
      __IOM uint32_t SNZREQEN4  : 1;            /*!< [4..4] Snooze Request Enable 4Enable IRQ4 pin snooze request              */
      __IOM uint32_t SNZREQEN5  : 1;            /*!< [5..5] Snooze Request Enable 5Enable IRQ5 pin snooze request              */
      __IOM uint32_t SNZREQEN6  : 1;            /*!< [6..6] Snooze Request Enable 6Enable IRQ6 pin snooze request              */
      __IOM uint32_t SNZREQEN7  : 1;            /*!< [7..7] Snooze Request Enable 7Enable IRQ7 pin snooze request              */
            uint32_t            : 9;
      __IOM uint32_t SNZREQEN17 : 1;            /*!< [17..17] Snooze Request Enable 17Enable KINT snooze request               */
            uint32_t            : 5;
      __IOM uint32_t SNZREQEN23 : 1;            /*!< [23..23] Snooze Request Enable 23Enable RTC alarm snooze request          */
      __IOM uint32_t SNZREQEN24 : 1;            /*!< [24..24] Snooze Request Enable 24Enable RTC alarm snooze request          */
      __IOM uint32_t SNZREQEN25 : 1;            /*!< [25..25] Snooze Request Enable 25Enable RTC period snooze request         */
            uint32_t            : 2;
      __IOM uint32_t SNZREQEN28 : 1;            /*!< [28..28] Snooze Request Enable 28Enable AGT1 underflow snooze
                                                     request                                                                   */
      __IOM uint32_t SNZREQEN29 : 1;            /*!< [29..29] Snooze Request Enable 29Enable AGT1 compare match A
                                                     snooze request                                                            */
      __IOM uint32_t SNZREQEN30 : 1;            /*!< [30..30] Snooze Request Enable 30Enables the AGT0 compare match
                                                     A Snooze request                                                          */
            uint32_t            : 1;
    } SNZREQCR_b;
  } ;
  __IM  uint32_t  RESERVED19;
  
  union {
    __IOM uint8_t OPCCR;                        /*!< (@ 0x000000A0) Operating Power Control Register                           */
    
    struct {
      __IOM uint8_t OPCM        : 2;            /*!< [1..0] Operating Power Control Mode Select                                */
            uint8_t             : 2;
      __IM  uint8_t OPCMTSF     : 1;            /*!< [4..4] Operating Power Control Mode Transition Status Flag                */
            uint8_t             : 3;
    } OPCCR_b;
  } ;
  __IM  uint8_t   RESERVED20;
  
  union {
    __IOM uint8_t MOSCWTCR;                     /*!< (@ 0x000000A2) Main Clock Oscillator Wait Control Register                */
    
    struct {
      __IOM uint8_t MSTS        : 4;            /*!< [3..0] Main clock oscillator wait time setting                            */
            uint8_t             : 4;
    } MOSCWTCR_b;
  } ;
  __IM  uint8_t   RESERVED21;
  __IM  uint32_t  RESERVED22;
  __IM  uint16_t  RESERVED23;
  
  union {
    __IOM uint8_t SOPCCR;                       /*!< (@ 0x000000AA) Sub Operating Power Control Register                       */
    
    struct {
      __IOM uint8_t SOPCM       : 1;            /*!< [0..0] Sub Operating Power Control Mode Select                            */
            uint8_t             : 3;
      __IM  uint8_t SOPCMTSF    : 1;            /*!< [4..4] Sub Operating Power Control Mode Transition Status Flag            */
            uint8_t             : 3;
    } SOPCCR_b;
  } ;
  __IM  uint8_t   RESERVED24;
  __IM  uint32_t  RESERVED25[5];
  
  union {
    __IOM uint16_t RSTSR1;                      /*!< (@ 0x000000C0) Reset Status Register 1                                    */
    
    struct {
      __IOM uint16_t IWDTRF     : 1;            /*!< [0..0] Independent Watchdog Timer Reset Detect Flag                       */
      __IOM uint16_t WDTRF      : 1;            /*!< [1..1] Watchdog Timer Reset Detect Flag                                   */
      __IOM uint16_t SWRF       : 1;            /*!< [2..2] Software Reset Detect Flag                                         */
            uint16_t            : 7;
      __IOM uint16_t BUSSRF     : 1;            /*!< [10..10] Bus Slave MPU Error Reset Detect Flag                            */
      __IOM uint16_t BUSMRF     : 1;            /*!< [11..11] Bus Master MPU Error Reset Detect Flag                           */
      __IOM uint16_t SPERF      : 1;            /*!< [12..12] SP Error Reset Detect Flag                                       */
            uint16_t            : 3;
    } RSTSR1_b;
  } ;
  __IM  uint16_t  RESERVED26;
  __IM  uint32_t  RESERVED27[7];
  
  union {
    __IOM uint8_t LVD1CR1;                      /*!< (@ 0x000000E0) Voltage Monitor 1 Circuit Control Register 1               */
    
    struct {
      __IOM uint8_t IDTSEL      : 2;            /*!< [1..0] Voltage Monitor 1 Interrupt Generation Condition Select            */
      __IOM uint8_t IRQSEL      : 1;            /*!< [2..2] Voltage Monitor 1 Interrupt Type Select                            */
            uint8_t             : 5;
    } LVD1CR1_b;
  } ;
  
  union {
    __IOM uint8_t LVD1SR;                       /*!< (@ 0x000000E1) Voltage Monitor 1 Circuit Status Register                  */
    
    struct {
      __IOM uint8_t DET         : 1;            /*!< [0..0] Voltage Monitor 1 Voltage Change Detection Flag                    */
      __IM  uint8_t MON         : 1;            /*!< [1..1] Voltage Monitor 1 Signal Monitor Flag                              */
            uint8_t             : 6;
    } LVD1SR_b;
  } ;
  
  union {
    __IOM uint8_t LVDBATCR1;                    /*!< (@ 0x000000E2) Voltage Monitor BAT Circuit Control Register
                                                                    1                                                          */
    
    struct {
      __IOM uint8_t IDTSEL      : 2;            /*!< [1..0] Voltage Monitor BAT Interrupt Generation Condition Select          */
      __IOM uint8_t IRQSEL      : 1;            /*!< [2..2] Voltage Monitor BAT Interrupt Type Select                          */
            uint8_t             : 5;
    } LVDBATCR1_b;
  } ;
  
  union {
    __IOM uint8_t LVDBATSR;                     /*!< (@ 0x000000E3) Voltage Monitor BAT Circuit Status Register                */
    
    struct {
      __IOM uint8_t DET         : 1;            /*!< [0..0] Voltage Monitor BAT Voltage Change Detection Flag                  */
      __IM  uint8_t MON         : 1;            /*!< [1..1] Voltage Monitor BAT Signal Monitor Flag                            */
            uint8_t             : 6;
    } LVDBATSR_b;
  } ;
  __IM  uint32_t  RESERVED28[23];
  
  union {
    __IOM uint8_t FSTPCR;                       /*!< (@ 0x00000140) FSTPCR                                                     */
    
    struct {
      __IOM uint8_t FLFSTP      : 1;            /*!< [0..0] FLFSTP                                                             */
            uint8_t             : 7;
    } FSTPCR_b;
  } ;
  __IM  uint8_t   RESERVED29;
  __IM  uint16_t  RESERVED30;
  __IM  uint32_t  RESERVED31[15];
  
  union {
    __IOM uint16_t EHCCR0;                      /*!< (@ 0x00000180) Energy Harvest Control Register 0                          */
    
    struct {
      __OM  uint16_t RSEL       : 6;            /*!< [5..0] -                                                                  */
            uint16_t            : 1;
      __OM  uint16_t CHGDETEN   : 1;            /*!< [7..7] CHGDETEN                                                           */
      __OM  uint16_t VBATCTL    : 2;            /*!< [9..8] VBATCTL                                                            */
      __OM  uint16_t SWSELECT   : 1;            /*!< [10..10] SWSELECT                                                         */
      __OM  uint16_t FORCEFIX   : 1;            /*!< [11..11] FORCEFIX                                                         */
            uint16_t            : 1;
      __IM  uint16_t CMPOUT     : 1;            /*!< [13..13] CMPOUT                                                           */
      __IM  uint16_t ENOUT      : 1;            /*!< [14..14] ENOUT                                                            */
            uint16_t            : 1;
    } EHCCR0_b;
  } ;
  
  union {
    __IOM uint8_t EHCCR1;                       /*!< (@ 0x00000182) Energy Harvest Control Register 1                          */
    
    struct {
      __IOM uint8_t QUICKMODE   : 1;            /*!< [0..0] QUICKMODE                                                          */
            uint8_t             : 7;
    } EHCCR1_b;
  } ;
  __IM  uint8_t   RESERVED32;
  __IM  uint32_t  RESERVED33[158];
  __IM  uint16_t  RESERVED34;
  
  union {
    __IOM uint16_t PRCR;                        /*!< (@ 0x000003FE) Protect Register                                           */
    
    struct {
      __IOM uint16_t PRC0       : 1;            /*!< [0..0] PRC0                                                               */
      __IOM uint16_t PRC1       : 1;            /*!< [1..1] PRC1                                                               */
            uint16_t            : 1;
      __IOM uint16_t PRC3       : 1;            /*!< [3..3] Enables writing to the registers related to the LVD.               */
      __IOM uint16_t PRC4       : 1;            /*!< [4..4] PRC4                                                               */
            uint16_t            : 3;
      __OM  uint16_t PRKEY      : 8;            /*!< [15..8] PRKEY                                                             */
    } PRCR_b;
  } ;
  
  union {
    __IOM uint8_t DPSBYCR;                      /*!< (@ 0x00000400) DPSBYCR                                                    */
    
    struct {
            uint8_t             : 6;
      __IOM uint8_t IOKEEP      : 1;            /*!< [6..6] IOKEEP                                                             */
      __IOM uint8_t DPSBY       : 1;            /*!< [7..7] DPSBY                                                              */
    } DPSBYCR_b;
  } ;
  __IM  uint8_t   RESERVED35;
  
  union {
    __IOM uint8_t DPSIER0;                      /*!< (@ 0x00000402) DPSIER0                                                    */
    
    struct {
      __IOM uint8_t DIRQ0E      : 1;            /*!< [0..0] DIRQ0E                                                             */
      __IOM uint8_t DIRQ1E      : 1;            /*!< [1..1] DIRQ1E                                                             */
      __IOM uint8_t DIRQ2E      : 1;            /*!< [2..2] DIRQ2E                                                             */
      __IOM uint8_t DIRQ3E      : 1;            /*!< [3..3] DIRQ3E                                                             */
            uint8_t             : 4;
    } DPSIER0_b;
  } ;
  __IM  uint8_t   RESERVED36;
  
  union {
    __IOM uint8_t DPSIER1;                      /*!< (@ 0x00000404) DPSIER1                                                    */
    
    struct {
      __IOM uint8_t DLVD1IE     : 1;            /*!< [0..0] DLVD1IE                                                            */
      __IOM uint8_t DLVDBATIE   : 1;            /*!< [1..1] DLVDBATIE                                                          */
            uint8_t             : 2;
      __IOM uint8_t DNMIE       : 1;            /*!< [4..4] DNMIE                                                              */
      __IOM uint8_t DCCCIE      : 1;            /*!< [5..5] DCCCIE                                                             */
            uint8_t             : 2;
    } DPSIER1_b;
  } ;
  __IM  uint8_t   RESERVED37;
  
  union {
    __IOM uint8_t DPSIFR0;                      /*!< (@ 0x00000406) DPSIFR0                                                    */
    
    struct {
      __IOM uint8_t DIRQ0F      : 1;            /*!< [0..0] DIRQ0F                                                             */
      __IOM uint8_t DIRQ1F      : 1;            /*!< [1..1] DIRQ1F                                                             */
      __IOM uint8_t DIRQ2F      : 1;            /*!< [2..2] DIRQ2F                                                             */
      __IOM uint8_t DIRQ3F      : 1;            /*!< [3..3] DIRQ3F                                                             */
            uint8_t             : 4;
    } DPSIFR0_b;
  } ;
  __IM  uint8_t   RESERVED38;
  
  union {
    __IOM uint8_t DPSIFR1;                      /*!< (@ 0x00000408) DPSIFR1                                                    */
    
    struct {
      __IOM uint8_t DLVD1IF     : 1;            /*!< [0..0] DLVD1IF                                                            */
      __IOM uint8_t DLVDBATIF   : 1;            /*!< [1..1] DLVDBATIF                                                          */
            uint8_t             : 2;
      __IOM uint8_t DNMIF       : 1;            /*!< [4..4] DNMIF                                                              */
      __IOM uint8_t DCCCIF      : 1;            /*!< [5..5] DCCCIF                                                             */
            uint8_t             : 2;
    } DPSIFR1_b;
  } ;
  __IM  uint8_t   RESERVED39;
  
  union {
    __IOM uint8_t DPSIEGR0;                     /*!< (@ 0x0000040A) DPSIEGR0                                                   */
    
    struct {
      __IOM uint8_t DIRQ0EG     : 1;            /*!< [0..0] DIRQ0EG                                                            */
      __IOM uint8_t DIRQ1EG     : 1;            /*!< [1..1] DIRQ1EG                                                            */
      __IOM uint8_t DIRQ2EG     : 1;            /*!< [2..2] DIRQ2EG                                                            */
      __IOM uint8_t DIRQ3EG     : 1;            /*!< [3..3] DIRQ3EG                                                            */
            uint8_t             : 4;
    } DPSIEGR0_b;
  } ;
  __IM  uint8_t   RESERVED40;
  
  union {
    __IOM uint8_t DPSIEGR1;                     /*!< (@ 0x0000040C) DPSIEGR1                                                   */
    
    struct {
      __IOM uint8_t DLVD1EG     : 1;            /*!< [0..0] DLVD1EG                                                            */
            uint8_t             : 3;
      __IOM uint8_t DNMIEG      : 1;            /*!< [4..4] DNMIEG                                                             */
            uint8_t             : 3;
    } DPSIEGR1_b;
  } ;
  __IM  uint8_t   RESERVED41;
  
  union {
    __IOM uint8_t SYOCDCR;                      /*!< (@ 0x0000040E) SYOCDCR                                                    */
    
    struct {
      __IOM uint8_t DOCDF       : 1;            /*!< [0..0] DOCDF                                                              */
            uint8_t             : 6;
      __IOM uint8_t DBGEN       : 1;            /*!< [7..7] DBGEN                                                              */
    } SYOCDCR_b;
  } ;
  __IM  uint8_t   RESERVED42;
  
  union {
    __IOM uint8_t RSTSR0;                       /*!< (@ 0x00000410) Reset Status Register 0                                    */
    
    struct {
      __IOM uint8_t PORF        : 1;            /*!< [0..0] PORF                                                               */
      __IOM uint8_t LVD0RF      : 1;            /*!< [1..1] LVD0RF                                                             */
      __IOM uint8_t LVD1RF      : 1;            /*!< [2..2] LVD1RF                                                             */
            uint8_t             : 4;
      __IOM uint8_t DPSRSTF     : 1;            /*!< [7..7] DPSRSTF                                                            */
    } RSTSR0_b;
  } ;
  
  union {
    __IOM uint8_t RSTSR2;                       /*!< (@ 0x00000411) Reset Status Register 2                                    */
    
    struct {
      __IOM uint8_t CWSF        : 1;            /*!< [0..0] Cold/Warm Start Determination Flag                                 */
            uint8_t             : 7;
    } RSTSR2_b;
  } ;
  __IM  uint8_t   RESERVED43;
  
  union {
    __IOM uint8_t MOMCR;                        /*!< (@ 0x00000413) Main Clock Oscillator Mode Oscillation Control
                                                                    Register                                                   */
    
    struct {
            uint8_t             : 3;
      __IOM uint8_t MODRV       : 3;            /*!< [5..3] MODRV                                                              */
      __IOM uint8_t MOSEL       : 1;            /*!< [6..6] Main Clock Oscillator Switching                                    */
      __IOM uint8_t OSCLPEN     : 1;            /*!< [7..7] OSCLPEN                                                            */
    } MOMCR_b;
  } ;
  __IM  uint16_t  RESERVED44;
  __IM  uint8_t   RESERVED45;
  
  union {
    __IOM uint8_t LVCMPCR;                      /*!< (@ 0x00000417) Voltage Monitor Circuit Control Register                   */
    
    struct {
            uint8_t             : 5;
      __IOM uint8_t LVD1E       : 1;            /*!< [5..5] Voltage Detection 1 Enable                                         */
      __IOM uint8_t LVDBATE     : 1;            /*!< [6..6] Voltage Detection BAT Enable                                       */
            uint8_t             : 1;
    } LVCMPCR_b;
  } ;
  
  union {
    __IOM uint8_t LVDLVLR;                      /*!< (@ 0x00000418) Voltage Detection Level Select Register                    */
    
    struct {
      __IOM uint8_t LVD1LVL     : 3;            /*!< [2..0] Voltage Detection 1 Level Select.(Standard voltage during
                                                     fall in voltage)                                                          */
            uint8_t             : 1;
      __IOM uint8_t LVDBATLVL   : 3;            /*!< [6..4] Voltage Detection BAT Level Select.(Standard voltage
                                                     during fall in voltage)                                                   */
            uint8_t             : 1;
    } LVDLVLR_b;
  } ;
  __IM  uint8_t   RESERVED46;
  
  union {
    __IOM uint8_t LVD1CR0;                      /*!< (@ 0x0000041A) Voltage Monitor 1 Circuit Control Register 0               */
    
    struct {
      __IOM uint8_t RIE         : 1;            /*!< [0..0] Voltage Monitor 1 Interrupt/Reset Enable                           */
      __IOM uint8_t DFDIS       : 1;            /*!< [1..1] DFDIS                                                              */
      __IOM uint8_t CMPE        : 1;            /*!< [2..2] Voltage Monitor 1 Circuit Comparison Result Output Enable          */
            uint8_t             : 1;
      __IOM uint8_t FSAMP       : 2;            /*!< [5..4] FSAMP                                                              */
      __IOM uint8_t RI          : 1;            /*!< [6..6] Voltage Monitor 1 Circuit Mode Select                              */
      __IOM uint8_t RN          : 1;            /*!< [7..7] Voltage Monitor 1 Reset Negate Select                              */
    } LVD1CR0_b;
  } ;
  
  union {
    __IOM uint8_t LVDBATCR0;                    /*!< (@ 0x0000041B) Voltage Monitor BAT Circuit Control Register
                                                                    0                                                          */
    
    struct {
      __IOM uint8_t RIE         : 1;            /*!< [0..0] Voltage Monitor BAT Interrupt/Reset Enable                         */
      __IOM uint8_t DFDIS       : 1;            /*!< [1..1] DFDIS                                                              */
      __IOM uint8_t CMPE        : 1;            /*!< [2..2] Voltage Monitor BAT Circuit Comparison Result Output
                                                     Enable                                                                    */
            uint8_t             : 1;
      __IOM uint8_t FSAMP       : 2;            /*!< [5..4] FSAMP                                                              */
      __IOM uint8_t RI          : 1;            /*!< [6..6] Voltage Monitor BAT Circuit Mode Select                            */
      __IOM uint8_t RN          : 1;            /*!< [7..7] Voltage Monitor BAT Reset Negate Select                            */
    } LVDBATCR0_b;
  } ;
  __IM  uint32_t  RESERVED47;
  
  union {
    __IOM uint8_t PWSTCR;                       /*!< (@ 0x00000420) PWSTCR                                                     */
    
    struct {
      __IOM uint8_t PWST        : 3;            /*!< [2..0] PWST                                                               */
            uint8_t             : 5;
    } PWSTCR_b;
  } ;
  
  union {
    __IM  uint8_t PWSTF;                        /*!< (@ 0x00000421) PWSTF                                                      */
    
    struct {
      __IM  uint8_t ALLPWONM    : 1;            /*!< [0..0] ALLPWONM                                                           */
      __IM  uint8_t EXFPWONM    : 1;            /*!< [1..1] EXFPWONM                                                           */
      __IM  uint8_t MINPWONM    : 1;            /*!< [2..2] MINPWONM                                                           */
      __IM  uint8_t BOOSTM      : 1;            /*!< [3..3] BOOSTM                                                             */
      __IM  uint8_t VBBM        : 1;            /*!< [4..4] VBBM                                                               */
            uint8_t             : 3;
    } PWSTF_b;
  } ;
  __IM  uint16_t  RESERVED48;
  __IM  uint32_t  RESERVED49;
  
  union {
    __IOM uint8_t LDOCR;                        /*!< (@ 0x00000428) LDOCR                                                      */
    
    struct {
            uint8_t             : 3;
      __IOM uint8_t LDOCUT      : 1;            /*!< [3..3] LDOCUT                                                             */
            uint8_t             : 4;
    } LDOCR_b;
  } ;
  __IM  uint8_t   RESERVED50;
  __IM  uint16_t  RESERVED51;
  __IM  uint32_t  RESERVED52[5];
  
  union {
    __IOM uint8_t VOCR;                         /*!< (@ 0x00000440) VOCR                                                       */
    
    struct {
      __IOM uint8_t AV0CTL      : 1;            /*!< [0..0] AV0CTL                                                             */
      __IOM uint8_t AV1CTL      : 1;            /*!< [1..1] AV1CTL                                                             */
      __IOM uint8_t IV0CTL      : 1;            /*!< [2..2] IV0CTL                                                             */
      __IOM uint8_t IV1CTL      : 1;            /*!< [3..3] IV1CTL                                                             */
      __IOM uint8_t IV2CTL      : 1;            /*!< [4..4] IV2CTL                                                             */
      __IOM uint8_t IV3CTL      : 1;            /*!< [5..5] IV3CTL                                                             */
      __IOM uint8_t UVCTL       : 1;            /*!< [6..6] UVCTL                                                              */
      __IOM uint8_t VPMCTL      : 1;            /*!< [7..7] This bit is read as 1. The write value should be 1.                */
    } VOCR_b;
  } ;
  __IM  uint8_t   RESERVED53;
  __IM  uint16_t  RESERVED54;
  __IM  uint32_t  RESERVED55[15];
  
  union {
    __IOM uint8_t SOSCCR;                       /*!< (@ 0x00000480) Sub-clock Oscillator Control Register                      */
    
    struct {
      __IOM uint8_t SOSTP       : 1;            /*!< [0..0] Sub-Clock Oscillator Stop                                          */
            uint8_t             : 7;
    } SOSCCR_b;
  } ;
  
  union {
    __IOM uint8_t SOMCR;                        /*!< (@ 0x00000481) Sub-clock Oscillator Mode Control Register                 */
    
    struct {
      __IOM uint8_t SODRV0      : 1;            /*!< [0..0] SODRV0                                                             */
      __IOM uint8_t SODRV       : 1;            /*!< [1..1] Sub Clock Oscillator Drive Capability Switching                    */
            uint8_t             : 2;
      __IOM uint8_t SONFSTP     : 1;            /*!< [4..4] Sub Clock Oscillator Drive Capability Switching                    */
            uint8_t             : 3;
    } SOMCR_b;
  } ;
  __IM  uint16_t  RESERVED56;
  __IM  uint32_t  RESERVED57[3];
  
  union {
    __IOM uint8_t LOCOCR;                       /*!< (@ 0x00000490) Low-Speed On-Chip Oscillator Control Register              */
    
    struct {
      __IOM uint8_t LCSTP       : 1;            /*!< [0..0] LOCO Stop                                                          */
            uint8_t             : 7;
    } LOCOCR_b;
  } ;
  __IM  uint8_t   RESERVED58;
  __IM  uint16_t  RESERVED59;
  __IM  uint32_t  RESERVED60[19];
  
  union {
    __IOM uint8_t VBBCR;                        /*!< (@ 0x000004E0) VBB Control Register                                       */
    
    struct {
      __IOM uint8_t CLKSEL      : 1;            /*!< [0..0] CLKSEL                                                             */
            uint8_t             : 5;
      __IOM uint8_t IVDIS       : 1;            /*!< [6..6] IVDIS                                                              */
      __IOM uint8_t VBBEN       : 1;            /*!< [7..7] VBBEN                                                              */
    } VBBCR_b;
  } ;
  
  union {
    __IM  uint8_t VBBST;                        /*!< (@ 0x000004E1) VBB Status Register                                        */
    
    struct {
      __IM  uint8_t VBBSTUP     : 1;            /*!< [0..0] VBBSTUP                                                            */
            uint8_t             : 7;
    } VBBST_b;
  } ;
  __IM  uint16_t  RESERVED61;
} SYSTEM_Type;                                  /*!< Size = 1252 (0x4e4)                                                       */



/* =========================================================================================================================== */
/* ================                                           TEMPS                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Temperature Sensor (TEMPS)
  */

typedef struct {                                /*!< (@ 0x01008000) TEMPS Structure                                            */
  __IM  uint32_t  RESERVED[95];
  
  union {
    __IM  uint32_t TSCDR;                       /*!< (@ 0x0000017C) Temperature Sensor Control Register                        */
    
    struct {
      __IM  uint32_t TSCDR      : 16;           /*!< [15..0] TSCDR                                                             */
            uint32_t            : 16;
    } TSCDR_b;
  } ;
  __IM  uint32_t  RESERVED1[264328096];
  
  union {
    __IOM uint8_t TSCR;                         /*!< (@ 0x3F055000) Temperature Sensor Control Register                        */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t TSEN        : 1;            /*!< [7..7] TSEN                                                               */
    } TSCR_b;
  } ;
  __IM  uint8_t   RESERVED2;
  __IM  uint16_t  RESERVED3;
} TEMPS_Type;                                   /*!< Size = 1057312772 (0x3f055004)                                            */



/* =========================================================================================================================== */
/* ================                                           TMR0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief TMR0 (TMR0)
  */

typedef struct {                                /*!< (@ 0x40052000) TMR0 Structure                                             */
  
  union {
    __IOM uint8_t TCR;                          /*!< (@ 0x00000000) TCR                                                        */
    
    struct {
            uint8_t             : 3;
      __IOM uint8_t CCLR        : 2;            /*!< [4..3] CCLR                                                               */
      __IOM uint8_t OVIE        : 1;            /*!< [5..5] OVIE                                                               */
      __IOM uint8_t CMIEA       : 1;            /*!< [6..6] CMIEA                                                              */
      __IOM uint8_t CMIEB       : 1;            /*!< [7..7] CMIEB                                                              */
    } TCR_b;
  } ;
  __IM  uint8_t   RESERVED;
  
  union {
    __IOM uint8_t TCSR;                         /*!< (@ 0x00000002) TCSR                                                       */
    
    struct {
      __IOM uint8_t OSA         : 2;            /*!< [1..0] OSA                                                                */
      __IOM uint8_t OSB         : 2;            /*!< [3..2] OSB                                                                */
      __IOM uint8_t ADTE        : 1;            /*!< [4..4] ADTE                                                               */
            uint8_t             : 3;
    } TCSR_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t TCORA;                        /*!< (@ 0x00000004) TCORA                                                      */
    
    struct {
      __IOM uint8_t TCORA       : 8;            /*!< [7..0] TCORA                                                              */
    } TCORA_b;
  } ;
  __IM  uint8_t   RESERVED2;
  
  union {
    __IOM uint8_t TCORB;                        /*!< (@ 0x00000006) TCORB                                                      */
    
    struct {
      __IOM uint8_t TCORB       : 8;            /*!< [7..0] TCORB                                                              */
    } TCORB_b;
  } ;
  __IM  uint8_t   RESERVED3;
  
  union {
    __IOM uint8_t TCNT;                         /*!< (@ 0x00000008) TCNT                                                       */
    
    struct {
      __IOM uint8_t TCNT        : 8;            /*!< [7..0] TCNT                                                               */
    } TCNT_b;
  } ;
  __IM  uint8_t   RESERVED4;
  
  union {
    __IOM uint8_t TCCR;                         /*!< (@ 0x0000000A) TCCR                                                       */
    
    struct {
      __IOM uint8_t CKS         : 3;            /*!< [2..0] CKS                                                                */
      __IOM uint8_t CSS         : 2;            /*!< [4..3] CSS                                                                */
            uint8_t             : 2;
      __IOM uint8_t TMRIS       : 1;            /*!< [7..7] TMRIS                                                              */
    } TCCR_b;
  } ;
} TMR0_Type;                                    /*!< Size = 11 (0xb)                                                           */



/* =========================================================================================================================== */
/* ================                                           TMR01                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief TMR01 (TMR01)
  */

typedef struct {                                /*!< (@ 0x40052000) TMR01 Structure                                            */
  __IM  uint16_t  RESERVED[2];
  
  union {
    __IOM uint16_t TCORA;                       /*!< (@ 0x00000004) TCORA                                                      */
    
    struct {
      __IOM uint16_t TCORA      : 16;           /*!< [15..0] TCORA                                                             */
    } TCORA_b;
  } ;
  
  union {
    __IOM uint16_t TCORB;                       /*!< (@ 0x00000006) TCORB                                                      */
    
    struct {
      __IOM uint16_t TCORB      : 16;           /*!< [15..0] TCORB                                                             */
    } TCORB_b;
  } ;
  
  union {
    __IOM uint16_t TCNT;                        /*!< (@ 0x00000008) TCNT                                                       */
    
    struct {
      __IOM uint16_t TCNT       : 16;           /*!< [15..0] TCNT                                                              */
    } TCNT_b;
  } ;
} TMR01_Type;                                   /*!< Size = 10 (0xa)                                                           */



/* =========================================================================================================================== */
/* ================                                           TMR1                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief TMR1 (TMR1)
  */

typedef struct {                                /*!< (@ 0x40052000) TMR1 Structure                                             */
  __IM  uint8_t   RESERVED;
  
  union {
    __IOM uint8_t TCR;                          /*!< (@ 0x00000001) TCR                                                        */
    
    struct {
            uint8_t             : 3;
      __IOM uint8_t CCLR        : 2;            /*!< [4..3] CCLR                                                               */
      __IOM uint8_t OVIE        : 1;            /*!< [5..5] OVIE                                                               */
      __IOM uint8_t CMIEA       : 1;            /*!< [6..6] CMIEA                                                              */
      __IOM uint8_t CMIEB       : 1;            /*!< [7..7] CMIEB                                                              */
    } TCR_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t TCSR;                         /*!< (@ 0x00000003) TCSR                                                       */
    
    struct {
      __IOM uint8_t OSA         : 2;            /*!< [1..0] OSA                                                                */
      __IOM uint8_t OSB         : 2;            /*!< [3..2] OSB                                                                */
      __IOM uint8_t ADTE        : 1;            /*!< [4..4] ADTE                                                               */
            uint8_t             : 3;
    } TCSR_b;
  } ;
  __IM  uint8_t   RESERVED2;
  
  union {
    __IOM uint8_t TCORA;                        /*!< (@ 0x00000005) TCORA                                                      */
    
    struct {
      __IOM uint8_t TCORA       : 8;            /*!< [7..0] TCORA                                                              */
    } TCORA_b;
  } ;
  __IM  uint8_t   RESERVED3;
  
  union {
    __IOM uint8_t TCORB;                        /*!< (@ 0x00000007) TCORB                                                      */
    
    struct {
      __IOM uint8_t TCORB       : 8;            /*!< [7..0] TCORB                                                              */
    } TCORB_b;
  } ;
  __IM  uint8_t   RESERVED4;
  
  union {
    __IOM uint8_t TCNT;                         /*!< (@ 0x00000009) TCNT                                                       */
    
    struct {
      __IOM uint8_t TCNT        : 8;            /*!< [7..0] TCNT                                                               */
    } TCNT_b;
  } ;
  __IM  uint8_t   RESERVED5;
  
  union {
    __IOM uint8_t TCCR;                         /*!< (@ 0x0000000B) TCCR                                                       */
    
    struct {
      __IOM uint8_t CKS         : 3;            /*!< [2..0] CKS                                                                */
      __IOM uint8_t CSS         : 2;            /*!< [4..3] CSS                                                                */
            uint8_t             : 2;
      __IOM uint8_t TMRIS       : 1;            /*!< [7..7] TMRIS                                                              */
    } TCCR_b;
  } ;
} TMR1_Type;                                    /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                           USBFS                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief USB 2.0 FS Module (USBFS)
  */

typedef struct {                                /*!< (@ 0x40090400) USBFS Structure                                            */
  
  union {
    __IOM uint16_t SYSCFG;                      /*!< (@ 0x00000000) System Configuration Control Register                      */
    
    struct {
      __IOM uint16_t USBE       : 1;            /*!< [0..0] USB Operation Enable                                               */
            uint16_t            : 3;
      __IOM uint16_t DPRPU      : 1;            /*!< [4..4] D+ Line Resistor Control                                           */
      __IOM uint16_t DRPD       : 1;            /*!< [5..5] D+/D- Line Resistor Control                                        */
      __IOM uint16_t DCFM       : 1;            /*!< [6..6] DCFM                                                               */
            uint16_t            : 3;
      __IOM uint16_t SCKE       : 1;            /*!< [10..10] USB Clock Enable                                                 */
            uint16_t            : 5;
    } SYSCFG_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IM  uint16_t SYSSTS0;                     /*!< (@ 0x00000004) System Configuration Status Register 0                     */
    
    struct {
      __IM  uint16_t LNST       : 2;            /*!< [1..0] USB Data Line Status Monitor                                       */
      __IM  uint16_t IDMON      : 1;            /*!< [2..2] IDMON                                                              */
            uint16_t            : 2;
      __IM  uint16_t SOFEA      : 1;            /*!< [5..5] SOFEA                                                              */
      __IM  uint16_t HTACT      : 1;            /*!< [6..6] HTACT                                                              */
            uint16_t            : 7;
      __IM  uint16_t OVCMON     : 2;            /*!< [15..14] OVCMON                                                           */
    } SYSSTS0_b;
  } ;
  __IM  uint16_t  RESERVED1;
  
  union {
    __IOM uint16_t DVSTCTR0;                    /*!< (@ 0x00000008) Device State Control Register 0                            */
    
    struct {
      __IM  uint16_t RHST       : 3;            /*!< [2..0] USB Bus Reset Status                                               */
            uint16_t            : 1;
      __IOM uint16_t UACT       : 1;            /*!< [4..4] UACT                                                               */
      __IOM uint16_t RESUME     : 1;            /*!< [5..5] RESUME                                                             */
      __IOM uint16_t USBRST     : 1;            /*!< [6..6] USBRST                                                             */
      __IOM uint16_t RWUPE      : 1;            /*!< [7..7] RWUPE                                                              */
      __IOM uint16_t WKUP       : 1;            /*!< [8..8] Wakeup Detection Enable                                            */
      __IOM uint16_t VBUSEN     : 1;            /*!< [9..9] VBUSEN                                                             */
      __IOM uint16_t EXICEN     : 1;            /*!< [10..10] EXICEN                                                           */
      __IOM uint16_t HNPBTOA    : 1;            /*!< [11..11] HNPBTOA                                                          */
            uint16_t            : 4;
    } DVSTCTR0_b;
  } ;
  __IM  uint16_t  RESERVED2;
  __IM  uint32_t  RESERVED3[2];
  
  union {
    union {
      __IOM uint16_t CFIFO;                     /*!< (@ 0x00000014) CFIFO Port Register                                        */
      
      struct {
        __IOM uint16_t FIFOPORT : 16;           /*!< [15..0] FIFO PortRead receive data from the FIFO buffer or write
                                                     transmit data to the FIFO buffer by accessing these bits.                 */
      } CFIFO_b;
    } ;
    __IOM uint8_t CFIFOL;                       /*!< (@ 0x00000014) CFIFO Port Register L                                      */
  };
  __IM  uint16_t  RESERVED4;
  
  union {
    union {
      __IOM uint16_t D0FIFO;                    /*!< (@ 0x00000018) D0FIFO Port Register                                       */
      
      struct {
        __IOM uint16_t FIFOPORT : 16;           /*!< [15..0] FIFO PortRead receive data from the FIFO buffer or write
                                                     transmit data to the FIFO buffer by accessing these bits.                 */
      } D0FIFO_b;
    } ;
    __IOM uint8_t D0FIFOL;                      /*!< (@ 0x00000018) D0FIFO Port Register L                                     */
  };
  __IM  uint16_t  RESERVED5;
  
  union {
    union {
      __IOM uint16_t D1FIFO;                    /*!< (@ 0x0000001C) D1FIFO Port Register                                       */
      
      struct {
        __IOM uint16_t FIFOPORT : 16;           /*!< [15..0] FIFO PortRead receive data from the FIFO buffer or write
                                                     transmit data to the FIFO buffer by accessing these bits.                 */
      } D1FIFO_b;
    } ;
    __IOM uint8_t D1FIFOL;                      /*!< (@ 0x0000001C) D1FIFO Port Register L                                     */
  };
  __IM  uint16_t  RESERVED6;
  
  union {
    __IOM uint16_t CFIFOSEL;                    /*!< (@ 0x00000020) CFIFO Port Select Register                                 */
    
    struct {
      __IOM uint16_t CURPIPE    : 4;            /*!< [3..0] CFIFO Port Access Pipe Specification                               */
            uint16_t            : 1;
      __IOM uint16_t ISEL       : 1;            /*!< [5..5] CFIFO Port Access Direction When DCP is Selected                   */
            uint16_t            : 2;
      __IOM uint16_t BIGEND     : 1;            /*!< [8..8] CFIFO Port Endian Control                                          */
            uint16_t            : 1;
      __IOM uint16_t MBW        : 1;            /*!< [10..10] CFIFO Port Access Bit Width                                      */
            uint16_t            : 3;
      __IOM uint16_t REW        : 1;            /*!< [14..14] Buffer Pointer Rewind                                            */
      __IOM uint16_t RCNT       : 1;            /*!< [15..15] Read Count Mode                                                  */
    } CFIFOSEL_b;
  } ;
  
  union {
    __IOM uint16_t CFIFOCTR;                    /*!< (@ 0x00000022) CFIFO Port Control Register                                */
    
    struct {
      __IM  uint16_t DTLN       : 9;            /*!< [8..0] Receive Data LengthIndicates the length of the receive
                                                     data.                                                                     */
            uint16_t            : 4;
      __IM  uint16_t FRDY       : 1;            /*!< [13..13] FIFO Port Ready                                                  */
      __IOM uint16_t BCLR       : 1;            /*!< [14..14] CPU Buffer Clear                                                 */
      __IOM uint16_t BVAL       : 1;            /*!< [15..15] Buffer Memory Valid Flag                                         */
    } CFIFOCTR_b;
  } ;
  __IM  uint32_t  RESERVED7;
  
  union {
    __IOM uint16_t D0FIFOSEL;                   /*!< (@ 0x00000028) D0FIFO Port Select Register                                */
    
    struct {
      __IOM uint16_t CURPIPE    : 4;            /*!< [3..0] FIFO Port Access Pipe Specification                                */
            uint16_t            : 4;
      __IOM uint16_t BIGEND     : 1;            /*!< [8..8] FIFO Port Endian Control                                           */
            uint16_t            : 1;
      __IOM uint16_t MBW        : 1;            /*!< [10..10] FIFO Port Access Bit Width                                       */
            uint16_t            : 1;
      __IOM uint16_t DREQE      : 1;            /*!< [12..12] DMA/DTC Transfer Request Enable                                  */
      __IOM uint16_t DCLRM      : 1;            /*!< [13..13] Auto Buffer Memory Clear Mode Accessed after Specified
                                                     Pipe Data is Read                                                         */
      __IOM uint16_t REW        : 1;            /*!< [14..14] Buffer Pointer Rewind                                            */
      __IOM uint16_t RCNT       : 1;            /*!< [15..15] Read Count Mode                                                  */
    } D0FIFOSEL_b;
  } ;
  
  union {
    __IOM uint16_t D0FIFOCTR;                   /*!< (@ 0x0000002A) D0FIFO Port Control Register                               */
    
    struct {
      __IM  uint16_t DTLN       : 9;            /*!< [8..0] Receive Data LengthIndicates the length of the receive
                                                     data.                                                                     */
            uint16_t            : 4;
      __IM  uint16_t FRDY       : 1;            /*!< [13..13] FIFO Port Ready                                                  */
      __IOM uint16_t BCLR       : 1;            /*!< [14..14] CPU Buffer Clear                                                 */
      __IOM uint16_t BVAL       : 1;            /*!< [15..15] Buffer Memory Valid Flag                                         */
    } D0FIFOCTR_b;
  } ;
  
  union {
    __IOM uint16_t D1FIFOSEL;                   /*!< (@ 0x0000002C) D1FIFO Port Select Register                                */
    
    struct {
      __IOM uint16_t CURPIPE    : 4;            /*!< [3..0] FIFO Port Access Pipe Specification                                */
            uint16_t            : 4;
      __IOM uint16_t BIGEND     : 1;            /*!< [8..8] FIFO Port Endian Control                                           */
            uint16_t            : 1;
      __IOM uint16_t MBW        : 1;            /*!< [10..10] FIFO Port Access Bit Width                                       */
            uint16_t            : 1;
      __IOM uint16_t DREQE      : 1;            /*!< [12..12] DMA/DTC Transfer Request Enable                                  */
      __IOM uint16_t DCLRM      : 1;            /*!< [13..13] Auto Buffer Memory Clear Mode Accessed after Specified
                                                     Pipe Data is Read                                                         */
      __IOM uint16_t REW        : 1;            /*!< [14..14] Buffer Pointer Rewind                                            */
      __IOM uint16_t RCNT       : 1;            /*!< [15..15] Read Count Mode                                                  */
    } D1FIFOSEL_b;
  } ;
  
  union {
    __IOM uint16_t D1FIFOCTR;                   /*!< (@ 0x0000002E) D1FIFO Port Control Register                               */
    
    struct {
      __IM  uint16_t DTLN       : 9;            /*!< [8..0] Receive Data LengthIndicates the length of the receive
                                                     data.                                                                     */
            uint16_t            : 4;
      __IM  uint16_t FRDY       : 1;            /*!< [13..13] FIFO Port Ready                                                  */
      __IOM uint16_t BCLR       : 1;            /*!< [14..14] CPU Buffer Clear                                                 */
      __IOM uint16_t BVAL       : 1;            /*!< [15..15] Buffer Memory Valid Flag                                         */
    } D1FIFOCTR_b;
  } ;
  
  union {
    __IOM uint16_t INTENB0;                     /*!< (@ 0x00000030) Interrupt Enable Register 0                                */
    
    struct {
            uint16_t            : 8;
      __IOM uint16_t BRDYE      : 1;            /*!< [8..8] Buffer Ready Interrupt Enable                                      */
      __IOM uint16_t NRDYE      : 1;            /*!< [9..9] Buffer Not Ready Response Interrupt Enable                         */
      __IOM uint16_t BEMPE      : 1;            /*!< [10..10] Buffer Empty Interrupt Enable                                    */
      __IOM uint16_t CTRE       : 1;            /*!< [11..11] Control Transfer Stage Transition Interrupt Enable               */
      __IOM uint16_t DVSE       : 1;            /*!< [12..12] Device State Transition Interrupt Enable                         */
      __IOM uint16_t SOFE       : 1;            /*!< [13..13] Frame Number Update Interrupt Enable                             */
      __IOM uint16_t RSME       : 1;            /*!< [14..14] Resume Interrupt Enable                                          */
      __IOM uint16_t VBSE       : 1;            /*!< [15..15] VBUS Interrupt Enable                                            */
    } INTENB0_b;
  } ;
  
  union {
    __IOM uint16_t INTENB1;                     /*!< (@ 0x00000032) Interrupt Enable Register 1                                */
    
    struct {
            uint16_t            : 4;
      __IOM uint16_t SACKE      : 1;            /*!< [4..4] Setup Transaction Normal Response Interrupt Enable                 */
      __IOM uint16_t SIGNE      : 1;            /*!< [5..5] Setup Transaction Error Interrupt Enable                           */
      __IOM uint16_t EOFERRE    : 1;            /*!< [6..6] EOF Error Detection Interrupt Enable                               */
            uint16_t            : 4;
      __IOM uint16_t ATTCHE     : 1;            /*!< [11..11] Connection Detection Interrupt Enable                            */
      __IOM uint16_t DTCHE      : 1;            /*!< [12..12] Disconnection Detection Interrupt Enable                         */
            uint16_t            : 1;
      __IOM uint16_t BCHGE      : 1;            /*!< [14..14] USB Bus Change Interrupt Enable                                  */
      __IOM uint16_t OVRCRE     : 1;            /*!< [15..15] Overcurrent Input Change Interrupt Enable                        */
    } INTENB1_b;
  } ;
  __IM  uint16_t  RESERVED8;
  
  union {
    __IOM uint16_t BRDYENB;                     /*!< (@ 0x00000036) BRDY Interrupt Enable Register                             */
    
    struct {
      __IOM uint16_t PIPE0BRDYE : 1;            /*!< [0..0] BRDY Interrupt Enable for PIPE0                                    */
      __IOM uint16_t PIPE1BRDYE : 1;            /*!< [1..1] BRDY Interrupt Enable for PIPE1                                    */
      __IOM uint16_t PIPE2BRDYE : 1;            /*!< [2..2] BRDY Interrupt Enable for PIPE2                                    */
      __IOM uint16_t PIPE3BRDYE : 1;            /*!< [3..3] BRDY Interrupt Enable for PIPE3                                    */
      __IOM uint16_t PIPE4BRDYE : 1;            /*!< [4..4] BRDY Interrupt Enable for PIPE4                                    */
      __IOM uint16_t PIPE5BRDYE : 1;            /*!< [5..5] BRDY Interrupt Enable for PIPE5                                    */
      __IOM uint16_t PIPE6BRDYE : 1;            /*!< [6..6] BRDY Interrupt Enable for PIPE6                                    */
      __IOM uint16_t PIPE7BRDYE : 1;            /*!< [7..7] BRDY Interrupt Enable for PIPE7                                    */
      __IOM uint16_t PIPE8BRDYE : 1;            /*!< [8..8] BRDY Interrupt Enable for PIPE8                                    */
      __IOM uint16_t PIPE9BRDYE : 1;            /*!< [9..9] BRDY Interrupt Enable for PIPE9                                    */
            uint16_t            : 6;
    } BRDYENB_b;
  } ;
  
  union {
    __IOM uint16_t NRDYENB;                     /*!< (@ 0x00000038) NRDY Interrupt Enable Register                             */
    
    struct {
      __IOM uint16_t PIPE0NRDYE : 1;            /*!< [0..0] NRDY Interrupt Enable for PIPE0                                    */
      __IOM uint16_t PIPE1NRDYE : 1;            /*!< [1..1] NRDY Interrupt Enable for PIPE1                                    */
      __IOM uint16_t PIPE2NRDYE : 1;            /*!< [2..2] NRDY Interrupt Enable for PIPE2                                    */
      __IOM uint16_t PIPE3NRDYE : 1;            /*!< [3..3] NRDY Interrupt Enable for PIPE3                                    */
      __IOM uint16_t PIPE4NRDYE : 1;            /*!< [4..4] NRDY Interrupt Enable for PIPE4                                    */
      __IOM uint16_t PIPE5NRDYE : 1;            /*!< [5..5] NRDY Interrupt Enable for PIPE5                                    */
      __IOM uint16_t PIPE6NRDYE : 1;            /*!< [6..6] NRDY Interrupt Enable for PIPE6                                    */
      __IOM uint16_t PIPE7NRDYE : 1;            /*!< [7..7] NRDY Interrupt Enable for PIPE7                                    */
      __IOM uint16_t PIPE8NRDYE : 1;            /*!< [8..8] NRDY Interrupt Enable for PIPE8                                    */
      __IOM uint16_t PIPE9NRDYE : 1;            /*!< [9..9] NRDY Interrupt Enable for PIPE9                                    */
            uint16_t            : 6;
    } NRDYENB_b;
  } ;
  
  union {
    __IOM uint16_t BEMPENB;                     /*!< (@ 0x0000003A) BEMP Interrupt Enable Register                             */
    
    struct {
      __IOM uint16_t PIPE0BEMPE : 1;            /*!< [0..0] BEMP Interrupt Enable for PIPE0                                    */
      __IOM uint16_t PIPE1BEMPE : 1;            /*!< [1..1] BEMP Interrupt Enable for PIPE1                                    */
      __IOM uint16_t PIPE2BEMPE : 1;            /*!< [2..2] BEMP Interrupt Enable for PIPE2                                    */
      __IOM uint16_t PIPE3BEMPE : 1;            /*!< [3..3] BEMP Interrupt Enable for PIPE3                                    */
      __IOM uint16_t PIPE4BEMPE : 1;            /*!< [4..4] BEMP Interrupt Enable for PIPE4                                    */
      __IOM uint16_t PIPE5BEMPE : 1;            /*!< [5..5] BEMP Interrupt Enable for PIPE5                                    */
      __IOM uint16_t PIPE6BEMPE : 1;            /*!< [6..6] BEMP Interrupt Enable for PIPE6                                    */
      __IOM uint16_t PIPE7BEMPE : 1;            /*!< [7..7] BEMP Interrupt Enable for PIPE7                                    */
      __IOM uint16_t PIPE8BEMPE : 1;            /*!< [8..8] BEMP Interrupt Enable for PIPE8                                    */
      __IOM uint16_t PIPE9BEMPE : 1;            /*!< [9..9] BEMP Interrupt Enable for PIPE9                                    */
            uint16_t            : 6;
    } BEMPENB_b;
  } ;
  
  union {
    __IOM uint16_t SOFCFG;                      /*!< (@ 0x0000003C) SOF Output Configuration Register                          */
    
    struct {
            uint16_t            : 4;
      __IM  uint16_t EDGESTS    : 1;            /*!< [4..4] Edge Interrupt Output Status Monitor                               */
            uint16_t            : 1;
      __IOM uint16_t BRDYM      : 1;            /*!< [6..6] BRDY Interrupt Status Clear Timing                                 */
            uint16_t            : 1;
      __IOM uint16_t TRNENSEL   : 1;            /*!< [8..8] Transaction-Enabled Time Select                                    */
            uint16_t            : 7;
    } SOFCFG_b;
  } ;
  __IM  uint16_t  RESERVED9;
  
  union {
    __IOM uint16_t INTSTS0;                     /*!< (@ 0x00000040) Interrupt Status Register 0                                */
    
    struct {
      __IM  uint16_t CTSQ       : 3;            /*!< [2..0] Control Transfer Stage                                             */
      __IOM uint16_t VALID      : 1;            /*!< [3..3] USB Request Reception                                              */
      __IM  uint16_t DVSQ       : 3;            /*!< [6..4] Device State                                                       */
      __IM  uint16_t VBSTS      : 1;            /*!< [7..7] VBUS Input Status                                                  */
      __IM  uint16_t BRDY       : 1;            /*!< [8..8] Buffer Ready Interrupt Status                                      */
      __IM  uint16_t NRDY       : 1;            /*!< [9..9] Buffer Not Ready Interrupt Status                                  */
      __IM  uint16_t BEMP       : 1;            /*!< [10..10] Buffer Empty Interrupt Status                                    */
      __IOM uint16_t CTRT       : 1;            /*!< [11..11] Control Transfer Stage Transition Interrupt Status               */
      __IOM uint16_t DVST       : 1;            /*!< [12..12] Device State Transition Interrupt Status                         */
      __IOM uint16_t SOFR       : 1;            /*!< [13..13] Frame Number Refresh Interrupt Status                            */
      __IOM uint16_t RESM       : 1;            /*!< [14..14] Resume Interrupt Status                                          */
      __IOM uint16_t VBINT      : 1;            /*!< [15..15] VBUS Interrupt Status                                            */
    } INTSTS0_b;
  } ;
  
  union {
    __IOM uint16_t INTSTS1;                     /*!< (@ 0x00000042) Interrupt Status Register 1                                */
    
    struct {
            uint16_t            : 4;
      __IOM uint16_t SACK       : 1;            /*!< [4..4] Setup Transaction Normal Response Interrupt Status                 */
      __IOM uint16_t SIGN       : 1;            /*!< [5..5] Setup Transaction Error Interrupt Status                           */
      __IOM uint16_t EOFERR     : 1;            /*!< [6..6] EOF Error Detection Interrupt Status                               */
            uint16_t            : 4;
      __IOM uint16_t ATTCH      : 1;            /*!< [11..11] ATTCH Interrupt Status                                           */
      __IOM uint16_t DTCH       : 1;            /*!< [12..12] USB Disconnection Detection Interrupt Status                     */
            uint16_t            : 1;
      __IOM uint16_t BCHG       : 1;            /*!< [14..14] USB Bus Change Interrupt Status                                  */
      __IOM uint16_t OVRCR      : 1;            /*!< [15..15] Overcurrent Input Change Interrupt Status                        */
    } INTSTS1_b;
  } ;
  __IM  uint16_t  RESERVED10;
  
  union {
    __IOM uint16_t BRDYSTS;                     /*!< (@ 0x00000046) BRDY Interrupt Status Register                             */
    
    struct {
      __IOM uint16_t PIPE0BRDY  : 1;            /*!< [0..0] BRDY Interrupt Status for PIPE0                                    */
      __IOM uint16_t PIPE1BRDY  : 1;            /*!< [1..1] BRDY Interrupt Status for PIPE1                                    */
      __IOM uint16_t PIPE2BRDY  : 1;            /*!< [2..2] BRDY Interrupt Status for PIPE2                                    */
      __IOM uint16_t PIPE3BRDY  : 1;            /*!< [3..3] BRDY Interrupt Status for PIPE3                                    */
      __IOM uint16_t PIPE4BRDY  : 1;            /*!< [4..4] BRDY Interrupt Status for PIPE4                                    */
      __IOM uint16_t PIPE5BRDY  : 1;            /*!< [5..5] BRDY Interrupt Status for PIPE5                                    */
      __IOM uint16_t PIPE6BRDY  : 1;            /*!< [6..6] BRDY Interrupt Status for PIPE6                                    */
      __IOM uint16_t PIPE7BRDY  : 1;            /*!< [7..7] BRDY Interrupt Status for PIPE7                                    */
      __IOM uint16_t PIPE8BRDY  : 1;            /*!< [8..8] BRDY Interrupt Status for PIPE8                                    */
      __IOM uint16_t PIPE9BRDY  : 1;            /*!< [9..9] BRDY Interrupt Status for PIPE9                                    */
            uint16_t            : 6;
    } BRDYSTS_b;
  } ;
  
  union {
    __IOM uint16_t NRDYSTS;                     /*!< (@ 0x00000048) NRDY Interrupt Status Register                             */
    
    struct {
      __IOM uint16_t PIPE0NRDY  : 1;            /*!< [0..0] NRDY Interrupt Status for PIPE0                                    */
      __IOM uint16_t PIPE1NRDY  : 1;            /*!< [1..1] NRDY Interrupt Status for PIPE1                                    */
      __IOM uint16_t PIPE2NRDY  : 1;            /*!< [2..2] NRDY Interrupt Status for PIPE2                                    */
      __IOM uint16_t PIPE3NRDY  : 1;            /*!< [3..3] NRDY Interrupt Status for PIPE3                                    */
      __IOM uint16_t PIPE4NRDY  : 1;            /*!< [4..4] NRDY Interrupt Status for PIPE4                                    */
      __IOM uint16_t PIPE5NRDY  : 1;            /*!< [5..5] NRDY Interrupt Status for PIPE5                                    */
      __IOM uint16_t PIPE6NRDY  : 1;            /*!< [6..6] NRDY Interrupt Status for PIPE6                                    */
      __IOM uint16_t PIPE7NRDY  : 1;            /*!< [7..7] NRDY Interrupt Status for PIPE7                                    */
      __IOM uint16_t PIPE8NRDY  : 1;            /*!< [8..8] NRDY Interrupt Status for PIPE8                                    */
      __IOM uint16_t PIPE9NRDY  : 1;            /*!< [9..9] NRDY Interrupt Status for PIPE9                                    */
            uint16_t            : 6;
    } NRDYSTS_b;
  } ;
  
  union {
    __IOM uint16_t BEMPSTS;                     /*!< (@ 0x0000004A) BEMP Interrupt Status Register                             */
    
    struct {
      __IOM uint16_t PIPE0BEMP  : 1;            /*!< [0..0] BEMP Interrupt Status for PIPE0                                    */
      __IOM uint16_t PIPE1BEMP  : 1;            /*!< [1..1] BEMP Interrupt Status for PIPE1                                    */
      __IOM uint16_t PIPE2BEMP  : 1;            /*!< [2..2] BEMP Interrupt Status for PIPE2                                    */
      __IOM uint16_t PIPE3BEMP  : 1;            /*!< [3..3] BEMP Interrupt Status for PIPE3                                    */
      __IOM uint16_t PIPE4BEMP  : 1;            /*!< [4..4] BEMP Interrupt Status for PIPE4                                    */
      __IOM uint16_t PIPE5BEMP  : 1;            /*!< [5..5] BEMP Interrupt Status for PIPE5                                    */
      __IOM uint16_t PIPE6BEMP  : 1;            /*!< [6..6] BEMP Interrupt Status for PIPE6                                    */
      __IOM uint16_t PIPE7BEMP  : 1;            /*!< [7..7] BEMP Interrupt Status for PIPE7                                    */
      __IOM uint16_t PIPE8BEMP  : 1;            /*!< [8..8] BEMP Interrupt Status for PIPE8                                    */
      __IOM uint16_t PIPE9BEMP  : 1;            /*!< [9..9] BEMP Interrupt Status for PIPE9                                    */
            uint16_t            : 6;
    } BEMPSTS_b;
  } ;
  
  union {
    __IOM uint16_t FRMNUM;                      /*!< (@ 0x0000004C) Frame Number Register                                      */
    
    struct {
      __IM  uint16_t FRNM       : 11;           /*!< [10..0] Frame NumberLatest frame number                                   */
            uint16_t            : 3;
      __IOM uint16_t CRCE       : 1;            /*!< [14..14] Receive Data Error                                               */
      __IOM uint16_t OVRN       : 1;            /*!< [15..15] Overrun/Underrun Detection Status                                */
    } FRMNUM_b;
  } ;
  __IM  uint16_t  RESERVED11;
  __IM  uint32_t  RESERVED12;
  
  union {
    __IOM uint16_t USBREQ;                      /*!< (@ 0x00000054) USB Request Type Register                                  */
    
    struct {
      __IOM uint16_t BMREQUESTTYPE : 8;         /*!< [7..0] Request TypeThese bits store the USB request bmRequestType
                                                     value.                                                                    */
      __IOM uint16_t BREQUEST   : 8;            /*!< [15..8] RequestThese bits store the USB request bRequest value.           */
    } USBREQ_b;
  } ;
  
  union {
    __IOM uint16_t USBVAL;                      /*!< (@ 0x00000056) USB Request Value Register                                 */
    
    struct {
      __IOM uint16_t WVALUE     : 16;           /*!< [15..0] ValueThese bits store the USB request wValue value.               */
    } USBVAL_b;
  } ;
  
  union {
    __IOM uint16_t USBINDX;                     /*!< (@ 0x00000058) USB Request Index Register                                 */
    
    struct {
      __IOM uint16_t WINDEX     : 16;           /*!< [15..0] IndexThese bits store the USB request wIndex value.               */
    } USBINDX_b;
  } ;
  
  union {
    __IOM uint16_t USBLENG;                     /*!< (@ 0x0000005A) USB Request Length Register                                */
    
    struct {
      __IOM uint16_t WLENGTH    : 16;           /*!< [15..0] LengthThese bits store the USB request wLength value.             */
    } USBLENG_b;
  } ;
  
  union {
    __IOM uint16_t DCPCFG;                      /*!< (@ 0x0000005C) DCP Configuration Register                                 */
    
    struct {
            uint16_t            : 4;
      __IOM uint16_t DIR        : 1;            /*!< [4..4] Transfer Direction                                                 */
            uint16_t            : 2;
      __IOM uint16_t SHTNAK     : 1;            /*!< [7..7] Pipe Disabled at End of Transfer                                   */
            uint16_t            : 8;
    } DCPCFG_b;
  } ;
  
  union {
    __IOM uint16_t DCPMAXP;                     /*!< (@ 0x0000005E) DCP Maximum Packet Size Register                           */
    
    struct {
      __IOM uint16_t MXPS       : 7;            /*!< [6..0] Maximum Packet SizeThese bits set the maximum amount
                                                     of data (maximum packet size) in payloads for the DCP.                    */
            uint16_t            : 5;
      __IOM uint16_t DEVSEL     : 4;            /*!< [15..12] Device Select                                                    */
    } DCPMAXP_b;
  } ;
  
  union {
    __IOM uint16_t DCPCTR;                      /*!< (@ 0x00000060) DCP Control Register                                       */
    
    struct {
      __IOM uint16_t PID        : 2;            /*!< [1..0] Response PID                                                       */
      __IOM uint16_t CCPL       : 1;            /*!< [2..2] Control Transfer End Enable                                        */
            uint16_t            : 2;
      __IM  uint16_t PBUSY      : 1;            /*!< [5..5] Pipe Busy                                                          */
      __IM  uint16_t SQMON      : 1;            /*!< [6..6] Sequence Toggle Bit Monitor                                        */
      __IOM uint16_t SQSET      : 1;            /*!< [7..7] Sequence Toggle Bit Set                                            */
      __IOM uint16_t SQCLR      : 1;            /*!< [8..8] Sequence Toggle Bit Clear                                          */
            uint16_t            : 2;
      __IOM uint16_t SUREQCLR   : 1;            /*!< [11..11] SUREQ Bit Clear                                                  */
            uint16_t            : 2;
      __IOM uint16_t SUREQ      : 1;            /*!< [14..14] Setup Token Transmission                                         */
      __IM  uint16_t BSTS       : 1;            /*!< [15..15] Buffer Status                                                    */
    } DCPCTR_b;
  } ;
  __IM  uint16_t  RESERVED13;
  
  union {
    __IOM uint16_t PIPESEL;                     /*!< (@ 0x00000064) Pipe Window Select Register                                */
    
    struct {
      __IOM uint16_t PIPESEL    : 4;            /*!< [3..0] Pipe Window Select                                                 */
            uint16_t            : 12;
    } PIPESEL_b;
  } ;
  __IM  uint16_t  RESERVED14;
  
  union {
    __IOM uint16_t PIPECFG;                     /*!< (@ 0x00000068) Pipe Configuration Register                                */
    
    struct {
      __IOM uint16_t EPNUM      : 4;            /*!< [3..0] Endpoint NumberThese bits specify the endpoint number
                                                     for the selected pipe.Setting 0000b means unused pipe.                    */
      __IOM uint16_t DIR        : 1;            /*!< [4..4] Transfer Direction                                                 */
            uint16_t            : 2;
      __IOM uint16_t SHTNAK     : 1;            /*!< [7..7] Pipe Disabled at End of Transfer                                   */
            uint16_t            : 1;
      __IOM uint16_t DBLB       : 1;            /*!< [9..9] Double Buffer Mode                                                 */
      __IOM uint16_t BFRE       : 1;            /*!< [10..10] BRDY Interrupt Operation Specification                           */
            uint16_t            : 3;
      __IOM uint16_t TYPE       : 2;            /*!< [15..14] Transfer Type                                                    */
    } PIPECFG_b;
  } ;
  __IM  uint16_t  RESERVED15;
  
  union {
    __IOM uint16_t PIPEMAXP;                    /*!< (@ 0x0000006C) Pipe Maximum Packet Size Register                          */
    
    struct {
      __IOM uint16_t MXPS       : 9;            /*!< [8..0] Maximum Packet SizePIPE1 and PIPE2: 1 byte (001h) to
                                                     256 bytes (100h)PIPE3 to PIPE5: 8 bytes (008h), 16 bytes
                                                     (010h), 32 bytes (020h), 64 bytes (040h) (Bits [8:7] and
                                                     [2:0] are not provided.)PIPE6 to PIPE9: 1 byte (001h) to
                                                     64 bytes (040h) (Bits [8:7] are not provided.)                            */
            uint16_t            : 3;
      __IOM uint16_t DEVSEL     : 4;            /*!< [15..12] Device Select                                                    */
    } PIPEMAXP_b;
  } ;
  
  union {
    __IOM uint16_t PIPEPERI;                    /*!< (@ 0x0000006E) Pipe Cycle Control Register                                */
    
    struct {
      __IOM uint16_t IITV       : 3;            /*!< [2..0] Interval Error Detection IntervalSpecifies the interval
                                                     error detection timing for the selected pipe in terms of
                                                     frames, which is expressed as nth power of 2.                             */
            uint16_t            : 9;
      __IOM uint16_t IFIS       : 1;            /*!< [12..12] Isochronous IN Buffer Flush                                      */
            uint16_t            : 3;
    } PIPEPERI_b;
  } ;
  
  union {
    __IOM uint16_t PIPE1CTR;                    /*!< (@ 0x00000070) Pipe 1 Control Register                                    */
    
    struct {
      __IOM uint16_t PID        : 2;            /*!< [1..0] Response PID                                                       */
            uint16_t            : 3;
      __IM  uint16_t PBUSY      : 1;            /*!< [5..5] Pipe Busy                                                          */
      __IM  uint16_t SQMON      : 1;            /*!< [6..6] Sequence Toggle Bit Confirmation                                   */
      __IOM uint16_t SQSET      : 1;            /*!< [7..7] Sequence Toggle Bit Set                                            */
      __IOM uint16_t SQCLR      : 1;            /*!< [8..8] Sequence Toggle Bit Clear                                          */
      __IOM uint16_t ACLRM      : 1;            /*!< [9..9] Auto Buffer Clear Mode                                             */
      __IOM uint16_t ATREPM     : 1;            /*!< [10..10] Auto Response Mode                                               */
            uint16_t            : 3;
      __IM  uint16_t INBUFM     : 1;            /*!< [14..14] Transmit Buffer Monitor                                          */
      __IM  uint16_t BSTS       : 1;            /*!< [15..15] Buffer Status                                                    */
    } PIPE1CTR_b;
  } ;
  
  union {
    __IOM uint16_t PIPE2CTR;                    /*!< (@ 0x00000072) Pipe 2 Control Register                                    */
    
    struct {
      __IOM uint16_t PID        : 2;            /*!< [1..0] Response PID                                                       */
            uint16_t            : 3;
      __IM  uint16_t PBUSY      : 1;            /*!< [5..5] Pipe Busy                                                          */
      __IM  uint16_t SQMON      : 1;            /*!< [6..6] Sequence Toggle Bit Confirmation                                   */
      __IOM uint16_t SQSET      : 1;            /*!< [7..7] Sequence Toggle Bit Set                                            */
      __IOM uint16_t SQCLR      : 1;            /*!< [8..8] Sequence Toggle Bit Clear                                          */
      __IOM uint16_t ACLRM      : 1;            /*!< [9..9] Auto Buffer Clear Mode                                             */
      __IOM uint16_t ATREPM     : 1;            /*!< [10..10] Auto Response Mode                                               */
            uint16_t            : 3;
      __IM  uint16_t INBUFM     : 1;            /*!< [14..14] Transmit Buffer Monitor                                          */
      __IM  uint16_t BSTS       : 1;            /*!< [15..15] Buffer Status                                                    */
    } PIPE2CTR_b;
  } ;
  
  union {
    __IOM uint16_t PIPE3CTR;                    /*!< (@ 0x00000074) Pipe 3 Control Register                                    */
    
    struct {
      __IOM uint16_t PID        : 2;            /*!< [1..0] Response PID                                                       */
            uint16_t            : 3;
      __IM  uint16_t PBUSY      : 1;            /*!< [5..5] Pipe Busy                                                          */
      __IM  uint16_t SQMON      : 1;            /*!< [6..6] Sequence Toggle Bit Confirmation                                   */
      __IOM uint16_t SQSET      : 1;            /*!< [7..7] Sequence Toggle Bit Set                                            */
      __IOM uint16_t SQCLR      : 1;            /*!< [8..8] Sequence Toggle Bit Clear                                          */
      __IOM uint16_t ACLRM      : 1;            /*!< [9..9] Auto Buffer Clear Mode                                             */
      __IOM uint16_t ATREPM     : 1;            /*!< [10..10] Auto Response Mode                                               */
            uint16_t            : 3;
      __IM  uint16_t INBUFM     : 1;            /*!< [14..14] Transmit Buffer Monitor                                          */
      __IM  uint16_t BSTS       : 1;            /*!< [15..15] Buffer Status                                                    */
    } PIPE3CTR_b;
  } ;
  
  union {
    __IOM uint16_t PIPE4CTR;                    /*!< (@ 0x00000076) Pipe 4 Control Register                                    */
    
    struct {
      __IOM uint16_t PID        : 2;            /*!< [1..0] Response PID                                                       */
            uint16_t            : 3;
      __IM  uint16_t PBUSY      : 1;            /*!< [5..5] Pipe Busy                                                          */
      __IM  uint16_t SQMON      : 1;            /*!< [6..6] Sequence Toggle Bit Confirmation                                   */
      __IOM uint16_t SQSET      : 1;            /*!< [7..7] Sequence Toggle Bit Set                                            */
      __IOM uint16_t SQCLR      : 1;            /*!< [8..8] Sequence Toggle Bit Clear                                          */
      __IOM uint16_t ACLRM      : 1;            /*!< [9..9] Auto Buffer Clear Mode                                             */
      __IOM uint16_t ATREPM     : 1;            /*!< [10..10] Auto Response Mode                                               */
            uint16_t            : 3;
      __IM  uint16_t INBUFM     : 1;            /*!< [14..14] Transmit Buffer Monitor                                          */
      __IM  uint16_t BSTS       : 1;            /*!< [15..15] Buffer Status                                                    */
    } PIPE4CTR_b;
  } ;
  
  union {
    __IOM uint16_t PIPE5CTR;                    /*!< (@ 0x00000078) Pipe 5 Control Register                                    */
    
    struct {
      __IOM uint16_t PID        : 2;            /*!< [1..0] Response PID                                                       */
            uint16_t            : 3;
      __IM  uint16_t PBUSY      : 1;            /*!< [5..5] Pipe Busy                                                          */
      __IM  uint16_t SQMON      : 1;            /*!< [6..6] Sequence Toggle Bit Confirmation                                   */
      __IOM uint16_t SQSET      : 1;            /*!< [7..7] Sequence Toggle Bit Set                                            */
      __IOM uint16_t SQCLR      : 1;            /*!< [8..8] Sequence Toggle Bit Clear                                          */
      __IOM uint16_t ACLRM      : 1;            /*!< [9..9] Auto Buffer Clear Mode                                             */
      __IOM uint16_t ATREPM     : 1;            /*!< [10..10] Auto Response Mode                                               */
            uint16_t            : 3;
      __IM  uint16_t INBUFM     : 1;            /*!< [14..14] Transmit Buffer Monitor                                          */
      __IM  uint16_t BSTS       : 1;            /*!< [15..15] Buffer Status                                                    */
    } PIPE5CTR_b;
  } ;
  
  union {
    __IOM uint16_t PIPE6CTR;                    /*!< (@ 0x0000007A) Pipe 6 Control Register                                    */
    
    struct {
      __IOM uint16_t PID        : 2;            /*!< [1..0] Response PID                                                       */
            uint16_t            : 3;
      __IM  uint16_t PBUSY      : 1;            /*!< [5..5] Pipe Busy                                                          */
      __IM  uint16_t SQMON      : 1;            /*!< [6..6] Sequence Toggle Bit Confirmation                                   */
      __IOM uint16_t SQSET      : 1;            /*!< [7..7] Sequence Toggle Bit Set                                            */
      __IOM uint16_t SQCLR      : 1;            /*!< [8..8] Sequence Toggle Bit Clear                                          */
      __IOM uint16_t ACLRM      : 1;            /*!< [9..9] Auto Buffer Clear Mode                                             */
            uint16_t            : 5;
      __IM  uint16_t BSTS       : 1;            /*!< [15..15] Buffer Status                                                    */
    } PIPE6CTR_b;
  } ;
  
  union {
    __IOM uint16_t PIPE7CTR;                    /*!< (@ 0x0000007C) Pipe 7 Control Register                                    */
    
    struct {
      __IOM uint16_t PID        : 2;            /*!< [1..0] Response PID                                                       */
            uint16_t            : 3;
      __IM  uint16_t PBUSY      : 1;            /*!< [5..5] Pipe Busy                                                          */
      __IM  uint16_t SQMON      : 1;            /*!< [6..6] Sequence Toggle Bit Confirmation                                   */
      __IOM uint16_t SQSET      : 1;            /*!< [7..7] Sequence Toggle Bit Set                                            */
      __IOM uint16_t SQCLR      : 1;            /*!< [8..8] Sequence Toggle Bit Clear                                          */
      __IOM uint16_t ACLRM      : 1;            /*!< [9..9] Auto Buffer Clear Mode                                             */
            uint16_t            : 5;
      __IM  uint16_t BSTS       : 1;            /*!< [15..15] Buffer Status                                                    */
    } PIPE7CTR_b;
  } ;
  
  union {
    __IOM uint16_t PIPE8CTR;                    /*!< (@ 0x0000007E) Pipe 8 Control Register                                    */
    
    struct {
      __IOM uint16_t PID        : 2;            /*!< [1..0] Response PID                                                       */
            uint16_t            : 3;
      __IM  uint16_t PBUSY      : 1;            /*!< [5..5] Pipe Busy                                                          */
      __IM  uint16_t SQMON      : 1;            /*!< [6..6] Sequence Toggle Bit Confirmation                                   */
      __IOM uint16_t SQSET      : 1;            /*!< [7..7] Sequence Toggle Bit Set                                            */
      __IOM uint16_t SQCLR      : 1;            /*!< [8..8] Sequence Toggle Bit Clear                                          */
      __IOM uint16_t ACLRM      : 1;            /*!< [9..9] Auto Buffer Clear Mode                                             */
            uint16_t            : 5;
      __IM  uint16_t BSTS       : 1;            /*!< [15..15] Buffer Status                                                    */
    } PIPE8CTR_b;
  } ;
  
  union {
    __IOM uint16_t PIPE9CTR;                    /*!< (@ 0x00000080) Pipe 9 Control Register                                    */
    
    struct {
      __IOM uint16_t PID        : 2;            /*!< [1..0] Response PID                                                       */
            uint16_t            : 3;
      __IM  uint16_t PBUSY      : 1;            /*!< [5..5] Pipe Busy                                                          */
      __IM  uint16_t SQMON      : 1;            /*!< [6..6] Sequence Toggle Bit Confirmation                                   */
      __IOM uint16_t SQSET      : 1;            /*!< [7..7] Sequence Toggle Bit Set                                            */
      __IOM uint16_t SQCLR      : 1;            /*!< [8..8] Sequence Toggle Bit Clear                                          */
      __IOM uint16_t ACLRM      : 1;            /*!< [9..9] Auto Buffer Clear Mode                                             */
            uint16_t            : 5;
      __IM  uint16_t BSTS       : 1;            /*!< [15..15] Buffer Status                                                    */
    } PIPE9CTR_b;
  } ;
  __IM  uint16_t  RESERVED16;
  __IM  uint32_t  RESERVED17[3];
  
  union {
    __IOM uint16_t PIPE1TRE;                    /*!< (@ 0x00000090) Pipe 1 Transaction Counter Enable Register                 */
    
    struct {
            uint16_t            : 8;
      __IOM uint16_t TRCLR      : 1;            /*!< [8..8] Transaction Counter Clear                                          */
      __IOM uint16_t TRENB      : 1;            /*!< [9..9] Transaction Counter Enable                                         */
            uint16_t            : 6;
    } PIPE1TRE_b;
  } ;
  
  union {
    __IOM uint16_t PIPE1TRN;                    /*!< (@ 0x00000092) Pipe 1 Transaction Counter Register                        */
    
    struct {
      __IOM uint16_t TRNCNT     : 16;           /*!< [15..0] Transaction Counter                                               */
    } PIPE1TRN_b;
  } ;
  
  union {
    __IOM uint16_t PIPE2TRE;                    /*!< (@ 0x00000094) Pipe 2 Transaction Counter Enable Register                 */
    
    struct {
            uint16_t            : 8;
      __IOM uint16_t TRCLR      : 1;            /*!< [8..8] Transaction Counter Clear                                          */
      __IOM uint16_t TRENB      : 1;            /*!< [9..9] Transaction Counter Enable                                         */
            uint16_t            : 6;
    } PIPE2TRE_b;
  } ;
  
  union {
    __IOM uint16_t PIPE2TRN;                    /*!< (@ 0x00000096) Pipe 2 Transaction Counter Register                        */
    
    struct {
      __IOM uint16_t TRNCNT     : 16;           /*!< [15..0] Transaction Counter                                               */
    } PIPE2TRN_b;
  } ;
  
  union {
    __IOM uint16_t PIPE3TRE;                    /*!< (@ 0x00000098) Pipe 3 Transaction Counter Enable Register                 */
    
    struct {
            uint16_t            : 8;
      __IOM uint16_t TRCLR      : 1;            /*!< [8..8] Transaction Counter Clear                                          */
      __IOM uint16_t TRENB      : 1;            /*!< [9..9] Transaction Counter Enable                                         */
            uint16_t            : 6;
    } PIPE3TRE_b;
  } ;
  
  union {
    __IOM uint16_t PIPE3TRN;                    /*!< (@ 0x0000009A) Pipe 3 Transaction Counter Register                        */
    
    struct {
      __IOM uint16_t TRNCNT     : 16;           /*!< [15..0] Transaction Counter                                               */
    } PIPE3TRN_b;
  } ;
  
  union {
    __IOM uint16_t PIPE4TRE;                    /*!< (@ 0x0000009C) Pipe 4 Transaction Counter Enable Register                 */
    
    struct {
            uint16_t            : 8;
      __IOM uint16_t TRCLR      : 1;            /*!< [8..8] Transaction Counter Clear                                          */
      __IOM uint16_t TRENB      : 1;            /*!< [9..9] Transaction Counter Enable                                         */
            uint16_t            : 6;
    } PIPE4TRE_b;
  } ;
  
  union {
    __IOM uint16_t PIPE4TRN;                    /*!< (@ 0x0000009E) Pipe 4 Transaction Counter Register                        */
    
    struct {
      __IOM uint16_t TRNCNT     : 16;           /*!< [15..0] Transaction Counter                                               */
    } PIPE4TRN_b;
  } ;
  
  union {
    __IOM uint16_t PIPE5TRE;                    /*!< (@ 0x000000A0) Pipe 5 Transaction Counter Enable Register                 */
    
    struct {
            uint16_t            : 8;
      __IOM uint16_t TRCLR      : 1;            /*!< [8..8] Transaction Counter Clear                                          */
      __IOM uint16_t TRENB      : 1;            /*!< [9..9] Transaction Counter Enable                                         */
            uint16_t            : 6;
    } PIPE5TRE_b;
  } ;
  
  union {
    __IOM uint16_t PIPE5TRN;                    /*!< (@ 0x000000A2) Pipe 5 Transaction Counter Register                        */
    
    struct {
      __IOM uint16_t TRNCNT     : 16;           /*!< [15..0] Transaction Counter                                               */
    } PIPE5TRN_b;
  } ;
  __IM  uint32_t  RESERVED18[11];
  
  union {
    __IOM uint16_t DEVADD0;                     /*!< (@ 0x000000D0) 0                                                          */
    
    struct {
            uint16_t            : 6;
      __IOM uint16_t USBSPD     : 2;            /*!< [7..6] USBSPD                                                             */
            uint16_t            : 8;
    } DEVADD0_b;
  } ;
  
  union {
    __IOM uint16_t DEVADD1;                     /*!< (@ 0x000000D2) 1                                                          */
    
    struct {
            uint16_t            : 6;
      __IOM uint16_t USBSPD     : 2;            /*!< [7..6] USBSPD                                                             */
            uint16_t            : 8;
    } DEVADD1_b;
  } ;
  
  union {
    __IOM uint16_t DEVADD2;                     /*!< (@ 0x000000D4) 2                                                          */
    
    struct {
            uint16_t            : 6;
      __IOM uint16_t USBSPD     : 2;            /*!< [7..6] USBSPD                                                             */
            uint16_t            : 8;
    } DEVADD2_b;
  } ;
  
  union {
    __IOM uint16_t DEVADD3;                     /*!< (@ 0x000000D6) 3                                                          */
    
    struct {
            uint16_t            : 6;
      __IOM uint16_t USBSPD     : 2;            /*!< [7..6] USBSPD                                                             */
            uint16_t            : 8;
    } DEVADD3_b;
  } ;
  
  union {
    __IOM uint16_t DEVADD4;                     /*!< (@ 0x000000D8) 4                                                          */
    
    struct {
            uint16_t            : 6;
      __IOM uint16_t USBSPD     : 2;            /*!< [7..6] USBSPD                                                             */
            uint16_t            : 8;
    } DEVADD4_b;
  } ;
  
  union {
    __IOM uint16_t DEVADD5;                     /*!< (@ 0x000000DA) 5                                                          */
    
    struct {
            uint16_t            : 6;
      __IOM uint16_t USBSPD     : 2;            /*!< [7..6] USBSPD                                                             */
            uint16_t            : 8;
    } DEVADD5_b;
  } ;
  __IM  uint32_t  RESERVED19[5];
  
  union {
    __IOM uint32_t PHYSLEW;                     /*!< (@ 0x000000F0) PHYSLEW                                                    */
    
    struct {
      __IOM uint32_t SLEWR00    : 1;            /*!< [0..0] SLEWR00                                                            */
      __IOM uint32_t SLEWR01    : 1;            /*!< [1..1] SLEWR01                                                            */
      __IOM uint32_t SLEWF00    : 1;            /*!< [2..2] SLEWF00                                                            */
      __IOM uint32_t SLEWF01    : 1;            /*!< [3..3] SLEWF01                                                            */
            uint32_t            : 28;
    } PHYSLEW_b;
  } ;
} USBFS_Type;                                   /*!< Size = 244 (0xf4)                                                         */



/* =========================================================================================================================== */
/* ================                                           VREF                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief VREF (VREF)
  */

typedef struct {                                /*!< (@ 0x40086A80) VREF Structure                                             */
  
  union {
    __IOM uint32_t AVCR;                        /*!< (@ 0x00000000) AVCR                                                       */
    
    struct {
      __IOM uint32_t IBIASEN    : 1;            /*!< [0..0] IBIASEN                                                            */
            uint32_t            : 3;
      __IOM uint32_t VREFEN     : 1;            /*!< [4..4] VREFEN                                                             */
            uint32_t            : 3;
      __IOM uint32_t AVSEL      : 1;            /*!< [8..8] AVSEL                                                              */
            uint32_t            : 7;
      __IOM uint32_t LPMD       : 1;            /*!< [16..16] LPMD                                                             */
            uint32_t            : 1;
      __IOM uint32_t STDMD      : 1;            /*!< [18..18] STDMD                                                            */
            uint32_t            : 13;
    } AVCR_b;
  } ;
} VREF_Type;                                    /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                            WDT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Watchdog Timer (WDT)
  */

typedef struct {                                /*!< (@ 0x40044200) WDT Structure                                              */
  
  union {
    __IOM uint8_t WDTRR;                        /*!< (@ 0x00000000) WDT Refresh Register                                       */
    
    struct {
      __IOM uint8_t WDTRR       : 8;            /*!< [7..0] WDTRR is an 8-bit register that refreshes the down-counter
                                                     of the WDT.                                                               */
    } WDTRR_b;
  } ;
  __IM  uint8_t   RESERVED;
  
  union {
    __IOM uint16_t WDTCR;                       /*!< (@ 0x00000002) WDT Control Register                                       */
    
    struct {
      __IOM uint16_t TOPS       : 2;            /*!< [1..0] Timeout Period Selection                                           */
            uint16_t            : 2;
      __IOM uint16_t CKS        : 4;            /*!< [7..4] Clock Division Ratio Selection                                     */
      __IOM uint16_t RPES       : 2;            /*!< [9..8] Window End Position Selection                                      */
            uint16_t            : 2;
      __IOM uint16_t RPSS       : 2;            /*!< [13..12] Window Start Position Selection                                  */
            uint16_t            : 2;
    } WDTCR_b;
  } ;
  
  union {
    __IOM uint16_t WDTSR;                       /*!< (@ 0x00000004) WDT Status Register                                        */
    
    struct {
      __IM  uint16_t CNTVAL     : 14;           /*!< [13..0] Down-Counter ValueValue counted by the down-counter               */
      __IOM uint16_t UNDFF      : 1;            /*!< [14..14] Underflow Flag                                                   */
      __IOM uint16_t REFEF      : 1;            /*!< [15..15] Refresh Error Flag                                               */
    } WDTSR_b;
  } ;
  
  union {
    __IOM uint8_t WDTRCR;                       /*!< (@ 0x00000006) WDT Reset Control Register                                 */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t RSTIRQS     : 1;            /*!< [7..7] Reset Interrupt Request Selection                                  */
    } WDTRCR_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t WDTCSTPR;                     /*!< (@ 0x00000008) WDTCSTPR                                                   */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t SLCSTP      : 1;            /*!< [7..7] Sleep-Mode Count Stop Control                                      */
    } WDTCSTPR_b;
  } ;
  __IM  uint8_t   RESERVED2;
  __IM  uint16_t  RESERVED3;
} WDT_Type;                                     /*!< Size = 12 (0xc)                                                           */


/** @} */ /* End of group Device_Peripheral_peripherals */


/* =========================================================================================================================== */
/* ================                          Device Specific Peripheral Address Map                           ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripheralAddr
  * @{
  */

#define ACMP_BASE                   0x40085000UL
#define AGT0_BASE                   0x40084000UL
#define AGT1_BASE                   0x40084100UL
#define BUS_BASE                    0x40004000UL
#define CAC_BASE                    0x40044600UL
#define CCC_BASE                    0x40080400UL
#define CRC_BASE                    0x40074000UL
#define DBG_BASE                    0x4001B000UL
#define DIL_BASE                    0x40084500UL
#define DIV_BASE                    0x40084600UL
#define DMA_BASE                    0x40005200UL
#define DMAC0_BASE                  0x40005000UL
#define DMAC1_BASE                  0x40005040UL
#define DMAC2_BASE                  0x40005080UL
#define DMAC3_BASE                  0x400050C0UL
#define DOC_BASE                    0x40054100UL
#define DTC_BASE                    0x40005400UL
#define EHC_BASE                    0x01008140UL
#define ELC_BASE                    0x40041000UL
#define FLASH_BASE                  0x01008000UL
#define GDT_BASE                    0x40070800UL
#define GPT162_BASE                 0x40055200UL
#define GPT163_BASE                 0x40055300UL
#define GPT164_BASE                 0x40055400UL
#define GPT165_BASE                 0x40055500UL
#define GPT320_BASE                 0x40055000UL
#define GPT321_BASE                 0x40055100UL
#define GPT_OPS_BASE                0x40055FF0UL
#define ICU_BASE                    0x40006000UL
#define IIC0_BASE                   0x40053000UL
#define IIC1_BASE                   0x40053100UL
#define IWDT_BASE                   0x40044400UL
#define IrDA_BASE                   0x40070F00UL
#define KINT_BASE                   0x40080000UL
#define LED_BASE                    0x40086900UL
#define LPG_BASE                    0x40084600UL
#define LST_BASE                    0x40084400UL
#define MLCD_BASE                   0x40070200UL
#define MMF_BASE                    0x40001000UL
#define MMPU_BASE                   0x40000000UL
#define MSTP_BASE                   0x40047000UL
#define MTDV_BASE                   0x40084800UL
#define OSM_BASE                    0x00000400UL
#define PFS_BASE                    0x40040800UL
#define PMISC_BASE                  0x40040D00UL
#define POE_BASE                    0x40042000UL
#define PORT0_BASE                  0x40040000UL
#define PORT1_BASE                  0x40040020UL
#define PORT2_BASE                  0x40040040UL
#define PORT3_BASE                  0x40040060UL
#define PORT4_BASE                  0x40040080UL
#define PORT5_BASE                  0x400400A0UL
#define PORT6_BASE                  0x400400C0UL
#define PORT7_BASE                  0x400400E0UL
#define PORT8_BASE                  0x40040100UL
#define QSPI_BASE                   0x64000000UL
#define R12DA_BASE                  0x4005E000UL
#define RTC_BASE                    0x40044000UL
#define S14AD_BASE                  0x4005C000UL
#define SCI0_BASE                   0x40070000UL
#define SCI1_BASE                   0x40070020UL
#define SCI2_BASE                   0x40041240UL
#define SCI3_BASE                   0x40041260UL
#define SCI4_BASE                   0x40041280UL
#define SCI5_BASE                   0x400412A0UL
#define SCI9_BASE                   0x40041320UL
#define SMPU_BASE                   0x40000C00UL
#define SPI0_BASE                   0x40072000UL
#define SPI1_BASE                   0x40072100UL
#define SPMON_BASE                  0x40000D00UL
#define SYSTEM_BASE                 0x4001E000UL
#define TEMPS_BASE                  0x01008000UL
#define TMR0_BASE                   0x40052000UL
#define TMR01_BASE                  0x40052000UL
#define TMR1_BASE                   0x40052000UL
#define USBFS_BASE                  0x40090400UL
#define VREF_BASE                   0x40086A80UL
#define WDT_BASE                    0x40044200UL

/** @} */ /* End of group Device_Peripheral_peripheralAddr */


/* =========================================================================================================================== */
/* ================                                  Peripheral declaration                                   ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_declaration
  * @{
  */

#define ACMP                        ((ACMP_Type*)              ACMP_BASE)
#define AGT0                        ((AGT0_Type*)              AGT0_BASE)
#define AGT1                        ((AGT1_Type*)              AGT1_BASE)
#define BUS                         ((BUS_Type*)               BUS_BASE)
#define CAC                         ((CAC_Type*)               CAC_BASE)
#define CCC                         ((CCC_Type*)               CCC_BASE)
#define CRC                         ((CRC_Type*)               CRC_BASE)
#define DBG                         ((DBG_Type*)               DBG_BASE)
#define DIL                         ((DIL_Type*)               DIL_BASE)
#define DIV                         ((DIV_Type*)               DIV_BASE)
#define DMA                         ((DMA_Type*)               DMA_BASE)
#define DMAC0                       ((DMAC0_Type*)             DMAC0_BASE)
#define DMAC1                       ((DMAC1_Type*)             DMAC1_BASE)
#define DMAC2                       ((DMAC2_Type*)             DMAC2_BASE)
#define DMAC3                       ((DMAC3_Type*)             DMAC3_BASE)
#define DOC                         ((DOC_Type*)               DOC_BASE)
#define DTC                         ((DTC_Type*)               DTC_BASE)
#define EHC                         ((EHC_Type*)               EHC_BASE)
#define ELC                         ((ELC_Type*)               ELC_BASE)
#define FLASH                       ((FLASH_Type*)             FLASH_BASE)
#define GDT                         ((GDT_Type*)               GDT_BASE)
#define GPT162                      ((GPT162_Type*)            GPT162_BASE)
#define GPT163                      ((GPT162_Type*)            GPT163_BASE)
#define GPT164                      ((GPT162_Type*)            GPT164_BASE)
#define GPT165                      ((GPT162_Type*)            GPT165_BASE)
#define GPT320                      ((GPT320_Type*)            GPT320_BASE)
#define GPT321                      ((GPT320_Type*)            GPT321_BASE)
#define GPT_OPS                     ((GPT_OPS_Type*)           GPT_OPS_BASE)
#define ICU                         ((ICU_Type*)               ICU_BASE)
#define IIC0                        ((IIC0_Type*)              IIC0_BASE)
#define IIC1                        ((IIC1_Type*)              IIC1_BASE)
#define IWDT                        ((IWDT_Type*)              IWDT_BASE)
#define IrDA                        ((IrDA_Type*)              IrDA_BASE)
#define KINT                        ((KINT_Type*)              KINT_BASE)
#define LED                         ((LED_Type*)               LED_BASE)
#define LPG                         ((LPG_Type*)               LPG_BASE)
#define LST                         ((LST_Type*)               LST_BASE)
#define MLCD                        ((MLCD_Type*)              MLCD_BASE)
#define MMF                         ((MMF_Type*)               MMF_BASE)
#define MMPU                        ((MMPU_Type*)              MMPU_BASE)
#define MSTP                        ((MSTP_Type*)              MSTP_BASE)
#define MTDV                        ((MTDV_Type*)              MTDV_BASE)
#define OSM                         ((OSM_Type*)               OSM_BASE)
#define PFS                         ((PFS_Type*)               PFS_BASE)
#define PMISC                       ((PMISC_Type*)             PMISC_BASE)
#define POE                         ((POE_Type*)               POE_BASE)
#define PORT0                       ((PORT0_Type*)             PORT0_BASE)
#define PORT1                       ((PORT0_Type*)             PORT1_BASE)
#define PORT2                       ((PORT2_Type*)             PORT2_BASE)
#define PORT3                       ((PORT2_Type*)             PORT3_BASE)
#define PORT4                       ((PORT0_Type*)             PORT4_BASE)
#define PORT5                       ((PORT0_Type*)             PORT5_BASE)
#define PORT6                       ((PORT0_Type*)             PORT6_BASE)
#define PORT7                       ((PORT0_Type*)             PORT7_BASE)
#define PORT8                       ((PORT0_Type*)             PORT8_BASE)
#define QSPI                        ((QSPI_Type*)              QSPI_BASE)
#define R12DA                       ((R12DA_Type*)             R12DA_BASE)
#define RTC                         ((RTC_Type*)               RTC_BASE)
#define S14AD                       ((S14AD_Type*)             S14AD_BASE)
#define SCI0                        ((SCI0_Type*)              SCI0_BASE)
#define SCI1                        ((SCI0_Type*)              SCI1_BASE)
#define SCI2                        ((SCI2_Type*)              SCI2_BASE)
#define SCI3                        ((SCI2_Type*)              SCI3_BASE)
#define SCI4                        ((SCI2_Type*)              SCI4_BASE)
#define SCI5                        ((SCI2_Type*)              SCI5_BASE)
#define SCI9                        ((SCI2_Type*)              SCI9_BASE)
#define SMPU                        ((SMPU_Type*)              SMPU_BASE)
#define SPI0                        ((SPI0_Type*)              SPI0_BASE)
#define SPI1                        ((SPI1_Type*)              SPI1_BASE)
#define SPMON                       ((SPMON_Type*)             SPMON_BASE)
#define SYSTEM                      ((SYSTEM_Type*)            SYSTEM_BASE)
#define TEMPS                       ((TEMPS_Type*)             TEMPS_BASE)
#define TMR0                        ((TMR0_Type*)              TMR0_BASE)
#define TMR01                       ((TMR01_Type*)             TMR01_BASE)
#define TMR1                        ((TMR1_Type*)              TMR1_BASE)
#define USBFS                       ((USBFS_Type*)             USBFS_BASE)
#define VREF                        ((VREF_Type*)              VREF_BASE)
#define WDT                         ((WDT_Type*)               WDT_BASE)

/** @} */ /* End of group Device_Peripheral_declaration */


/* =========================================  End of section using anonymous unions  ========================================= */
#if defined (__CC_ARM)
  #pragma pop
#elif defined (__ICCARM__)
  /* leave anonymous unions enabled */
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic pop
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning restore
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#endif


/* =========================================================================================================================== */
/* ================                                Pos/Mask Peripheral Section                                ================ */
/* =========================================================================================================================== */


/** @addtogroup PosMask_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                           ACMP                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  CMPCTL  ========================================================= */
#define ACMP_CMPCTL_CMPON_Pos             (7UL)                     /*!< CMPON (Bit 7)                                         */
#define ACMP_CMPCTL_CMPON_Msk             (0x80UL)                  /*!< CMPON (Bitfield-Mask: 0x01)                           */
#define ACMP_CMPCTL_CDFS_Pos              (5UL)                     /*!< CDFS (Bit 5)                                          */
#define ACMP_CMPCTL_CDFS_Msk              (0x60UL)                  /*!< CDFS (Bitfield-Mask: 0x03)                            */
#define ACMP_CMPCTL_CEG_Pos               (3UL)                     /*!< CEG (Bit 3)                                           */
#define ACMP_CMPCTL_CEG_Msk               (0x18UL)                  /*!< CEG (Bitfield-Mask: 0x03)                             */
#define ACMP_CMPCTL_CSTEN_Pos             (2UL)                     /*!< CSTEN (Bit 2)                                         */
#define ACMP_CMPCTL_CSTEN_Msk             (0x4UL)                   /*!< CSTEN (Bitfield-Mask: 0x01)                           */
#define ACMP_CMPCTL_COE_Pos               (1UL)                     /*!< COE (Bit 1)                                           */
#define ACMP_CMPCTL_COE_Msk               (0x2UL)                   /*!< COE (Bitfield-Mask: 0x01)                             */
#define ACMP_CMPCTL_CINV_Pos              (0UL)                     /*!< CINV (Bit 0)                                          */
#define ACMP_CMPCTL_CINV_Msk              (0x1UL)                   /*!< CINV (Bitfield-Mask: 0x01)                            */
/* ========================================================  CMPSEL0  ======================================================== */
#define ACMP_CMPSEL0_CMPSEL_Pos           (0UL)                     /*!< CMPSEL (Bit 0)                                        */
#define ACMP_CMPSEL0_CMPSEL_Msk           (0x1UL)                   /*!< CMPSEL (Bitfield-Mask: 0x01)                          */
/* ========================================================  CMPSEL1  ======================================================== */
#define ACMP_CMPSEL1_CVRS_Pos             (0UL)                     /*!< CVRS (Bit 0)                                          */
#define ACMP_CMPSEL1_CVRS_Msk             (0x1UL)                   /*!< CVRS (Bitfield-Mask: 0x01)                            */
/* ========================================================  CMPMON  ========================================================= */
#define ACMP_CMPMON_CMPMON_Pos            (0UL)                     /*!< CMPMON (Bit 0)                                        */
#define ACMP_CMPMON_CMPMON_Msk            (0x1UL)                   /*!< CMPMON (Bitfield-Mask: 0x01)                          */
/* ========================================================  CMPIOC  ========================================================= */
#define ACMP_CMPIOC_CPOE_Pos              (0UL)                     /*!< CPOE (Bit 0)                                          */
#define ACMP_CMPIOC_CPOE_Msk              (0x1UL)                   /*!< CPOE (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           AGT0                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  AGT  ========================================================== */
#define AGT0_AGT_AGT_Pos                  (0UL)                     /*!< AGT (Bit 0)                                           */
#define AGT0_AGT_AGT_Msk                  (0xffffUL)                /*!< AGT (Bitfield-Mask: 0xffff)                           */
/* ========================================================  AGTCMA  ========================================================= */
#define AGT0_AGTCMA_AGTCMA_Pos            (0UL)                     /*!< AGTCMA (Bit 0)                                        */
#define AGT0_AGTCMA_AGTCMA_Msk            (0xffffUL)                /*!< AGTCMA (Bitfield-Mask: 0xffff)                        */
/* ========================================================  AGTCMB  ========================================================= */
#define AGT0_AGTCMB_AGTCMB_Pos            (0UL)                     /*!< AGTCMB (Bit 0)                                        */
#define AGT0_AGTCMB_AGTCMB_Msk            (0xffffUL)                /*!< AGTCMB (Bitfield-Mask: 0xffff)                        */
/* =========================================================  AGTCR  ========================================================= */
#define AGT0_AGTCR_TCMBF_Pos              (7UL)                     /*!< TCMBF (Bit 7)                                         */
#define AGT0_AGTCR_TCMBF_Msk              (0x80UL)                  /*!< TCMBF (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCR_TCMAF_Pos              (6UL)                     /*!< TCMAF (Bit 6)                                         */
#define AGT0_AGTCR_TCMAF_Msk              (0x40UL)                  /*!< TCMAF (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCR_TUNDF_Pos              (5UL)                     /*!< TUNDF (Bit 5)                                         */
#define AGT0_AGTCR_TUNDF_Msk              (0x20UL)                  /*!< TUNDF (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCR_TEDGF_Pos              (4UL)                     /*!< TEDGF (Bit 4)                                         */
#define AGT0_AGTCR_TEDGF_Msk              (0x10UL)                  /*!< TEDGF (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCR_TSTOP_Pos              (2UL)                     /*!< TSTOP (Bit 2)                                         */
#define AGT0_AGTCR_TSTOP_Msk              (0x4UL)                   /*!< TSTOP (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCR_TCSTF_Pos              (1UL)                     /*!< TCSTF (Bit 1)                                         */
#define AGT0_AGTCR_TCSTF_Msk              (0x2UL)                   /*!< TCSTF (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCR_TSTART_Pos             (0UL)                     /*!< TSTART (Bit 0)                                        */
#define AGT0_AGTCR_TSTART_Msk             (0x1UL)                   /*!< TSTART (Bitfield-Mask: 0x01)                          */
/* ========================================================  AGTMR1  ========================================================= */
#define AGT0_AGTMR1_TCK_Pos               (4UL)                     /*!< TCK (Bit 4)                                           */
#define AGT0_AGTMR1_TCK_Msk               (0x70UL)                  /*!< TCK (Bitfield-Mask: 0x07)                             */
#define AGT0_AGTMR1_TEDGPL_Pos            (3UL)                     /*!< TEDGPL (Bit 3)                                        */
#define AGT0_AGTMR1_TEDGPL_Msk            (0x8UL)                   /*!< TEDGPL (Bitfield-Mask: 0x01)                          */
#define AGT0_AGTMR1_TMOD_Pos              (0UL)                     /*!< TMOD (Bit 0)                                          */
#define AGT0_AGTMR1_TMOD_Msk              (0x7UL)                   /*!< TMOD (Bitfield-Mask: 0x07)                            */
/* ========================================================  AGTMR2  ========================================================= */
#define AGT0_AGTMR2_LPM_Pos               (7UL)                     /*!< LPM (Bit 7)                                           */
#define AGT0_AGTMR2_LPM_Msk               (0x80UL)                  /*!< LPM (Bitfield-Mask: 0x01)                             */
#define AGT0_AGTMR2_CKS_Pos               (0UL)                     /*!< CKS (Bit 0)                                           */
#define AGT0_AGTMR2_CKS_Msk               (0x7UL)                   /*!< CKS (Bitfield-Mask: 0x07)                             */
/* ========================================================  AGTIOC  ========================================================= */
#define AGT0_AGTIOC_TIOGT_Pos             (6UL)                     /*!< TIOGT (Bit 6)                                         */
#define AGT0_AGTIOC_TIOGT_Msk             (0xc0UL)                  /*!< TIOGT (Bitfield-Mask: 0x03)                           */
#define AGT0_AGTIOC_TIPF_Pos              (4UL)                     /*!< TIPF (Bit 4)                                          */
#define AGT0_AGTIOC_TIPF_Msk              (0x30UL)                  /*!< TIPF (Bitfield-Mask: 0x03)                            */
#define AGT0_AGTIOC_TOE_Pos               (2UL)                     /*!< TOE (Bit 2)                                           */
#define AGT0_AGTIOC_TOE_Msk               (0x4UL)                   /*!< TOE (Bitfield-Mask: 0x01)                             */
#define AGT0_AGTIOC_TEDGSEL_Pos           (0UL)                     /*!< TEDGSEL (Bit 0)                                       */
#define AGT0_AGTIOC_TEDGSEL_Msk           (0x1UL)                   /*!< TEDGSEL (Bitfield-Mask: 0x01)                         */
/* ========================================================  AGTCMSR  ======================================================== */
#define AGT0_AGTCMSR_TOPOLB_Pos           (6UL)                     /*!< TOPOLB (Bit 6)                                        */
#define AGT0_AGTCMSR_TOPOLB_Msk           (0x40UL)                  /*!< TOPOLB (Bitfield-Mask: 0x01)                          */
#define AGT0_AGTCMSR_TOEB_Pos             (5UL)                     /*!< TOEB (Bit 5)                                          */
#define AGT0_AGTCMSR_TOEB_Msk             (0x20UL)                  /*!< TOEB (Bitfield-Mask: 0x01)                            */
#define AGT0_AGTCMSR_TCMEB_Pos            (4UL)                     /*!< TCMEB (Bit 4)                                         */
#define AGT0_AGTCMSR_TCMEB_Msk            (0x10UL)                  /*!< TCMEB (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCMSR_TOPOLA_Pos           (2UL)                     /*!< TOPOLA (Bit 2)                                        */
#define AGT0_AGTCMSR_TOPOLA_Msk           (0x4UL)                   /*!< TOPOLA (Bitfield-Mask: 0x01)                          */
#define AGT0_AGTCMSR_TOEA_Pos             (1UL)                     /*!< TOEA (Bit 1)                                          */
#define AGT0_AGTCMSR_TOEA_Msk             (0x2UL)                   /*!< TOEA (Bitfield-Mask: 0x01)                            */
#define AGT0_AGTCMSR_TCMEA_Pos            (0UL)                     /*!< TCMEA (Bit 0)                                         */
#define AGT0_AGTCMSR_TCMEA_Msk            (0x1UL)                   /*!< TCMEA (Bitfield-Mask: 0x01)                           */
/* =======================================================  AGTIOSEL  ======================================================== */
#define AGT0_AGTIOSEL_TIES_Pos            (4UL)                     /*!< TIES (Bit 4)                                          */
#define AGT0_AGTIOSEL_TIES_Msk            (0x10UL)                  /*!< TIES (Bitfield-Mask: 0x01)                            */
/* ========================================================  AGTISR  ========================================================= */
#define AGT0_AGTISR_EEPS_Pos              (2UL)                     /*!< EEPS (Bit 2)                                          */
#define AGT0_AGTISR_EEPS_Msk              (0x4UL)                   /*!< EEPS (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           AGT1                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  AGT  ========================================================== */
#define AGT1_AGT_AGT_Pos                  (0UL)                     /*!< AGT (Bit 0)                                           */
#define AGT1_AGT_AGT_Msk                  (0xffffUL)                /*!< AGT (Bitfield-Mask: 0xffff)                           */
/* ========================================================  AGTCMA  ========================================================= */
#define AGT1_AGTCMA_AGTCMA_Pos            (0UL)                     /*!< AGTCMA (Bit 0)                                        */
#define AGT1_AGTCMA_AGTCMA_Msk            (0xffffUL)                /*!< AGTCMA (Bitfield-Mask: 0xffff)                        */
/* ========================================================  AGTCMB  ========================================================= */
#define AGT1_AGTCMB_AGTCMB_Pos            (0UL)                     /*!< AGTCMB (Bit 0)                                        */
#define AGT1_AGTCMB_AGTCMB_Msk            (0xffffUL)                /*!< AGTCMB (Bitfield-Mask: 0xffff)                        */
/* =========================================================  AGTCR  ========================================================= */
#define AGT1_AGTCR_TCMBF_Pos              (7UL)                     /*!< TCMBF (Bit 7)                                         */
#define AGT1_AGTCR_TCMBF_Msk              (0x80UL)                  /*!< TCMBF (Bitfield-Mask: 0x01)                           */
#define AGT1_AGTCR_TCMAF_Pos              (6UL)                     /*!< TCMAF (Bit 6)                                         */
#define AGT1_AGTCR_TCMAF_Msk              (0x40UL)                  /*!< TCMAF (Bitfield-Mask: 0x01)                           */
#define AGT1_AGTCR_TUNDF_Pos              (5UL)                     /*!< TUNDF (Bit 5)                                         */
#define AGT1_AGTCR_TUNDF_Msk              (0x20UL)                  /*!< TUNDF (Bitfield-Mask: 0x01)                           */
#define AGT1_AGTCR_TEDGF_Pos              (4UL)                     /*!< TEDGF (Bit 4)                                         */
#define AGT1_AGTCR_TEDGF_Msk              (0x10UL)                  /*!< TEDGF (Bitfield-Mask: 0x01)                           */
#define AGT1_AGTCR_TSTOP_Pos              (2UL)                     /*!< TSTOP (Bit 2)                                         */
#define AGT1_AGTCR_TSTOP_Msk              (0x4UL)                   /*!< TSTOP (Bitfield-Mask: 0x01)                           */
#define AGT1_AGTCR_TCSTF_Pos              (1UL)                     /*!< TCSTF (Bit 1)                                         */
#define AGT1_AGTCR_TCSTF_Msk              (0x2UL)                   /*!< TCSTF (Bitfield-Mask: 0x01)                           */
#define AGT1_AGTCR_TSTART_Pos             (0UL)                     /*!< TSTART (Bit 0)                                        */
#define AGT1_AGTCR_TSTART_Msk             (0x1UL)                   /*!< TSTART (Bitfield-Mask: 0x01)                          */
/* ========================================================  AGTMR1  ========================================================= */
#define AGT1_AGTMR1_TCK_Pos               (4UL)                     /*!< TCK (Bit 4)                                           */
#define AGT1_AGTMR1_TCK_Msk               (0x70UL)                  /*!< TCK (Bitfield-Mask: 0x07)                             */
#define AGT1_AGTMR1_TEDGPL_Pos            (3UL)                     /*!< TEDGPL (Bit 3)                                        */
#define AGT1_AGTMR1_TEDGPL_Msk            (0x8UL)                   /*!< TEDGPL (Bitfield-Mask: 0x01)                          */
#define AGT1_AGTMR1_TMOD_Pos              (0UL)                     /*!< TMOD (Bit 0)                                          */
#define AGT1_AGTMR1_TMOD_Msk              (0x7UL)                   /*!< TMOD (Bitfield-Mask: 0x07)                            */
/* ========================================================  AGTMR2  ========================================================= */
#define AGT1_AGTMR2_LPM_Pos               (7UL)                     /*!< LPM (Bit 7)                                           */
#define AGT1_AGTMR2_LPM_Msk               (0x80UL)                  /*!< LPM (Bitfield-Mask: 0x01)                             */
#define AGT1_AGTMR2_CKS_Pos               (0UL)                     /*!< CKS (Bit 0)                                           */
#define AGT1_AGTMR2_CKS_Msk               (0x7UL)                   /*!< CKS (Bitfield-Mask: 0x07)                             */
/* ========================================================  AGTIOC  ========================================================= */
#define AGT1_AGTIOC_TIOGT_Pos             (6UL)                     /*!< TIOGT (Bit 6)                                         */
#define AGT1_AGTIOC_TIOGT_Msk             (0xc0UL)                  /*!< TIOGT (Bitfield-Mask: 0x03)                           */
#define AGT1_AGTIOC_TIPF_Pos              (4UL)                     /*!< TIPF (Bit 4)                                          */
#define AGT1_AGTIOC_TIPF_Msk              (0x30UL)                  /*!< TIPF (Bitfield-Mask: 0x03)                            */
#define AGT1_AGTIOC_TOE_Pos               (2UL)                     /*!< TOE (Bit 2)                                           */
#define AGT1_AGTIOC_TOE_Msk               (0x4UL)                   /*!< TOE (Bitfield-Mask: 0x01)                             */
#define AGT1_AGTIOC_TEDGSEL_Pos           (0UL)                     /*!< TEDGSEL (Bit 0)                                       */
#define AGT1_AGTIOC_TEDGSEL_Msk           (0x1UL)                   /*!< TEDGSEL (Bitfield-Mask: 0x01)                         */
/* ========================================================  AGTCMSR  ======================================================== */
#define AGT1_AGTCMSR_TOPOLB_Pos           (6UL)                     /*!< TOPOLB (Bit 6)                                        */
#define AGT1_AGTCMSR_TOPOLB_Msk           (0x40UL)                  /*!< TOPOLB (Bitfield-Mask: 0x01)                          */
#define AGT1_AGTCMSR_TOEB_Pos             (5UL)                     /*!< TOEB (Bit 5)                                          */
#define AGT1_AGTCMSR_TOEB_Msk             (0x20UL)                  /*!< TOEB (Bitfield-Mask: 0x01)                            */
#define AGT1_AGTCMSR_TCMEB_Pos            (4UL)                     /*!< TCMEB (Bit 4)                                         */
#define AGT1_AGTCMSR_TCMEB_Msk            (0x10UL)                  /*!< TCMEB (Bitfield-Mask: 0x01)                           */
#define AGT1_AGTCMSR_TOPOLA_Pos           (2UL)                     /*!< TOPOLA (Bit 2)                                        */
#define AGT1_AGTCMSR_TOPOLA_Msk           (0x4UL)                   /*!< TOPOLA (Bitfield-Mask: 0x01)                          */
#define AGT1_AGTCMSR_TOEA_Pos             (1UL)                     /*!< TOEA (Bit 1)                                          */
#define AGT1_AGTCMSR_TOEA_Msk             (0x2UL)                   /*!< TOEA (Bitfield-Mask: 0x01)                            */
#define AGT1_AGTCMSR_TCMEA_Pos            (0UL)                     /*!< TCMEA (Bit 0)                                         */
#define AGT1_AGTCMSR_TCMEA_Msk            (0x1UL)                   /*!< TCMEA (Bitfield-Mask: 0x01)                           */
/* =======================================================  AGTIOSEL  ======================================================== */
#define AGT1_AGTIOSEL_TIES_Pos            (4UL)                     /*!< TIES (Bit 4)                                          */
#define AGT1_AGTIOSEL_TIES_Msk            (0x10UL)                  /*!< TIES (Bitfield-Mask: 0x01)                            */
/* ========================================================  AGTISR  ========================================================= */
#define AGT1_AGTISR_EEPS_Pos              (2UL)                     /*!< EEPS (Bit 2)                                          */
#define AGT1_AGTISR_EEPS_Msk              (0x4UL)                   /*!< EEPS (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                            BUS                                            ================ */
/* =========================================================================================================================== */

/* ======================================================  BUSMCNTSYS  ======================================================= */
#define BUS_BUSMCNTSYS_IERES_Pos          (15UL)                    /*!< IERES (Bit 15)                                        */
#define BUS_BUSMCNTSYS_IERES_Msk          (0x8000UL)                /*!< IERES (Bitfield-Mask: 0x01)                           */
/* ======================================================  BUSMCNTDMA  ======================================================= */
#define BUS_BUSMCNTDMA_IERES_Pos          (15UL)                    /*!< IERES (Bit 15)                                        */
#define BUS_BUSMCNTDMA_IERES_Msk          (0x8000UL)                /*!< IERES (Bitfield-Mask: 0x01)                           */
/* ======================================================  BUS3ERRADD  ======================================================= */
#define BUS_BUS3ERRADD_BERAD_Pos          (0UL)                     /*!< BERAD (Bit 0)                                         */
#define BUS_BUS3ERRADD_BERAD_Msk          (0xffffffffUL)            /*!< BERAD (Bitfield-Mask: 0xffffffff)                     */
/* ======================================================  BUS4ERRADD  ======================================================= */
#define BUS_BUS4ERRADD_BERAD_Pos          (0UL)                     /*!< BERAD (Bit 0)                                         */
#define BUS_BUS4ERRADD_BERAD_Msk          (0xffffffffUL)            /*!< BERAD (Bitfield-Mask: 0xffffffff)                     */
/* ======================================================  BUS3ERRSTAT  ====================================================== */
#define BUS_BUS3ERRSTAT_ERRSTAT_Pos       (7UL)                     /*!< ERRSTAT (Bit 7)                                       */
#define BUS_BUS3ERRSTAT_ERRSTAT_Msk       (0x80UL)                  /*!< ERRSTAT (Bitfield-Mask: 0x01)                         */
#define BUS_BUS3ERRSTAT_ACCSTAT_Pos       (0UL)                     /*!< ACCSTAT (Bit 0)                                       */
#define BUS_BUS3ERRSTAT_ACCSTAT_Msk       (0x1UL)                   /*!< ACCSTAT (Bitfield-Mask: 0x01)                         */
/* ======================================================  BUS4ERRSTAT  ====================================================== */
#define BUS_BUS4ERRSTAT_ERRSTAT_Pos       (7UL)                     /*!< ERRSTAT (Bit 7)                                       */
#define BUS_BUS4ERRSTAT_ERRSTAT_Msk       (0x80UL)                  /*!< ERRSTAT (Bitfield-Mask: 0x01)                         */
#define BUS_BUS4ERRSTAT_ACCSTAT_Pos       (0UL)                     /*!< ACCSTAT (Bit 0)                                       */
#define BUS_BUS4ERRSTAT_ACCSTAT_Msk       (0x1UL)                   /*!< ACCSTAT (Bitfield-Mask: 0x01)                         */


/* =========================================================================================================================== */
/* ================                                            CAC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CACR0  ========================================================= */
#define CAC_CACR0_CFME_Pos                (0UL)                     /*!< CFME (Bit 0)                                          */
#define CAC_CACR0_CFME_Msk                (0x1UL)                   /*!< CFME (Bitfield-Mask: 0x01)                            */
/* =========================================================  CACR1  ========================================================= */
#define CAC_CACR1_EDGES_Pos               (6UL)                     /*!< EDGES (Bit 6)                                         */
#define CAC_CACR1_EDGES_Msk               (0xc0UL)                  /*!< EDGES (Bitfield-Mask: 0x03)                           */
#define CAC_CACR1_TCSS_Pos                (4UL)                     /*!< TCSS (Bit 4)                                          */
#define CAC_CACR1_TCSS_Msk                (0x30UL)                  /*!< TCSS (Bitfield-Mask: 0x03)                            */
#define CAC_CACR1_FMCS_Pos                (1UL)                     /*!< FMCS (Bit 1)                                          */
#define CAC_CACR1_FMCS_Msk                (0xeUL)                   /*!< FMCS (Bitfield-Mask: 0x07)                            */
#define CAC_CACR1_CACREFE_Pos             (0UL)                     /*!< CACREFE (Bit 0)                                       */
#define CAC_CACR1_CACREFE_Msk             (0x1UL)                   /*!< CACREFE (Bitfield-Mask: 0x01)                         */
/* =========================================================  CACR2  ========================================================= */
#define CAC_CACR2_DFS_Pos                 (6UL)                     /*!< DFS (Bit 6)                                           */
#define CAC_CACR2_DFS_Msk                 (0xc0UL)                  /*!< DFS (Bitfield-Mask: 0x03)                             */
#define CAC_CACR2_RCDS_Pos                (4UL)                     /*!< RCDS (Bit 4)                                          */
#define CAC_CACR2_RCDS_Msk                (0x30UL)                  /*!< RCDS (Bitfield-Mask: 0x03)                            */
#define CAC_CACR2_RSCS_Pos                (1UL)                     /*!< RSCS (Bit 1)                                          */
#define CAC_CACR2_RSCS_Msk                (0xeUL)                   /*!< RSCS (Bitfield-Mask: 0x07)                            */
#define CAC_CACR2_RPS_Pos                 (0UL)                     /*!< RPS (Bit 0)                                           */
#define CAC_CACR2_RPS_Msk                 (0x1UL)                   /*!< RPS (Bitfield-Mask: 0x01)                             */
/* =========================================================  CAICR  ========================================================= */
#define CAC_CAICR_OVFFCL_Pos              (6UL)                     /*!< OVFFCL (Bit 6)                                        */
#define CAC_CAICR_OVFFCL_Msk              (0x40UL)                  /*!< OVFFCL (Bitfield-Mask: 0x01)                          */
#define CAC_CAICR_MENDFCL_Pos             (5UL)                     /*!< MENDFCL (Bit 5)                                       */
#define CAC_CAICR_MENDFCL_Msk             (0x20UL)                  /*!< MENDFCL (Bitfield-Mask: 0x01)                         */
#define CAC_CAICR_FERRFCL_Pos             (4UL)                     /*!< FERRFCL (Bit 4)                                       */
#define CAC_CAICR_FERRFCL_Msk             (0x10UL)                  /*!< FERRFCL (Bitfield-Mask: 0x01)                         */
#define CAC_CAICR_OVFIE_Pos               (2UL)                     /*!< OVFIE (Bit 2)                                         */
#define CAC_CAICR_OVFIE_Msk               (0x4UL)                   /*!< OVFIE (Bitfield-Mask: 0x01)                           */
#define CAC_CAICR_MENDIE_Pos              (1UL)                     /*!< MENDIE (Bit 1)                                        */
#define CAC_CAICR_MENDIE_Msk              (0x2UL)                   /*!< MENDIE (Bitfield-Mask: 0x01)                          */
#define CAC_CAICR_FERRIE_Pos              (0UL)                     /*!< FERRIE (Bit 0)                                        */
#define CAC_CAICR_FERRIE_Msk              (0x1UL)                   /*!< FERRIE (Bitfield-Mask: 0x01)                          */
/* =========================================================  CASTR  ========================================================= */
#define CAC_CASTR_OVFF_Pos                (2UL)                     /*!< OVFF (Bit 2)                                          */
#define CAC_CASTR_OVFF_Msk                (0x4UL)                   /*!< OVFF (Bitfield-Mask: 0x01)                            */
#define CAC_CASTR_MENDF_Pos               (1UL)                     /*!< MENDF (Bit 1)                                         */
#define CAC_CASTR_MENDF_Msk               (0x2UL)                   /*!< MENDF (Bitfield-Mask: 0x01)                           */
#define CAC_CASTR_FERRF_Pos               (0UL)                     /*!< FERRF (Bit 0)                                         */
#define CAC_CASTR_FERRF_Msk               (0x1UL)                   /*!< FERRF (Bitfield-Mask: 0x01)                           */
/* ========================================================  CAULVR  ========================================================= */
#define CAC_CAULVR_CAULVR_Pos             (0UL)                     /*!< CAULVR (Bit 0)                                        */
#define CAC_CAULVR_CAULVR_Msk             (0xffffUL)                /*!< CAULVR (Bitfield-Mask: 0xffff)                        */
/* ========================================================  CALLVR  ========================================================= */
#define CAC_CALLVR_CALLVR_Pos             (0UL)                     /*!< CALLVR (Bit 0)                                        */
#define CAC_CALLVR_CALLVR_Msk             (0xffffUL)                /*!< CALLVR (Bitfield-Mask: 0xffff)                        */
/* ========================================================  CACNTBR  ======================================================== */
#define CAC_CACNTBR_CACNTBR_Pos           (0UL)                     /*!< CACNTBR (Bit 0)                                       */
#define CAC_CACNTBR_CACNTBR_Msk           (0xffffUL)                /*!< CACNTBR (Bitfield-Mask: 0xffff)                       */


/* =========================================================================================================================== */
/* ================                                            CCC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  ADJUSTR  ======================================================== */
#define CCC_ADJUSTR_ADJUST_Pos            (0UL)                     /*!< ADJUST (Bit 0)                                        */
#define CCC_ADJUSTR_ADJUST_Msk            (0x1ffUL)                 /*!< ADJUST (Bitfield-Mask: 0x1ff)                         */
/* ========================================================  R128CNT  ======================================================== */
#define CCC_R128CNT_CF1HZ_Pos             (7UL)                     /*!< CF1HZ (Bit 7)                                         */
#define CCC_R128CNT_CF1HZ_Msk             (0x80UL)                  /*!< CF1HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CNT_CF2HZ_Pos             (6UL)                     /*!< CF2HZ (Bit 6)                                         */
#define CCC_R128CNT_CF2HZ_Msk             (0x40UL)                  /*!< CF2HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CNT_CF4HZ_Pos             (5UL)                     /*!< CF4HZ (Bit 5)                                         */
#define CCC_R128CNT_CF4HZ_Msk             (0x20UL)                  /*!< CF4HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CNT_CF8HZ_Pos             (4UL)                     /*!< CF8HZ (Bit 4)                                         */
#define CCC_R128CNT_CF8HZ_Msk             (0x10UL)                  /*!< CF8HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CNT_CF16HZ_Pos            (3UL)                     /*!< CF16HZ (Bit 3)                                        */
#define CCC_R128CNT_CF16HZ_Msk            (0x8UL)                   /*!< CF16HZ (Bitfield-Mask: 0x01)                          */
#define CCC_R128CNT_CF32HZ_Pos            (2UL)                     /*!< CF32HZ (Bit 2)                                        */
#define CCC_R128CNT_CF32HZ_Msk            (0x4UL)                   /*!< CF32HZ (Bitfield-Mask: 0x01)                          */
#define CCC_R128CNT_CF64HZ_Pos            (1UL)                     /*!< CF64HZ (Bit 1)                                        */
#define CCC_R128CNT_CF64HZ_Msk            (0x2UL)                   /*!< CF64HZ (Bitfield-Mask: 0x01)                          */
#define CCC_R128CNT_CF128HZ_Pos           (0UL)                     /*!< CF128HZ (Bit 0)                                       */
#define CCC_R128CNT_CF128HZ_Msk           (0x1UL)                   /*!< CF128HZ (Bitfield-Mask: 0x01)                         */
/* =======================================================  R128CTRL  ======================================================== */
#define CCC_R128CTRL_PFEN_Pos             (31UL)                    /*!< PFEN (Bit 31)                                         */
#define CCC_R128CTRL_PFEN_Msk             (0x80000000UL)            /*!< PFEN (Bitfield-Mask: 0x01)                            */
#define CCC_R128CTRL_PFWR0ST_Pos          (22UL)                    /*!< PFWR0ST (Bit 22)                                      */
#define CCC_R128CTRL_PFWR0ST_Msk          (0x400000UL)              /*!< PFWR0ST (Bitfield-Mask: 0x01)                         */
#define CCC_R128CTRL_PF1HZ_Pos            (21UL)                    /*!< PF1HZ (Bit 21)                                        */
#define CCC_R128CTRL_PF1HZ_Msk            (0x200000UL)              /*!< PF1HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CTRL_PF2HZ_Pos            (20UL)                    /*!< PF2HZ (Bit 20)                                        */
#define CCC_R128CTRL_PF2HZ_Msk            (0x100000UL)              /*!< PF2HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CTRL_PF4HZ_Pos            (19UL)                    /*!< PF4HZ (Bit 19)                                        */
#define CCC_R128CTRL_PF4HZ_Msk            (0x80000UL)               /*!< PF4HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CTRL_PF16HZ_Pos           (18UL)                    /*!< PF16HZ (Bit 18)                                       */
#define CCC_R128CTRL_PF16HZ_Msk           (0x40000UL)               /*!< PF16HZ (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_PF64HZ_Pos           (17UL)                    /*!< PF64HZ (Bit 17)                                       */
#define CCC_R128CTRL_PF64HZ_Msk           (0x20000UL)               /*!< PF64HZ (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_PF128HZ_Pos          (16UL)                    /*!< PF128HZ (Bit 16)                                      */
#define CCC_R128CTRL_PF128HZ_Msk          (0x10000UL)               /*!< PF128HZ (Bitfield-Mask: 0x01)                         */
#define CCC_R128CTRL_CPES_EX_Pos          (11UL)                    /*!< CPES_EX (Bit 11)                                      */
#define CCC_R128CTRL_CPES_EX_Msk          (0x800UL)                 /*!< CPES_EX (Bitfield-Mask: 0x01)                         */
#define CCC_R128CTRL_CEIE_Pos             (10UL)                    /*!< CEIE (Bit 10)                                         */
#define CCC_R128CTRL_CEIE_Msk             (0x400UL)                 /*!< CEIE (Bitfield-Mask: 0x01)                            */
#define CCC_R128CTRL_CRTCOE_Pos           (9UL)                     /*!< CRTCOE (Bit 9)                                        */
#define CCC_R128CTRL_CRTCOE_Msk           (0x200UL)                 /*!< CRTCOE (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_CPES_Pos             (7UL)                     /*!< CPES (Bit 7)                                          */
#define CCC_R128CTRL_CPES_Msk             (0x180UL)                 /*!< CPES (Bitfield-Mask: 0x03)                            */
#define CCC_R128CTRL_CPIE_Pos             (6UL)                     /*!< CPIE (Bit 6)                                          */
#define CCC_R128CTRL_CPIE_Msk             (0x40UL)                  /*!< CPIE (Bitfield-Mask: 0x01)                            */
#define CCC_R128CTRL_CCIE_Pos             (5UL)                     /*!< CCIE (Bit 5)                                          */
#define CCC_R128CTRL_CCIE_Msk             (0x20UL)                  /*!< CCIE (Bitfield-Mask: 0x01)                            */
#define CCC_R128CTRL_CRTCOS_Pos           (4UL)                     /*!< CRTCOS (Bit 4)                                        */
#define CCC_R128CTRL_CRTCOS_Msk           (0x10UL)                  /*!< CRTCOS (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_COPSEL_Pos           (3UL)                     /*!< COPSEL (Bit 3)                                        */
#define CCC_R128CTRL_COPSEL_Msk           (0x8UL)                   /*!< COPSEL (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_CRESET_Pos           (2UL)                     /*!< CRESET (Bit 2)                                        */
#define CCC_R128CTRL_CRESET_Msk           (0x4UL)                   /*!< CRESET (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_ADJUSTEN_Pos         (1UL)                     /*!< ADJUSTEN (Bit 1)                                      */
#define CCC_R128CTRL_ADJUSTEN_Msk         (0x2UL)                   /*!< ADJUSTEN (Bitfield-Mask: 0x01)                        */
#define CCC_R128CTRL_CADJUSCEN_Pos        (0UL)                     /*!< CADJUSCEN (Bit 0)                                     */
#define CCC_R128CTRL_CADJUSCEN_Msk        (0x1UL)                   /*!< CADJUSCEN (Bitfield-Mask: 0x01)                       */


/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  CRCCR0  ========================================================= */
#define CRC_CRCCR0_DORCLR_Pos             (7UL)                     /*!< DORCLR (Bit 7)                                        */
#define CRC_CRCCR0_DORCLR_Msk             (0x80UL)                  /*!< DORCLR (Bitfield-Mask: 0x01)                          */
#define CRC_CRCCR0_LMS_Pos                (6UL)                     /*!< LMS (Bit 6)                                           */
#define CRC_CRCCR0_LMS_Msk                (0x40UL)                  /*!< LMS (Bitfield-Mask: 0x01)                             */
#define CRC_CRCCR0_GPS_Pos                (0UL)                     /*!< GPS (Bit 0)                                           */
#define CRC_CRCCR0_GPS_Msk                (0x7UL)                   /*!< GPS (Bitfield-Mask: 0x07)                             */
/* ========================================================  CRCCR1  ========================================================= */
#define CRC_CRCCR1_CRCSEN_Pos             (7UL)                     /*!< CRCSEN (Bit 7)                                        */
#define CRC_CRCCR1_CRCSEN_Msk             (0x80UL)                  /*!< CRCSEN (Bitfield-Mask: 0x01)                          */
#define CRC_CRCCR1_CRCSWR_Pos             (6UL)                     /*!< CRCSWR (Bit 6)                                        */
#define CRC_CRCCR1_CRCSWR_Msk             (0x40UL)                  /*!< CRCSWR (Bitfield-Mask: 0x01)                          */
/* ========================================================  CRCDIR  ========================================================= */
#define CRC_CRCDIR_CRCDIR_Pos             (0UL)                     /*!< CRCDIR (Bit 0)                                        */
#define CRC_CRCDIR_CRCDIR_Msk             (0xffffffffUL)            /*!< CRCDIR (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  CRCDIR_BY  ======================================================= */
#define CRC_CRCDIR_BY_CRCDIR_BY_Pos       (0UL)                     /*!< CRCDIR_BY (Bit 0)                                     */
#define CRC_CRCDIR_BY_CRCDIR_BY_Msk       (0xffUL)                  /*!< CRCDIR_BY (Bitfield-Mask: 0xff)                       */
/* ========================================================  CRCDOR  ========================================================= */
#define CRC_CRCDOR_CRCDOR_Pos             (0UL)                     /*!< CRCDOR (Bit 0)                                        */
#define CRC_CRCDOR_CRCDOR_Msk             (0xffffffffUL)            /*!< CRCDOR (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  CRCDOR_HA  ======================================================= */
#define CRC_CRCDOR_HA_CRCDOR_HA_Pos       (0UL)                     /*!< CRCDOR_HA (Bit 0)                                     */
#define CRC_CRCDOR_HA_CRCDOR_HA_Msk       (0xffffUL)                /*!< CRCDOR_HA (Bitfield-Mask: 0xffff)                     */
/* =======================================================  CRCDOR_BY  ======================================================= */
#define CRC_CRCDOR_BY_CRCDOR_BY_Pos       (0UL)                     /*!< CRCDOR_BY (Bit 0)                                     */
#define CRC_CRCDOR_BY_CRCDOR_BY_Msk       (0xffUL)                  /*!< CRCDOR_BY (Bitfield-Mask: 0xff)                       */
/* ========================================================  CRCSAR  ========================================================= */
#define CRC_CRCSAR_CRCSA_Pos              (0UL)                     /*!< CRCSA (Bit 0)                                         */
#define CRC_CRCSAR_CRCSA_Msk              (0x3fffUL)                /*!< CRCSA (Bitfield-Mask: 0x3fff)                         */


/* =========================================================================================================================== */
/* ================                                            DBG                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  DBGSTR  ========================================================= */
#define DBG_DBGSTR_CDBGPWRUPACK_Pos       (29UL)                    /*!< CDBGPWRUPACK (Bit 29)                                 */
#define DBG_DBGSTR_CDBGPWRUPACK_Msk       (0x20000000UL)            /*!< CDBGPWRUPACK (Bitfield-Mask: 0x01)                    */
#define DBG_DBGSTR_CDBGPWRUPREQ_Pos       (28UL)                    /*!< CDBGPWRUPREQ (Bit 28)                                 */
#define DBG_DBGSTR_CDBGPWRUPREQ_Msk       (0x10000000UL)            /*!< CDBGPWRUPREQ (Bitfield-Mask: 0x01)                    */
/* =======================================================  DBGSTOPCR  ======================================================= */
#define DBG_DBGSTOPCR_DBGSTOP_LVDBAT_Pos  (18UL)                    /*!< DBGSTOP_LVDBAT (Bit 18)                               */
#define DBG_DBGSTOPCR_DBGSTOP_LVDBAT_Msk  (0x40000UL)               /*!< DBGSTOP_LVDBAT (Bitfield-Mask: 0x01)                  */
#define DBG_DBGSTOPCR_DBGSTOP_LVD1_Pos    (17UL)                    /*!< DBGSTOP_LVD1 (Bit 17)                                 */
#define DBG_DBGSTOPCR_DBGSTOP_LVD1_Msk    (0x20000UL)               /*!< DBGSTOP_LVD1 (Bitfield-Mask: 0x01)                    */
#define DBG_DBGSTOPCR_DBGSTOP_LVD0_Pos    (16UL)                    /*!< DBGSTOP_LVD0 (Bit 16)                                 */
#define DBG_DBGSTOPCR_DBGSTOP_LVD0_Msk    (0x10000UL)               /*!< DBGSTOP_LVD0 (Bitfield-Mask: 0x01)                    */
#define DBG_DBGSTOPCR_DBGSTOP_WDT_Pos     (1UL)                     /*!< DBGSTOP_WDT (Bit 1)                                   */
#define DBG_DBGSTOPCR_DBGSTOP_WDT_Msk     (0x2UL)                   /*!< DBGSTOP_WDT (Bitfield-Mask: 0x01)                     */
#define DBG_DBGSTOPCR_DBGSTOP_IWDT_Pos    (0UL)                     /*!< DBGSTOP_IWDT (Bit 0)                                  */
#define DBG_DBGSTOPCR_DBGSTOP_IWDT_Msk    (0x1UL)                   /*!< DBGSTOP_IWDT (Bitfield-Mask: 0x01)                    */


/* =========================================================================================================================== */
/* ================                                            DIL                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  IDR0  ========================================================== */
#define DIL_IDR0_IDR0_Pos                 (0UL)                     /*!< IDR0 (Bit 0)                                          */
#define DIL_IDR0_IDR0_Msk                 (0xffffffffUL)            /*!< IDR0 (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IDR1  ========================================================== */
#define DIL_IDR1_IDR1_Pos                 (0UL)                     /*!< IDR1 (Bit 0)                                          */
#define DIL_IDR1_IDR1_Msk                 (0xffffffffUL)            /*!< IDR1 (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IDR2  ========================================================== */
#define DIL_IDR2_IDR2_Pos                 (0UL)                     /*!< IDR2 (Bit 0)                                          */
#define DIL_IDR2_IDR2_Msk                 (0xffffffffUL)            /*!< IDR2 (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IDR3  ========================================================== */
#define DIL_IDR3_IDR3_Pos                 (0UL)                     /*!< IDR3 (Bit 0)                                          */
#define DIL_IDR3_IDR3_Msk                 (0xffffffffUL)            /*!< IDR3 (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ODR0  ========================================================== */
#define DIL_ODR0_ODR0_Pos                 (0UL)                     /*!< ODR0 (Bit 0)                                          */
#define DIL_ODR0_ODR0_Msk                 (0xffffffffUL)            /*!< ODR0 (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ODR1  ========================================================== */
#define DIL_ODR1_ODR1_Pos                 (0UL)                     /*!< ODR1 (Bit 0)                                          */
#define DIL_ODR1_ODR1_Msk                 (0xffffffffUL)            /*!< ODR1 (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ODR2  ========================================================== */
#define DIL_ODR2_ODR2_Pos                 (0UL)                     /*!< ODR2 (Bit 0)                                          */
#define DIL_ODR2_ODR2_Msk                 (0xffffffffUL)            /*!< ODR2 (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ODR3  ========================================================== */
#define DIL_ODR3_ODR3_Pos                 (0UL)                     /*!< ODR3 (Bit 0)                                          */
#define DIL_ODR3_ODR3_Msk                 (0xffffffffUL)            /*!< ODR3 (Bitfield-Mask: 0xffffffff)                      */


/* =========================================================================================================================== */
/* ================                                            DIV                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DIVCR  ========================================================= */
#define DIV_DIVCR_DIVERR_Pos              (9UL)                     /*!< DIVERR (Bit 9)                                        */
#define DIV_DIVCR_DIVERR_Msk              (0x200UL)                 /*!< DIVERR (Bitfield-Mask: 0x01)                          */
#define DIV_DIVCR_CALBUSY_Pos             (8UL)                     /*!< CALBUSY (Bit 8)                                       */
#define DIV_DIVCR_CALBUSY_Msk             (0x100UL)                 /*!< CALBUSY (Bitfield-Mask: 0x01)                         */
#define DIV_DIVCR_EN_Pos                  (0UL)                     /*!< EN (Bit 0)                                            */
#define DIV_DIVCR_EN_Msk                  (0x1UL)                   /*!< EN (Bitfield-Mask: 0x01)                              */
/* =======================================================  DIVIDEND  ======================================================== */
#define DIV_DIVIDEND_DIVIDEND_Pos         (0UL)                     /*!< DIVIDEND (Bit 0)                                      */
#define DIV_DIVIDEND_DIVIDEND_Msk         (0xffffffffUL)            /*!< DIVIDEND (Bitfield-Mask: 0xffffffff)                  */
/* ========================================================  DIVSOR  ========================================================= */
#define DIV_DIVSOR_DIVSOR_Pos             (0UL)                     /*!< DIVSOR (Bit 0)                                        */
#define DIV_DIVSOR_DIVSOR_Msk             (0xffffffffUL)            /*!< DIVSOR (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  QUOTIENT  ======================================================== */
#define DIV_QUOTIENT_QUOTIENT_Pos         (0UL)                     /*!< QUOTIENT (Bit 0)                                      */
#define DIV_QUOTIENT_QUOTIENT_Msk         (0xffffffffUL)            /*!< QUOTIENT (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  REMAINDER  ======================================================= */
#define DIV_REMAINDER_REMAINDER_Pos       (0UL)                     /*!< REMAINDER (Bit 0)                                     */
#define DIV_REMAINDER_REMAINDER_Msk       (0xffffffffUL)            /*!< REMAINDER (Bitfield-Mask: 0xffffffff)                 */


/* =========================================================================================================================== */
/* ================                                            DMA                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DMAST  ========================================================= */
#define DMA_DMAST_DMST_Pos                (0UL)                     /*!< DMST (Bit 0)                                          */
#define DMA_DMAST_DMST_Msk                (0x1UL)                   /*!< DMST (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           DMAC0                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  DMSAR  ========================================================= */
#define DMAC0_DMSAR_DMSAR_Pos             (0UL)                     /*!< DMSAR (Bit 0)                                         */
#define DMAC0_DMSAR_DMSAR_Msk             (0xffffffffUL)            /*!< DMSAR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMDAR  ========================================================= */
#define DMAC0_DMDAR_DMDAR_Pos             (0UL)                     /*!< DMDAR (Bit 0)                                         */
#define DMAC0_DMDAR_DMDAR_Msk             (0xffffffffUL)            /*!< DMDAR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMCRA  ========================================================= */
#define DMAC0_DMCRA_DMCRAH_Pos            (16UL)                    /*!< DMCRAH (Bit 16)                                       */
#define DMAC0_DMCRA_DMCRAH_Msk            (0x3ff0000UL)             /*!< DMCRAH (Bitfield-Mask: 0x3ff)                         */
#define DMAC0_DMCRA_DMCRAL_Pos            (0UL)                     /*!< DMCRAL (Bit 0)                                        */
#define DMAC0_DMCRA_DMCRAL_Msk            (0xffffUL)                /*!< DMCRAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  DMCRB  ========================================================= */
#define DMAC0_DMCRB_DMCRB_Pos             (0UL)                     /*!< DMCRB (Bit 0)                                         */
#define DMAC0_DMCRB_DMCRB_Msk             (0xffffUL)                /*!< DMCRB (Bitfield-Mask: 0xffff)                         */
/* =========================================================  DMTMD  ========================================================= */
#define DMAC0_DMTMD_MD_Pos                (14UL)                    /*!< MD (Bit 14)                                           */
#define DMAC0_DMTMD_MD_Msk                (0xc000UL)                /*!< MD (Bitfield-Mask: 0x03)                              */
#define DMAC0_DMTMD_DTS_Pos               (12UL)                    /*!< DTS (Bit 12)                                          */
#define DMAC0_DMTMD_DTS_Msk               (0x3000UL)                /*!< DTS (Bitfield-Mask: 0x03)                             */
#define DMAC0_DMTMD_SZ_Pos                (8UL)                     /*!< SZ (Bit 8)                                            */
#define DMAC0_DMTMD_SZ_Msk                (0x300UL)                 /*!< SZ (Bitfield-Mask: 0x03)                              */
#define DMAC0_DMTMD_DCTG_Pos              (0UL)                     /*!< DCTG (Bit 0)                                          */
#define DMAC0_DMTMD_DCTG_Msk              (0x3UL)                   /*!< DCTG (Bitfield-Mask: 0x03)                            */
/* =========================================================  DMINT  ========================================================= */
#define DMAC0_DMINT_DTIE_Pos              (4UL)                     /*!< DTIE (Bit 4)                                          */
#define DMAC0_DMINT_DTIE_Msk              (0x10UL)                  /*!< DTIE (Bitfield-Mask: 0x01)                            */
#define DMAC0_DMINT_ESIE_Pos              (3UL)                     /*!< ESIE (Bit 3)                                          */
#define DMAC0_DMINT_ESIE_Msk              (0x8UL)                   /*!< ESIE (Bitfield-Mask: 0x01)                            */
#define DMAC0_DMINT_RPTIE_Pos             (2UL)                     /*!< RPTIE (Bit 2)                                         */
#define DMAC0_DMINT_RPTIE_Msk             (0x4UL)                   /*!< RPTIE (Bitfield-Mask: 0x01)                           */
#define DMAC0_DMINT_SARIE_Pos             (1UL)                     /*!< SARIE (Bit 1)                                         */
#define DMAC0_DMINT_SARIE_Msk             (0x2UL)                   /*!< SARIE (Bitfield-Mask: 0x01)                           */
#define DMAC0_DMINT_DARIE_Pos             (0UL)                     /*!< DARIE (Bit 0)                                         */
#define DMAC0_DMINT_DARIE_Msk             (0x1UL)                   /*!< DARIE (Bitfield-Mask: 0x01)                           */
/* =========================================================  DMAMD  ========================================================= */
#define DMAC0_DMAMD_SM_Pos                (14UL)                    /*!< SM (Bit 14)                                           */
#define DMAC0_DMAMD_SM_Msk                (0xc000UL)                /*!< SM (Bitfield-Mask: 0x03)                              */
#define DMAC0_DMAMD_SARA_Pos              (8UL)                     /*!< SARA (Bit 8)                                          */
#define DMAC0_DMAMD_SARA_Msk              (0x1f00UL)                /*!< SARA (Bitfield-Mask: 0x1f)                            */
#define DMAC0_DMAMD_DM_Pos                (6UL)                     /*!< DM (Bit 6)                                            */
#define DMAC0_DMAMD_DM_Msk                (0xc0UL)                  /*!< DM (Bitfield-Mask: 0x03)                              */
#define DMAC0_DMAMD_DARA_Pos              (0UL)                     /*!< DARA (Bit 0)                                          */
#define DMAC0_DMAMD_DARA_Msk              (0x1fUL)                  /*!< DARA (Bitfield-Mask: 0x1f)                            */
/* =========================================================  DMOFR  ========================================================= */
#define DMAC0_DMOFR_DMOFR_Pos             (0UL)                     /*!< DMOFR (Bit 0)                                         */
#define DMAC0_DMOFR_DMOFR_Msk             (0xffffffffUL)            /*!< DMOFR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMCNT  ========================================================= */
#define DMAC0_DMCNT_DTE_Pos               (0UL)                     /*!< DTE (Bit 0)                                           */
#define DMAC0_DMCNT_DTE_Msk               (0x1UL)                   /*!< DTE (Bitfield-Mask: 0x01)                             */
/* =========================================================  DMREQ  ========================================================= */
#define DMAC0_DMREQ_CLRS_Pos              (4UL)                     /*!< CLRS (Bit 4)                                          */
#define DMAC0_DMREQ_CLRS_Msk              (0x10UL)                  /*!< CLRS (Bitfield-Mask: 0x01)                            */
#define DMAC0_DMREQ_SWREQ_Pos             (0UL)                     /*!< SWREQ (Bit 0)                                         */
#define DMAC0_DMREQ_SWREQ_Msk             (0x1UL)                   /*!< SWREQ (Bitfield-Mask: 0x01)                           */
/* =========================================================  DMSTS  ========================================================= */
#define DMAC0_DMSTS_ACT_Pos               (7UL)                     /*!< ACT (Bit 7)                                           */
#define DMAC0_DMSTS_ACT_Msk               (0x80UL)                  /*!< ACT (Bitfield-Mask: 0x01)                             */
#define DMAC0_DMSTS_DTIF_Pos              (4UL)                     /*!< DTIF (Bit 4)                                          */
#define DMAC0_DMSTS_DTIF_Msk              (0x10UL)                  /*!< DTIF (Bitfield-Mask: 0x01)                            */
#define DMAC0_DMSTS_ESIF_Pos              (0UL)                     /*!< ESIF (Bit 0)                                          */
#define DMAC0_DMSTS_ESIF_Msk              (0x1UL)                   /*!< ESIF (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           DMAC1                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  DMSAR  ========================================================= */
#define DMAC1_DMSAR_DMSAR_Pos             (0UL)                     /*!< DMSAR (Bit 0)                                         */
#define DMAC1_DMSAR_DMSAR_Msk             (0xffffffffUL)            /*!< DMSAR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMDAR  ========================================================= */
#define DMAC1_DMDAR_DMDAR_Pos             (0UL)                     /*!< DMDAR (Bit 0)                                         */
#define DMAC1_DMDAR_DMDAR_Msk             (0xffffffffUL)            /*!< DMDAR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMCRA  ========================================================= */
#define DMAC1_DMCRA_DMCRAH_Pos            (16UL)                    /*!< DMCRAH (Bit 16)                                       */
#define DMAC1_DMCRA_DMCRAH_Msk            (0x3ff0000UL)             /*!< DMCRAH (Bitfield-Mask: 0x3ff)                         */
#define DMAC1_DMCRA_DMCRAL_Pos            (0UL)                     /*!< DMCRAL (Bit 0)                                        */
#define DMAC1_DMCRA_DMCRAL_Msk            (0xffffUL)                /*!< DMCRAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  DMCRB  ========================================================= */
#define DMAC1_DMCRB_DMCRB_Pos             (0UL)                     /*!< DMCRB (Bit 0)                                         */
#define DMAC1_DMCRB_DMCRB_Msk             (0xffffUL)                /*!< DMCRB (Bitfield-Mask: 0xffff)                         */
/* =========================================================  DMTMD  ========================================================= */
#define DMAC1_DMTMD_MD_Pos                (14UL)                    /*!< MD (Bit 14)                                           */
#define DMAC1_DMTMD_MD_Msk                (0xc000UL)                /*!< MD (Bitfield-Mask: 0x03)                              */
#define DMAC1_DMTMD_DTS_Pos               (12UL)                    /*!< DTS (Bit 12)                                          */
#define DMAC1_DMTMD_DTS_Msk               (0x3000UL)                /*!< DTS (Bitfield-Mask: 0x03)                             */
#define DMAC1_DMTMD_SZ_Pos                (8UL)                     /*!< SZ (Bit 8)                                            */
#define DMAC1_DMTMD_SZ_Msk                (0x300UL)                 /*!< SZ (Bitfield-Mask: 0x03)                              */
#define DMAC1_DMTMD_DCTG_Pos              (0UL)                     /*!< DCTG (Bit 0)                                          */
#define DMAC1_DMTMD_DCTG_Msk              (0x3UL)                   /*!< DCTG (Bitfield-Mask: 0x03)                            */
/* =========================================================  DMINT  ========================================================= */
#define DMAC1_DMINT_DTIE_Pos              (4UL)                     /*!< DTIE (Bit 4)                                          */
#define DMAC1_DMINT_DTIE_Msk              (0x10UL)                  /*!< DTIE (Bitfield-Mask: 0x01)                            */
#define DMAC1_DMINT_ESIE_Pos              (3UL)                     /*!< ESIE (Bit 3)                                          */
#define DMAC1_DMINT_ESIE_Msk              (0x8UL)                   /*!< ESIE (Bitfield-Mask: 0x01)                            */
#define DMAC1_DMINT_RPTIE_Pos             (2UL)                     /*!< RPTIE (Bit 2)                                         */
#define DMAC1_DMINT_RPTIE_Msk             (0x4UL)                   /*!< RPTIE (Bitfield-Mask: 0x01)                           */
#define DMAC1_DMINT_SARIE_Pos             (1UL)                     /*!< SARIE (Bit 1)                                         */
#define DMAC1_DMINT_SARIE_Msk             (0x2UL)                   /*!< SARIE (Bitfield-Mask: 0x01)                           */
#define DMAC1_DMINT_DARIE_Pos             (0UL)                     /*!< DARIE (Bit 0)                                         */
#define DMAC1_DMINT_DARIE_Msk             (0x1UL)                   /*!< DARIE (Bitfield-Mask: 0x01)                           */
/* =========================================================  DMAMD  ========================================================= */
#define DMAC1_DMAMD_SM_Pos                (14UL)                    /*!< SM (Bit 14)                                           */
#define DMAC1_DMAMD_SM_Msk                (0xc000UL)                /*!< SM (Bitfield-Mask: 0x03)                              */
#define DMAC1_DMAMD_SARA_Pos              (8UL)                     /*!< SARA (Bit 8)                                          */
#define DMAC1_DMAMD_SARA_Msk              (0x1f00UL)                /*!< SARA (Bitfield-Mask: 0x1f)                            */
#define DMAC1_DMAMD_DM_Pos                (6UL)                     /*!< DM (Bit 6)                                            */
#define DMAC1_DMAMD_DM_Msk                (0xc0UL)                  /*!< DM (Bitfield-Mask: 0x03)                              */
#define DMAC1_DMAMD_DARA_Pos              (0UL)                     /*!< DARA (Bit 0)                                          */
#define DMAC1_DMAMD_DARA_Msk              (0x1fUL)                  /*!< DARA (Bitfield-Mask: 0x1f)                            */
/* =========================================================  DMOFR  ========================================================= */
#define DMAC1_DMOFR_DMOFR_Pos             (0UL)                     /*!< DMOFR (Bit 0)                                         */
#define DMAC1_DMOFR_DMOFR_Msk             (0xffffffffUL)            /*!< DMOFR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMCNT  ========================================================= */
#define DMAC1_DMCNT_DTE_Pos               (0UL)                     /*!< DTE (Bit 0)                                           */
#define DMAC1_DMCNT_DTE_Msk               (0x1UL)                   /*!< DTE (Bitfield-Mask: 0x01)                             */
/* =========================================================  DMREQ  ========================================================= */
#define DMAC1_DMREQ_CLRS_Pos              (4UL)                     /*!< CLRS (Bit 4)                                          */
#define DMAC1_DMREQ_CLRS_Msk              (0x10UL)                  /*!< CLRS (Bitfield-Mask: 0x01)                            */
#define DMAC1_DMREQ_SWREQ_Pos             (0UL)                     /*!< SWREQ (Bit 0)                                         */
#define DMAC1_DMREQ_SWREQ_Msk             (0x1UL)                   /*!< SWREQ (Bitfield-Mask: 0x01)                           */
/* =========================================================  DMSTS  ========================================================= */
#define DMAC1_DMSTS_ACT_Pos               (7UL)                     /*!< ACT (Bit 7)                                           */
#define DMAC1_DMSTS_ACT_Msk               (0x80UL)                  /*!< ACT (Bitfield-Mask: 0x01)                             */
#define DMAC1_DMSTS_DTIF_Pos              (4UL)                     /*!< DTIF (Bit 4)                                          */
#define DMAC1_DMSTS_DTIF_Msk              (0x10UL)                  /*!< DTIF (Bitfield-Mask: 0x01)                            */
#define DMAC1_DMSTS_ESIF_Pos              (0UL)                     /*!< ESIF (Bit 0)                                          */
#define DMAC1_DMSTS_ESIF_Msk              (0x1UL)                   /*!< ESIF (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           DMAC2                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  DMSAR  ========================================================= */
#define DMAC2_DMSAR_DMSAR_Pos             (0UL)                     /*!< DMSAR (Bit 0)                                         */
#define DMAC2_DMSAR_DMSAR_Msk             (0xffffffffUL)            /*!< DMSAR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMDAR  ========================================================= */
#define DMAC2_DMDAR_DMDAR_Pos             (0UL)                     /*!< DMDAR (Bit 0)                                         */
#define DMAC2_DMDAR_DMDAR_Msk             (0xffffffffUL)            /*!< DMDAR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMCRA  ========================================================= */
#define DMAC2_DMCRA_DMCRAH_Pos            (16UL)                    /*!< DMCRAH (Bit 16)                                       */
#define DMAC2_DMCRA_DMCRAH_Msk            (0x3ff0000UL)             /*!< DMCRAH (Bitfield-Mask: 0x3ff)                         */
#define DMAC2_DMCRA_DMCRAL_Pos            (0UL)                     /*!< DMCRAL (Bit 0)                                        */
#define DMAC2_DMCRA_DMCRAL_Msk            (0xffffUL)                /*!< DMCRAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  DMCRB  ========================================================= */
#define DMAC2_DMCRB_DMCRB_Pos             (0UL)                     /*!< DMCRB (Bit 0)                                         */
#define DMAC2_DMCRB_DMCRB_Msk             (0xffffUL)                /*!< DMCRB (Bitfield-Mask: 0xffff)                         */
/* =========================================================  DMTMD  ========================================================= */
#define DMAC2_DMTMD_MD_Pos                (14UL)                    /*!< MD (Bit 14)                                           */
#define DMAC2_DMTMD_MD_Msk                (0xc000UL)                /*!< MD (Bitfield-Mask: 0x03)                              */
#define DMAC2_DMTMD_DTS_Pos               (12UL)                    /*!< DTS (Bit 12)                                          */
#define DMAC2_DMTMD_DTS_Msk               (0x3000UL)                /*!< DTS (Bitfield-Mask: 0x03)                             */
#define DMAC2_DMTMD_SZ_Pos                (8UL)                     /*!< SZ (Bit 8)                                            */
#define DMAC2_DMTMD_SZ_Msk                (0x300UL)                 /*!< SZ (Bitfield-Mask: 0x03)                              */
#define DMAC2_DMTMD_DCTG_Pos              (0UL)                     /*!< DCTG (Bit 0)                                          */
#define DMAC2_DMTMD_DCTG_Msk              (0x3UL)                   /*!< DCTG (Bitfield-Mask: 0x03)                            */
/* =========================================================  DMINT  ========================================================= */
#define DMAC2_DMINT_DTIE_Pos              (4UL)                     /*!< DTIE (Bit 4)                                          */
#define DMAC2_DMINT_DTIE_Msk              (0x10UL)                  /*!< DTIE (Bitfield-Mask: 0x01)                            */
#define DMAC2_DMINT_ESIE_Pos              (3UL)                     /*!< ESIE (Bit 3)                                          */
#define DMAC2_DMINT_ESIE_Msk              (0x8UL)                   /*!< ESIE (Bitfield-Mask: 0x01)                            */
#define DMAC2_DMINT_RPTIE_Pos             (2UL)                     /*!< RPTIE (Bit 2)                                         */
#define DMAC2_DMINT_RPTIE_Msk             (0x4UL)                   /*!< RPTIE (Bitfield-Mask: 0x01)                           */
#define DMAC2_DMINT_SARIE_Pos             (1UL)                     /*!< SARIE (Bit 1)                                         */
#define DMAC2_DMINT_SARIE_Msk             (0x2UL)                   /*!< SARIE (Bitfield-Mask: 0x01)                           */
#define DMAC2_DMINT_DARIE_Pos             (0UL)                     /*!< DARIE (Bit 0)                                         */
#define DMAC2_DMINT_DARIE_Msk             (0x1UL)                   /*!< DARIE (Bitfield-Mask: 0x01)                           */
/* =========================================================  DMAMD  ========================================================= */
#define DMAC2_DMAMD_SM_Pos                (14UL)                    /*!< SM (Bit 14)                                           */
#define DMAC2_DMAMD_SM_Msk                (0xc000UL)                /*!< SM (Bitfield-Mask: 0x03)                              */
#define DMAC2_DMAMD_SARA_Pos              (8UL)                     /*!< SARA (Bit 8)                                          */
#define DMAC2_DMAMD_SARA_Msk              (0x1f00UL)                /*!< SARA (Bitfield-Mask: 0x1f)                            */
#define DMAC2_DMAMD_DM_Pos                (6UL)                     /*!< DM (Bit 6)                                            */
#define DMAC2_DMAMD_DM_Msk                (0xc0UL)                  /*!< DM (Bitfield-Mask: 0x03)                              */
#define DMAC2_DMAMD_DARA_Pos              (0UL)                     /*!< DARA (Bit 0)                                          */
#define DMAC2_DMAMD_DARA_Msk              (0x1fUL)                  /*!< DARA (Bitfield-Mask: 0x1f)                            */
/* =========================================================  DMOFR  ========================================================= */
#define DMAC2_DMOFR_DMOFR_Pos             (0UL)                     /*!< DMOFR (Bit 0)                                         */
#define DMAC2_DMOFR_DMOFR_Msk             (0xffffffffUL)            /*!< DMOFR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMCNT  ========================================================= */
#define DMAC2_DMCNT_DTE_Pos               (0UL)                     /*!< DTE (Bit 0)                                           */
#define DMAC2_DMCNT_DTE_Msk               (0x1UL)                   /*!< DTE (Bitfield-Mask: 0x01)                             */
/* =========================================================  DMREQ  ========================================================= */
#define DMAC2_DMREQ_CLRS_Pos              (4UL)                     /*!< CLRS (Bit 4)                                          */
#define DMAC2_DMREQ_CLRS_Msk              (0x10UL)                  /*!< CLRS (Bitfield-Mask: 0x01)                            */
#define DMAC2_DMREQ_SWREQ_Pos             (0UL)                     /*!< SWREQ (Bit 0)                                         */
#define DMAC2_DMREQ_SWREQ_Msk             (0x1UL)                   /*!< SWREQ (Bitfield-Mask: 0x01)                           */
/* =========================================================  DMSTS  ========================================================= */
#define DMAC2_DMSTS_ACT_Pos               (7UL)                     /*!< ACT (Bit 7)                                           */
#define DMAC2_DMSTS_ACT_Msk               (0x80UL)                  /*!< ACT (Bitfield-Mask: 0x01)                             */
#define DMAC2_DMSTS_DTIF_Pos              (4UL)                     /*!< DTIF (Bit 4)                                          */
#define DMAC2_DMSTS_DTIF_Msk              (0x10UL)                  /*!< DTIF (Bitfield-Mask: 0x01)                            */
#define DMAC2_DMSTS_ESIF_Pos              (0UL)                     /*!< ESIF (Bit 0)                                          */
#define DMAC2_DMSTS_ESIF_Msk              (0x1UL)                   /*!< ESIF (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           DMAC3                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  DMSAR  ========================================================= */
#define DMAC3_DMSAR_DMSAR_Pos             (0UL)                     /*!< DMSAR (Bit 0)                                         */
#define DMAC3_DMSAR_DMSAR_Msk             (0xffffffffUL)            /*!< DMSAR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMDAR  ========================================================= */
#define DMAC3_DMDAR_DMDAR_Pos             (0UL)                     /*!< DMDAR (Bit 0)                                         */
#define DMAC3_DMDAR_DMDAR_Msk             (0xffffffffUL)            /*!< DMDAR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMCRA  ========================================================= */
#define DMAC3_DMCRA_DMCRAH_Pos            (16UL)                    /*!< DMCRAH (Bit 16)                                       */
#define DMAC3_DMCRA_DMCRAH_Msk            (0x3ff0000UL)             /*!< DMCRAH (Bitfield-Mask: 0x3ff)                         */
#define DMAC3_DMCRA_DMCRAL_Pos            (0UL)                     /*!< DMCRAL (Bit 0)                                        */
#define DMAC3_DMCRA_DMCRAL_Msk            (0xffffUL)                /*!< DMCRAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  DMCRB  ========================================================= */
#define DMAC3_DMCRB_DMCRB_Pos             (0UL)                     /*!< DMCRB (Bit 0)                                         */
#define DMAC3_DMCRB_DMCRB_Msk             (0xffffUL)                /*!< DMCRB (Bitfield-Mask: 0xffff)                         */
/* =========================================================  DMTMD  ========================================================= */
#define DMAC3_DMTMD_MD_Pos                (14UL)                    /*!< MD (Bit 14)                                           */
#define DMAC3_DMTMD_MD_Msk                (0xc000UL)                /*!< MD (Bitfield-Mask: 0x03)                              */
#define DMAC3_DMTMD_DTS_Pos               (12UL)                    /*!< DTS (Bit 12)                                          */
#define DMAC3_DMTMD_DTS_Msk               (0x3000UL)                /*!< DTS (Bitfield-Mask: 0x03)                             */
#define DMAC3_DMTMD_SZ_Pos                (8UL)                     /*!< SZ (Bit 8)                                            */
#define DMAC3_DMTMD_SZ_Msk                (0x300UL)                 /*!< SZ (Bitfield-Mask: 0x03)                              */
#define DMAC3_DMTMD_DCTG_Pos              (0UL)                     /*!< DCTG (Bit 0)                                          */
#define DMAC3_DMTMD_DCTG_Msk              (0x3UL)                   /*!< DCTG (Bitfield-Mask: 0x03)                            */
/* =========================================================  DMINT  ========================================================= */
#define DMAC3_DMINT_DTIE_Pos              (4UL)                     /*!< DTIE (Bit 4)                                          */
#define DMAC3_DMINT_DTIE_Msk              (0x10UL)                  /*!< DTIE (Bitfield-Mask: 0x01)                            */
#define DMAC3_DMINT_ESIE_Pos              (3UL)                     /*!< ESIE (Bit 3)                                          */
#define DMAC3_DMINT_ESIE_Msk              (0x8UL)                   /*!< ESIE (Bitfield-Mask: 0x01)                            */
#define DMAC3_DMINT_RPTIE_Pos             (2UL)                     /*!< RPTIE (Bit 2)                                         */
#define DMAC3_DMINT_RPTIE_Msk             (0x4UL)                   /*!< RPTIE (Bitfield-Mask: 0x01)                           */
#define DMAC3_DMINT_SARIE_Pos             (1UL)                     /*!< SARIE (Bit 1)                                         */
#define DMAC3_DMINT_SARIE_Msk             (0x2UL)                   /*!< SARIE (Bitfield-Mask: 0x01)                           */
#define DMAC3_DMINT_DARIE_Pos             (0UL)                     /*!< DARIE (Bit 0)                                         */
#define DMAC3_DMINT_DARIE_Msk             (0x1UL)                   /*!< DARIE (Bitfield-Mask: 0x01)                           */
/* =========================================================  DMAMD  ========================================================= */
#define DMAC3_DMAMD_SM_Pos                (14UL)                    /*!< SM (Bit 14)                                           */
#define DMAC3_DMAMD_SM_Msk                (0xc000UL)                /*!< SM (Bitfield-Mask: 0x03)                              */
#define DMAC3_DMAMD_SARA_Pos              (8UL)                     /*!< SARA (Bit 8)                                          */
#define DMAC3_DMAMD_SARA_Msk              (0x1f00UL)                /*!< SARA (Bitfield-Mask: 0x1f)                            */
#define DMAC3_DMAMD_DM_Pos                (6UL)                     /*!< DM (Bit 6)                                            */
#define DMAC3_DMAMD_DM_Msk                (0xc0UL)                  /*!< DM (Bitfield-Mask: 0x03)                              */
#define DMAC3_DMAMD_DARA_Pos              (0UL)                     /*!< DARA (Bit 0)                                          */
#define DMAC3_DMAMD_DARA_Msk              (0x1fUL)                  /*!< DARA (Bitfield-Mask: 0x1f)                            */
/* =========================================================  DMOFR  ========================================================= */
#define DMAC3_DMOFR_DMOFR_Pos             (0UL)                     /*!< DMOFR (Bit 0)                                         */
#define DMAC3_DMOFR_DMOFR_Msk             (0xffffffffUL)            /*!< DMOFR (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  DMCNT  ========================================================= */
#define DMAC3_DMCNT_DTE_Pos               (0UL)                     /*!< DTE (Bit 0)                                           */
#define DMAC3_DMCNT_DTE_Msk               (0x1UL)                   /*!< DTE (Bitfield-Mask: 0x01)                             */
/* =========================================================  DMREQ  ========================================================= */
#define DMAC3_DMREQ_CLRS_Pos              (4UL)                     /*!< CLRS (Bit 4)                                          */
#define DMAC3_DMREQ_CLRS_Msk              (0x10UL)                  /*!< CLRS (Bitfield-Mask: 0x01)                            */
#define DMAC3_DMREQ_SWREQ_Pos             (0UL)                     /*!< SWREQ (Bit 0)                                         */
#define DMAC3_DMREQ_SWREQ_Msk             (0x1UL)                   /*!< SWREQ (Bitfield-Mask: 0x01)                           */
/* =========================================================  DMSTS  ========================================================= */
#define DMAC3_DMSTS_ACT_Pos               (7UL)                     /*!< ACT (Bit 7)                                           */
#define DMAC3_DMSTS_ACT_Msk               (0x80UL)                  /*!< ACT (Bitfield-Mask: 0x01)                             */
#define DMAC3_DMSTS_DTIF_Pos              (4UL)                     /*!< DTIF (Bit 4)                                          */
#define DMAC3_DMSTS_DTIF_Msk              (0x10UL)                  /*!< DTIF (Bitfield-Mask: 0x01)                            */
#define DMAC3_DMSTS_ESIF_Pos              (0UL)                     /*!< ESIF (Bit 0)                                          */
#define DMAC3_DMSTS_ESIF_Msk              (0x1UL)                   /*!< ESIF (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                            DOC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DOCR  ========================================================== */
#define DOC_DOCR_DOPCFCL_Pos              (6UL)                     /*!< DOPCFCL (Bit 6)                                       */
#define DOC_DOCR_DOPCFCL_Msk              (0x40UL)                  /*!< DOPCFCL (Bitfield-Mask: 0x01)                         */
#define DOC_DOCR_DOPCF_Pos                (5UL)                     /*!< DOPCF (Bit 5)                                         */
#define DOC_DOCR_DOPCF_Msk                (0x20UL)                  /*!< DOPCF (Bitfield-Mask: 0x01)                           */
#define DOC_DOCR_DCSEL_Pos                (2UL)                     /*!< DCSEL (Bit 2)                                         */
#define DOC_DOCR_DCSEL_Msk                (0x4UL)                   /*!< DCSEL (Bitfield-Mask: 0x01)                           */
#define DOC_DOCR_OMS_Pos                  (0UL)                     /*!< OMS (Bit 0)                                           */
#define DOC_DOCR_OMS_Msk                  (0x3UL)                   /*!< OMS (Bitfield-Mask: 0x03)                             */
/* =========================================================  DODIR  ========================================================= */
#define DOC_DODIR_DODIR_Pos               (0UL)                     /*!< DODIR (Bit 0)                                         */
#define DOC_DODIR_DODIR_Msk               (0xffffUL)                /*!< DODIR (Bitfield-Mask: 0xffff)                         */
/* =========================================================  DODSR  ========================================================= */
#define DOC_DODSR_DODSR_Pos               (0UL)                     /*!< DODSR (Bit 0)                                         */
#define DOC_DODSR_DODSR_Msk               (0xffffUL)                /*!< DODSR (Bitfield-Mask: 0xffff)                         */


/* =========================================================================================================================== */
/* ================                                            DTC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DTCCR  ========================================================= */
#define DTC_DTCCR_RRS_Pos                 (4UL)                     /*!< RRS (Bit 4)                                           */
#define DTC_DTCCR_RRS_Msk                 (0x10UL)                  /*!< RRS (Bitfield-Mask: 0x01)                             */
/* ========================================================  DTCVBR  ========================================================= */
#define DTC_DTCVBR_DTCVBR_Pos             (0UL)                     /*!< DTCVBR (Bit 0)                                        */
#define DTC_DTCVBR_DTCVBR_Msk             (0xffffffffUL)            /*!< DTCVBR (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  DTCST  ========================================================= */
#define DTC_DTCST_DTCST_Pos               (0UL)                     /*!< DTCST (Bit 0)                                         */
#define DTC_DTCST_DTCST_Msk               (0x1UL)                   /*!< DTCST (Bitfield-Mask: 0x01)                           */
/* ========================================================  DTCSTS  ========================================================= */
#define DTC_DTCSTS_ACT_Pos                (15UL)                    /*!< ACT (Bit 15)                                          */
#define DTC_DTCSTS_ACT_Msk                (0x8000UL)                /*!< ACT (Bitfield-Mask: 0x01)                             */
#define DTC_DTCSTS_VECN_Pos               (0UL)                     /*!< VECN (Bit 0)                                          */
#define DTC_DTCSTS_VECN_Msk               (0xffUL)                  /*!< VECN (Bitfield-Mask: 0xff)                            */


/* =========================================================================================================================== */
/* ================                                            EHC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  EHCRMR  ========================================================= */
#define EHC_EHCRMR_RCFMF1_Pos             (8UL)                     /*!< RCFMF1 (Bit 8)                                        */
#define EHC_EHCRMR_RCFMF1_Msk             (0xff00UL)                /*!< RCFMF1 (Bitfield-Mask: 0xff)                          */
#define EHC_EHCRMR_RCFMF0_Pos             (0UL)                     /*!< RCFMF0 (Bit 0)                                        */
#define EHC_EHCRMR_RCFMF0_Msk             (0xffUL)                  /*!< RCFMF0 (Bitfield-Mask: 0xff)                          */


/* =========================================================================================================================== */
/* ================                                            ELC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  ELCR  ========================================================== */
#define ELC_ELCR_ELCON_Pos                (7UL)                     /*!< ELCON (Bit 7)                                         */
#define ELC_ELCR_ELCON_Msk                (0x80UL)                  /*!< ELCON (Bitfield-Mask: 0x01)                           */
/* =========================================================  ELSR0  ========================================================= */
#define ELC_ELSR0_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR0_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* =========================================================  ELSR1  ========================================================= */
#define ELC_ELSR1_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR1_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* =========================================================  ELSR2  ========================================================= */
#define ELC_ELSR2_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR2_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* =========================================================  ELSR3  ========================================================= */
#define ELC_ELSR3_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR3_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* =========================================================  ELSR8  ========================================================= */
#define ELC_ELSR8_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR8_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* ========================================================  ELSR12  ========================================================= */
#define ELC_ELSR12_ELS_Pos                (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR12_ELS_Msk                (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* ========================================================  ELSR14  ========================================================= */
#define ELC_ELSR14_ELS_Pos                (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR14_ELS_Msk                (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* ========================================================  ELSR15  ========================================================= */
#define ELC_ELSR15_ELS_Pos                (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR15_ELS_Msk                (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* ========================================================  ELSR18  ========================================================= */
#define ELC_ELSR18_ELS_Pos                (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR18_ELS_Msk                (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* ========================================================  ELSR19  ========================================================= */
#define ELC_ELSR19_ELS_Pos                (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR19_ELS_Msk                (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* ========================================================  ELSEGR0  ======================================================== */
#define ELC_ELSEGR0_WI_Pos                (7UL)                     /*!< WI (Bit 7)                                            */
#define ELC_ELSEGR0_WI_Msk                (0x80UL)                  /*!< WI (Bitfield-Mask: 0x01)                              */
#define ELC_ELSEGR0_WE_Pos                (6UL)                     /*!< WE (Bit 6)                                            */
#define ELC_ELSEGR0_WE_Msk                (0x40UL)                  /*!< WE (Bitfield-Mask: 0x01)                              */
#define ELC_ELSEGR0_SEG_Pos               (0UL)                     /*!< SEG (Bit 0)                                           */
#define ELC_ELSEGR0_SEG_Msk               (0x1UL)                   /*!< SEG (Bitfield-Mask: 0x01)                             */
/* ========================================================  ELSEGR1  ======================================================== */
#define ELC_ELSEGR1_WI_Pos                (7UL)                     /*!< WI (Bit 7)                                            */
#define ELC_ELSEGR1_WI_Msk                (0x80UL)                  /*!< WI (Bitfield-Mask: 0x01)                              */
#define ELC_ELSEGR1_WE_Pos                (6UL)                     /*!< WE (Bit 6)                                            */
#define ELC_ELSEGR1_WE_Msk                (0x40UL)                  /*!< WE (Bitfield-Mask: 0x01)                              */
#define ELC_ELSEGR1_SEG_Pos               (0UL)                     /*!< SEG (Bit 0)                                           */
#define ELC_ELSEGR1_SEG_Msk               (0x1UL)                   /*!< SEG (Bitfield-Mask: 0x01)                             */


/* =========================================================================================================================== */
/* ================                                           FLASH                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  FLWT  ========================================================== */
#define FLASH_FLWT_FLWT_Pos               (0UL)                     /*!< FLWT (Bit 0)                                          */
#define FLASH_FLWT_FLWT_Msk               (0x7UL)                   /*!< FLWT (Bitfield-Mask: 0x07)                            */
/* ========================================================  FWEPROR  ======================================================== */
#define FLASH_FWEPROR_FLWE_Pos            (0UL)                     /*!< FLWE (Bit 0)                                          */
#define FLASH_FWEPROR_FLWE_Msk            (0x3UL)                   /*!< FLWE (Bitfield-Mask: 0x03)                            */
/* ========================================================  FASTAT  ========================================================= */
#define FLASH_FASTAT_CFAE_Pos             (7UL)                     /*!< CFAE (Bit 7)                                          */
#define FLASH_FASTAT_CFAE_Msk             (0x80UL)                  /*!< CFAE (Bitfield-Mask: 0x01)                            */
#define FLASH_FASTAT_CMDLK_Pos            (4UL)                     /*!< CMDLK (Bit 4)                                         */
#define FLASH_FASTAT_CMDLK_Msk            (0x10UL)                  /*!< CMDLK (Bitfield-Mask: 0x01)                           */
/* ========================================================  FAEINT  ========================================================= */
#define FLASH_FAEINT_CFAEIE_Pos           (7UL)                     /*!< CFAEIE (Bit 7)                                        */
#define FLASH_FAEINT_CFAEIE_Msk           (0x80UL)                  /*!< CFAEIE (Bitfield-Mask: 0x01)                          */
#define FLASH_FAEINT_CMDLKIE_Pos          (4UL)                     /*!< CMDLKIE (Bit 4)                                       */
#define FLASH_FAEINT_CMDLKIE_Msk          (0x10UL)                  /*!< CMDLKIE (Bitfield-Mask: 0x01)                         */
/* ========================================================  FRDYIE  ========================================================= */
#define FLASH_FRDYIE_FRDYIE_Pos           (0UL)                     /*!< FRDYIE (Bit 0)                                        */
#define FLASH_FRDYIE_FRDYIE_Msk           (0x1UL)                   /*!< FRDYIE (Bitfield-Mask: 0x01)                          */
/* ========================================================  FSADDR  ========================================================= */
#define FLASH_FSADDR_FSADDR_Pos           (0UL)                     /*!< FSADDR (Bit 0)                                        */
#define FLASH_FSADDR_FSADDR_Msk           (0xffffffffUL)            /*!< FSADDR (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  FSTATR  ========================================================= */
#define FLASH_FSTATR_ILGCOMERR_Pos        (23UL)                    /*!< ILGCOMERR (Bit 23)                                    */
#define FLASH_FSTATR_ILGCOMERR_Msk        (0x800000UL)              /*!< ILGCOMERR (Bitfield-Mask: 0x01)                       */
#define FLASH_FSTATR_FESETERR_Pos         (22UL)                    /*!< FESETERR (Bit 22)                                     */
#define FLASH_FSTATR_FESETERR_Msk         (0x400000UL)              /*!< FESETERR (Bitfield-Mask: 0x01)                        */
#define FLASH_FSTATR_SECERR_Pos           (21UL)                    /*!< SECERR (Bit 21)                                       */
#define FLASH_FSTATR_SECERR_Msk           (0x200000UL)              /*!< SECERR (Bitfield-Mask: 0x01)                          */
#define FLASH_FSTATR_OTERR_Pos            (20UL)                    /*!< OTERR (Bit 20)                                        */
#define FLASH_FSTATR_OTERR_Msk            (0x100000UL)              /*!< OTERR (Bitfield-Mask: 0x01)                           */
#define FLASH_FSTATR_FRDY_Pos             (15UL)                    /*!< FRDY (Bit 15)                                         */
#define FLASH_FSTATR_FRDY_Msk             (0x8000UL)                /*!< FRDY (Bitfield-Mask: 0x01)                            */
#define FLASH_FSTATR_ILGLERR_Pos          (14UL)                    /*!< ILGLERR (Bit 14)                                      */
#define FLASH_FSTATR_ILGLERR_Msk          (0x4000UL)                /*!< ILGLERR (Bitfield-Mask: 0x01)                         */
#define FLASH_FSTATR_ERSERR_Pos           (13UL)                    /*!< ERSERR (Bit 13)                                       */
#define FLASH_FSTATR_ERSERR_Msk           (0x2000UL)                /*!< ERSERR (Bitfield-Mask: 0x01)                          */
#define FLASH_FSTATR_PRGERR_Pos           (12UL)                    /*!< PRGERR (Bit 12)                                       */
#define FLASH_FSTATR_PRGERR_Msk           (0x1000UL)                /*!< PRGERR (Bitfield-Mask: 0x01)                          */
#define FLASH_FSTATR_SUSRDY_Pos           (11UL)                    /*!< SUSRDY (Bit 11)                                       */
#define FLASH_FSTATR_SUSRDY_Msk           (0x800UL)                 /*!< SUSRDY (Bitfield-Mask: 0x01)                          */
#define FLASH_FSTATR_DBFULL_Pos           (10UL)                    /*!< DBFULL (Bit 10)                                       */
#define FLASH_FSTATR_DBFULL_Msk           (0x400UL)                 /*!< DBFULL (Bitfield-Mask: 0x01)                          */
#define FLASH_FSTATR_ERSSPD_Pos           (9UL)                     /*!< ERSSPD (Bit 9)                                        */
#define FLASH_FSTATR_ERSSPD_Msk           (0x200UL)                 /*!< ERSSPD (Bitfield-Mask: 0x01)                          */
#define FLASH_FSTATR_PRGSPD_Pos           (8UL)                     /*!< PRGSPD (Bit 8)                                        */
#define FLASH_FSTATR_PRGSPD_Msk           (0x100UL)                 /*!< PRGSPD (Bitfield-Mask: 0x01)                          */
#define FLASH_FSTATR_FLWEERR_Pos          (6UL)                     /*!< FLWEERR (Bit 6)                                       */
#define FLASH_FSTATR_FLWEERR_Msk          (0x40UL)                  /*!< FLWEERR (Bitfield-Mask: 0x01)                         */
/* ========================================================  FENTRYR  ======================================================== */
#define FLASH_FENTRYR_KEY_Pos             (8UL)                     /*!< KEY (Bit 8)                                           */
#define FLASH_FENTRYR_KEY_Msk             (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
#define FLASH_FENTRYR_FENTRYC_Pos         (0UL)                     /*!< FENTRYC (Bit 0)                                       */
#define FLASH_FENTRYR_FENTRYC_Msk         (0x1UL)                   /*!< FENTRYC (Bitfield-Mask: 0x01)                         */
/* =======================================================  FSUINITR  ======================================================== */
#define FLASH_FSUINITR_KEY_Pos            (8UL)                     /*!< KEY (Bit 8)                                           */
#define FLASH_FSUINITR_KEY_Msk            (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
#define FLASH_FSUINITR_SUINIT_Pos         (0UL)                     /*!< SUINIT (Bit 0)                                        */
#define FLASH_FSUINITR_SUINIT_Msk         (0x1UL)                   /*!< SUINIT (Bitfield-Mask: 0x01)                          */
/* =========================================================  FCMDR  ========================================================= */
#define FLASH_FCMDR_CMDR_Pos              (8UL)                     /*!< CMDR (Bit 8)                                          */
#define FLASH_FCMDR_CMDR_Msk              (0xff00UL)                /*!< CMDR (Bitfield-Mask: 0xff)                            */
#define FLASH_FCMDR_PCMDR_Pos             (0UL)                     /*!< PCMDR (Bit 0)                                         */
#define FLASH_FCMDR_PCMDR_Msk             (0xffUL)                  /*!< PCMDR (Bitfield-Mask: 0xff)                           */
/* ========================================================  FAWMON  ========================================================= */
#define FLASH_FAWMON_BTFLG_Pos            (31UL)                    /*!< BTFLG (Bit 31)                                        */
#define FLASH_FAWMON_BTFLG_Msk            (0x80000000UL)            /*!< BTFLG (Bitfield-Mask: 0x01)                           */
#define FLASH_FAWMON_FAWE_Pos             (16UL)                    /*!< FAWE (Bit 16)                                         */
#define FLASH_FAWMON_FAWE_Msk             (0x1fff0000UL)            /*!< FAWE (Bitfield-Mask: 0x1fff)                          */
#define FLASH_FAWMON_FSPR_Pos             (15UL)                    /*!< FSPR (Bit 15)                                         */
#define FLASH_FAWMON_FSPR_Msk             (0x8000UL)                /*!< FSPR (Bitfield-Mask: 0x01)                            */
#define FLASH_FAWMON_FAWS_Pos             (0UL)                     /*!< FAWS (Bit 0)                                          */
#define FLASH_FAWMON_FAWS_Msk             (0x1fffUL)                /*!< FAWS (Bitfield-Mask: 0x1fff)                          */
/* ========================================================  FPCKAR  ========================================================= */
#define FLASH_FPCKAR_KEY_Pos              (8UL)                     /*!< KEY (Bit 8)                                           */
#define FLASH_FPCKAR_KEY_Msk              (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
#define FLASH_FPCKAR_PCKA_Pos             (0UL)                     /*!< PCKA (Bit 0)                                          */
#define FLASH_FPCKAR_PCKA_Msk             (0xffUL)                  /*!< PCKA (Bitfield-Mask: 0xff)                            */
/* ========================================================  FSUACR  ========================================================= */
#define FLASH_FSUACR_KEY_Pos              (8UL)                     /*!< KEY (Bit 8)                                           */
#define FLASH_FSUACR_KEY_Msk              (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
#define FLASH_FSUACR_SAS_Pos              (0UL)                     /*!< SAS (Bit 0)                                           */
#define FLASH_FSUACR_SAS_Msk              (0x3UL)                   /*!< SAS (Bitfield-Mask: 0x03)                             */
/* =========================================================  UIDR0  ========================================================= */
/* =========================================================  UIDR1  ========================================================= */
/* =========================================================  UIDR2  ========================================================= */
/* =========================================================  UIDR3  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            GDT                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  GDTCR  ========================================================= */
#define GDT_GDTCR_CLRDS1_Pos              (29UL)                    /*!< CLRDS1 (Bit 29)                                       */
#define GDT_GDTCR_CLRDS1_Msk              (0xe0000000UL)            /*!< CLRDS1 (Bitfield-Mask: 0x07)                          */
#define GDT_GDTCR_CLRDS0_Pos              (26UL)                    /*!< CLRDS0 (Bit 26)                                       */
#define GDT_GDTCR_CLRDS0_Msk              (0x1c000000UL)            /*!< CLRDS0 (Bitfield-Mask: 0x07)                          */
#define GDT_GDTCR_CLREN_Pos               (25UL)                    /*!< CLREN (Bit 25)                                        */
#define GDT_GDTCR_CLREN_Msk               (0x2000000UL)             /*!< CLREN (Bitfield-Mask: 0x01)                           */
#define GDT_GDTCR_CDCS_Pos                (21UL)                    /*!< CDCS (Bit 21)                                         */
#define GDT_GDTCR_CDCS_Msk                (0xe00000UL)              /*!< CDCS (Bitfield-Mask: 0x07)                            */
#define GDT_GDTCR_CPTS_Pos                (20UL)                    /*!< CPTS (Bit 20)                                         */
#define GDT_GDTCR_CPTS_Msk                (0x100000UL)              /*!< CPTS (Bitfield-Mask: 0x01)                            */
#define GDT_GDTCR_CSYNEN_Pos              (19UL)                    /*!< CSYNEN (Bit 19)                                       */
#define GDT_GDTCR_CSYNEN_Msk              (0x80000UL)               /*!< CSYNEN (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_MBRDEN_Pos              (18UL)                    /*!< MBRDEN (Bit 18)                                       */
#define GDT_GDTCR_MBRDEN_Msk              (0x40000UL)               /*!< MBRDEN (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_MPCS_Pos                (17UL)                    /*!< MPCS (Bit 17)                                         */
#define GDT_GDTCR_MPCS_Msk                (0x20000UL)               /*!< MPCS (Bitfield-Mask: 0x01)                            */
#define GDT_GDTCR_MSYNEN_Pos              (16UL)                    /*!< MSYNEN (Bit 16)                                       */
#define GDT_GDTCR_MSYNEN_Msk              (0x10000UL)               /*!< MSYNEN (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_ISCREN_Pos              (13UL)                    /*!< ISCREN (Bit 13)                                       */
#define GDT_GDTCR_ISCREN_Msk              (0xe000UL)                /*!< ISCREN (Bitfield-Mask: 0x07)                          */
#define GDT_GDTCR_RTTFC_Pos               (11UL)                    /*!< RTTFC (Bit 11)                                        */
#define GDT_GDTCR_RTTFC_Msk               (0x1800UL)                /*!< RTTFC (Bitfield-Mask: 0x03)                           */
#define GDT_GDTCR_RTTEN_Pos               (10UL)                    /*!< RTTEN (Bit 10)                                        */
#define GDT_GDTCR_RTTEN_Msk               (0x400UL)                 /*!< RTTEN (Bitfield-Mask: 0x01)                           */
#define GDT_GDTCR_CIALGSL_Pos             (9UL)                     /*!< CIALGSL (Bit 9)                                       */
#define GDT_GDTCR_CIALGSL_Msk             (0x200UL)                 /*!< CIALGSL (Bitfield-Mask: 0x01)                         */
#define GDT_GDTCR_CIALGEN_Pos             (8UL)                     /*!< CIALGEN (Bit 8)                                       */
#define GDT_GDTCR_CIALGEN_Msk             (0x100UL)                 /*!< CIALGEN (Bitfield-Mask: 0x01)                         */
#define GDT_GDTCR_ENDIAN_Pos              (7UL)                     /*!< ENDIAN (Bit 7)                                        */
#define GDT_GDTCR_ENDIAN_Msk              (0x80UL)                  /*!< ENDIAN (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_GDTDSZ_Pos              (5UL)                     /*!< GDTDSZ (Bit 5)                                        */
#define GDT_GDTCR_GDTDSZ_Msk              (0x20UL)                  /*!< GDTDSZ (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_IFLPEN_Pos              (4UL)                     /*!< IFLPEN (Bit 4)                                        */
#define GDT_GDTCR_IFLPEN_Msk              (0x10UL)                  /*!< IFLPEN (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_GDTSTART_Pos            (0UL)                     /*!< GDTSTART (Bit 0)                                      */
#define GDT_GDTCR_GDTSTART_Msk            (0x1UL)                   /*!< GDTSTART (Bitfield-Mask: 0x01)                        */
/* ========================================================  GDTSCR  ========================================================= */
#define GDT_GDTSCR_SHRNKNUM_Pos           (24UL)                    /*!< SHRNKNUM (Bit 24)                                     */
#define GDT_GDTSCR_SHRNKNUM_Msk           (0x7000000UL)             /*!< SHRNKNUM (Bitfield-Mask: 0x07)                        */
#define GDT_GDTSCR_SBCS_Pos               (16UL)                    /*!< SBCS (Bit 16)                                         */
#define GDT_GDTSCR_SBCS_Msk               (0x10000UL)               /*!< SBCS (Bitfield-Mask: 0x01)                            */
#define GDT_GDTSCR_SHRNKSZ_Pos            (8UL)                     /*!< SHRNKSZ (Bit 8)                                       */
#define GDT_GDTSCR_SHRNKSZ_Msk            (0x700UL)                 /*!< SHRNKSZ (Bitfield-Mask: 0x07)                         */
#define GDT_GDTSCR_SHRNKEN_Pos            (0UL)                     /*!< SHRNKEN (Bit 0)                                       */
#define GDT_GDTSCR_SHRNKEN_Msk            (0x1UL)                   /*!< SHRNKEN (Bitfield-Mask: 0x01)                         */
/* ========================================================  GDTFDCS  ======================================================== */
#define GDT_GDTFDCS_FDLNGSZ_Pos           (24UL)                    /*!< FDLNGSZ (Bit 24)                                      */
#define GDT_GDTFDCS_FDLNGSZ_Msk           (0x7f000000UL)            /*!< FDLNGSZ (Bitfield-Mask: 0x7f)                         */
#define GDT_GDTFDCS_FDLTDSZ_Pos           (16UL)                    /*!< FDLTDSZ (Bit 16)                                      */
#define GDT_GDTFDCS_FDLTDSZ_Msk           (0x3f0000UL)              /*!< FDLTDSZ (Bitfield-Mask: 0x3f)                         */
#define GDT_GDTFDCS_FDIR_Pos              (8UL)                     /*!< FDIR (Bit 8)                                          */
#define GDT_GDTFDCS_FDIR_Msk              (0x3f00UL)                /*!< FDIR (Bitfield-Mask: 0x3f)                            */
#define GDT_GDTFDCS_FDHAD_Pos             (7UL)                     /*!< FDHAD (Bit 7)                                         */
#define GDT_GDTFDCS_FDHAD_Msk             (0x80UL)                  /*!< FDHAD (Bitfield-Mask: 0x01)                           */
#define GDT_GDTFDCS_SAC_Pos               (4UL)                     /*!< SAC (Bit 4)                                           */
#define GDT_GDTFDCS_SAC_Msk               (0x70UL)                  /*!< SAC (Bitfield-Mask: 0x07)                             */
#define GDT_GDTFDCS_FDCEN_Pos             (0UL)                     /*!< FDCEN (Bit 0)                                         */
#define GDT_GDTFDCS_FDCEN_Msk             (0x1UL)                   /*!< FDCEN (Bitfield-Mask: 0x01)                           */
/* ========================================================  GDTPIER  ======================================================== */
#define GDT_GDTPIER_INTMODE_Pos           (7UL)                     /*!< INTMODE (Bit 7)                                       */
#define GDT_GDTPIER_INTMODE_Msk           (0x80UL)                  /*!< INTMODE (Bitfield-Mask: 0x01)                         */
#define GDT_GDTPIER_FDCENDIE_Pos          (2UL)                     /*!< FDCENDIE (Bit 2)                                      */
#define GDT_GDTPIER_FDCENDIE_Msk          (0x4UL)                   /*!< FDCENDIE (Bitfield-Mask: 0x01)                        */
#define GDT_GDTPIER_DATOIE_Pos            (1UL)                     /*!< DATOIE (Bit 1)                                        */
#define GDT_GDTPIER_DATOIE_Msk            (0x2UL)                   /*!< DATOIE (Bitfield-Mask: 0x01)                          */
#define GDT_GDTPIER_DATIIE_Pos            (0UL)                     /*!< DATIIE (Bit 0)                                        */
#define GDT_GDTPIER_DATIIE_Msk            (0x1UL)                   /*!< DATIIE (Bitfield-Mask: 0x01)                          */
/* =======================================================  GDTIBUF0  ======================================================== */
#define GDT_GDTIBUF0_GDTIBUF_Pos          (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF0_GDTIBUF_Msk          (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF1  ======================================================== */
#define GDT_GDTIBUF1_GDTIBUF_Pos          (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF1_GDTIBUF_Msk          (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF2  ======================================================== */
#define GDT_GDTIBUF2_GDTIBUF_Pos          (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF2_GDTIBUF_Msk          (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF3  ======================================================== */
#define GDT_GDTIBUF3_GDTIBUF_Pos          (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF3_GDTIBUF_Msk          (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF4  ======================================================== */
#define GDT_GDTIBUF4_GDTIBUF_Pos          (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF4_GDTIBUF_Msk          (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF5  ======================================================== */
#define GDT_GDTIBUF5_GDTIBUF_Pos          (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF5_GDTIBUF_Msk          (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF6  ======================================================== */
#define GDT_GDTIBUF6_GDTIBUF_Pos          (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF6_GDTIBUF_Msk          (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF7  ======================================================== */
#define GDT_GDTIBUF7_GDTIBUF_Pos          (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF7_GDTIBUF_Msk          (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF8  ======================================================== */
#define GDT_GDTIBUF8_GDTIBUF_Pos          (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF8_GDTIBUF_Msk          (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF9  ======================================================== */
#define GDT_GDTIBUF9_GDTIBUF_Pos          (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF9_GDTIBUF_Msk          (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF10  ======================================================= */
#define GDT_GDTIBUF10_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF10_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF11  ======================================================= */
#define GDT_GDTIBUF11_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF11_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF12  ======================================================= */
#define GDT_GDTIBUF12_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF12_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF13  ======================================================= */
#define GDT_GDTIBUF13_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF13_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF14  ======================================================= */
#define GDT_GDTIBUF14_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF14_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF15  ======================================================= */
#define GDT_GDTIBUF15_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF15_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF16  ======================================================= */
#define GDT_GDTIBUF16_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF16_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF17  ======================================================= */
#define GDT_GDTIBUF17_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF17_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF18  ======================================================= */
#define GDT_GDTIBUF18_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF18_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF19  ======================================================= */
#define GDT_GDTIBUF19_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF19_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF20  ======================================================= */
#define GDT_GDTIBUF20_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF20_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF21  ======================================================= */
#define GDT_GDTIBUF21_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF21_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF22  ======================================================= */
#define GDT_GDTIBUF22_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF22_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF23  ======================================================= */
#define GDT_GDTIBUF23_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF23_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF24  ======================================================= */
#define GDT_GDTIBUF24_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF24_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF25  ======================================================= */
#define GDT_GDTIBUF25_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF25_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF26  ======================================================= */
#define GDT_GDTIBUF26_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF26_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF27  ======================================================= */
#define GDT_GDTIBUF27_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF27_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF28  ======================================================= */
#define GDT_GDTIBUF28_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF28_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF29  ======================================================= */
#define GDT_GDTIBUF29_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF29_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF30  ======================================================= */
#define GDT_GDTIBUF30_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF30_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF31  ======================================================= */
#define GDT_GDTIBUF31_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF31_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF32  ======================================================= */
#define GDT_GDTIBUF32_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF32_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF33  ======================================================= */
#define GDT_GDTIBUF33_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF33_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF34  ======================================================= */
#define GDT_GDTIBUF34_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF34_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF35  ======================================================= */
#define GDT_GDTIBUF35_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF35_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF36  ======================================================= */
#define GDT_GDTIBUF36_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF36_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF37  ======================================================= */
#define GDT_GDTIBUF37_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF37_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF38  ======================================================= */
#define GDT_GDTIBUF38_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF38_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF39  ======================================================= */
#define GDT_GDTIBUF39_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF39_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF40  ======================================================= */
#define GDT_GDTIBUF40_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF40_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF41  ======================================================= */
#define GDT_GDTIBUF41_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF41_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF42  ======================================================= */
#define GDT_GDTIBUF42_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF42_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF43  ======================================================= */
#define GDT_GDTIBUF43_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF43_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF44  ======================================================= */
#define GDT_GDTIBUF44_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF44_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF45  ======================================================= */
#define GDT_GDTIBUF45_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF45_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF46  ======================================================= */
#define GDT_GDTIBUF46_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF46_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTIBUF47  ======================================================= */
#define GDT_GDTIBUF47_GDTIBUF_Pos         (0UL)                     /*!< GDTIBUF (Bit 0)                                       */
#define GDT_GDTIBUF47_GDTIBUF_Msk         (0xffffffffUL)            /*!< GDTIBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF0  ======================================================== */
#define GDT_GDTOBUF0_GDTOBUF_Pos          (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF0_GDTOBUF_Msk          (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF1  ======================================================== */
#define GDT_GDTOBUF1_GDTOBUF_Pos          (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF1_GDTOBUF_Msk          (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF2  ======================================================== */
#define GDT_GDTOBUF2_GDTOBUF_Pos          (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF2_GDTOBUF_Msk          (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF3  ======================================================== */
#define GDT_GDTOBUF3_GDTOBUF_Pos          (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF3_GDTOBUF_Msk          (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF4  ======================================================== */
#define GDT_GDTOBUF4_GDTOBUF_Pos          (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF4_GDTOBUF_Msk          (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF5  ======================================================== */
#define GDT_GDTOBUF5_GDTOBUF_Pos          (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF5_GDTOBUF_Msk          (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF6  ======================================================== */
#define GDT_GDTOBUF6_GDTOBUF_Pos          (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF6_GDTOBUF_Msk          (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF7  ======================================================== */
#define GDT_GDTOBUF7_GDTOBUF_Pos          (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF7_GDTOBUF_Msk          (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF8  ======================================================== */
#define GDT_GDTOBUF8_GDTOBUF_Pos          (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF8_GDTOBUF_Msk          (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF9  ======================================================== */
#define GDT_GDTOBUF9_GDTOBUF_Pos          (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF9_GDTOBUF_Msk          (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF10  ======================================================= */
#define GDT_GDTOBUF10_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF10_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF11  ======================================================= */
#define GDT_GDTOBUF11_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF11_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF12  ======================================================= */
#define GDT_GDTOBUF12_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF12_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF13  ======================================================= */
#define GDT_GDTOBUF13_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF13_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF14  ======================================================= */
#define GDT_GDTOBUF14_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF14_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF15  ======================================================= */
#define GDT_GDTOBUF15_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF15_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF16  ======================================================= */
#define GDT_GDTOBUF16_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF16_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF17  ======================================================= */
#define GDT_GDTOBUF17_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF17_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF18  ======================================================= */
#define GDT_GDTOBUF18_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF18_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF19  ======================================================= */
#define GDT_GDTOBUF19_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF19_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF20  ======================================================= */
#define GDT_GDTOBUF20_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF20_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF21  ======================================================= */
#define GDT_GDTOBUF21_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF21_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF22  ======================================================= */
#define GDT_GDTOBUF22_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF22_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF23  ======================================================= */
#define GDT_GDTOBUF23_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF23_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF24  ======================================================= */
#define GDT_GDTOBUF24_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF24_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF25  ======================================================= */
#define GDT_GDTOBUF25_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF25_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF26  ======================================================= */
#define GDT_GDTOBUF26_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF26_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF27  ======================================================= */
#define GDT_GDTOBUF27_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF27_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF28  ======================================================= */
#define GDT_GDTOBUF28_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF28_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF29  ======================================================= */
#define GDT_GDTOBUF29_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF29_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF30  ======================================================= */
#define GDT_GDTOBUF30_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF30_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  GDTOBUF31  ======================================================= */
#define GDT_GDTOBUF31_GDTOBUF_Pos         (0UL)                     /*!< GDTOBUF (Bit 0)                                       */
#define GDT_GDTOBUF31_GDTOBUF_Msk         (0xffffffffUL)            /*!< GDTOBUF (Bitfield-Mask: 0xffffffff)                   */


/* =========================================================================================================================== */
/* ================                                          GPT162                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  GTWP  ========================================================== */
#define GPT162_GTWP_PRKEY_Pos             (8UL)                     /*!< PRKEY (Bit 8)                                         */
#define GPT162_GTWP_PRKEY_Msk             (0xff00UL)                /*!< PRKEY (Bitfield-Mask: 0xff)                           */
#define GPT162_GTWP_WP_Pos                (0UL)                     /*!< WP (Bit 0)                                            */
#define GPT162_GTWP_WP_Msk                (0x1UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
/* =========================================================  GTSTR  ========================================================= */
#define GPT162_GTSTR_CSTRT5_Pos           (5UL)                     /*!< CSTRT5 (Bit 5)                                        */
#define GPT162_GTSTR_CSTRT5_Msk           (0x20UL)                  /*!< CSTRT5 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTR_CSTRT4_Pos           (4UL)                     /*!< CSTRT4 (Bit 4)                                        */
#define GPT162_GTSTR_CSTRT4_Msk           (0x10UL)                  /*!< CSTRT4 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTR_CSTRT3_Pos           (3UL)                     /*!< CSTRT3 (Bit 3)                                        */
#define GPT162_GTSTR_CSTRT3_Msk           (0x8UL)                   /*!< CSTRT3 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTR_CSTRT2_Pos           (2UL)                     /*!< CSTRT2 (Bit 2)                                        */
#define GPT162_GTSTR_CSTRT2_Msk           (0x4UL)                   /*!< CSTRT2 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTR_CSTRT1_Pos           (1UL)                     /*!< CSTRT1 (Bit 1)                                        */
#define GPT162_GTSTR_CSTRT1_Msk           (0x2UL)                   /*!< CSTRT1 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTR_CSTRT0_Pos           (0UL)                     /*!< CSTRT0 (Bit 0)                                        */
#define GPT162_GTSTR_CSTRT0_Msk           (0x1UL)                   /*!< CSTRT0 (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTSTP  ========================================================= */
#define GPT162_GTSTP_CSTOP5_Pos           (5UL)                     /*!< CSTOP5 (Bit 5)                                        */
#define GPT162_GTSTP_CSTOP5_Msk           (0x20UL)                  /*!< CSTOP5 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTP_CSTOP4_Pos           (4UL)                     /*!< CSTOP4 (Bit 4)                                        */
#define GPT162_GTSTP_CSTOP4_Msk           (0x10UL)                  /*!< CSTOP4 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTP_CSTOP3_Pos           (3UL)                     /*!< CSTOP3 (Bit 3)                                        */
#define GPT162_GTSTP_CSTOP3_Msk           (0x8UL)                   /*!< CSTOP3 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTP_CSTOP2_Pos           (2UL)                     /*!< CSTOP2 (Bit 2)                                        */
#define GPT162_GTSTP_CSTOP2_Msk           (0x4UL)                   /*!< CSTOP2 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTP_CSTOP1_Pos           (1UL)                     /*!< CSTOP1 (Bit 1)                                        */
#define GPT162_GTSTP_CSTOP1_Msk           (0x2UL)                   /*!< CSTOP1 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTP_CSTOP0_Pos           (0UL)                     /*!< CSTOP0 (Bit 0)                                        */
#define GPT162_GTSTP_CSTOP0_Msk           (0x1UL)                   /*!< CSTOP0 (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTCLR  ========================================================= */
#define GPT162_GTCLR_CCLR5_Pos            (5UL)                     /*!< CCLR5 (Bit 5)                                         */
#define GPT162_GTCLR_CCLR5_Msk            (0x20UL)                  /*!< CCLR5 (Bitfield-Mask: 0x01)                           */
#define GPT162_GTCLR_CCLR4_Pos            (4UL)                     /*!< CCLR4 (Bit 4)                                         */
#define GPT162_GTCLR_CCLR4_Msk            (0x10UL)                  /*!< CCLR4 (Bitfield-Mask: 0x01)                           */
#define GPT162_GTCLR_CCLR3_Pos            (3UL)                     /*!< CCLR3 (Bit 3)                                         */
#define GPT162_GTCLR_CCLR3_Msk            (0x8UL)                   /*!< CCLR3 (Bitfield-Mask: 0x01)                           */
#define GPT162_GTCLR_CCLR2_Pos            (2UL)                     /*!< CCLR2 (Bit 2)                                         */
#define GPT162_GTCLR_CCLR2_Msk            (0x4UL)                   /*!< CCLR2 (Bitfield-Mask: 0x01)                           */
#define GPT162_GTCLR_CCLR1_Pos            (1UL)                     /*!< CCLR1 (Bit 1)                                         */
#define GPT162_GTCLR_CCLR1_Msk            (0x2UL)                   /*!< CCLR1 (Bitfield-Mask: 0x01)                           */
#define GPT162_GTCLR_CCLR0_Pos            (0UL)                     /*!< CCLR0 (Bit 0)                                         */
#define GPT162_GTCLR_CCLR0_Msk            (0x1UL)                   /*!< CCLR0 (Bitfield-Mask: 0x01)                           */
/* =========================================================  GTSSR  ========================================================= */
#define GPT162_GTSSR_CSTRT_Pos            (31UL)                    /*!< CSTRT (Bit 31)                                        */
#define GPT162_GTSSR_CSTRT_Msk            (0x80000000UL)            /*!< CSTRT (Bitfield-Mask: 0x01)                           */
#define GPT162_GTSSR_SSELCD_Pos           (19UL)                    /*!< SSELCD (Bit 19)                                       */
#define GPT162_GTSSR_SSELCD_Msk           (0x80000UL)               /*!< SSELCD (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSSR_SSELCC_Pos           (18UL)                    /*!< SSELCC (Bit 18)                                       */
#define GPT162_GTSSR_SSELCC_Msk           (0x40000UL)               /*!< SSELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSSR_SSELCB_Pos           (17UL)                    /*!< SSELCB (Bit 17)                                       */
#define GPT162_GTSSR_SSELCB_Msk           (0x20000UL)               /*!< SSELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSSR_SSELCA_Pos           (16UL)                    /*!< SSELCA (Bit 16)                                       */
#define GPT162_GTSSR_SSELCA_Msk           (0x10000UL)               /*!< SSELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSSR_SSCBFAH_Pos          (15UL)                    /*!< SSCBFAH (Bit 15)                                      */
#define GPT162_GTSSR_SSCBFAH_Msk          (0x8000UL)                /*!< SSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCBFAL_Pos          (14UL)                    /*!< SSCBFAL (Bit 14)                                      */
#define GPT162_GTSSR_SSCBFAL_Msk          (0x4000UL)                /*!< SSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCBRAH_Pos          (13UL)                    /*!< SSCBRAH (Bit 13)                                      */
#define GPT162_GTSSR_SSCBRAH_Msk          (0x2000UL)                /*!< SSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCBRAL_Pos          (12UL)                    /*!< SSCBRAL (Bit 12)                                      */
#define GPT162_GTSSR_SSCBRAL_Msk          (0x1000UL)                /*!< SSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCAFBH_Pos          (11UL)                    /*!< SSCAFBH (Bit 11)                                      */
#define GPT162_GTSSR_SSCAFBH_Msk          (0x800UL)                 /*!< SSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCAFBL_Pos          (10UL)                    /*!< SSCAFBL (Bit 10)                                      */
#define GPT162_GTSSR_SSCAFBL_Msk          (0x400UL)                 /*!< SSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCARBH_Pos          (9UL)                     /*!< SSCARBH (Bit 9)                                       */
#define GPT162_GTSSR_SSCARBH_Msk          (0x200UL)                 /*!< SSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCARBL_Pos          (8UL)                     /*!< SSCARBL (Bit 8)                                       */
#define GPT162_GTSSR_SSCARBL_Msk          (0x100UL)                 /*!< SSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSGTRGBF_Pos         (3UL)                     /*!< SSGTRGBF (Bit 3)                                      */
#define GPT162_GTSSR_SSGTRGBF_Msk         (0x8UL)                   /*!< SSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTSSR_SSGTRGBR_Pos         (2UL)                     /*!< SSGTRGBR (Bit 2)                                      */
#define GPT162_GTSSR_SSGTRGBR_Msk         (0x4UL)                   /*!< SSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTSSR_SSGTRGAF_Pos         (1UL)                     /*!< SSGTRGAF (Bit 1)                                      */
#define GPT162_GTSSR_SSGTRGAF_Msk         (0x2UL)                   /*!< SSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTSSR_SSGTRGAR_Pos         (0UL)                     /*!< SSGTRGAR (Bit 0)                                      */
#define GPT162_GTSSR_SSGTRGAR_Msk         (0x1UL)                   /*!< SSGTRGAR (Bitfield-Mask: 0x01)                        */
/* =========================================================  GTPSR  ========================================================= */
#define GPT162_GTPSR_CSTOP_Pos            (31UL)                    /*!< CSTOP (Bit 31)                                        */
#define GPT162_GTPSR_CSTOP_Msk            (0x80000000UL)            /*!< CSTOP (Bitfield-Mask: 0x01)                           */
#define GPT162_GTPSR_PSELCD_Pos           (19UL)                    /*!< PSELCD (Bit 19)                                       */
#define GPT162_GTPSR_PSELCD_Msk           (0x80000UL)               /*!< PSELCD (Bitfield-Mask: 0x01)                          */
#define GPT162_GTPSR_PSELCC_Pos           (18UL)                    /*!< PSELCC (Bit 18)                                       */
#define GPT162_GTPSR_PSELCC_Msk           (0x40000UL)               /*!< PSELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTPSR_PSELCB_Pos           (17UL)                    /*!< PSELCB (Bit 17)                                       */
#define GPT162_GTPSR_PSELCB_Msk           (0x20000UL)               /*!< PSELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTPSR_PSELCA_Pos           (16UL)                    /*!< PSELCA (Bit 16)                                       */
#define GPT162_GTPSR_PSELCA_Msk           (0x10000UL)               /*!< PSELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTPSR_PSCBFAH_Pos          (15UL)                    /*!< PSCBFAH (Bit 15)                                      */
#define GPT162_GTPSR_PSCBFAH_Msk          (0x8000UL)                /*!< PSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCBFAL_Pos          (14UL)                    /*!< PSCBFAL (Bit 14)                                      */
#define GPT162_GTPSR_PSCBFAL_Msk          (0x4000UL)                /*!< PSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCBRAH_Pos          (13UL)                    /*!< PSCBRAH (Bit 13)                                      */
#define GPT162_GTPSR_PSCBRAH_Msk          (0x2000UL)                /*!< PSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCBRAL_Pos          (12UL)                    /*!< PSCBRAL (Bit 12)                                      */
#define GPT162_GTPSR_PSCBRAL_Msk          (0x1000UL)                /*!< PSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCAFBH_Pos          (11UL)                    /*!< PSCAFBH (Bit 11)                                      */
#define GPT162_GTPSR_PSCAFBH_Msk          (0x800UL)                 /*!< PSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCAFBL_Pos          (10UL)                    /*!< PSCAFBL (Bit 10)                                      */
#define GPT162_GTPSR_PSCAFBL_Msk          (0x400UL)                 /*!< PSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCARBH_Pos          (9UL)                     /*!< PSCARBH (Bit 9)                                       */
#define GPT162_GTPSR_PSCARBH_Msk          (0x200UL)                 /*!< PSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCARBL_Pos          (8UL)                     /*!< PSCARBL (Bit 8)                                       */
#define GPT162_GTPSR_PSCARBL_Msk          (0x100UL)                 /*!< PSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSGTRGBF_Pos         (3UL)                     /*!< PSGTRGBF (Bit 3)                                      */
#define GPT162_GTPSR_PSGTRGBF_Msk         (0x8UL)                   /*!< PSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTPSR_PSGTRGBR_Pos         (2UL)                     /*!< PSGTRGBR (Bit 2)                                      */
#define GPT162_GTPSR_PSGTRGBR_Msk         (0x4UL)                   /*!< PSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTPSR_PSGTRGAF_Pos         (1UL)                     /*!< PSGTRGAF (Bit 1)                                      */
#define GPT162_GTPSR_PSGTRGAF_Msk         (0x2UL)                   /*!< PSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTPSR_PSGTRGAR_Pos         (0UL)                     /*!< PSGTRGAR (Bit 0)                                      */
#define GPT162_GTPSR_PSGTRGAR_Msk         (0x1UL)                   /*!< PSGTRGAR (Bitfield-Mask: 0x01)                        */
/* =========================================================  GTCSR  ========================================================= */
#define GPT162_GTCSR_CCLR_Pos             (31UL)                    /*!< CCLR (Bit 31)                                         */
#define GPT162_GTCSR_CCLR_Msk             (0x80000000UL)            /*!< CCLR (Bitfield-Mask: 0x01)                            */
#define GPT162_GTCSR_CSELCD_Pos           (19UL)                    /*!< CSELCD (Bit 19)                                       */
#define GPT162_GTCSR_CSELCD_Msk           (0x80000UL)               /*!< CSELCD (Bitfield-Mask: 0x01)                          */
#define GPT162_GTCSR_CSELCC_Pos           (18UL)                    /*!< CSELCC (Bit 18)                                       */
#define GPT162_GTCSR_CSELCC_Msk           (0x40000UL)               /*!< CSELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTCSR_CSELCB_Pos           (17UL)                    /*!< CSELCB (Bit 17)                                       */
#define GPT162_GTCSR_CSELCB_Msk           (0x20000UL)               /*!< CSELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTCSR_CSELCA_Pos           (16UL)                    /*!< CSELCA (Bit 16)                                       */
#define GPT162_GTCSR_CSELCA_Msk           (0x10000UL)               /*!< CSELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTCSR_CSCBFAH_Pos          (15UL)                    /*!< CSCBFAH (Bit 15)                                      */
#define GPT162_GTCSR_CSCBFAH_Msk          (0x8000UL)                /*!< CSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCBFAL_Pos          (14UL)                    /*!< CSCBFAL (Bit 14)                                      */
#define GPT162_GTCSR_CSCBFAL_Msk          (0x4000UL)                /*!< CSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCBRAH_Pos          (13UL)                    /*!< CSCBRAH (Bit 13)                                      */
#define GPT162_GTCSR_CSCBRAH_Msk          (0x2000UL)                /*!< CSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCBRAL_Pos          (12UL)                    /*!< CSCBRAL (Bit 12)                                      */
#define GPT162_GTCSR_CSCBRAL_Msk          (0x1000UL)                /*!< CSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCAFBH_Pos          (11UL)                    /*!< CSCAFBH (Bit 11)                                      */
#define GPT162_GTCSR_CSCAFBH_Msk          (0x800UL)                 /*!< CSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCAFBL_Pos          (10UL)                    /*!< CSCAFBL (Bit 10)                                      */
#define GPT162_GTCSR_CSCAFBL_Msk          (0x400UL)                 /*!< CSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCARBH_Pos          (9UL)                     /*!< CSCARBH (Bit 9)                                       */
#define GPT162_GTCSR_CSCARBH_Msk          (0x200UL)                 /*!< CSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCARBL_Pos          (8UL)                     /*!< CSCARBL (Bit 8)                                       */
#define GPT162_GTCSR_CSCARBL_Msk          (0x100UL)                 /*!< CSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSGTRGBF_Pos         (3UL)                     /*!< CSGTRGBF (Bit 3)                                      */
#define GPT162_GTCSR_CSGTRGBF_Msk         (0x8UL)                   /*!< CSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTCSR_CSGTRGBR_Pos         (2UL)                     /*!< CSGTRGBR (Bit 2)                                      */
#define GPT162_GTCSR_CSGTRGBR_Msk         (0x4UL)                   /*!< CSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTCSR_CSGTRGAF_Pos         (1UL)                     /*!< CSGTRGAF (Bit 1)                                      */
#define GPT162_GTCSR_CSGTRGAF_Msk         (0x2UL)                   /*!< CSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTCSR_CSGTRGAR_Pos         (0UL)                     /*!< CSGTRGAR (Bit 0)                                      */
#define GPT162_GTCSR_CSGTRGAR_Msk         (0x1UL)                   /*!< CSGTRGAR (Bitfield-Mask: 0x01)                        */
/* ========================================================  GTUPSR  ========================================================= */
#define GPT162_GTUPSR_USELCD_Pos          (19UL)                    /*!< USELCD (Bit 19)                                       */
#define GPT162_GTUPSR_USELCD_Msk          (0x80000UL)               /*!< USELCD (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUPSR_USELCC_Pos          (18UL)                    /*!< USELCC (Bit 18)                                       */
#define GPT162_GTUPSR_USELCC_Msk          (0x40000UL)               /*!< USELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUPSR_USELCB_Pos          (17UL)                    /*!< USELCB (Bit 17)                                       */
#define GPT162_GTUPSR_USELCB_Msk          (0x20000UL)               /*!< USELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUPSR_USELCA_Pos          (16UL)                    /*!< USELCA (Bit 16)                                       */
#define GPT162_GTUPSR_USELCA_Msk          (0x10000UL)               /*!< USELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUPSR_USCBFAH_Pos         (15UL)                    /*!< USCBFAH (Bit 15)                                      */
#define GPT162_GTUPSR_USCBFAH_Msk         (0x8000UL)                /*!< USCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCBFAL_Pos         (14UL)                    /*!< USCBFAL (Bit 14)                                      */
#define GPT162_GTUPSR_USCBFAL_Msk         (0x4000UL)                /*!< USCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCBRAH_Pos         (13UL)                    /*!< USCBRAH (Bit 13)                                      */
#define GPT162_GTUPSR_USCBRAH_Msk         (0x2000UL)                /*!< USCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCBRAL_Pos         (12UL)                    /*!< USCBRAL (Bit 12)                                      */
#define GPT162_GTUPSR_USCBRAL_Msk         (0x1000UL)                /*!< USCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCAFBH_Pos         (11UL)                    /*!< USCAFBH (Bit 11)                                      */
#define GPT162_GTUPSR_USCAFBH_Msk         (0x800UL)                 /*!< USCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCAFBL_Pos         (10UL)                    /*!< USCAFBL (Bit 10)                                      */
#define GPT162_GTUPSR_USCAFBL_Msk         (0x400UL)                 /*!< USCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCARBH_Pos         (9UL)                     /*!< USCARBH (Bit 9)                                       */
#define GPT162_GTUPSR_USCARBH_Msk         (0x200UL)                 /*!< USCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCARBL_Pos         (8UL)                     /*!< USCARBL (Bit 8)                                       */
#define GPT162_GTUPSR_USCARBL_Msk         (0x100UL)                 /*!< USCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USGTRGBF_Pos        (3UL)                     /*!< USGTRGBF (Bit 3)                                      */
#define GPT162_GTUPSR_USGTRGBF_Msk        (0x8UL)                   /*!< USGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTUPSR_USGTRGBR_Pos        (2UL)                     /*!< USGTRGBR (Bit 2)                                      */
#define GPT162_GTUPSR_USGTRGBR_Msk        (0x4UL)                   /*!< USGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTUPSR_USGTRGAF_Pos        (1UL)                     /*!< USGTRGAF (Bit 1)                                      */
#define GPT162_GTUPSR_USGTRGAF_Msk        (0x2UL)                   /*!< USGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTUPSR_USGTRGAR_Pos        (0UL)                     /*!< USGTRGAR (Bit 0)                                      */
#define GPT162_GTUPSR_USGTRGAR_Msk        (0x1UL)                   /*!< USGTRGAR (Bitfield-Mask: 0x01)                        */
/* ========================================================  GTDNSR  ========================================================= */
#define GPT162_GTDNSR_DSELCD_Pos          (19UL)                    /*!< DSELCD (Bit 19)                                       */
#define GPT162_GTDNSR_DSELCD_Msk          (0x80000UL)               /*!< DSELCD (Bitfield-Mask: 0x01)                          */
#define GPT162_GTDNSR_DSELCC_Pos          (18UL)                    /*!< DSELCC (Bit 18)                                       */
#define GPT162_GTDNSR_DSELCC_Msk          (0x40000UL)               /*!< DSELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTDNSR_DSELCB_Pos          (17UL)                    /*!< DSELCB (Bit 17)                                       */
#define GPT162_GTDNSR_DSELCB_Msk          (0x20000UL)               /*!< DSELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTDNSR_DSELCA_Pos          (16UL)                    /*!< DSELCA (Bit 16)                                       */
#define GPT162_GTDNSR_DSELCA_Msk          (0x10000UL)               /*!< DSELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTDNSR_DSCBFAH_Pos         (15UL)                    /*!< DSCBFAH (Bit 15)                                      */
#define GPT162_GTDNSR_DSCBFAH_Msk         (0x8000UL)                /*!< DSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCBFAL_Pos         (14UL)                    /*!< DSCBFAL (Bit 14)                                      */
#define GPT162_GTDNSR_DSCBFAL_Msk         (0x4000UL)                /*!< DSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCBRAH_Pos         (13UL)                    /*!< DSCBRAH (Bit 13)                                      */
#define GPT162_GTDNSR_DSCBRAH_Msk         (0x2000UL)                /*!< DSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCBRAL_Pos         (12UL)                    /*!< DSCBRAL (Bit 12)                                      */
#define GPT162_GTDNSR_DSCBRAL_Msk         (0x1000UL)                /*!< DSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCAFBH_Pos         (11UL)                    /*!< DSCAFBH (Bit 11)                                      */
#define GPT162_GTDNSR_DSCAFBH_Msk         (0x800UL)                 /*!< DSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCAFBL_Pos         (10UL)                    /*!< DSCAFBL (Bit 10)                                      */
#define GPT162_GTDNSR_DSCAFBL_Msk         (0x400UL)                 /*!< DSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCARBH_Pos         (9UL)                     /*!< DSCARBH (Bit 9)                                       */
#define GPT162_GTDNSR_DSCARBH_Msk         (0x200UL)                 /*!< DSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCARBL_Pos         (8UL)                     /*!< DSCARBL (Bit 8)                                       */
#define GPT162_GTDNSR_DSCARBL_Msk         (0x100UL)                 /*!< DSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSGTRGBF_Pos        (3UL)                     /*!< DSGTRGBF (Bit 3)                                      */
#define GPT162_GTDNSR_DSGTRGBF_Msk        (0x8UL)                   /*!< DSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTDNSR_DSGTRGBR_Pos        (2UL)                     /*!< DSGTRGBR (Bit 2)                                      */
#define GPT162_GTDNSR_DSGTRGBR_Msk        (0x4UL)                   /*!< DSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTDNSR_DSGTRGAF_Pos        (1UL)                     /*!< DSGTRGAF (Bit 1)                                      */
#define GPT162_GTDNSR_DSGTRGAF_Msk        (0x2UL)                   /*!< DSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTDNSR_DSGTRGAR_Pos        (0UL)                     /*!< DSGTRGAR (Bit 0)                                      */
#define GPT162_GTDNSR_DSGTRGAR_Msk        (0x1UL)                   /*!< DSGTRGAR (Bitfield-Mask: 0x01)                        */
/* ========================================================  GTICASR  ======================================================== */
#define GPT162_GTICASR_ASELCD_Pos         (19UL)                    /*!< ASELCD (Bit 19)                                       */
#define GPT162_GTICASR_ASELCD_Msk         (0x80000UL)               /*!< ASELCD (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICASR_ASELCC_Pos         (18UL)                    /*!< ASELCC (Bit 18)                                       */
#define GPT162_GTICASR_ASELCC_Msk         (0x40000UL)               /*!< ASELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICASR_ASELCB_Pos         (17UL)                    /*!< ASELCB (Bit 17)                                       */
#define GPT162_GTICASR_ASELCB_Msk         (0x20000UL)               /*!< ASELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICASR_ASELCA_Pos         (16UL)                    /*!< ASELCA (Bit 16)                                       */
#define GPT162_GTICASR_ASELCA_Msk         (0x10000UL)               /*!< ASELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICASR_ASCBFAH_Pos        (15UL)                    /*!< ASCBFAH (Bit 15)                                      */
#define GPT162_GTICASR_ASCBFAH_Msk        (0x8000UL)                /*!< ASCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCBFAL_Pos        (14UL)                    /*!< ASCBFAL (Bit 14)                                      */
#define GPT162_GTICASR_ASCBFAL_Msk        (0x4000UL)                /*!< ASCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCBRAH_Pos        (13UL)                    /*!< ASCBRAH (Bit 13)                                      */
#define GPT162_GTICASR_ASCBRAH_Msk        (0x2000UL)                /*!< ASCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCBRAL_Pos        (12UL)                    /*!< ASCBRAL (Bit 12)                                      */
#define GPT162_GTICASR_ASCBRAL_Msk        (0x1000UL)                /*!< ASCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCAFBH_Pos        (11UL)                    /*!< ASCAFBH (Bit 11)                                      */
#define GPT162_GTICASR_ASCAFBH_Msk        (0x800UL)                 /*!< ASCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCAFBL_Pos        (10UL)                    /*!< ASCAFBL (Bit 10)                                      */
#define GPT162_GTICASR_ASCAFBL_Msk        (0x400UL)                 /*!< ASCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCARBH_Pos        (9UL)                     /*!< ASCARBH (Bit 9)                                       */
#define GPT162_GTICASR_ASCARBH_Msk        (0x200UL)                 /*!< ASCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCARBL_Pos        (8UL)                     /*!< ASCARBL (Bit 8)                                       */
#define GPT162_GTICASR_ASCARBL_Msk        (0x100UL)                 /*!< ASCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASGTRGBF_Pos       (3UL)                     /*!< ASGTRGBF (Bit 3)                                      */
#define GPT162_GTICASR_ASGTRGBF_Msk       (0x8UL)                   /*!< ASGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICASR_ASGTRGBR_Pos       (2UL)                     /*!< ASGTRGBR (Bit 2)                                      */
#define GPT162_GTICASR_ASGTRGBR_Msk       (0x4UL)                   /*!< ASGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICASR_ASGTRGAF_Pos       (1UL)                     /*!< ASGTRGAF (Bit 1)                                      */
#define GPT162_GTICASR_ASGTRGAF_Msk       (0x2UL)                   /*!< ASGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICASR_ASGTRGAR_Pos       (0UL)                     /*!< ASGTRGAR (Bit 0)                                      */
#define GPT162_GTICASR_ASGTRGAR_Msk       (0x1UL)                   /*!< ASGTRGAR (Bitfield-Mask: 0x01)                        */
/* ========================================================  GTICBSR  ======================================================== */
#define GPT162_GTICBSR_BSELCD_Pos         (19UL)                    /*!< BSELCD (Bit 19)                                       */
#define GPT162_GTICBSR_BSELCD_Msk         (0x80000UL)               /*!< BSELCD (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICBSR_BSELCC_Pos         (18UL)                    /*!< BSELCC (Bit 18)                                       */
#define GPT162_GTICBSR_BSELCC_Msk         (0x40000UL)               /*!< BSELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICBSR_BSELCB_Pos         (17UL)                    /*!< BSELCB (Bit 17)                                       */
#define GPT162_GTICBSR_BSELCB_Msk         (0x20000UL)               /*!< BSELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICBSR_BSELCA_Pos         (16UL)                    /*!< BSELCA (Bit 16)                                       */
#define GPT162_GTICBSR_BSELCA_Msk         (0x10000UL)               /*!< BSELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICBSR_BSCBFAH_Pos        (15UL)                    /*!< BSCBFAH (Bit 15)                                      */
#define GPT162_GTICBSR_BSCBFAH_Msk        (0x8000UL)                /*!< BSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCBFAL_Pos        (14UL)                    /*!< BSCBFAL (Bit 14)                                      */
#define GPT162_GTICBSR_BSCBFAL_Msk        (0x4000UL)                /*!< BSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCBRAH_Pos        (13UL)                    /*!< BSCBRAH (Bit 13)                                      */
#define GPT162_GTICBSR_BSCBRAH_Msk        (0x2000UL)                /*!< BSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCBRAL_Pos        (12UL)                    /*!< BSCBRAL (Bit 12)                                      */
#define GPT162_GTICBSR_BSCBRAL_Msk        (0x1000UL)                /*!< BSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCAFBH_Pos        (11UL)                    /*!< BSCAFBH (Bit 11)                                      */
#define GPT162_GTICBSR_BSCAFBH_Msk        (0x800UL)                 /*!< BSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCAFBL_Pos        (10UL)                    /*!< BSCAFBL (Bit 10)                                      */
#define GPT162_GTICBSR_BSCAFBL_Msk        (0x400UL)                 /*!< BSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCARBH_Pos        (9UL)                     /*!< BSCARBH (Bit 9)                                       */
#define GPT162_GTICBSR_BSCARBH_Msk        (0x200UL)                 /*!< BSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCARBL_Pos        (8UL)                     /*!< BSCARBL (Bit 8)                                       */
#define GPT162_GTICBSR_BSCARBL_Msk        (0x100UL)                 /*!< BSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSGTRGBF_Pos       (3UL)                     /*!< BSGTRGBF (Bit 3)                                      */
#define GPT162_GTICBSR_BSGTRGBF_Msk       (0x8UL)                   /*!< BSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICBSR_BSGTRGBR_Pos       (2UL)                     /*!< BSGTRGBR (Bit 2)                                      */
#define GPT162_GTICBSR_BSGTRGBR_Msk       (0x4UL)                   /*!< BSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICBSR_BSGTRGAF_Pos       (1UL)                     /*!< BSGTRGAF (Bit 1)                                      */
#define GPT162_GTICBSR_BSGTRGAF_Msk       (0x2UL)                   /*!< BSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICBSR_BSGTRGAR_Pos       (0UL)                     /*!< BSGTRGAR (Bit 0)                                      */
#define GPT162_GTICBSR_BSGTRGAR_Msk       (0x1UL)                   /*!< BSGTRGAR (Bitfield-Mask: 0x01)                        */
/* =========================================================  GTCR  ========================================================== */
#define GPT162_GTCR_TPCS_Pos              (24UL)                    /*!< TPCS (Bit 24)                                         */
#define GPT162_GTCR_TPCS_Msk              (0x7000000UL)             /*!< TPCS (Bitfield-Mask: 0x07)                            */
#define GPT162_GTCR_MD_Pos                (16UL)                    /*!< MD (Bit 16)                                           */
#define GPT162_GTCR_MD_Msk                (0x70000UL)               /*!< MD (Bitfield-Mask: 0x07)                              */
#define GPT162_GTCR_CST_Pos               (0UL)                     /*!< CST (Bit 0)                                           */
#define GPT162_GTCR_CST_Msk               (0x1UL)                   /*!< CST (Bitfield-Mask: 0x01)                             */
/* =======================================================  GTUDDTYC  ======================================================== */
#define GPT162_GTUDDTYC_OBDTYR_Pos        (27UL)                    /*!< OBDTYR (Bit 27)                                       */
#define GPT162_GTUDDTYC_OBDTYR_Msk        (0x8000000UL)             /*!< OBDTYR (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUDDTYC_OBDTYF_Pos        (26UL)                    /*!< OBDTYF (Bit 26)                                       */
#define GPT162_GTUDDTYC_OBDTYF_Msk        (0x4000000UL)             /*!< OBDTYF (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUDDTYC_OBDTY_Pos         (24UL)                    /*!< OBDTY (Bit 24)                                        */
#define GPT162_GTUDDTYC_OBDTY_Msk         (0x3000000UL)             /*!< OBDTY (Bitfield-Mask: 0x03)                           */
#define GPT162_GTUDDTYC_OADTYR_Pos        (19UL)                    /*!< OADTYR (Bit 19)                                       */
#define GPT162_GTUDDTYC_OADTYR_Msk        (0x80000UL)               /*!< OADTYR (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUDDTYC_OADTYF_Pos        (18UL)                    /*!< OADTYF (Bit 18)                                       */
#define GPT162_GTUDDTYC_OADTYF_Msk        (0x40000UL)               /*!< OADTYF (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUDDTYC_OADTY_Pos         (16UL)                    /*!< OADTY (Bit 16)                                        */
#define GPT162_GTUDDTYC_OADTY_Msk         (0x30000UL)               /*!< OADTY (Bitfield-Mask: 0x03)                           */
#define GPT162_GTUDDTYC_UDF_Pos           (1UL)                     /*!< UDF (Bit 1)                                           */
#define GPT162_GTUDDTYC_UDF_Msk           (0x2UL)                   /*!< UDF (Bitfield-Mask: 0x01)                             */
#define GPT162_GTUDDTYC_UD_Pos            (0UL)                     /*!< UD (Bit 0)                                            */
#define GPT162_GTUDDTYC_UD_Msk            (0x1UL)                   /*!< UD (Bitfield-Mask: 0x01)                              */
/* =========================================================  GTIOR  ========================================================= */
#define GPT162_GTIOR_NFCSB_Pos            (30UL)                    /*!< NFCSB (Bit 30)                                        */
#define GPT162_GTIOR_NFCSB_Msk            (0xc0000000UL)            /*!< NFCSB (Bitfield-Mask: 0x03)                           */
#define GPT162_GTIOR_NFBEN_Pos            (29UL)                    /*!< NFBEN (Bit 29)                                        */
#define GPT162_GTIOR_NFBEN_Msk            (0x20000000UL)            /*!< NFBEN (Bitfield-Mask: 0x01)                           */
#define GPT162_GTIOR_OBDF_Pos             (25UL)                    /*!< OBDF (Bit 25)                                         */
#define GPT162_GTIOR_OBDF_Msk             (0x6000000UL)             /*!< OBDF (Bitfield-Mask: 0x03)                            */
#define GPT162_GTIOR_OBE_Pos              (24UL)                    /*!< OBE (Bit 24)                                          */
#define GPT162_GTIOR_OBE_Msk              (0x1000000UL)             /*!< OBE (Bitfield-Mask: 0x01)                             */
#define GPT162_GTIOR_OBHLD_Pos            (23UL)                    /*!< OBHLD (Bit 23)                                        */
#define GPT162_GTIOR_OBHLD_Msk            (0x800000UL)              /*!< OBHLD (Bitfield-Mask: 0x01)                           */
#define GPT162_GTIOR_OBDFLT_Pos           (22UL)                    /*!< OBDFLT (Bit 22)                                       */
#define GPT162_GTIOR_OBDFLT_Msk           (0x400000UL)              /*!< OBDFLT (Bitfield-Mask: 0x01)                          */
#define GPT162_GTIOR_GTIOB_Pos            (16UL)                    /*!< GTIOB (Bit 16)                                        */
#define GPT162_GTIOR_GTIOB_Msk            (0x1f0000UL)              /*!< GTIOB (Bitfield-Mask: 0x1f)                           */
#define GPT162_GTIOR_NFCSA_Pos            (14UL)                    /*!< NFCSA (Bit 14)                                        */
#define GPT162_GTIOR_NFCSA_Msk            (0xc000UL)                /*!< NFCSA (Bitfield-Mask: 0x03)                           */
#define GPT162_GTIOR_NFAEN_Pos            (13UL)                    /*!< NFAEN (Bit 13)                                        */
#define GPT162_GTIOR_NFAEN_Msk            (0x2000UL)                /*!< NFAEN (Bitfield-Mask: 0x01)                           */
#define GPT162_GTIOR_OADF_Pos             (9UL)                     /*!< OADF (Bit 9)                                          */
#define GPT162_GTIOR_OADF_Msk             (0x600UL)                 /*!< OADF (Bitfield-Mask: 0x03)                            */
#define GPT162_GTIOR_OAE_Pos              (8UL)                     /*!< OAE (Bit 8)                                           */
#define GPT162_GTIOR_OAE_Msk              (0x100UL)                 /*!< OAE (Bitfield-Mask: 0x01)                             */
#define GPT162_GTIOR_OAHLD_Pos            (7UL)                     /*!< OAHLD (Bit 7)                                         */
#define GPT162_GTIOR_OAHLD_Msk            (0x80UL)                  /*!< OAHLD (Bitfield-Mask: 0x01)                           */
#define GPT162_GTIOR_OADFLT_Pos           (6UL)                     /*!< OADFLT (Bit 6)                                        */
#define GPT162_GTIOR_OADFLT_Msk           (0x40UL)                  /*!< OADFLT (Bitfield-Mask: 0x01)                          */
#define GPT162_GTIOR_GTIOA_Pos            (0UL)                     /*!< GTIOA (Bit 0)                                         */
#define GPT162_GTIOR_GTIOA_Msk            (0x1fUL)                  /*!< GTIOA (Bitfield-Mask: 0x1f)                           */
/* ========================================================  GTINTAD  ======================================================== */
#define GPT162_GTINTAD_GRPABL_Pos         (30UL)                    /*!< GRPABL (Bit 30)                                       */
#define GPT162_GTINTAD_GRPABL_Msk         (0x40000000UL)            /*!< GRPABL (Bitfield-Mask: 0x01)                          */
#define GPT162_GTINTAD_GRPABH_Pos         (29UL)                    /*!< GRPABH (Bit 29)                                       */
#define GPT162_GTINTAD_GRPABH_Msk         (0x20000000UL)            /*!< GRPABH (Bitfield-Mask: 0x01)                          */
#define GPT162_GTINTAD_GRP0_Pos           (24UL)                    /*!< GRP0 (Bit 24)                                         */
#define GPT162_GTINTAD_GRP0_Msk           (0x1000000UL)             /*!< GRP0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  GTST  ========================================================== */
#define GPT162_GTST_OABLF_Pos             (30UL)                    /*!< OABLF (Bit 30)                                        */
#define GPT162_GTST_OABLF_Msk             (0x40000000UL)            /*!< OABLF (Bitfield-Mask: 0x01)                           */
#define GPT162_GTST_OABHF_Pos             (29UL)                    /*!< OABHF (Bit 29)                                        */
#define GPT162_GTST_OABHF_Msk             (0x20000000UL)            /*!< OABHF (Bitfield-Mask: 0x01)                           */
#define GPT162_GTST_ODF_Pos               (24UL)                    /*!< ODF (Bit 24)                                          */
#define GPT162_GTST_ODF_Msk               (0x1000000UL)             /*!< ODF (Bitfield-Mask: 0x01)                             */
#define GPT162_GTST_TUCF_Pos              (15UL)                    /*!< TUCF (Bit 15)                                         */
#define GPT162_GTST_TUCF_Msk              (0x8000UL)                /*!< TUCF (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFPU_Pos             (7UL)                     /*!< TCFPU (Bit 7)                                         */
#define GPT162_GTST_TCFPU_Msk             (0x80UL)                  /*!< TCFPU (Bitfield-Mask: 0x01)                           */
#define GPT162_GTST_TCFPO_Pos             (6UL)                     /*!< TCFPO (Bit 6)                                         */
#define GPT162_GTST_TCFPO_Msk             (0x40UL)                  /*!< TCFPO (Bitfield-Mask: 0x01)                           */
#define GPT162_GTST_TCFF_Pos              (5UL)                     /*!< TCFF (Bit 5)                                          */
#define GPT162_GTST_TCFF_Msk              (0x20UL)                  /*!< TCFF (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFE_Pos              (4UL)                     /*!< TCFE (Bit 4)                                          */
#define GPT162_GTST_TCFE_Msk              (0x10UL)                  /*!< TCFE (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFD_Pos              (3UL)                     /*!< TCFD (Bit 3)                                          */
#define GPT162_GTST_TCFD_Msk              (0x8UL)                   /*!< TCFD (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFC_Pos              (2UL)                     /*!< TCFC (Bit 2)                                          */
#define GPT162_GTST_TCFC_Msk              (0x4UL)                   /*!< TCFC (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFB_Pos              (1UL)                     /*!< TCFB (Bit 1)                                          */
#define GPT162_GTST_TCFB_Msk              (0x2UL)                   /*!< TCFB (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFA_Pos              (0UL)                     /*!< TCFA (Bit 0)                                          */
#define GPT162_GTST_TCFA_Msk              (0x1UL)                   /*!< TCFA (Bitfield-Mask: 0x01)                            */
/* =========================================================  GTBER  ========================================================= */
#define GPT162_GTBER_CCRSWT_Pos           (22UL)                    /*!< CCRSWT (Bit 22)                                       */
#define GPT162_GTBER_CCRSWT_Msk           (0x400000UL)              /*!< CCRSWT (Bitfield-Mask: 0x01)                          */
#define GPT162_GTBER_PR_Pos               (20UL)                    /*!< PR (Bit 20)                                           */
#define GPT162_GTBER_PR_Msk               (0x100000UL)              /*!< PR (Bitfield-Mask: 0x01)                              */
#define GPT162_GTBER_CCRB_Pos             (18UL)                    /*!< CCRB (Bit 18)                                         */
#define GPT162_GTBER_CCRB_Msk             (0xc0000UL)               /*!< CCRB (Bitfield-Mask: 0x03)                            */
#define GPT162_GTBER_CCRA_Pos             (16UL)                    /*!< CCRA (Bit 16)                                         */
#define GPT162_GTBER_CCRA_Msk             (0x30000UL)               /*!< CCRA (Bitfield-Mask: 0x03)                            */
#define GPT162_GTBER_BD_Pos               (0UL)                     /*!< BD (Bit 0)                                            */
#define GPT162_GTBER_BD_Msk               (0x3UL)                   /*!< BD (Bitfield-Mask: 0x03)                              */
/* =========================================================  GTCNT  ========================================================= */
#define GPT162_GTCNT_GTCNT_Pos            (0UL)                     /*!< GTCNT (Bit 0)                                         */
#define GPT162_GTCNT_GTCNT_Msk            (0xffffffffUL)            /*!< GTCNT (Bitfield-Mask: 0xffffffff)                     */
/* ========================================================  GTCCRA  ========================================================= */
#define GPT162_GTCCRA_GTCCRA_Pos          (0UL)                     /*!< GTCCRA (Bit 0)                                        */
#define GPT162_GTCCRA_GTCCRA_Msk          (0xffffUL)                /*!< GTCCRA (Bitfield-Mask: 0xffff)                        */
/* ========================================================  GTCCRB  ========================================================= */
#define GPT162_GTCCRB_GTCCRB_Pos          (0UL)                     /*!< GTCCRB (Bit 0)                                        */
#define GPT162_GTCCRB_GTCCRB_Msk          (0xffffUL)                /*!< GTCCRB (Bitfield-Mask: 0xffff)                        */
/* ========================================================  GTCCRC  ========================================================= */
#define GPT162_GTCCRC_GTCCRC_Pos          (0UL)                     /*!< GTCCRC (Bit 0)                                        */
#define GPT162_GTCCRC_GTCCRC_Msk          (0xffffUL)                /*!< GTCCRC (Bitfield-Mask: 0xffff)                        */
/* ========================================================  GTCCRD  ========================================================= */
#define GPT162_GTCCRD_GTCCRD_Pos          (0UL)                     /*!< GTCCRD (Bit 0)                                        */
#define GPT162_GTCCRD_GTCCRD_Msk          (0xffffUL)                /*!< GTCCRD (Bitfield-Mask: 0xffff)                        */
/* ========================================================  GTCCRE  ========================================================= */
#define GPT162_GTCCRE_GTCCRE_Pos          (0UL)                     /*!< GTCCRE (Bit 0)                                        */
#define GPT162_GTCCRE_GTCCRE_Msk          (0xffffUL)                /*!< GTCCRE (Bitfield-Mask: 0xffff)                        */
/* ========================================================  GTCCRF  ========================================================= */
#define GPT162_GTCCRF_GTCCRF_Pos          (0UL)                     /*!< GTCCRF (Bit 0)                                        */
#define GPT162_GTCCRF_GTCCRF_Msk          (0xffffUL)                /*!< GTCCRF (Bitfield-Mask: 0xffff)                        */
/* =========================================================  GTPR  ========================================================== */
#define GPT162_GTPR_GTPR_Pos              (0UL)                     /*!< GTPR (Bit 0)                                          */
#define GPT162_GTPR_GTPR_Msk              (0xffffUL)                /*!< GTPR (Bitfield-Mask: 0xffff)                          */
/* =========================================================  GTPBR  ========================================================= */
#define GPT162_GTPBR_GTPBR_Pos            (0UL)                     /*!< GTPBR (Bit 0)                                         */
#define GPT162_GTPBR_GTPBR_Msk            (0xffffUL)                /*!< GTPBR (Bitfield-Mask: 0xffff)                         */
/* ========================================================  GTDTCR  ========================================================= */
#define GPT162_GTDTCR_TDE_Pos             (0UL)                     /*!< TDE (Bit 0)                                           */
#define GPT162_GTDTCR_TDE_Msk             (0x1UL)                   /*!< TDE (Bitfield-Mask: 0x01)                             */
/* =========================================================  GTDVU  ========================================================= */
#define GPT162_GTDVU_GTDVU_Pos            (0UL)                     /*!< GTDVU (Bit 0)                                         */
#define GPT162_GTDVU_GTDVU_Msk            (0xffffUL)                /*!< GTDVU (Bitfield-Mask: 0xffff)                         */


/* =========================================================================================================================== */
/* ================                                          GPT320                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  GTWP  ========================================================== */
#define GPT320_GTWP_PRKEY_Pos             (8UL)                     /*!< PRKEY (Bit 8)                                         */
#define GPT320_GTWP_PRKEY_Msk             (0xff00UL)                /*!< PRKEY (Bitfield-Mask: 0xff)                           */
#define GPT320_GTWP_WP_Pos                (0UL)                     /*!< WP (Bit 0)                                            */
#define GPT320_GTWP_WP_Msk                (0x1UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
/* =========================================================  GTSTR  ========================================================= */
#define GPT320_GTSTR_CSTRT5_Pos           (5UL)                     /*!< CSTRT5 (Bit 5)                                        */
#define GPT320_GTSTR_CSTRT5_Msk           (0x20UL)                  /*!< CSTRT5 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTR_CSTRT4_Pos           (4UL)                     /*!< CSTRT4 (Bit 4)                                        */
#define GPT320_GTSTR_CSTRT4_Msk           (0x10UL)                  /*!< CSTRT4 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTR_CSTRT3_Pos           (3UL)                     /*!< CSTRT3 (Bit 3)                                        */
#define GPT320_GTSTR_CSTRT3_Msk           (0x8UL)                   /*!< CSTRT3 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTR_CSTRT2_Pos           (2UL)                     /*!< CSTRT2 (Bit 2)                                        */
#define GPT320_GTSTR_CSTRT2_Msk           (0x4UL)                   /*!< CSTRT2 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTR_CSTRT1_Pos           (1UL)                     /*!< CSTRT1 (Bit 1)                                        */
#define GPT320_GTSTR_CSTRT1_Msk           (0x2UL)                   /*!< CSTRT1 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTR_CSTRT0_Pos           (0UL)                     /*!< CSTRT0 (Bit 0)                                        */
#define GPT320_GTSTR_CSTRT0_Msk           (0x1UL)                   /*!< CSTRT0 (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTSTP  ========================================================= */
#define GPT320_GTSTP_CSTOP5_Pos           (5UL)                     /*!< CSTOP5 (Bit 5)                                        */
#define GPT320_GTSTP_CSTOP5_Msk           (0x20UL)                  /*!< CSTOP5 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTP_CSTOP4_Pos           (4UL)                     /*!< CSTOP4 (Bit 4)                                        */
#define GPT320_GTSTP_CSTOP4_Msk           (0x10UL)                  /*!< CSTOP4 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTP_CSTOP3_Pos           (3UL)                     /*!< CSTOP3 (Bit 3)                                        */
#define GPT320_GTSTP_CSTOP3_Msk           (0x8UL)                   /*!< CSTOP3 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTP_CSTOP2_Pos           (2UL)                     /*!< CSTOP2 (Bit 2)                                        */
#define GPT320_GTSTP_CSTOP2_Msk           (0x4UL)                   /*!< CSTOP2 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTP_CSTOP1_Pos           (1UL)                     /*!< CSTOP1 (Bit 1)                                        */
#define GPT320_GTSTP_CSTOP1_Msk           (0x2UL)                   /*!< CSTOP1 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTP_CSTOP0_Pos           (0UL)                     /*!< CSTOP0 (Bit 0)                                        */
#define GPT320_GTSTP_CSTOP0_Msk           (0x1UL)                   /*!< CSTOP0 (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTCLR  ========================================================= */
#define GPT320_GTCLR_CCLR5_Pos            (5UL)                     /*!< CCLR5 (Bit 5)                                         */
#define GPT320_GTCLR_CCLR5_Msk            (0x20UL)                  /*!< CCLR5 (Bitfield-Mask: 0x01)                           */
#define GPT320_GTCLR_CCLR4_Pos            (4UL)                     /*!< CCLR4 (Bit 4)                                         */
#define GPT320_GTCLR_CCLR4_Msk            (0x10UL)                  /*!< CCLR4 (Bitfield-Mask: 0x01)                           */
#define GPT320_GTCLR_CCLR3_Pos            (3UL)                     /*!< CCLR3 (Bit 3)                                         */
#define GPT320_GTCLR_CCLR3_Msk            (0x8UL)                   /*!< CCLR3 (Bitfield-Mask: 0x01)                           */
#define GPT320_GTCLR_CCLR2_Pos            (2UL)                     /*!< CCLR2 (Bit 2)                                         */
#define GPT320_GTCLR_CCLR2_Msk            (0x4UL)                   /*!< CCLR2 (Bitfield-Mask: 0x01)                           */
#define GPT320_GTCLR_CCLR1_Pos            (1UL)                     /*!< CCLR1 (Bit 1)                                         */
#define GPT320_GTCLR_CCLR1_Msk            (0x2UL)                   /*!< CCLR1 (Bitfield-Mask: 0x01)                           */
#define GPT320_GTCLR_CCLR0_Pos            (0UL)                     /*!< CCLR0 (Bit 0)                                         */
#define GPT320_GTCLR_CCLR0_Msk            (0x1UL)                   /*!< CCLR0 (Bitfield-Mask: 0x01)                           */
/* =========================================================  GTSSR  ========================================================= */
#define GPT320_GTSSR_CSTRT_Pos            (31UL)                    /*!< CSTRT (Bit 31)                                        */
#define GPT320_GTSSR_CSTRT_Msk            (0x80000000UL)            /*!< CSTRT (Bitfield-Mask: 0x01)                           */
#define GPT320_GTSSR_SSELCD_Pos           (19UL)                    /*!< SSELCD (Bit 19)                                       */
#define GPT320_GTSSR_SSELCD_Msk           (0x80000UL)               /*!< SSELCD (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSSR_SSELCC_Pos           (18UL)                    /*!< SSELCC (Bit 18)                                       */
#define GPT320_GTSSR_SSELCC_Msk           (0x40000UL)               /*!< SSELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSSR_SSELCB_Pos           (17UL)                    /*!< SSELCB (Bit 17)                                       */
#define GPT320_GTSSR_SSELCB_Msk           (0x20000UL)               /*!< SSELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSSR_SSELCA_Pos           (16UL)                    /*!< SSELCA (Bit 16)                                       */
#define GPT320_GTSSR_SSELCA_Msk           (0x10000UL)               /*!< SSELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSSR_SSCBFAH_Pos          (15UL)                    /*!< SSCBFAH (Bit 15)                                      */
#define GPT320_GTSSR_SSCBFAH_Msk          (0x8000UL)                /*!< SSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCBFAL_Pos          (14UL)                    /*!< SSCBFAL (Bit 14)                                      */
#define GPT320_GTSSR_SSCBFAL_Msk          (0x4000UL)                /*!< SSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCBRAH_Pos          (13UL)                    /*!< SSCBRAH (Bit 13)                                      */
#define GPT320_GTSSR_SSCBRAH_Msk          (0x2000UL)                /*!< SSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCBRAL_Pos          (12UL)                    /*!< SSCBRAL (Bit 12)                                      */
#define GPT320_GTSSR_SSCBRAL_Msk          (0x1000UL)                /*!< SSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCAFBH_Pos          (11UL)                    /*!< SSCAFBH (Bit 11)                                      */
#define GPT320_GTSSR_SSCAFBH_Msk          (0x800UL)                 /*!< SSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCAFBL_Pos          (10UL)                    /*!< SSCAFBL (Bit 10)                                      */
#define GPT320_GTSSR_SSCAFBL_Msk          (0x400UL)                 /*!< SSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCARBH_Pos          (9UL)                     /*!< SSCARBH (Bit 9)                                       */
#define GPT320_GTSSR_SSCARBH_Msk          (0x200UL)                 /*!< SSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCARBL_Pos          (8UL)                     /*!< SSCARBL (Bit 8)                                       */
#define GPT320_GTSSR_SSCARBL_Msk          (0x100UL)                 /*!< SSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSGTRGBF_Pos         (3UL)                     /*!< SSGTRGBF (Bit 3)                                      */
#define GPT320_GTSSR_SSGTRGBF_Msk         (0x8UL)                   /*!< SSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTSSR_SSGTRGBR_Pos         (2UL)                     /*!< SSGTRGBR (Bit 2)                                      */
#define GPT320_GTSSR_SSGTRGBR_Msk         (0x4UL)                   /*!< SSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTSSR_SSGTRGAF_Pos         (1UL)                     /*!< SSGTRGAF (Bit 1)                                      */
#define GPT320_GTSSR_SSGTRGAF_Msk         (0x2UL)                   /*!< SSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTSSR_SSGTRGAR_Pos         (0UL)                     /*!< SSGTRGAR (Bit 0)                                      */
#define GPT320_GTSSR_SSGTRGAR_Msk         (0x1UL)                   /*!< SSGTRGAR (Bitfield-Mask: 0x01)                        */
/* =========================================================  GTPSR  ========================================================= */
#define GPT320_GTPSR_CSTOP_Pos            (31UL)                    /*!< CSTOP (Bit 31)                                        */
#define GPT320_GTPSR_CSTOP_Msk            (0x80000000UL)            /*!< CSTOP (Bitfield-Mask: 0x01)                           */
#define GPT320_GTPSR_PSELCD_Pos           (19UL)                    /*!< PSELCD (Bit 19)                                       */
#define GPT320_GTPSR_PSELCD_Msk           (0x80000UL)               /*!< PSELCD (Bitfield-Mask: 0x01)                          */
#define GPT320_GTPSR_PSELCC_Pos           (18UL)                    /*!< PSELCC (Bit 18)                                       */
#define GPT320_GTPSR_PSELCC_Msk           (0x40000UL)               /*!< PSELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTPSR_PSELCB_Pos           (17UL)                    /*!< PSELCB (Bit 17)                                       */
#define GPT320_GTPSR_PSELCB_Msk           (0x20000UL)               /*!< PSELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTPSR_PSELCA_Pos           (16UL)                    /*!< PSELCA (Bit 16)                                       */
#define GPT320_GTPSR_PSELCA_Msk           (0x10000UL)               /*!< PSELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTPSR_PSCBFAH_Pos          (15UL)                    /*!< PSCBFAH (Bit 15)                                      */
#define GPT320_GTPSR_PSCBFAH_Msk          (0x8000UL)                /*!< PSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCBFAL_Pos          (14UL)                    /*!< PSCBFAL (Bit 14)                                      */
#define GPT320_GTPSR_PSCBFAL_Msk          (0x4000UL)                /*!< PSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCBRAH_Pos          (13UL)                    /*!< PSCBRAH (Bit 13)                                      */
#define GPT320_GTPSR_PSCBRAH_Msk          (0x2000UL)                /*!< PSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCBRAL_Pos          (12UL)                    /*!< PSCBRAL (Bit 12)                                      */
#define GPT320_GTPSR_PSCBRAL_Msk          (0x1000UL)                /*!< PSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCAFBH_Pos          (11UL)                    /*!< PSCAFBH (Bit 11)                                      */
#define GPT320_GTPSR_PSCAFBH_Msk          (0x800UL)                 /*!< PSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCAFBL_Pos          (10UL)                    /*!< PSCAFBL (Bit 10)                                      */
#define GPT320_GTPSR_PSCAFBL_Msk          (0x400UL)                 /*!< PSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCARBH_Pos          (9UL)                     /*!< PSCARBH (Bit 9)                                       */
#define GPT320_GTPSR_PSCARBH_Msk          (0x200UL)                 /*!< PSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCARBL_Pos          (8UL)                     /*!< PSCARBL (Bit 8)                                       */
#define GPT320_GTPSR_PSCARBL_Msk          (0x100UL)                 /*!< PSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSGTRGBF_Pos         (3UL)                     /*!< PSGTRGBF (Bit 3)                                      */
#define GPT320_GTPSR_PSGTRGBF_Msk         (0x8UL)                   /*!< PSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTPSR_PSGTRGBR_Pos         (2UL)                     /*!< PSGTRGBR (Bit 2)                                      */
#define GPT320_GTPSR_PSGTRGBR_Msk         (0x4UL)                   /*!< PSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTPSR_PSGTRGAF_Pos         (1UL)                     /*!< PSGTRGAF (Bit 1)                                      */
#define GPT320_GTPSR_PSGTRGAF_Msk         (0x2UL)                   /*!< PSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTPSR_PSGTRGAR_Pos         (0UL)                     /*!< PSGTRGAR (Bit 0)                                      */
#define GPT320_GTPSR_PSGTRGAR_Msk         (0x1UL)                   /*!< PSGTRGAR (Bitfield-Mask: 0x01)                        */
/* =========================================================  GTCSR  ========================================================= */
#define GPT320_GTCSR_CCLR_Pos             (31UL)                    /*!< CCLR (Bit 31)                                         */
#define GPT320_GTCSR_CCLR_Msk             (0x80000000UL)            /*!< CCLR (Bitfield-Mask: 0x01)                            */
#define GPT320_GTCSR_CSELCD_Pos           (19UL)                    /*!< CSELCD (Bit 19)                                       */
#define GPT320_GTCSR_CSELCD_Msk           (0x80000UL)               /*!< CSELCD (Bitfield-Mask: 0x01)                          */
#define GPT320_GTCSR_CSELCC_Pos           (18UL)                    /*!< CSELCC (Bit 18)                                       */
#define GPT320_GTCSR_CSELCC_Msk           (0x40000UL)               /*!< CSELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTCSR_CSELCB_Pos           (17UL)                    /*!< CSELCB (Bit 17)                                       */
#define GPT320_GTCSR_CSELCB_Msk           (0x20000UL)               /*!< CSELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTCSR_CSELCA_Pos           (16UL)                    /*!< CSELCA (Bit 16)                                       */
#define GPT320_GTCSR_CSELCA_Msk           (0x10000UL)               /*!< CSELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTCSR_CSCBFAH_Pos          (15UL)                    /*!< CSCBFAH (Bit 15)                                      */
#define GPT320_GTCSR_CSCBFAH_Msk          (0x8000UL)                /*!< CSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCBFAL_Pos          (14UL)                    /*!< CSCBFAL (Bit 14)                                      */
#define GPT320_GTCSR_CSCBFAL_Msk          (0x4000UL)                /*!< CSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCBRAH_Pos          (13UL)                    /*!< CSCBRAH (Bit 13)                                      */
#define GPT320_GTCSR_CSCBRAH_Msk          (0x2000UL)                /*!< CSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCBRAL_Pos          (12UL)                    /*!< CSCBRAL (Bit 12)                                      */
#define GPT320_GTCSR_CSCBRAL_Msk          (0x1000UL)                /*!< CSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCAFBH_Pos          (11UL)                    /*!< CSCAFBH (Bit 11)                                      */
#define GPT320_GTCSR_CSCAFBH_Msk          (0x800UL)                 /*!< CSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCAFBL_Pos          (10UL)                    /*!< CSCAFBL (Bit 10)                                      */
#define GPT320_GTCSR_CSCAFBL_Msk          (0x400UL)                 /*!< CSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCARBH_Pos          (9UL)                     /*!< CSCARBH (Bit 9)                                       */
#define GPT320_GTCSR_CSCARBH_Msk          (0x200UL)                 /*!< CSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCARBL_Pos          (8UL)                     /*!< CSCARBL (Bit 8)                                       */
#define GPT320_GTCSR_CSCARBL_Msk          (0x100UL)                 /*!< CSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSGTRGBF_Pos         (3UL)                     /*!< CSGTRGBF (Bit 3)                                      */
#define GPT320_GTCSR_CSGTRGBF_Msk         (0x8UL)                   /*!< CSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTCSR_CSGTRGBR_Pos         (2UL)                     /*!< CSGTRGBR (Bit 2)                                      */
#define GPT320_GTCSR_CSGTRGBR_Msk         (0x4UL)                   /*!< CSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTCSR_CSGTRGAF_Pos         (1UL)                     /*!< CSGTRGAF (Bit 1)                                      */
#define GPT320_GTCSR_CSGTRGAF_Msk         (0x2UL)                   /*!< CSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTCSR_CSGTRGAR_Pos         (0UL)                     /*!< CSGTRGAR (Bit 0)                                      */
#define GPT320_GTCSR_CSGTRGAR_Msk         (0x1UL)                   /*!< CSGTRGAR (Bitfield-Mask: 0x01)                        */
/* ========================================================  GTUPSR  ========================================================= */
#define GPT320_GTUPSR_USELCD_Pos          (19UL)                    /*!< USELCD (Bit 19)                                       */
#define GPT320_GTUPSR_USELCD_Msk          (0x80000UL)               /*!< USELCD (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUPSR_USELCC_Pos          (18UL)                    /*!< USELCC (Bit 18)                                       */
#define GPT320_GTUPSR_USELCC_Msk          (0x40000UL)               /*!< USELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUPSR_USELCB_Pos          (17UL)                    /*!< USELCB (Bit 17)                                       */
#define GPT320_GTUPSR_USELCB_Msk          (0x20000UL)               /*!< USELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUPSR_USELCA_Pos          (16UL)                    /*!< USELCA (Bit 16)                                       */
#define GPT320_GTUPSR_USELCA_Msk          (0x10000UL)               /*!< USELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUPSR_USCBFAH_Pos         (15UL)                    /*!< USCBFAH (Bit 15)                                      */
#define GPT320_GTUPSR_USCBFAH_Msk         (0x8000UL)                /*!< USCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCBFAL_Pos         (14UL)                    /*!< USCBFAL (Bit 14)                                      */
#define GPT320_GTUPSR_USCBFAL_Msk         (0x4000UL)                /*!< USCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCBRAH_Pos         (13UL)                    /*!< USCBRAH (Bit 13)                                      */
#define GPT320_GTUPSR_USCBRAH_Msk         (0x2000UL)                /*!< USCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCBRAL_Pos         (12UL)                    /*!< USCBRAL (Bit 12)                                      */
#define GPT320_GTUPSR_USCBRAL_Msk         (0x1000UL)                /*!< USCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCAFBH_Pos         (11UL)                    /*!< USCAFBH (Bit 11)                                      */
#define GPT320_GTUPSR_USCAFBH_Msk         (0x800UL)                 /*!< USCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCAFBL_Pos         (10UL)                    /*!< USCAFBL (Bit 10)                                      */
#define GPT320_GTUPSR_USCAFBL_Msk         (0x400UL)                 /*!< USCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCARBH_Pos         (9UL)                     /*!< USCARBH (Bit 9)                                       */
#define GPT320_GTUPSR_USCARBH_Msk         (0x200UL)                 /*!< USCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCARBL_Pos         (8UL)                     /*!< USCARBL (Bit 8)                                       */
#define GPT320_GTUPSR_USCARBL_Msk         (0x100UL)                 /*!< USCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USGTRGBF_Pos        (3UL)                     /*!< USGTRGBF (Bit 3)                                      */
#define GPT320_GTUPSR_USGTRGBF_Msk        (0x8UL)                   /*!< USGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTUPSR_USGTRGBR_Pos        (2UL)                     /*!< USGTRGBR (Bit 2)                                      */
#define GPT320_GTUPSR_USGTRGBR_Msk        (0x4UL)                   /*!< USGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTUPSR_USGTRGAF_Pos        (1UL)                     /*!< USGTRGAF (Bit 1)                                      */
#define GPT320_GTUPSR_USGTRGAF_Msk        (0x2UL)                   /*!< USGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTUPSR_USGTRGAR_Pos        (0UL)                     /*!< USGTRGAR (Bit 0)                                      */
#define GPT320_GTUPSR_USGTRGAR_Msk        (0x1UL)                   /*!< USGTRGAR (Bitfield-Mask: 0x01)                        */
/* ========================================================  GTDNSR  ========================================================= */
#define GPT320_GTDNSR_DSELCD_Pos          (19UL)                    /*!< DSELCD (Bit 19)                                       */
#define GPT320_GTDNSR_DSELCD_Msk          (0x80000UL)               /*!< DSELCD (Bitfield-Mask: 0x01)                          */
#define GPT320_GTDNSR_DSELCC_Pos          (18UL)                    /*!< DSELCC (Bit 18)                                       */
#define GPT320_GTDNSR_DSELCC_Msk          (0x40000UL)               /*!< DSELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTDNSR_DSELCB_Pos          (17UL)                    /*!< DSELCB (Bit 17)                                       */
#define GPT320_GTDNSR_DSELCB_Msk          (0x20000UL)               /*!< DSELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTDNSR_DSELCA_Pos          (16UL)                    /*!< DSELCA (Bit 16)                                       */
#define GPT320_GTDNSR_DSELCA_Msk          (0x10000UL)               /*!< DSELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTDNSR_DSCBFAH_Pos         (15UL)                    /*!< DSCBFAH (Bit 15)                                      */
#define GPT320_GTDNSR_DSCBFAH_Msk         (0x8000UL)                /*!< DSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCBFAL_Pos         (14UL)                    /*!< DSCBFAL (Bit 14)                                      */
#define GPT320_GTDNSR_DSCBFAL_Msk         (0x4000UL)                /*!< DSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCBRAH_Pos         (13UL)                    /*!< DSCBRAH (Bit 13)                                      */
#define GPT320_GTDNSR_DSCBRAH_Msk         (0x2000UL)                /*!< DSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCBRAL_Pos         (12UL)                    /*!< DSCBRAL (Bit 12)                                      */
#define GPT320_GTDNSR_DSCBRAL_Msk         (0x1000UL)                /*!< DSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCAFBH_Pos         (11UL)                    /*!< DSCAFBH (Bit 11)                                      */
#define GPT320_GTDNSR_DSCAFBH_Msk         (0x800UL)                 /*!< DSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCAFBL_Pos         (10UL)                    /*!< DSCAFBL (Bit 10)                                      */
#define GPT320_GTDNSR_DSCAFBL_Msk         (0x400UL)                 /*!< DSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCARBH_Pos         (9UL)                     /*!< DSCARBH (Bit 9)                                       */
#define GPT320_GTDNSR_DSCARBH_Msk         (0x200UL)                 /*!< DSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCARBL_Pos         (8UL)                     /*!< DSCARBL (Bit 8)                                       */
#define GPT320_GTDNSR_DSCARBL_Msk         (0x100UL)                 /*!< DSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSGTRGBF_Pos        (3UL)                     /*!< DSGTRGBF (Bit 3)                                      */
#define GPT320_GTDNSR_DSGTRGBF_Msk        (0x8UL)                   /*!< DSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTDNSR_DSGTRGBR_Pos        (2UL)                     /*!< DSGTRGBR (Bit 2)                                      */
#define GPT320_GTDNSR_DSGTRGBR_Msk        (0x4UL)                   /*!< DSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTDNSR_DSGTRGAF_Pos        (1UL)                     /*!< DSGTRGAF (Bit 1)                                      */
#define GPT320_GTDNSR_DSGTRGAF_Msk        (0x2UL)                   /*!< DSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTDNSR_DSGTRGAR_Pos        (0UL)                     /*!< DSGTRGAR (Bit 0)                                      */
#define GPT320_GTDNSR_DSGTRGAR_Msk        (0x1UL)                   /*!< DSGTRGAR (Bitfield-Mask: 0x01)                        */
/* ========================================================  GTICASR  ======================================================== */
#define GPT320_GTICASR_ASELCD_Pos         (19UL)                    /*!< ASELCD (Bit 19)                                       */
#define GPT320_GTICASR_ASELCD_Msk         (0x80000UL)               /*!< ASELCD (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICASR_ASELCC_Pos         (18UL)                    /*!< ASELCC (Bit 18)                                       */
#define GPT320_GTICASR_ASELCC_Msk         (0x40000UL)               /*!< ASELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICASR_ASELCB_Pos         (17UL)                    /*!< ASELCB (Bit 17)                                       */
#define GPT320_GTICASR_ASELCB_Msk         (0x20000UL)               /*!< ASELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICASR_ASELCA_Pos         (16UL)                    /*!< ASELCA (Bit 16)                                       */
#define GPT320_GTICASR_ASELCA_Msk         (0x10000UL)               /*!< ASELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICASR_ASCBFAH_Pos        (15UL)                    /*!< ASCBFAH (Bit 15)                                      */
#define GPT320_GTICASR_ASCBFAH_Msk        (0x8000UL)                /*!< ASCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCBFAL_Pos        (14UL)                    /*!< ASCBFAL (Bit 14)                                      */
#define GPT320_GTICASR_ASCBFAL_Msk        (0x4000UL)                /*!< ASCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCBRAH_Pos        (13UL)                    /*!< ASCBRAH (Bit 13)                                      */
#define GPT320_GTICASR_ASCBRAH_Msk        (0x2000UL)                /*!< ASCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCBRAL_Pos        (12UL)                    /*!< ASCBRAL (Bit 12)                                      */
#define GPT320_GTICASR_ASCBRAL_Msk        (0x1000UL)                /*!< ASCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCAFBH_Pos        (11UL)                    /*!< ASCAFBH (Bit 11)                                      */
#define GPT320_GTICASR_ASCAFBH_Msk        (0x800UL)                 /*!< ASCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCAFBL_Pos        (10UL)                    /*!< ASCAFBL (Bit 10)                                      */
#define GPT320_GTICASR_ASCAFBL_Msk        (0x400UL)                 /*!< ASCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCARBH_Pos        (9UL)                     /*!< ASCARBH (Bit 9)                                       */
#define GPT320_GTICASR_ASCARBH_Msk        (0x200UL)                 /*!< ASCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCARBL_Pos        (8UL)                     /*!< ASCARBL (Bit 8)                                       */
#define GPT320_GTICASR_ASCARBL_Msk        (0x100UL)                 /*!< ASCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASGTRGBF_Pos       (3UL)                     /*!< ASGTRGBF (Bit 3)                                      */
#define GPT320_GTICASR_ASGTRGBF_Msk       (0x8UL)                   /*!< ASGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICASR_ASGTRGBR_Pos       (2UL)                     /*!< ASGTRGBR (Bit 2)                                      */
#define GPT320_GTICASR_ASGTRGBR_Msk       (0x4UL)                   /*!< ASGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICASR_ASGTRGAF_Pos       (1UL)                     /*!< ASGTRGAF (Bit 1)                                      */
#define GPT320_GTICASR_ASGTRGAF_Msk       (0x2UL)                   /*!< ASGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICASR_ASGTRGAR_Pos       (0UL)                     /*!< ASGTRGAR (Bit 0)                                      */
#define GPT320_GTICASR_ASGTRGAR_Msk       (0x1UL)                   /*!< ASGTRGAR (Bitfield-Mask: 0x01)                        */
/* ========================================================  GTICBSR  ======================================================== */
#define GPT320_GTICBSR_BSELCD_Pos         (19UL)                    /*!< BSELCD (Bit 19)                                       */
#define GPT320_GTICBSR_BSELCD_Msk         (0x80000UL)               /*!< BSELCD (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICBSR_BSELCC_Pos         (18UL)                    /*!< BSELCC (Bit 18)                                       */
#define GPT320_GTICBSR_BSELCC_Msk         (0x40000UL)               /*!< BSELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICBSR_BSELCB_Pos         (17UL)                    /*!< BSELCB (Bit 17)                                       */
#define GPT320_GTICBSR_BSELCB_Msk         (0x20000UL)               /*!< BSELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICBSR_BSELCA_Pos         (16UL)                    /*!< BSELCA (Bit 16)                                       */
#define GPT320_GTICBSR_BSELCA_Msk         (0x10000UL)               /*!< BSELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICBSR_BSCBFAH_Pos        (15UL)                    /*!< BSCBFAH (Bit 15)                                      */
#define GPT320_GTICBSR_BSCBFAH_Msk        (0x8000UL)                /*!< BSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCBFAL_Pos        (14UL)                    /*!< BSCBFAL (Bit 14)                                      */
#define GPT320_GTICBSR_BSCBFAL_Msk        (0x4000UL)                /*!< BSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCBRAH_Pos        (13UL)                    /*!< BSCBRAH (Bit 13)                                      */
#define GPT320_GTICBSR_BSCBRAH_Msk        (0x2000UL)                /*!< BSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCBRAL_Pos        (12UL)                    /*!< BSCBRAL (Bit 12)                                      */
#define GPT320_GTICBSR_BSCBRAL_Msk        (0x1000UL)                /*!< BSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCAFBH_Pos        (11UL)                    /*!< BSCAFBH (Bit 11)                                      */
#define GPT320_GTICBSR_BSCAFBH_Msk        (0x800UL)                 /*!< BSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCAFBL_Pos        (10UL)                    /*!< BSCAFBL (Bit 10)                                      */
#define GPT320_GTICBSR_BSCAFBL_Msk        (0x400UL)                 /*!< BSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCARBH_Pos        (9UL)                     /*!< BSCARBH (Bit 9)                                       */
#define GPT320_GTICBSR_BSCARBH_Msk        (0x200UL)                 /*!< BSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCARBL_Pos        (8UL)                     /*!< BSCARBL (Bit 8)                                       */
#define GPT320_GTICBSR_BSCARBL_Msk        (0x100UL)                 /*!< BSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSGTRGBF_Pos       (3UL)                     /*!< BSGTRGBF (Bit 3)                                      */
#define GPT320_GTICBSR_BSGTRGBF_Msk       (0x8UL)                   /*!< BSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICBSR_BSGTRGBR_Pos       (2UL)                     /*!< BSGTRGBR (Bit 2)                                      */
#define GPT320_GTICBSR_BSGTRGBR_Msk       (0x4UL)                   /*!< BSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICBSR_BSGTRGAF_Pos       (1UL)                     /*!< BSGTRGAF (Bit 1)                                      */
#define GPT320_GTICBSR_BSGTRGAF_Msk       (0x2UL)                   /*!< BSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICBSR_BSGTRGAR_Pos       (0UL)                     /*!< BSGTRGAR (Bit 0)                                      */
#define GPT320_GTICBSR_BSGTRGAR_Msk       (0x1UL)                   /*!< BSGTRGAR (Bitfield-Mask: 0x01)                        */
/* =========================================================  GTCR  ========================================================== */
#define GPT320_GTCR_TPCS_Pos              (24UL)                    /*!< TPCS (Bit 24)                                         */
#define GPT320_GTCR_TPCS_Msk              (0x7000000UL)             /*!< TPCS (Bitfield-Mask: 0x07)                            */
#define GPT320_GTCR_MD_Pos                (16UL)                    /*!< MD (Bit 16)                                           */
#define GPT320_GTCR_MD_Msk                (0x70000UL)               /*!< MD (Bitfield-Mask: 0x07)                              */
#define GPT320_GTCR_CST_Pos               (0UL)                     /*!< CST (Bit 0)                                           */
#define GPT320_GTCR_CST_Msk               (0x1UL)                   /*!< CST (Bitfield-Mask: 0x01)                             */
/* =======================================================  GTUDDTYC  ======================================================== */
#define GPT320_GTUDDTYC_OBDTYR_Pos        (27UL)                    /*!< OBDTYR (Bit 27)                                       */
#define GPT320_GTUDDTYC_OBDTYR_Msk        (0x8000000UL)             /*!< OBDTYR (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUDDTYC_OBDTYF_Pos        (26UL)                    /*!< OBDTYF (Bit 26)                                       */
#define GPT320_GTUDDTYC_OBDTYF_Msk        (0x4000000UL)             /*!< OBDTYF (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUDDTYC_OBDTY_Pos         (24UL)                    /*!< OBDTY (Bit 24)                                        */
#define GPT320_GTUDDTYC_OBDTY_Msk         (0x3000000UL)             /*!< OBDTY (Bitfield-Mask: 0x03)                           */
#define GPT320_GTUDDTYC_OADTYR_Pos        (19UL)                    /*!< OADTYR (Bit 19)                                       */
#define GPT320_GTUDDTYC_OADTYR_Msk        (0x80000UL)               /*!< OADTYR (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUDDTYC_OADTYF_Pos        (18UL)                    /*!< OADTYF (Bit 18)                                       */
#define GPT320_GTUDDTYC_OADTYF_Msk        (0x40000UL)               /*!< OADTYF (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUDDTYC_OADTY_Pos         (16UL)                    /*!< OADTY (Bit 16)                                        */
#define GPT320_GTUDDTYC_OADTY_Msk         (0x30000UL)               /*!< OADTY (Bitfield-Mask: 0x03)                           */
#define GPT320_GTUDDTYC_UDF_Pos           (1UL)                     /*!< UDF (Bit 1)                                           */
#define GPT320_GTUDDTYC_UDF_Msk           (0x2UL)                   /*!< UDF (Bitfield-Mask: 0x01)                             */
#define GPT320_GTUDDTYC_UD_Pos            (0UL)                     /*!< UD (Bit 0)                                            */
#define GPT320_GTUDDTYC_UD_Msk            (0x1UL)                   /*!< UD (Bitfield-Mask: 0x01)                              */
/* =========================================================  GTIOR  ========================================================= */
#define GPT320_GTIOR_NFCSB_Pos            (30UL)                    /*!< NFCSB (Bit 30)                                        */
#define GPT320_GTIOR_NFCSB_Msk            (0xc0000000UL)            /*!< NFCSB (Bitfield-Mask: 0x03)                           */
#define GPT320_GTIOR_NFBEN_Pos            (29UL)                    /*!< NFBEN (Bit 29)                                        */
#define GPT320_GTIOR_NFBEN_Msk            (0x20000000UL)            /*!< NFBEN (Bitfield-Mask: 0x01)                           */
#define GPT320_GTIOR_OBDF_Pos             (25UL)                    /*!< OBDF (Bit 25)                                         */
#define GPT320_GTIOR_OBDF_Msk             (0x6000000UL)             /*!< OBDF (Bitfield-Mask: 0x03)                            */
#define GPT320_GTIOR_OBE_Pos              (24UL)                    /*!< OBE (Bit 24)                                          */
#define GPT320_GTIOR_OBE_Msk              (0x1000000UL)             /*!< OBE (Bitfield-Mask: 0x01)                             */
#define GPT320_GTIOR_OBHLD_Pos            (23UL)                    /*!< OBHLD (Bit 23)                                        */
#define GPT320_GTIOR_OBHLD_Msk            (0x800000UL)              /*!< OBHLD (Bitfield-Mask: 0x01)                           */
#define GPT320_GTIOR_OBDFLT_Pos           (22UL)                    /*!< OBDFLT (Bit 22)                                       */
#define GPT320_GTIOR_OBDFLT_Msk           (0x400000UL)              /*!< OBDFLT (Bitfield-Mask: 0x01)                          */
#define GPT320_GTIOR_GTIOB_Pos            (16UL)                    /*!< GTIOB (Bit 16)                                        */
#define GPT320_GTIOR_GTIOB_Msk            (0x1f0000UL)              /*!< GTIOB (Bitfield-Mask: 0x1f)                           */
#define GPT320_GTIOR_NFCSA_Pos            (14UL)                    /*!< NFCSA (Bit 14)                                        */
#define GPT320_GTIOR_NFCSA_Msk            (0xc000UL)                /*!< NFCSA (Bitfield-Mask: 0x03)                           */
#define GPT320_GTIOR_NFAEN_Pos            (13UL)                    /*!< NFAEN (Bit 13)                                        */
#define GPT320_GTIOR_NFAEN_Msk            (0x2000UL)                /*!< NFAEN (Bitfield-Mask: 0x01)                           */
#define GPT320_GTIOR_OADF_Pos             (9UL)                     /*!< OADF (Bit 9)                                          */
#define GPT320_GTIOR_OADF_Msk             (0x600UL)                 /*!< OADF (Bitfield-Mask: 0x03)                            */
#define GPT320_GTIOR_OAE_Pos              (8UL)                     /*!< OAE (Bit 8)                                           */
#define GPT320_GTIOR_OAE_Msk              (0x100UL)                 /*!< OAE (Bitfield-Mask: 0x01)                             */
#define GPT320_GTIOR_OAHLD_Pos            (7UL)                     /*!< OAHLD (Bit 7)                                         */
#define GPT320_GTIOR_OAHLD_Msk            (0x80UL)                  /*!< OAHLD (Bitfield-Mask: 0x01)                           */
#define GPT320_GTIOR_OADFLT_Pos           (6UL)                     /*!< OADFLT (Bit 6)                                        */
#define GPT320_GTIOR_OADFLT_Msk           (0x40UL)                  /*!< OADFLT (Bitfield-Mask: 0x01)                          */
#define GPT320_GTIOR_GTIOA_Pos            (0UL)                     /*!< GTIOA (Bit 0)                                         */
#define GPT320_GTIOR_GTIOA_Msk            (0x1fUL)                  /*!< GTIOA (Bitfield-Mask: 0x1f)                           */
/* ========================================================  GTINTAD  ======================================================== */
#define GPT320_GTINTAD_GRPABL_Pos         (30UL)                    /*!< GRPABL (Bit 30)                                       */
#define GPT320_GTINTAD_GRPABL_Msk         (0x40000000UL)            /*!< GRPABL (Bitfield-Mask: 0x01)                          */
#define GPT320_GTINTAD_GRPABH_Pos         (29UL)                    /*!< GRPABH (Bit 29)                                       */
#define GPT320_GTINTAD_GRPABH_Msk         (0x20000000UL)            /*!< GRPABH (Bitfield-Mask: 0x01)                          */
#define GPT320_GTINTAD_GRP0_Pos           (24UL)                    /*!< GRP0 (Bit 24)                                         */
#define GPT320_GTINTAD_GRP0_Msk           (0x1000000UL)             /*!< GRP0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  GTST  ========================================================== */
#define GPT320_GTST_OABLF_Pos             (30UL)                    /*!< OABLF (Bit 30)                                        */
#define GPT320_GTST_OABLF_Msk             (0x40000000UL)            /*!< OABLF (Bitfield-Mask: 0x01)                           */
#define GPT320_GTST_OABHF_Pos             (29UL)                    /*!< OABHF (Bit 29)                                        */
#define GPT320_GTST_OABHF_Msk             (0x20000000UL)            /*!< OABHF (Bitfield-Mask: 0x01)                           */
#define GPT320_GTST_ODF_Pos               (24UL)                    /*!< ODF (Bit 24)                                          */
#define GPT320_GTST_ODF_Msk               (0x1000000UL)             /*!< ODF (Bitfield-Mask: 0x01)                             */
#define GPT320_GTST_TUCF_Pos              (15UL)                    /*!< TUCF (Bit 15)                                         */
#define GPT320_GTST_TUCF_Msk              (0x8000UL)                /*!< TUCF (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFPU_Pos             (7UL)                     /*!< TCFPU (Bit 7)                                         */
#define GPT320_GTST_TCFPU_Msk             (0x80UL)                  /*!< TCFPU (Bitfield-Mask: 0x01)                           */
#define GPT320_GTST_TCFPO_Pos             (6UL)                     /*!< TCFPO (Bit 6)                                         */
#define GPT320_GTST_TCFPO_Msk             (0x40UL)                  /*!< TCFPO (Bitfield-Mask: 0x01)                           */
#define GPT320_GTST_TCFF_Pos              (5UL)                     /*!< TCFF (Bit 5)                                          */
#define GPT320_GTST_TCFF_Msk              (0x20UL)                  /*!< TCFF (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFE_Pos              (4UL)                     /*!< TCFE (Bit 4)                                          */
#define GPT320_GTST_TCFE_Msk              (0x10UL)                  /*!< TCFE (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFD_Pos              (3UL)                     /*!< TCFD (Bit 3)                                          */
#define GPT320_GTST_TCFD_Msk              (0x8UL)                   /*!< TCFD (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFC_Pos              (2UL)                     /*!< TCFC (Bit 2)                                          */
#define GPT320_GTST_TCFC_Msk              (0x4UL)                   /*!< TCFC (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFB_Pos              (1UL)                     /*!< TCFB (Bit 1)                                          */
#define GPT320_GTST_TCFB_Msk              (0x2UL)                   /*!< TCFB (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFA_Pos              (0UL)                     /*!< TCFA (Bit 0)                                          */
#define GPT320_GTST_TCFA_Msk              (0x1UL)                   /*!< TCFA (Bitfield-Mask: 0x01)                            */
/* =========================================================  GTBER  ========================================================= */
#define GPT320_GTBER_CCRSWT_Pos           (22UL)                    /*!< CCRSWT (Bit 22)                                       */
#define GPT320_GTBER_CCRSWT_Msk           (0x400000UL)              /*!< CCRSWT (Bitfield-Mask: 0x01)                          */
#define GPT320_GTBER_PR_Pos               (20UL)                    /*!< PR (Bit 20)                                           */
#define GPT320_GTBER_PR_Msk               (0x100000UL)              /*!< PR (Bitfield-Mask: 0x01)                              */
#define GPT320_GTBER_CCRB_Pos             (18UL)                    /*!< CCRB (Bit 18)                                         */
#define GPT320_GTBER_CCRB_Msk             (0xc0000UL)               /*!< CCRB (Bitfield-Mask: 0x03)                            */
#define GPT320_GTBER_CCRA_Pos             (16UL)                    /*!< CCRA (Bit 16)                                         */
#define GPT320_GTBER_CCRA_Msk             (0x30000UL)               /*!< CCRA (Bitfield-Mask: 0x03)                            */
#define GPT320_GTBER_BD_Pos               (0UL)                     /*!< BD (Bit 0)                                            */
#define GPT320_GTBER_BD_Msk               (0x3UL)                   /*!< BD (Bitfield-Mask: 0x03)                              */
/* =========================================================  GTCNT  ========================================================= */
#define GPT320_GTCNT_GTCNT_Pos            (0UL)                     /*!< GTCNT (Bit 0)                                         */
#define GPT320_GTCNT_GTCNT_Msk            (0xffffffffUL)            /*!< GTCNT (Bitfield-Mask: 0xffffffff)                     */
/* ========================================================  GTCCRA  ========================================================= */
#define GPT320_GTCCRA_GTCCRA_Pos          (0UL)                     /*!< GTCCRA (Bit 0)                                        */
#define GPT320_GTCCRA_GTCCRA_Msk          (0xffffffffUL)            /*!< GTCCRA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  GTCCRB  ========================================================= */
#define GPT320_GTCCRB_GTCCRB_Pos          (0UL)                     /*!< GTCCRB (Bit 0)                                        */
#define GPT320_GTCCRB_GTCCRB_Msk          (0xffffffffUL)            /*!< GTCCRB (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  GTCCRC  ========================================================= */
#define GPT320_GTCCRC_GTCCRC_Pos          (0UL)                     /*!< GTCCRC (Bit 0)                                        */
#define GPT320_GTCCRC_GTCCRC_Msk          (0xffffffffUL)            /*!< GTCCRC (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  GTCCRD  ========================================================= */
#define GPT320_GTCCRD_GTCCRD_Pos          (0UL)                     /*!< GTCCRD (Bit 0)                                        */
#define GPT320_GTCCRD_GTCCRD_Msk          (0xffffffffUL)            /*!< GTCCRD (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  GTCCRE  ========================================================= */
#define GPT320_GTCCRE_GTCCRE_Pos          (0UL)                     /*!< GTCCRE (Bit 0)                                        */
#define GPT320_GTCCRE_GTCCRE_Msk          (0xffffffffUL)            /*!< GTCCRE (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  GTCCRF  ========================================================= */
#define GPT320_GTCCRF_GTCCRF_Pos          (0UL)                     /*!< GTCCRF (Bit 0)                                        */
#define GPT320_GTCCRF_GTCCRF_Msk          (0xffffffffUL)            /*!< GTCCRF (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  GTPR  ========================================================== */
#define GPT320_GTPR_GTPR_Pos              (0UL)                     /*!< GTPR (Bit 0)                                          */
#define GPT320_GTPR_GTPR_Msk              (0xffffffffUL)            /*!< GTPR (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  GTPBR  ========================================================= */
#define GPT320_GTPBR_GTPBR_Pos            (0UL)                     /*!< GTPBR (Bit 0)                                         */
#define GPT320_GTPBR_GTPBR_Msk            (0xffffffffUL)            /*!< GTPBR (Bitfield-Mask: 0xffffffff)                     */
/* ========================================================  GTDTCR  ========================================================= */
#define GPT320_GTDTCR_TDE_Pos             (0UL)                     /*!< TDE (Bit 0)                                           */
#define GPT320_GTDTCR_TDE_Msk             (0x1UL)                   /*!< TDE (Bitfield-Mask: 0x01)                             */
/* =========================================================  GTDVU  ========================================================= */
#define GPT320_GTDVU_GTDVU_Pos            (0UL)                     /*!< GTDVU (Bit 0)                                         */
#define GPT320_GTDVU_GTDVU_Msk            (0xffffffffUL)            /*!< GTDVU (Bitfield-Mask: 0xffffffff)                     */


/* =========================================================================================================================== */
/* ================                                          GPT_OPS                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  OPSCR  ========================================================= */
#define GPT_OPS_OPSCR_NFCS_Pos            (30UL)                    /*!< NFCS (Bit 30)                                         */
#define GPT_OPS_OPSCR_NFCS_Msk            (0xc0000000UL)            /*!< NFCS (Bitfield-Mask: 0x03)                            */
#define GPT_OPS_OPSCR_NFEN_Pos            (29UL)                    /*!< NFEN (Bit 29)                                         */
#define GPT_OPS_OPSCR_NFEN_Msk            (0x20000000UL)            /*!< NFEN (Bitfield-Mask: 0x01)                            */
#define GPT_OPS_OPSCR_GODF_Pos            (26UL)                    /*!< GODF (Bit 26)                                         */
#define GPT_OPS_OPSCR_GODF_Msk            (0x4000000UL)             /*!< GODF (Bitfield-Mask: 0x01)                            */
#define GPT_OPS_OPSCR_GRP0_Pos            (24UL)                    /*!< GRP0 (Bit 24)                                         */
#define GPT_OPS_OPSCR_GRP0_Msk            (0x1000000UL)             /*!< GRP0 (Bitfield-Mask: 0x01)                            */
#define GPT_OPS_OPSCR_ALIGN_Pos           (21UL)                    /*!< ALIGN (Bit 21)                                        */
#define GPT_OPS_OPSCR_ALIGN_Msk           (0x200000UL)              /*!< ALIGN (Bitfield-Mask: 0x01)                           */
#define GPT_OPS_OPSCR_RV_Pos              (20UL)                    /*!< RV (Bit 20)                                           */
#define GPT_OPS_OPSCR_RV_Msk              (0x100000UL)              /*!< RV (Bitfield-Mask: 0x01)                              */
#define GPT_OPS_OPSCR_INV_Pos             (19UL)                    /*!< INV (Bit 19)                                          */
#define GPT_OPS_OPSCR_INV_Msk             (0x80000UL)               /*!< INV (Bitfield-Mask: 0x01)                             */
#define GPT_OPS_OPSCR_N_Pos               (18UL)                    /*!< N (Bit 18)                                            */
#define GPT_OPS_OPSCR_N_Msk               (0x40000UL)               /*!< N (Bitfield-Mask: 0x01)                               */
#define GPT_OPS_OPSCR_P_Pos               (17UL)                    /*!< P (Bit 17)                                            */
#define GPT_OPS_OPSCR_P_Msk               (0x20000UL)               /*!< P (Bitfield-Mask: 0x01)                               */
#define GPT_OPS_OPSCR_FB_Pos              (16UL)                    /*!< FB (Bit 16)                                           */
#define GPT_OPS_OPSCR_FB_Msk              (0x10000UL)               /*!< FB (Bitfield-Mask: 0x01)                              */
#define GPT_OPS_OPSCR_EN_Pos              (8UL)                     /*!< EN (Bit 8)                                            */
#define GPT_OPS_OPSCR_EN_Msk              (0x100UL)                 /*!< EN (Bitfield-Mask: 0x01)                              */
#define GPT_OPS_OPSCR_W_Pos               (6UL)                     /*!< W (Bit 6)                                             */
#define GPT_OPS_OPSCR_W_Msk               (0x40UL)                  /*!< W (Bitfield-Mask: 0x01)                               */
#define GPT_OPS_OPSCR_V_Pos               (5UL)                     /*!< V (Bit 5)                                             */
#define GPT_OPS_OPSCR_V_Msk               (0x20UL)                  /*!< V (Bitfield-Mask: 0x01)                               */
#define GPT_OPS_OPSCR_U_Pos               (4UL)                     /*!< U (Bit 4)                                             */
#define GPT_OPS_OPSCR_U_Msk               (0x10UL)                  /*!< U (Bitfield-Mask: 0x01)                               */
#define GPT_OPS_OPSCR_WF_Pos              (2UL)                     /*!< WF (Bit 2)                                            */
#define GPT_OPS_OPSCR_WF_Msk              (0x4UL)                   /*!< WF (Bitfield-Mask: 0x01)                              */
#define GPT_OPS_OPSCR_VF_Pos              (1UL)                     /*!< VF (Bit 1)                                            */
#define GPT_OPS_OPSCR_VF_Msk              (0x2UL)                   /*!< VF (Bitfield-Mask: 0x01)                              */
#define GPT_OPS_OPSCR_UF_Pos              (0UL)                     /*!< UF (Bit 0)                                            */
#define GPT_OPS_OPSCR_UF_Msk              (0x1UL)                   /*!< UF (Bitfield-Mask: 0x01)                              */


/* =========================================================================================================================== */
/* ================                                            ICU                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  IRQCR0  ========================================================= */
#define ICU_IRQCR0_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR0_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR1  ========================================================= */
#define ICU_IRQCR1_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR1_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR2  ========================================================= */
#define ICU_IRQCR2_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR2_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR3  ========================================================= */
#define ICU_IRQCR3_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR3_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR4  ========================================================= */
#define ICU_IRQCR4_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR4_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR5  ========================================================= */
#define ICU_IRQCR5_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR5_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR6  ========================================================= */
#define ICU_IRQCR6_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR6_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR7  ========================================================= */
#define ICU_IRQCR7_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR7_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR8  ========================================================= */
#define ICU_IRQCR8_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR8_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR9  ========================================================= */
#define ICU_IRQCR9_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR9_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* =========================================================  NMISR  ========================================================= */
#define ICU_NMISR_SPEST_Pos               (12UL)                    /*!< SPEST (Bit 12)                                        */
#define ICU_NMISR_SPEST_Msk               (0x1000UL)                /*!< SPEST (Bitfield-Mask: 0x01)                           */
#define ICU_NMISR_BUSMST_Pos              (11UL)                    /*!< BUSMST (Bit 11)                                       */
#define ICU_NMISR_BUSMST_Msk              (0x800UL)                 /*!< BUSMST (Bitfield-Mask: 0x01)                          */
#define ICU_NMISR_BUSSST_Pos              (10UL)                    /*!< BUSSST (Bit 10)                                       */
#define ICU_NMISR_BUSSST_Msk              (0x400UL)                 /*!< BUSSST (Bitfield-Mask: 0x01)                          */
#define ICU_NMISR_NMIST_Pos               (7UL)                     /*!< NMIST (Bit 7)                                         */
#define ICU_NMISR_NMIST_Msk               (0x80UL)                  /*!< NMIST (Bitfield-Mask: 0x01)                           */
#define ICU_NMISR_OSTST_Pos               (6UL)                     /*!< OSTST (Bit 6)                                         */
#define ICU_NMISR_OSTST_Msk               (0x40UL)                  /*!< OSTST (Bitfield-Mask: 0x01)                           */
#define ICU_NMISR_LVDBATST_Pos            (3UL)                     /*!< LVDBATST (Bit 3)                                      */
#define ICU_NMISR_LVDBATST_Msk            (0x8UL)                   /*!< LVDBATST (Bitfield-Mask: 0x01)                        */
#define ICU_NMISR_LVD1ST_Pos              (2UL)                     /*!< LVD1ST (Bit 2)                                        */
#define ICU_NMISR_LVD1ST_Msk              (0x4UL)                   /*!< LVD1ST (Bitfield-Mask: 0x01)                          */
#define ICU_NMISR_WDTST_Pos               (1UL)                     /*!< WDTST (Bit 1)                                         */
#define ICU_NMISR_WDTST_Msk               (0x2UL)                   /*!< WDTST (Bitfield-Mask: 0x01)                           */
#define ICU_NMISR_IWDTST_Pos              (0UL)                     /*!< IWDTST (Bit 0)                                        */
#define ICU_NMISR_IWDTST_Msk              (0x1UL)                   /*!< IWDTST (Bitfield-Mask: 0x01)                          */
/* =========================================================  NMIER  ========================================================= */
#define ICU_NMIER_SPEEN_Pos               (12UL)                    /*!< SPEEN (Bit 12)                                        */
#define ICU_NMIER_SPEEN_Msk               (0x1000UL)                /*!< SPEEN (Bitfield-Mask: 0x01)                           */
#define ICU_NMIER_BUSMEN_Pos              (11UL)                    /*!< BUSMEN (Bit 11)                                       */
#define ICU_NMIER_BUSMEN_Msk              (0x800UL)                 /*!< BUSMEN (Bitfield-Mask: 0x01)                          */
#define ICU_NMIER_BUSSEN_Pos              (10UL)                    /*!< BUSSEN (Bit 10)                                       */
#define ICU_NMIER_BUSSEN_Msk              (0x400UL)                 /*!< BUSSEN (Bitfield-Mask: 0x01)                          */
#define ICU_NMIER_NMIEN_Pos               (7UL)                     /*!< NMIEN (Bit 7)                                         */
#define ICU_NMIER_NMIEN_Msk               (0x80UL)                  /*!< NMIEN (Bitfield-Mask: 0x01)                           */
#define ICU_NMIER_OSTEN_Pos               (6UL)                     /*!< OSTEN (Bit 6)                                         */
#define ICU_NMIER_OSTEN_Msk               (0x40UL)                  /*!< OSTEN (Bitfield-Mask: 0x01)                           */
#define ICU_NMIER_LVDBATEN_Pos            (3UL)                     /*!< LVDBATEN (Bit 3)                                      */
#define ICU_NMIER_LVDBATEN_Msk            (0x8UL)                   /*!< LVDBATEN (Bitfield-Mask: 0x01)                        */
#define ICU_NMIER_LVD1EN_Pos              (2UL)                     /*!< LVD1EN (Bit 2)                                        */
#define ICU_NMIER_LVD1EN_Msk              (0x4UL)                   /*!< LVD1EN (Bitfield-Mask: 0x01)                          */
#define ICU_NMIER_WDTEN_Pos               (1UL)                     /*!< WDTEN (Bit 1)                                         */
#define ICU_NMIER_WDTEN_Msk               (0x2UL)                   /*!< WDTEN (Bitfield-Mask: 0x01)                           */
#define ICU_NMIER_IWDTEN_Pos              (0UL)                     /*!< IWDTEN (Bit 0)                                        */
#define ICU_NMIER_IWDTEN_Msk              (0x1UL)                   /*!< IWDTEN (Bitfield-Mask: 0x01)                          */
/* ========================================================  NMICLR  ========================================================= */
#define ICU_NMICLR_SPECLR_Pos             (12UL)                    /*!< SPECLR (Bit 12)                                       */
#define ICU_NMICLR_SPECLR_Msk             (0x1000UL)                /*!< SPECLR (Bitfield-Mask: 0x01)                          */
#define ICU_NMICLR_BUSMCLR_Pos            (11UL)                    /*!< BUSMCLR (Bit 11)                                      */
#define ICU_NMICLR_BUSMCLR_Msk            (0x800UL)                 /*!< BUSMCLR (Bitfield-Mask: 0x01)                         */
#define ICU_NMICLR_BUSSCLR_Pos            (10UL)                    /*!< BUSSCLR (Bit 10)                                      */
#define ICU_NMICLR_BUSSCLR_Msk            (0x400UL)                 /*!< BUSSCLR (Bitfield-Mask: 0x01)                         */
#define ICU_NMICLR_NMICLR_Pos             (7UL)                     /*!< NMICLR (Bit 7)                                        */
#define ICU_NMICLR_NMICLR_Msk             (0x80UL)                  /*!< NMICLR (Bitfield-Mask: 0x01)                          */
#define ICU_NMICLR_OSTCLR_Pos             (6UL)                     /*!< OSTCLR (Bit 6)                                        */
#define ICU_NMICLR_OSTCLR_Msk             (0x40UL)                  /*!< OSTCLR (Bitfield-Mask: 0x01)                          */
#define ICU_NMICLR_LVDBATCLR_Pos          (3UL)                     /*!< LVDBATCLR (Bit 3)                                     */
#define ICU_NMICLR_LVDBATCLR_Msk          (0x8UL)                   /*!< LVDBATCLR (Bitfield-Mask: 0x01)                       */
#define ICU_NMICLR_LVD1CLR_Pos            (2UL)                     /*!< LVD1CLR (Bit 2)                                       */
#define ICU_NMICLR_LVD1CLR_Msk            (0x4UL)                   /*!< LVD1CLR (Bitfield-Mask: 0x01)                         */
#define ICU_NMICLR_WDTCLR_Pos             (1UL)                     /*!< WDTCLR (Bit 1)                                        */
#define ICU_NMICLR_WDTCLR_Msk             (0x2UL)                   /*!< WDTCLR (Bitfield-Mask: 0x01)                          */
#define ICU_NMICLR_IWDTCLR_Pos            (0UL)                     /*!< IWDTCLR (Bit 0)                                       */
#define ICU_NMICLR_IWDTCLR_Msk            (0x1UL)                   /*!< IWDTCLR (Bitfield-Mask: 0x01)                         */
/* =========================================================  NMICR  ========================================================= */
#define ICU_NMICR_NMIMD_Pos               (0UL)                     /*!< NMIMD (Bit 0)                                         */
#define ICU_NMICR_NMIMD_Msk               (0x1UL)                   /*!< NMIMD (Bitfield-Mask: 0x01)                           */
/* =========================================================  WUPEN  ========================================================= */
#define ICU_WUPEN_SOLDLWUPEN_Pos          (31UL)                    /*!< SOLDLWUPEN (Bit 31)                                   */
#define ICU_WUPEN_SOLDLWUPEN_Msk          (0x80000000UL)            /*!< SOLDLWUPEN (Bitfield-Mask: 0x01)                      */
#define ICU_WUPEN_AGT0CAWUPEN_Pos         (30UL)                    /*!< AGT0CAWUPEN (Bit 30)                                  */
#define ICU_WUPEN_AGT0CAWUPEN_Msk         (0x40000000UL)            /*!< AGT0CAWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_AGT1CAWUPEN_Pos         (29UL)                    /*!< AGT1CAWUPEN (Bit 29)                                  */
#define ICU_WUPEN_AGT1CAWUPEN_Msk         (0x20000000UL)            /*!< AGT1CAWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_AGT1UDWUPEN_Pos         (28UL)                    /*!< AGT1UDWUPEN (Bit 28)                                  */
#define ICU_WUPEN_AGT1UDWUPEN_Msk         (0x10000000UL)            /*!< AGT1UDWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_USBFSWUPEN_Pos          (27UL)                    /*!< USBFSWUPEN (Bit 27)                                   */
#define ICU_WUPEN_USBFSWUPEN_Msk          (0x8000000UL)             /*!< USBFSWUPEN (Bitfield-Mask: 0x01)                      */
#define ICU_WUPEN_CCCPRDWUPEN_Pos         (26UL)                    /*!< CCCPRDWUPEN (Bit 26)                                  */
#define ICU_WUPEN_CCCPRDWUPEN_Msk         (0x4000000UL)             /*!< CCCPRDWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_RTCPRDWUPEN_Pos         (25UL)                    /*!< RTCPRDWUPEN (Bit 25)                                  */
#define ICU_WUPEN_RTCPRDWUPEN_Msk         (0x2000000UL)             /*!< RTCPRDWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_RTCALMWUPEN_Pos         (24UL)                    /*!< RTCALMWUPEN (Bit 24)                                  */
#define ICU_WUPEN_RTCALMWUPEN_Msk         (0x1000000UL)             /*!< RTCALMWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_ACMP0WUPEN_Pos          (23UL)                    /*!< ACMP0WUPEN (Bit 23)                                   */
#define ICU_WUPEN_ACMP0WUPEN_Msk          (0x800000UL)              /*!< ACMP0WUPEN (Bitfield-Mask: 0x01)                      */
#define ICU_WUPEN_SOLDHWUPEN_Pos          (22UL)                    /*!< SOLDHWUPEN (Bit 22)                                   */
#define ICU_WUPEN_SOLDHWUPEN_Msk          (0x400000UL)              /*!< SOLDHWUPEN (Bitfield-Mask: 0x01)                      */
#define ICU_WUPEN_LVDBATWUPEN_Pos         (19UL)                    /*!< LVDBATWUPEN (Bit 19)                                  */
#define ICU_WUPEN_LVDBATWUPEN_Msk         (0x80000UL)               /*!< LVDBATWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_LVD1WUPEN_Pos           (18UL)                    /*!< LVD1WUPEN (Bit 18)                                    */
#define ICU_WUPEN_LVD1WUPEN_Msk           (0x40000UL)               /*!< LVD1WUPEN (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_KEYWUPEN_Pos            (17UL)                    /*!< KEYWUPEN (Bit 17)                                     */
#define ICU_WUPEN_KEYWUPEN_Msk            (0x20000UL)               /*!< KEYWUPEN (Bitfield-Mask: 0x01)                        */
#define ICU_WUPEN_IWDTWUPEN_Pos           (16UL)                    /*!< IWDTWUPEN (Bit 16)                                    */
#define ICU_WUPEN_IWDTWUPEN_Msk           (0x10000UL)               /*!< IWDTWUPEN (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN9_Pos           (9UL)                     /*!< IRQWUPEN9 (Bit 9)                                     */
#define ICU_WUPEN_IRQWUPEN9_Msk           (0x200UL)                 /*!< IRQWUPEN9 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN8_Pos           (8UL)                     /*!< IRQWUPEN8 (Bit 8)                                     */
#define ICU_WUPEN_IRQWUPEN8_Msk           (0x100UL)                 /*!< IRQWUPEN8 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN7_Pos           (7UL)                     /*!< IRQWUPEN7 (Bit 7)                                     */
#define ICU_WUPEN_IRQWUPEN7_Msk           (0x80UL)                  /*!< IRQWUPEN7 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN6_Pos           (6UL)                     /*!< IRQWUPEN6 (Bit 6)                                     */
#define ICU_WUPEN_IRQWUPEN6_Msk           (0x40UL)                  /*!< IRQWUPEN6 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN5_Pos           (5UL)                     /*!< IRQWUPEN5 (Bit 5)                                     */
#define ICU_WUPEN_IRQWUPEN5_Msk           (0x20UL)                  /*!< IRQWUPEN5 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN4_Pos           (4UL)                     /*!< IRQWUPEN4 (Bit 4)                                     */
#define ICU_WUPEN_IRQWUPEN4_Msk           (0x10UL)                  /*!< IRQWUPEN4 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN3_Pos           (3UL)                     /*!< IRQWUPEN3 (Bit 3)                                     */
#define ICU_WUPEN_IRQWUPEN3_Msk           (0x8UL)                   /*!< IRQWUPEN3 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN2_Pos           (2UL)                     /*!< IRQWUPEN2 (Bit 2)                                     */
#define ICU_WUPEN_IRQWUPEN2_Msk           (0x4UL)                   /*!< IRQWUPEN2 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN1_Pos           (1UL)                     /*!< IRQWUPEN1 (Bit 1)                                     */
#define ICU_WUPEN_IRQWUPEN1_Msk           (0x2UL)                   /*!< IRQWUPEN1 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN0_Pos           (0UL)                     /*!< IRQWUPEN0 (Bit 0)                                     */
#define ICU_WUPEN_IRQWUPEN0_Msk           (0x1UL)                   /*!< IRQWUPEN0 (Bitfield-Mask: 0x01)                       */
/* ========================================================  SELSR0  ========================================================= */
#define ICU_SELSR0_SELS_Pos               (0UL)                     /*!< SELS (Bit 0)                                          */
#define ICU_SELSR0_SELS_Msk               (0xffUL)                  /*!< SELS (Bitfield-Mask: 0xff)                            */
/* ========================================================  IELSR0  ========================================================= */
#define ICU_IELSR0_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR0_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR0_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR0_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR0_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR0_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR1  ========================================================= */
#define ICU_IELSR1_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR1_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR1_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR1_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR1_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR1_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR2  ========================================================= */
#define ICU_IELSR2_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR2_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR2_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR2_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR2_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR2_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR3  ========================================================= */
#define ICU_IELSR3_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR3_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR3_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR3_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR3_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR3_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR4  ========================================================= */
#define ICU_IELSR4_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR4_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR4_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR4_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR4_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR4_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR5  ========================================================= */
#define ICU_IELSR5_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR5_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR5_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR5_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR5_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR5_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR6  ========================================================= */
#define ICU_IELSR6_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR6_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR6_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR6_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR6_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR6_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR7  ========================================================= */
#define ICU_IELSR7_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR7_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR7_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR7_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR7_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR7_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR8  ========================================================= */
#define ICU_IELSR8_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR8_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR8_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR8_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR8_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR8_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR9  ========================================================= */
#define ICU_IELSR9_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR9_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR9_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR9_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR9_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR9_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR10  ======================================================== */
#define ICU_IELSR10_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR10_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR10_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR10_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR10_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR10_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR11  ======================================================== */
#define ICU_IELSR11_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR11_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR11_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR11_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR11_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR11_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR12  ======================================================== */
#define ICU_IELSR12_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR12_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR12_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR12_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR12_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR12_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR13  ======================================================== */
#define ICU_IELSR13_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR13_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR13_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR13_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR13_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR13_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR14  ======================================================== */
#define ICU_IELSR14_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR14_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR14_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR14_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR14_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR14_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR15  ======================================================== */
#define ICU_IELSR15_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR15_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR15_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR15_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR15_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR15_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR16  ======================================================== */
#define ICU_IELSR16_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR16_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR16_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR16_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR16_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR16_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR17  ======================================================== */
#define ICU_IELSR17_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR17_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR17_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR17_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR17_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR17_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR18  ======================================================== */
#define ICU_IELSR18_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR18_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR18_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR18_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR18_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR18_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR19  ======================================================== */
#define ICU_IELSR19_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR19_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR19_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR19_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR19_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR19_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR20  ======================================================== */
#define ICU_IELSR20_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR20_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR20_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR20_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR20_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR20_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR21  ======================================================== */
#define ICU_IELSR21_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR21_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR21_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR21_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR21_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR21_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR22  ======================================================== */
#define ICU_IELSR22_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR22_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR22_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR22_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR22_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR22_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR23  ======================================================== */
#define ICU_IELSR23_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR23_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR23_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR23_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR23_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR23_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR24  ======================================================== */
#define ICU_IELSR24_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR24_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR24_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR24_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR24_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR24_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR25  ======================================================== */
#define ICU_IELSR25_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR25_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR25_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR25_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR25_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR25_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR26  ======================================================== */
#define ICU_IELSR26_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR26_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR26_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR26_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR26_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR26_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR27  ======================================================== */
#define ICU_IELSR27_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR27_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR27_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR27_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR27_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR27_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR28  ======================================================== */
#define ICU_IELSR28_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR28_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR28_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR28_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR28_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR28_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR29  ======================================================== */
#define ICU_IELSR29_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR29_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR29_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR29_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR29_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR29_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR30  ======================================================== */
#define ICU_IELSR30_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR30_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR30_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR30_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR30_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR30_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IELSR31  ======================================================== */
#define ICU_IELSR31_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR31_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
#define ICU_IELSR31_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR31_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR31_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR31_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
/* ========================================================  DELSR0  ========================================================= */
#define ICU_DELSR0_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_DELSR0_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_DELSR0_DELS_Pos               (0UL)                     /*!< DELS (Bit 0)                                          */
#define ICU_DELSR0_DELS_Msk               (0xffUL)                  /*!< DELS (Bitfield-Mask: 0xff)                            */
/* ========================================================  DELSR1  ========================================================= */
#define ICU_DELSR1_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_DELSR1_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_DELSR1_DELS_Pos               (0UL)                     /*!< DELS (Bit 0)                                          */
#define ICU_DELSR1_DELS_Msk               (0xffUL)                  /*!< DELS (Bitfield-Mask: 0xff)                            */
/* ========================================================  DELSR2  ========================================================= */
#define ICU_DELSR2_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_DELSR2_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_DELSR2_DELS_Pos               (0UL)                     /*!< DELS (Bit 0)                                          */
#define ICU_DELSR2_DELS_Msk               (0xffUL)                  /*!< DELS (Bitfield-Mask: 0xff)                            */
/* ========================================================  DELSR3  ========================================================= */
#define ICU_DELSR3_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_DELSR3_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_DELSR3_DELS_Pos               (0UL)                     /*!< DELS (Bit 0)                                          */
#define ICU_DELSR3_DELS_Msk               (0xffUL)                  /*!< DELS (Bitfield-Mask: 0xff)                            */


/* =========================================================================================================================== */
/* ================                                           IIC0                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  ICCR1  ========================================================= */
#define IIC0_ICCR1_ICE_Pos                (7UL)                     /*!< ICE (Bit 7)                                           */
#define IIC0_ICCR1_ICE_Msk                (0x80UL)                  /*!< ICE (Bitfield-Mask: 0x01)                             */
#define IIC0_ICCR1_IICRST_Pos             (6UL)                     /*!< IICRST (Bit 6)                                        */
#define IIC0_ICCR1_IICRST_Msk             (0x40UL)                  /*!< IICRST (Bitfield-Mask: 0x01)                          */
#define IIC0_ICCR1_CLO_Pos                (5UL)                     /*!< CLO (Bit 5)                                           */
#define IIC0_ICCR1_CLO_Msk                (0x20UL)                  /*!< CLO (Bitfield-Mask: 0x01)                             */
#define IIC0_ICCR1_SOWP_Pos               (4UL)                     /*!< SOWP (Bit 4)                                          */
#define IIC0_ICCR1_SOWP_Msk               (0x10UL)                  /*!< SOWP (Bitfield-Mask: 0x01)                            */
#define IIC0_ICCR1_SCLO_Pos               (3UL)                     /*!< SCLO (Bit 3)                                          */
#define IIC0_ICCR1_SCLO_Msk               (0x8UL)                   /*!< SCLO (Bitfield-Mask: 0x01)                            */
#define IIC0_ICCR1_SDAO_Pos               (2UL)                     /*!< SDAO (Bit 2)                                          */
#define IIC0_ICCR1_SDAO_Msk               (0x4UL)                   /*!< SDAO (Bitfield-Mask: 0x01)                            */
#define IIC0_ICCR1_SCLI_Pos               (1UL)                     /*!< SCLI (Bit 1)                                          */
#define IIC0_ICCR1_SCLI_Msk               (0x2UL)                   /*!< SCLI (Bitfield-Mask: 0x01)                            */
#define IIC0_ICCR1_SDAI_Pos               (0UL)                     /*!< SDAI (Bit 0)                                          */
#define IIC0_ICCR1_SDAI_Msk               (0x1UL)                   /*!< SDAI (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICCR2  ========================================================= */
#define IIC0_ICCR2_BBSY_Pos               (7UL)                     /*!< BBSY (Bit 7)                                          */
#define IIC0_ICCR2_BBSY_Msk               (0x80UL)                  /*!< BBSY (Bitfield-Mask: 0x01)                            */
#define IIC0_ICCR2_MST_Pos                (6UL)                     /*!< MST (Bit 6)                                           */
#define IIC0_ICCR2_MST_Msk                (0x40UL)                  /*!< MST (Bitfield-Mask: 0x01)                             */
#define IIC0_ICCR2_TRS_Pos                (5UL)                     /*!< TRS (Bit 5)                                           */
#define IIC0_ICCR2_TRS_Msk                (0x20UL)                  /*!< TRS (Bitfield-Mask: 0x01)                             */
#define IIC0_ICCR2_SP_Pos                 (3UL)                     /*!< SP (Bit 3)                                            */
#define IIC0_ICCR2_SP_Msk                 (0x8UL)                   /*!< SP (Bitfield-Mask: 0x01)                              */
#define IIC0_ICCR2_RS_Pos                 (2UL)                     /*!< RS (Bit 2)                                            */
#define IIC0_ICCR2_RS_Msk                 (0x4UL)                   /*!< RS (Bitfield-Mask: 0x01)                              */
#define IIC0_ICCR2_ST_Pos                 (1UL)                     /*!< ST (Bit 1)                                            */
#define IIC0_ICCR2_ST_Msk                 (0x2UL)                   /*!< ST (Bitfield-Mask: 0x01)                              */
/* =========================================================  ICMR1  ========================================================= */
#define IIC0_ICMR1_MTWP_Pos               (7UL)                     /*!< MTWP (Bit 7)                                          */
#define IIC0_ICMR1_MTWP_Msk               (0x80UL)                  /*!< MTWP (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR1_CKS_Pos                (4UL)                     /*!< CKS (Bit 4)                                           */
#define IIC0_ICMR1_CKS_Msk                (0x70UL)                  /*!< CKS (Bitfield-Mask: 0x07)                             */
#define IIC0_ICMR1_BCWP_Pos               (3UL)                     /*!< BCWP (Bit 3)                                          */
#define IIC0_ICMR1_BCWP_Msk               (0x8UL)                   /*!< BCWP (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR1_BC_Pos                 (0UL)                     /*!< BC (Bit 0)                                            */
#define IIC0_ICMR1_BC_Msk                 (0x7UL)                   /*!< BC (Bitfield-Mask: 0x07)                              */
/* =========================================================  ICMR2  ========================================================= */
#define IIC0_ICMR2_DLCS_Pos               (7UL)                     /*!< DLCS (Bit 7)                                          */
#define IIC0_ICMR2_DLCS_Msk               (0x80UL)                  /*!< DLCS (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR2_SDDL_Pos               (4UL)                     /*!< SDDL (Bit 4)                                          */
#define IIC0_ICMR2_SDDL_Msk               (0x70UL)                  /*!< SDDL (Bitfield-Mask: 0x07)                            */
#define IIC0_ICMR2_TMOH_Pos               (2UL)                     /*!< TMOH (Bit 2)                                          */
#define IIC0_ICMR2_TMOH_Msk               (0x4UL)                   /*!< TMOH (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR2_TMOL_Pos               (1UL)                     /*!< TMOL (Bit 1)                                          */
#define IIC0_ICMR2_TMOL_Msk               (0x2UL)                   /*!< TMOL (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR2_TMOS_Pos               (0UL)                     /*!< TMOS (Bit 0)                                          */
#define IIC0_ICMR2_TMOS_Msk               (0x1UL)                   /*!< TMOS (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICMR3  ========================================================= */
#define IIC0_ICMR3_SMBS_Pos               (7UL)                     /*!< SMBS (Bit 7)                                          */
#define IIC0_ICMR3_SMBS_Msk               (0x80UL)                  /*!< SMBS (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR3_WAIT_Pos               (6UL)                     /*!< WAIT (Bit 6)                                          */
#define IIC0_ICMR3_WAIT_Msk               (0x40UL)                  /*!< WAIT (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR3_RDRFS_Pos              (5UL)                     /*!< RDRFS (Bit 5)                                         */
#define IIC0_ICMR3_RDRFS_Msk              (0x20UL)                  /*!< RDRFS (Bitfield-Mask: 0x01)                           */
#define IIC0_ICMR3_ACKWP_Pos              (4UL)                     /*!< ACKWP (Bit 4)                                         */
#define IIC0_ICMR3_ACKWP_Msk              (0x10UL)                  /*!< ACKWP (Bitfield-Mask: 0x01)                           */
#define IIC0_ICMR3_ACKBT_Pos              (3UL)                     /*!< ACKBT (Bit 3)                                         */
#define IIC0_ICMR3_ACKBT_Msk              (0x8UL)                   /*!< ACKBT (Bitfield-Mask: 0x01)                           */
#define IIC0_ICMR3_ACKBR_Pos              (2UL)                     /*!< ACKBR (Bit 2)                                         */
#define IIC0_ICMR3_ACKBR_Msk              (0x4UL)                   /*!< ACKBR (Bitfield-Mask: 0x01)                           */
#define IIC0_ICMR3_NF_Pos                 (0UL)                     /*!< NF (Bit 0)                                            */
#define IIC0_ICMR3_NF_Msk                 (0x3UL)                   /*!< NF (Bitfield-Mask: 0x03)                              */
/* =========================================================  ICFER  ========================================================= */
#define IIC0_ICFER_SCLE_Pos               (6UL)                     /*!< SCLE (Bit 6)                                          */
#define IIC0_ICFER_SCLE_Msk               (0x40UL)                  /*!< SCLE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICFER_NFE_Pos                (5UL)                     /*!< NFE (Bit 5)                                           */
#define IIC0_ICFER_NFE_Msk                (0x20UL)                  /*!< NFE (Bitfield-Mask: 0x01)                             */
#define IIC0_ICFER_NACKE_Pos              (4UL)                     /*!< NACKE (Bit 4)                                         */
#define IIC0_ICFER_NACKE_Msk              (0x10UL)                  /*!< NACKE (Bitfield-Mask: 0x01)                           */
#define IIC0_ICFER_SALE_Pos               (3UL)                     /*!< SALE (Bit 3)                                          */
#define IIC0_ICFER_SALE_Msk               (0x8UL)                   /*!< SALE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICFER_NALE_Pos               (2UL)                     /*!< NALE (Bit 2)                                          */
#define IIC0_ICFER_NALE_Msk               (0x4UL)                   /*!< NALE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICFER_MALE_Pos               (1UL)                     /*!< MALE (Bit 1)                                          */
#define IIC0_ICFER_MALE_Msk               (0x2UL)                   /*!< MALE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICFER_TMOE_Pos               (0UL)                     /*!< TMOE (Bit 0)                                          */
#define IIC0_ICFER_TMOE_Msk               (0x1UL)                   /*!< TMOE (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICSER  ========================================================= */
#define IIC0_ICSER_HOAE_Pos               (7UL)                     /*!< HOAE (Bit 7)                                          */
#define IIC0_ICSER_HOAE_Msk               (0x80UL)                  /*!< HOAE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSER_DIDE_Pos               (5UL)                     /*!< DIDE (Bit 5)                                          */
#define IIC0_ICSER_DIDE_Msk               (0x20UL)                  /*!< DIDE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSER_GCAE_Pos               (3UL)                     /*!< GCAE (Bit 3)                                          */
#define IIC0_ICSER_GCAE_Msk               (0x8UL)                   /*!< GCAE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSER_SAR2E_Pos              (2UL)                     /*!< SAR2E (Bit 2)                                         */
#define IIC0_ICSER_SAR2E_Msk              (0x4UL)                   /*!< SAR2E (Bitfield-Mask: 0x01)                           */
#define IIC0_ICSER_SAR1E_Pos              (1UL)                     /*!< SAR1E (Bit 1)                                         */
#define IIC0_ICSER_SAR1E_Msk              (0x2UL)                   /*!< SAR1E (Bitfield-Mask: 0x01)                           */
#define IIC0_ICSER_SAR0E_Pos              (0UL)                     /*!< SAR0E (Bit 0)                                         */
#define IIC0_ICSER_SAR0E_Msk              (0x1UL)                   /*!< SAR0E (Bitfield-Mask: 0x01)                           */
/* =========================================================  ICIER  ========================================================= */
#define IIC0_ICIER_TIE_Pos                (7UL)                     /*!< TIE (Bit 7)                                           */
#define IIC0_ICIER_TIE_Msk                (0x80UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
#define IIC0_ICIER_TEIE_Pos               (6UL)                     /*!< TEIE (Bit 6)                                          */
#define IIC0_ICIER_TEIE_Msk               (0x40UL)                  /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICIER_RIE_Pos                (5UL)                     /*!< RIE (Bit 5)                                           */
#define IIC0_ICIER_RIE_Msk                (0x20UL)                  /*!< RIE (Bitfield-Mask: 0x01)                             */
#define IIC0_ICIER_NAKIE_Pos              (4UL)                     /*!< NAKIE (Bit 4)                                         */
#define IIC0_ICIER_NAKIE_Msk              (0x10UL)                  /*!< NAKIE (Bitfield-Mask: 0x01)                           */
#define IIC0_ICIER_SPIE_Pos               (3UL)                     /*!< SPIE (Bit 3)                                          */
#define IIC0_ICIER_SPIE_Msk               (0x8UL)                   /*!< SPIE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICIER_STIE_Pos               (2UL)                     /*!< STIE (Bit 2)                                          */
#define IIC0_ICIER_STIE_Msk               (0x4UL)                   /*!< STIE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICIER_ALIE_Pos               (1UL)                     /*!< ALIE (Bit 1)                                          */
#define IIC0_ICIER_ALIE_Msk               (0x2UL)                   /*!< ALIE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICIER_TMOIE_Pos              (0UL)                     /*!< TMOIE (Bit 0)                                         */
#define IIC0_ICIER_TMOIE_Msk              (0x1UL)                   /*!< TMOIE (Bitfield-Mask: 0x01)                           */
/* =========================================================  ICSR1  ========================================================= */
#define IIC0_ICSR1_HOA_Pos                (7UL)                     /*!< HOA (Bit 7)                                           */
#define IIC0_ICSR1_HOA_Msk                (0x80UL)                  /*!< HOA (Bitfield-Mask: 0x01)                             */
#define IIC0_ICSR1_DID_Pos                (5UL)                     /*!< DID (Bit 5)                                           */
#define IIC0_ICSR1_DID_Msk                (0x20UL)                  /*!< DID (Bitfield-Mask: 0x01)                             */
#define IIC0_ICSR1_GCA_Pos                (3UL)                     /*!< GCA (Bit 3)                                           */
#define IIC0_ICSR1_GCA_Msk                (0x8UL)                   /*!< GCA (Bitfield-Mask: 0x01)                             */
#define IIC0_ICSR1_AAS2_Pos               (2UL)                     /*!< AAS2 (Bit 2)                                          */
#define IIC0_ICSR1_AAS2_Msk               (0x4UL)                   /*!< AAS2 (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR1_AAS1_Pos               (1UL)                     /*!< AAS1 (Bit 1)                                          */
#define IIC0_ICSR1_AAS1_Msk               (0x2UL)                   /*!< AAS1 (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR1_AAS0_Pos               (0UL)                     /*!< AAS0 (Bit 0)                                          */
#define IIC0_ICSR1_AAS0_Msk               (0x1UL)                   /*!< AAS0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICSR2  ========================================================= */
#define IIC0_ICSR2_TDRE_Pos               (7UL)                     /*!< TDRE (Bit 7)                                          */
#define IIC0_ICSR2_TDRE_Msk               (0x80UL)                  /*!< TDRE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR2_TEND_Pos               (6UL)                     /*!< TEND (Bit 6)                                          */
#define IIC0_ICSR2_TEND_Msk               (0x40UL)                  /*!< TEND (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR2_RDRF_Pos               (5UL)                     /*!< RDRF (Bit 5)                                          */
#define IIC0_ICSR2_RDRF_Msk               (0x20UL)                  /*!< RDRF (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR2_NACKF_Pos              (4UL)                     /*!< NACKF (Bit 4)                                         */
#define IIC0_ICSR2_NACKF_Msk              (0x10UL)                  /*!< NACKF (Bitfield-Mask: 0x01)                           */
#define IIC0_ICSR2_STOP_Pos               (3UL)                     /*!< STOP (Bit 3)                                          */
#define IIC0_ICSR2_STOP_Msk               (0x8UL)                   /*!< STOP (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR2_START_Pos              (2UL)                     /*!< START (Bit 2)                                         */
#define IIC0_ICSR2_START_Msk              (0x4UL)                   /*!< START (Bitfield-Mask: 0x01)                           */
#define IIC0_ICSR2_AL_Pos                 (1UL)                     /*!< AL (Bit 1)                                            */
#define IIC0_ICSR2_AL_Msk                 (0x2UL)                   /*!< AL (Bitfield-Mask: 0x01)                              */
#define IIC0_ICSR2_TMOF_Pos               (0UL)                     /*!< TMOF (Bit 0)                                          */
#define IIC0_ICSR2_TMOF_Msk               (0x1UL)                   /*!< TMOF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SARL0  ========================================================= */
#define IIC0_SARL0_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARL0_SVA_Msk                (0xfeUL)                  /*!< SVA (Bitfield-Mask: 0x7f)                             */
#define IIC0_SARL0_SVA0_Pos               (0UL)                     /*!< SVA0 (Bit 0)                                          */
#define IIC0_SARL0_SVA0_Msk               (0x1UL)                   /*!< SVA0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  SARL1  ========================================================= */
#define IIC0_SARL1_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARL1_SVA_Msk                (0xfeUL)                  /*!< SVA (Bitfield-Mask: 0x7f)                             */
#define IIC0_SARL1_SVA0_Pos               (0UL)                     /*!< SVA0 (Bit 0)                                          */
#define IIC0_SARL1_SVA0_Msk               (0x1UL)                   /*!< SVA0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  SARL2  ========================================================= */
#define IIC0_SARL2_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARL2_SVA_Msk                (0xfeUL)                  /*!< SVA (Bitfield-Mask: 0x7f)                             */
#define IIC0_SARL2_SVA0_Pos               (0UL)                     /*!< SVA0 (Bit 0)                                          */
#define IIC0_SARL2_SVA0_Msk               (0x1UL)                   /*!< SVA0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  SARU0  ========================================================= */
#define IIC0_SARU0_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARU0_SVA_Msk                (0x6UL)                   /*!< SVA (Bitfield-Mask: 0x03)                             */
#define IIC0_SARU0_FS_Pos                 (0UL)                     /*!< FS (Bit 0)                                            */
#define IIC0_SARU0_FS_Msk                 (0x1UL)                   /*!< FS (Bitfield-Mask: 0x01)                              */
/* =========================================================  SARU1  ========================================================= */
#define IIC0_SARU1_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARU1_SVA_Msk                (0x6UL)                   /*!< SVA (Bitfield-Mask: 0x03)                             */
#define IIC0_SARU1_FS_Pos                 (0UL)                     /*!< FS (Bit 0)                                            */
#define IIC0_SARU1_FS_Msk                 (0x1UL)                   /*!< FS (Bitfield-Mask: 0x01)                              */
/* =========================================================  SARU2  ========================================================= */
#define IIC0_SARU2_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARU2_SVA_Msk                (0x6UL)                   /*!< SVA (Bitfield-Mask: 0x03)                             */
#define IIC0_SARU2_FS_Pos                 (0UL)                     /*!< FS (Bit 0)                                            */
#define IIC0_SARU2_FS_Msk                 (0x1UL)                   /*!< FS (Bitfield-Mask: 0x01)                              */
/* =========================================================  ICBRL  ========================================================= */
#define IIC0_ICBRL_BRL_Pos                (0UL)                     /*!< BRL (Bit 0)                                           */
#define IIC0_ICBRL_BRL_Msk                (0x1fUL)                  /*!< BRL (Bitfield-Mask: 0x1f)                             */
/* =========================================================  ICBRH  ========================================================= */
#define IIC0_ICBRH_BRH_Pos                (0UL)                     /*!< BRH (Bit 0)                                           */
#define IIC0_ICBRH_BRH_Msk                (0x1fUL)                  /*!< BRH (Bitfield-Mask: 0x1f)                             */
/* =========================================================  ICDRT  ========================================================= */
#define IIC0_ICDRT_ICDRT_Pos              (0UL)                     /*!< ICDRT (Bit 0)                                         */
#define IIC0_ICDRT_ICDRT_Msk              (0xffUL)                  /*!< ICDRT (Bitfield-Mask: 0xff)                           */
/* =========================================================  ICDRR  ========================================================= */
#define IIC0_ICDRR_ICDRR_Pos              (0UL)                     /*!< ICDRR (Bit 0)                                         */
#define IIC0_ICDRR_ICDRR_Msk              (0xffUL)                  /*!< ICDRR (Bitfield-Mask: 0xff)                           */


/* =========================================================================================================================== */
/* ================                                           IIC1                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  ICCR1  ========================================================= */
#define IIC1_ICCR1_ICE_Pos                (7UL)                     /*!< ICE (Bit 7)                                           */
#define IIC1_ICCR1_ICE_Msk                (0x80UL)                  /*!< ICE (Bitfield-Mask: 0x01)                             */
#define IIC1_ICCR1_IICRST_Pos             (6UL)                     /*!< IICRST (Bit 6)                                        */
#define IIC1_ICCR1_IICRST_Msk             (0x40UL)                  /*!< IICRST (Bitfield-Mask: 0x01)                          */
#define IIC1_ICCR1_CLO_Pos                (5UL)                     /*!< CLO (Bit 5)                                           */
#define IIC1_ICCR1_CLO_Msk                (0x20UL)                  /*!< CLO (Bitfield-Mask: 0x01)                             */
#define IIC1_ICCR1_SOWP_Pos               (4UL)                     /*!< SOWP (Bit 4)                                          */
#define IIC1_ICCR1_SOWP_Msk               (0x10UL)                  /*!< SOWP (Bitfield-Mask: 0x01)                            */
#define IIC1_ICCR1_SCLO_Pos               (3UL)                     /*!< SCLO (Bit 3)                                          */
#define IIC1_ICCR1_SCLO_Msk               (0x8UL)                   /*!< SCLO (Bitfield-Mask: 0x01)                            */
#define IIC1_ICCR1_SDAO_Pos               (2UL)                     /*!< SDAO (Bit 2)                                          */
#define IIC1_ICCR1_SDAO_Msk               (0x4UL)                   /*!< SDAO (Bitfield-Mask: 0x01)                            */
#define IIC1_ICCR1_SCLI_Pos               (1UL)                     /*!< SCLI (Bit 1)                                          */
#define IIC1_ICCR1_SCLI_Msk               (0x2UL)                   /*!< SCLI (Bitfield-Mask: 0x01)                            */
#define IIC1_ICCR1_SDAI_Pos               (0UL)                     /*!< SDAI (Bit 0)                                          */
#define IIC1_ICCR1_SDAI_Msk               (0x1UL)                   /*!< SDAI (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICCR2  ========================================================= */
#define IIC1_ICCR2_BBSY_Pos               (7UL)                     /*!< BBSY (Bit 7)                                          */
#define IIC1_ICCR2_BBSY_Msk               (0x80UL)                  /*!< BBSY (Bitfield-Mask: 0x01)                            */
#define IIC1_ICCR2_MST_Pos                (6UL)                     /*!< MST (Bit 6)                                           */
#define IIC1_ICCR2_MST_Msk                (0x40UL)                  /*!< MST (Bitfield-Mask: 0x01)                             */
#define IIC1_ICCR2_TRS_Pos                (5UL)                     /*!< TRS (Bit 5)                                           */
#define IIC1_ICCR2_TRS_Msk                (0x20UL)                  /*!< TRS (Bitfield-Mask: 0x01)                             */
#define IIC1_ICCR2_SP_Pos                 (3UL)                     /*!< SP (Bit 3)                                            */
#define IIC1_ICCR2_SP_Msk                 (0x8UL)                   /*!< SP (Bitfield-Mask: 0x01)                              */
#define IIC1_ICCR2_RS_Pos                 (2UL)                     /*!< RS (Bit 2)                                            */
#define IIC1_ICCR2_RS_Msk                 (0x4UL)                   /*!< RS (Bitfield-Mask: 0x01)                              */
#define IIC1_ICCR2_ST_Pos                 (1UL)                     /*!< ST (Bit 1)                                            */
#define IIC1_ICCR2_ST_Msk                 (0x2UL)                   /*!< ST (Bitfield-Mask: 0x01)                              */
/* =========================================================  ICMR1  ========================================================= */
#define IIC1_ICMR1_MTWP_Pos               (7UL)                     /*!< MTWP (Bit 7)                                          */
#define IIC1_ICMR1_MTWP_Msk               (0x80UL)                  /*!< MTWP (Bitfield-Mask: 0x01)                            */
#define IIC1_ICMR1_CKS_Pos                (4UL)                     /*!< CKS (Bit 4)                                           */
#define IIC1_ICMR1_CKS_Msk                (0x70UL)                  /*!< CKS (Bitfield-Mask: 0x07)                             */
#define IIC1_ICMR1_BCWP_Pos               (3UL)                     /*!< BCWP (Bit 3)                                          */
#define IIC1_ICMR1_BCWP_Msk               (0x8UL)                   /*!< BCWP (Bitfield-Mask: 0x01)                            */
#define IIC1_ICMR1_BC_Pos                 (0UL)                     /*!< BC (Bit 0)                                            */
#define IIC1_ICMR1_BC_Msk                 (0x7UL)                   /*!< BC (Bitfield-Mask: 0x07)                              */
/* =========================================================  ICMR2  ========================================================= */
#define IIC1_ICMR2_DLCS_Pos               (7UL)                     /*!< DLCS (Bit 7)                                          */
#define IIC1_ICMR2_DLCS_Msk               (0x80UL)                  /*!< DLCS (Bitfield-Mask: 0x01)                            */
#define IIC1_ICMR2_SDDL_Pos               (4UL)                     /*!< SDDL (Bit 4)                                          */
#define IIC1_ICMR2_SDDL_Msk               (0x70UL)                  /*!< SDDL (Bitfield-Mask: 0x07)                            */
#define IIC1_ICMR2_TMOH_Pos               (2UL)                     /*!< TMOH (Bit 2)                                          */
#define IIC1_ICMR2_TMOH_Msk               (0x4UL)                   /*!< TMOH (Bitfield-Mask: 0x01)                            */
#define IIC1_ICMR2_TMOL_Pos               (1UL)                     /*!< TMOL (Bit 1)                                          */
#define IIC1_ICMR2_TMOL_Msk               (0x2UL)                   /*!< TMOL (Bitfield-Mask: 0x01)                            */
#define IIC1_ICMR2_TMOS_Pos               (0UL)                     /*!< TMOS (Bit 0)                                          */
#define IIC1_ICMR2_TMOS_Msk               (0x1UL)                   /*!< TMOS (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICMR3  ========================================================= */
#define IIC1_ICMR3_SMBS_Pos               (7UL)                     /*!< SMBS (Bit 7)                                          */
#define IIC1_ICMR3_SMBS_Msk               (0x80UL)                  /*!< SMBS (Bitfield-Mask: 0x01)                            */
#define IIC1_ICMR3_WAIT_Pos               (6UL)                     /*!< WAIT (Bit 6)                                          */
#define IIC1_ICMR3_WAIT_Msk               (0x40UL)                  /*!< WAIT (Bitfield-Mask: 0x01)                            */
#define IIC1_ICMR3_RDRFS_Pos              (5UL)                     /*!< RDRFS (Bit 5)                                         */
#define IIC1_ICMR3_RDRFS_Msk              (0x20UL)                  /*!< RDRFS (Bitfield-Mask: 0x01)                           */
#define IIC1_ICMR3_ACKWP_Pos              (4UL)                     /*!< ACKWP (Bit 4)                                         */
#define IIC1_ICMR3_ACKWP_Msk              (0x10UL)                  /*!< ACKWP (Bitfield-Mask: 0x01)                           */
#define IIC1_ICMR3_ACKBT_Pos              (3UL)                     /*!< ACKBT (Bit 3)                                         */
#define IIC1_ICMR3_ACKBT_Msk              (0x8UL)                   /*!< ACKBT (Bitfield-Mask: 0x01)                           */
#define IIC1_ICMR3_ACKBR_Pos              (2UL)                     /*!< ACKBR (Bit 2)                                         */
#define IIC1_ICMR3_ACKBR_Msk              (0x4UL)                   /*!< ACKBR (Bitfield-Mask: 0x01)                           */
#define IIC1_ICMR3_NF_Pos                 (0UL)                     /*!< NF (Bit 0)                                            */
#define IIC1_ICMR3_NF_Msk                 (0x3UL)                   /*!< NF (Bitfield-Mask: 0x03)                              */
/* =========================================================  ICFER  ========================================================= */
#define IIC1_ICFER_SCLE_Pos               (6UL)                     /*!< SCLE (Bit 6)                                          */
#define IIC1_ICFER_SCLE_Msk               (0x40UL)                  /*!< SCLE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICFER_NFE_Pos                (5UL)                     /*!< NFE (Bit 5)                                           */
#define IIC1_ICFER_NFE_Msk                (0x20UL)                  /*!< NFE (Bitfield-Mask: 0x01)                             */
#define IIC1_ICFER_NACKE_Pos              (4UL)                     /*!< NACKE (Bit 4)                                         */
#define IIC1_ICFER_NACKE_Msk              (0x10UL)                  /*!< NACKE (Bitfield-Mask: 0x01)                           */
#define IIC1_ICFER_SALE_Pos               (3UL)                     /*!< SALE (Bit 3)                                          */
#define IIC1_ICFER_SALE_Msk               (0x8UL)                   /*!< SALE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICFER_NALE_Pos               (2UL)                     /*!< NALE (Bit 2)                                          */
#define IIC1_ICFER_NALE_Msk               (0x4UL)                   /*!< NALE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICFER_MALE_Pos               (1UL)                     /*!< MALE (Bit 1)                                          */
#define IIC1_ICFER_MALE_Msk               (0x2UL)                   /*!< MALE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICFER_TMOE_Pos               (0UL)                     /*!< TMOE (Bit 0)                                          */
#define IIC1_ICFER_TMOE_Msk               (0x1UL)                   /*!< TMOE (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICSER  ========================================================= */
#define IIC1_ICSER_HOAE_Pos               (7UL)                     /*!< HOAE (Bit 7)                                          */
#define IIC1_ICSER_HOAE_Msk               (0x80UL)                  /*!< HOAE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICSER_DIDE_Pos               (5UL)                     /*!< DIDE (Bit 5)                                          */
#define IIC1_ICSER_DIDE_Msk               (0x20UL)                  /*!< DIDE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICSER_GCAE_Pos               (3UL)                     /*!< GCAE (Bit 3)                                          */
#define IIC1_ICSER_GCAE_Msk               (0x8UL)                   /*!< GCAE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICSER_SAR2E_Pos              (2UL)                     /*!< SAR2E (Bit 2)                                         */
#define IIC1_ICSER_SAR2E_Msk              (0x4UL)                   /*!< SAR2E (Bitfield-Mask: 0x01)                           */
#define IIC1_ICSER_SAR1E_Pos              (1UL)                     /*!< SAR1E (Bit 1)                                         */
#define IIC1_ICSER_SAR1E_Msk              (0x2UL)                   /*!< SAR1E (Bitfield-Mask: 0x01)                           */
#define IIC1_ICSER_SAR0E_Pos              (0UL)                     /*!< SAR0E (Bit 0)                                         */
#define IIC1_ICSER_SAR0E_Msk              (0x1UL)                   /*!< SAR0E (Bitfield-Mask: 0x01)                           */
/* =========================================================  ICIER  ========================================================= */
#define IIC1_ICIER_TIE_Pos                (7UL)                     /*!< TIE (Bit 7)                                           */
#define IIC1_ICIER_TIE_Msk                (0x80UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
#define IIC1_ICIER_TEIE_Pos               (6UL)                     /*!< TEIE (Bit 6)                                          */
#define IIC1_ICIER_TEIE_Msk               (0x40UL)                  /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICIER_RIE_Pos                (5UL)                     /*!< RIE (Bit 5)                                           */
#define IIC1_ICIER_RIE_Msk                (0x20UL)                  /*!< RIE (Bitfield-Mask: 0x01)                             */
#define IIC1_ICIER_NAKIE_Pos              (4UL)                     /*!< NAKIE (Bit 4)                                         */
#define IIC1_ICIER_NAKIE_Msk              (0x10UL)                  /*!< NAKIE (Bitfield-Mask: 0x01)                           */
#define IIC1_ICIER_SPIE_Pos               (3UL)                     /*!< SPIE (Bit 3)                                          */
#define IIC1_ICIER_SPIE_Msk               (0x8UL)                   /*!< SPIE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICIER_STIE_Pos               (2UL)                     /*!< STIE (Bit 2)                                          */
#define IIC1_ICIER_STIE_Msk               (0x4UL)                   /*!< STIE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICIER_ALIE_Pos               (1UL)                     /*!< ALIE (Bit 1)                                          */
#define IIC1_ICIER_ALIE_Msk               (0x2UL)                   /*!< ALIE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICIER_TMOIE_Pos              (0UL)                     /*!< TMOIE (Bit 0)                                         */
#define IIC1_ICIER_TMOIE_Msk              (0x1UL)                   /*!< TMOIE (Bitfield-Mask: 0x01)                           */
/* =========================================================  ICSR1  ========================================================= */
#define IIC1_ICSR1_HOA_Pos                (7UL)                     /*!< HOA (Bit 7)                                           */
#define IIC1_ICSR1_HOA_Msk                (0x80UL)                  /*!< HOA (Bitfield-Mask: 0x01)                             */
#define IIC1_ICSR1_DID_Pos                (5UL)                     /*!< DID (Bit 5)                                           */
#define IIC1_ICSR1_DID_Msk                (0x20UL)                  /*!< DID (Bitfield-Mask: 0x01)                             */
#define IIC1_ICSR1_GCA_Pos                (3UL)                     /*!< GCA (Bit 3)                                           */
#define IIC1_ICSR1_GCA_Msk                (0x8UL)                   /*!< GCA (Bitfield-Mask: 0x01)                             */
#define IIC1_ICSR1_AAS2_Pos               (2UL)                     /*!< AAS2 (Bit 2)                                          */
#define IIC1_ICSR1_AAS2_Msk               (0x4UL)                   /*!< AAS2 (Bitfield-Mask: 0x01)                            */
#define IIC1_ICSR1_AAS1_Pos               (1UL)                     /*!< AAS1 (Bit 1)                                          */
#define IIC1_ICSR1_AAS1_Msk               (0x2UL)                   /*!< AAS1 (Bitfield-Mask: 0x01)                            */
#define IIC1_ICSR1_AAS0_Pos               (0UL)                     /*!< AAS0 (Bit 0)                                          */
#define IIC1_ICSR1_AAS0_Msk               (0x1UL)                   /*!< AAS0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICSR2  ========================================================= */
#define IIC1_ICSR2_TDRE_Pos               (7UL)                     /*!< TDRE (Bit 7)                                          */
#define IIC1_ICSR2_TDRE_Msk               (0x80UL)                  /*!< TDRE (Bitfield-Mask: 0x01)                            */
#define IIC1_ICSR2_TEND_Pos               (6UL)                     /*!< TEND (Bit 6)                                          */
#define IIC1_ICSR2_TEND_Msk               (0x40UL)                  /*!< TEND (Bitfield-Mask: 0x01)                            */
#define IIC1_ICSR2_RDRF_Pos               (5UL)                     /*!< RDRF (Bit 5)                                          */
#define IIC1_ICSR2_RDRF_Msk               (0x20UL)                  /*!< RDRF (Bitfield-Mask: 0x01)                            */
#define IIC1_ICSR2_NACKF_Pos              (4UL)                     /*!< NACKF (Bit 4)                                         */
#define IIC1_ICSR2_NACKF_Msk              (0x10UL)                  /*!< NACKF (Bitfield-Mask: 0x01)                           */
#define IIC1_ICSR2_STOP_Pos               (3UL)                     /*!< STOP (Bit 3)                                          */
#define IIC1_ICSR2_STOP_Msk               (0x8UL)                   /*!< STOP (Bitfield-Mask: 0x01)                            */
#define IIC1_ICSR2_START_Pos              (2UL)                     /*!< START (Bit 2)                                         */
#define IIC1_ICSR2_START_Msk              (0x4UL)                   /*!< START (Bitfield-Mask: 0x01)                           */
#define IIC1_ICSR2_AL_Pos                 (1UL)                     /*!< AL (Bit 1)                                            */
#define IIC1_ICSR2_AL_Msk                 (0x2UL)                   /*!< AL (Bitfield-Mask: 0x01)                              */
#define IIC1_ICSR2_TMOF_Pos               (0UL)                     /*!< TMOF (Bit 0)                                          */
#define IIC1_ICSR2_TMOF_Msk               (0x1UL)                   /*!< TMOF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SARL0  ========================================================= */
#define IIC1_SARL0_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC1_SARL0_SVA_Msk                (0xfeUL)                  /*!< SVA (Bitfield-Mask: 0x7f)                             */
#define IIC1_SARL0_SVA0_Pos               (0UL)                     /*!< SVA0 (Bit 0)                                          */
#define IIC1_SARL0_SVA0_Msk               (0x1UL)                   /*!< SVA0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  SARL1  ========================================================= */
#define IIC1_SARL1_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC1_SARL1_SVA_Msk                (0xfeUL)                  /*!< SVA (Bitfield-Mask: 0x7f)                             */
#define IIC1_SARL1_SVA0_Pos               (0UL)                     /*!< SVA0 (Bit 0)                                          */
#define IIC1_SARL1_SVA0_Msk               (0x1UL)                   /*!< SVA0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  SARL2  ========================================================= */
#define IIC1_SARL2_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC1_SARL2_SVA_Msk                (0xfeUL)                  /*!< SVA (Bitfield-Mask: 0x7f)                             */
#define IIC1_SARL2_SVA0_Pos               (0UL)                     /*!< SVA0 (Bit 0)                                          */
#define IIC1_SARL2_SVA0_Msk               (0x1UL)                   /*!< SVA0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  SARU0  ========================================================= */
#define IIC1_SARU0_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC1_SARU0_SVA_Msk                (0x6UL)                   /*!< SVA (Bitfield-Mask: 0x03)                             */
#define IIC1_SARU0_FS_Pos                 (0UL)                     /*!< FS (Bit 0)                                            */
#define IIC1_SARU0_FS_Msk                 (0x1UL)                   /*!< FS (Bitfield-Mask: 0x01)                              */
/* =========================================================  SARU1  ========================================================= */
#define IIC1_SARU1_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC1_SARU1_SVA_Msk                (0x6UL)                   /*!< SVA (Bitfield-Mask: 0x03)                             */
#define IIC1_SARU1_FS_Pos                 (0UL)                     /*!< FS (Bit 0)                                            */
#define IIC1_SARU1_FS_Msk                 (0x1UL)                   /*!< FS (Bitfield-Mask: 0x01)                              */
/* =========================================================  SARU2  ========================================================= */
#define IIC1_SARU2_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC1_SARU2_SVA_Msk                (0x6UL)                   /*!< SVA (Bitfield-Mask: 0x03)                             */
#define IIC1_SARU2_FS_Pos                 (0UL)                     /*!< FS (Bit 0)                                            */
#define IIC1_SARU2_FS_Msk                 (0x1UL)                   /*!< FS (Bitfield-Mask: 0x01)                              */
/* =========================================================  ICBRL  ========================================================= */
#define IIC1_ICBRL_BRL_Pos                (0UL)                     /*!< BRL (Bit 0)                                           */
#define IIC1_ICBRL_BRL_Msk                (0x1fUL)                  /*!< BRL (Bitfield-Mask: 0x1f)                             */
/* =========================================================  ICBRH  ========================================================= */
#define IIC1_ICBRH_BRH_Pos                (0UL)                     /*!< BRH (Bit 0)                                           */
#define IIC1_ICBRH_BRH_Msk                (0x1fUL)                  /*!< BRH (Bitfield-Mask: 0x1f)                             */
/* =========================================================  ICDRT  ========================================================= */
#define IIC1_ICDRT_ICDRT_Pos              (0UL)                     /*!< ICDRT (Bit 0)                                         */
#define IIC1_ICDRT_ICDRT_Msk              (0xffUL)                  /*!< ICDRT (Bitfield-Mask: 0xff)                           */
/* =========================================================  ICDRR  ========================================================= */
#define IIC1_ICDRR_ICDRR_Pos              (0UL)                     /*!< ICDRR (Bit 0)                                         */
#define IIC1_ICDRR_ICDRR_Msk              (0xffUL)                  /*!< ICDRR (Bitfield-Mask: 0xff)                           */


/* =========================================================================================================================== */
/* ================                                           IWDT                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  IWDTRR  ========================================================= */
#define IWDT_IWDTRR_IWDTRR_Pos            (0UL)                     /*!< IWDTRR (Bit 0)                                        */
#define IWDT_IWDTRR_IWDTRR_Msk            (0xffUL)                  /*!< IWDTRR (Bitfield-Mask: 0xff)                          */
/* ========================================================  IWDTSR  ========================================================= */
#define IWDT_IWDTSR_REFEF_Pos             (15UL)                    /*!< REFEF (Bit 15)                                        */
#define IWDT_IWDTSR_REFEF_Msk             (0x8000UL)                /*!< REFEF (Bitfield-Mask: 0x01)                           */
#define IWDT_IWDTSR_UNDFF_Pos             (14UL)                    /*!< UNDFF (Bit 14)                                        */
#define IWDT_IWDTSR_UNDFF_Msk             (0x4000UL)                /*!< UNDFF (Bitfield-Mask: 0x01)                           */
#define IWDT_IWDTSR_CNTVAL_Pos            (0UL)                     /*!< CNTVAL (Bit 0)                                        */
#define IWDT_IWDTSR_CNTVAL_Msk            (0x3fffUL)                /*!< CNTVAL (Bitfield-Mask: 0x3fff)                        */


/* =========================================================================================================================== */
/* ================                                           IrDA                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  IRCR  ========================================================== */
#define IrDA_IRCR_IRE_Pos                 (7UL)                     /*!< IRE (Bit 7)                                           */
#define IrDA_IRCR_IRE_Msk                 (0x80UL)                  /*!< IRE (Bitfield-Mask: 0x01)                             */
#define IrDA_IRCR_IRTXINV_Pos             (3UL)                     /*!< IRTXINV (Bit 3)                                       */
#define IrDA_IRCR_IRTXINV_Msk             (0x8UL)                   /*!< IRTXINV (Bitfield-Mask: 0x01)                         */
#define IrDA_IRCR_IRRXINV_Pos             (2UL)                     /*!< IRRXINV (Bit 2)                                       */
#define IrDA_IRCR_IRRXINV_Msk             (0x4UL)                   /*!< IRRXINV (Bitfield-Mask: 0x01)                         */


/* =========================================================================================================================== */
/* ================                                           KINT                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  KRCTL  ========================================================= */
#define KINT_KRCTL_KRMD_Pos               (7UL)                     /*!< KRMD (Bit 7)                                          */
#define KINT_KRCTL_KRMD_Msk               (0x80UL)                  /*!< KRMD (Bitfield-Mask: 0x01)                            */
#define KINT_KRCTL_KREG_Pos               (0UL)                     /*!< KREG (Bit 0)                                          */
#define KINT_KRCTL_KREG_Msk               (0x1UL)                   /*!< KREG (Bitfield-Mask: 0x01)                            */
/* ==========================================================  KRF  ========================================================== */
#define KINT_KRF_KRF7_Pos                 (7UL)                     /*!< KRF7 (Bit 7)                                          */
#define KINT_KRF_KRF7_Msk                 (0x80UL)                  /*!< KRF7 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KRF6_Pos                 (6UL)                     /*!< KRF6 (Bit 6)                                          */
#define KINT_KRF_KRF6_Msk                 (0x40UL)                  /*!< KRF6 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KRF5_Pos                 (5UL)                     /*!< KRF5 (Bit 5)                                          */
#define KINT_KRF_KRF5_Msk                 (0x20UL)                  /*!< KRF5 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KRF4_Pos                 (4UL)                     /*!< KRF4 (Bit 4)                                          */
#define KINT_KRF_KRF4_Msk                 (0x10UL)                  /*!< KRF4 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KRF3_Pos                 (3UL)                     /*!< KRF3 (Bit 3)                                          */
#define KINT_KRF_KRF3_Msk                 (0x8UL)                   /*!< KRF3 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KRF2_Pos                 (2UL)                     /*!< KRF2 (Bit 2)                                          */
#define KINT_KRF_KRF2_Msk                 (0x4UL)                   /*!< KRF2 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KRF1_Pos                 (1UL)                     /*!< KRF1 (Bit 1)                                          */
#define KINT_KRF_KRF1_Msk                 (0x2UL)                   /*!< KRF1 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KRF0_Pos                 (0UL)                     /*!< KRF0 (Bit 0)                                          */
#define KINT_KRF_KRF0_Msk                 (0x1UL)                   /*!< KRF0 (Bitfield-Mask: 0x01)                            */
/* ==========================================================  KRM  ========================================================== */
#define KINT_KRM_KRM7_Pos                 (7UL)                     /*!< KRM7 (Bit 7)                                          */
#define KINT_KRM_KRM7_Msk                 (0x80UL)                  /*!< KRM7 (Bitfield-Mask: 0x01)                            */
#define KINT_KRM_KRM6_Pos                 (6UL)                     /*!< KRM6 (Bit 6)                                          */
#define KINT_KRM_KRM6_Msk                 (0x40UL)                  /*!< KRM6 (Bitfield-Mask: 0x01)                            */
#define KINT_KRM_KRM5_Pos                 (5UL)                     /*!< KRM5 (Bit 5)                                          */
#define KINT_KRM_KRM5_Msk                 (0x20UL)                  /*!< KRM5 (Bitfield-Mask: 0x01)                            */
#define KINT_KRM_KRM4_Pos                 (4UL)                     /*!< KRM4 (Bit 4)                                          */
#define KINT_KRM_KRM4_Msk                 (0x10UL)                  /*!< KRM4 (Bitfield-Mask: 0x01)                            */
#define KINT_KRM_KRM3_Pos                 (3UL)                     /*!< KRM3 (Bit 3)                                          */
#define KINT_KRM_KRM3_Msk                 (0x8UL)                   /*!< KRM3 (Bitfield-Mask: 0x01)                            */
#define KINT_KRM_KRM2_Pos                 (2UL)                     /*!< KRM2 (Bit 2)                                          */
#define KINT_KRM_KRM2_Msk                 (0x4UL)                   /*!< KRM2 (Bitfield-Mask: 0x01)                            */
#define KINT_KRM_KRM1_Pos                 (1UL)                     /*!< KRM1 (Bit 1)                                          */
#define KINT_KRM_KRM1_Msk                 (0x2UL)                   /*!< KRM1 (Bitfield-Mask: 0x01)                            */
#define KINT_KRM_KRM0_Pos                 (0UL)                     /*!< KRM0 (Bit 0)                                          */
#define KINT_KRM_KRM0_Msk                 (0x1UL)                   /*!< KRM0 (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                            LED                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  LEPSR  ========================================================= */
#define LED_LEPSR_LEPSF_Pos               (8UL)                     /*!< LEPSF (Bit 8)                                         */
#define LED_LEPSR_LEPSF_Msk               (0x100UL)                 /*!< LEPSF (Bitfield-Mask: 0x01)                           */
#define LED_LEPSR_LEPS_Pos                (0UL)                     /*!< LEPS (Bit 0)                                          */
#define LED_LEPSR_LEPS_Msk                (0x1UL)                   /*!< LEPS (Bitfield-Mask: 0x01)                            */
/* =========================================================  LECO  ========================================================== */
#define LED_LECO_LES3_Pos                 (18UL)                    /*!< LES3 (Bit 18)                                         */
#define LED_LECO_LES3_Msk                 (0x40000UL)               /*!< LES3 (Bitfield-Mask: 0x01)                            */
#define LED_LECO_LES2_Pos                 (17UL)                    /*!< LES2 (Bit 17)                                         */
#define LED_LECO_LES2_Msk                 (0x20000UL)               /*!< LES2 (Bitfield-Mask: 0x01)                            */
#define LED_LECO_LES1_Pos                 (16UL)                    /*!< LES1 (Bit 16)                                         */
#define LED_LECO_LES1_Msk                 (0x10000UL)               /*!< LES1 (Bitfield-Mask: 0x01)                            */
#define LED_LECO_LEO3_Pos                 (2UL)                     /*!< LEO3 (Bit 2)                                          */
#define LED_LECO_LEO3_Msk                 (0x4UL)                   /*!< LEO3 (Bitfield-Mask: 0x01)                            */
#define LED_LECO_LEO2_Pos                 (1UL)                     /*!< LEO2 (Bit 1)                                          */
#define LED_LECO_LEO2_Msk                 (0x2UL)                   /*!< LEO2 (Bitfield-Mask: 0x01)                            */
#define LED_LECO_LEO1_Pos                 (0UL)                     /*!< LEO1 (Bit 0)                                          */
#define LED_LECO_LEO1_Msk                 (0x1UL)                   /*!< LEO1 (Bitfield-Mask: 0x01)                            */
/* ========================================================  LEDWTCR  ======================================================== */
#define LED_LEDWTCR_LESTS_Pos             (0UL)                     /*!< LESTS (Bit 0)                                         */
#define LED_LEDWTCR_LESTS_Msk             (0x3fffUL)                /*!< LESTS (Bitfield-Mask: 0x3fff)                         */


/* =========================================================================================================================== */
/* ================                                            LPG                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  LPGCTL  ========================================================= */
#define LPG_LPGCTL_LVD1EN_Pos             (7UL)                     /*!< LVD1EN (Bit 7)                                        */
#define LPG_LPGCTL_LVD1EN_Msk             (0x80UL)                  /*!< LVD1EN (Bitfield-Mask: 0x01)                          */
#define LPG_LPGCTL_LPGEN_Pos              (1UL)                     /*!< LPGEN (Bit 1)                                         */
#define LPG_LPGCTL_LPGEN_Msk              (0x2UL)                   /*!< LPGEN (Bitfield-Mask: 0x01)                           */
#define LPG_LPGCTL_CNTEN_Pos              (0UL)                     /*!< CNTEN (Bit 0)                                         */
#define LPG_LPGCTL_CNTEN_Msk              (0x1UL)                   /*!< CNTEN (Bitfield-Mask: 0x01)                           */
/* ========================================================  LPGSET  ========================================================= */
#define LPG_LPGSET_CLKSEL_Pos             (6UL)                     /*!< CLKSEL (Bit 6)                                        */
#define LPG_LPGSET_CLKSEL_Msk             (0x40UL)                  /*!< CLKSEL (Bitfield-Mask: 0x01)                          */
#define LPG_LPGSET_SCALESEL_Pos           (1UL)                     /*!< SCALESEL (Bit 1)                                      */
#define LPG_LPGSET_SCALESEL_Msk           (0x2UL)                   /*!< SCALESEL (Bitfield-Mask: 0x01)                        */
#define LPG_LPGSET_DUTYSEL_Pos            (0UL)                     /*!< DUTYSEL (Bit 0)                                       */
#define LPG_LPGSET_DUTYSEL_Msk            (0x1UL)                   /*!< DUTYSEL (Bitfield-Mask: 0x01)                         */


/* =========================================================================================================================== */
/* ================                                            LST                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  LSTCNT  ========================================================= */
#define LST_LSTCNT_SECCNT_Pos             (12UL)                    /*!< SECCNT (Bit 12)                                       */
#define LST_LSTCNT_SECCNT_Msk             (0x1000UL)                /*!< SECCNT (Bitfield-Mask: 0x01)                          */
#define LST_LSTCNT_OTSECCNT_Pos           (8UL)                     /*!< OTSECCNT (Bit 8)                                      */
#define LST_LSTCNT_OTSECCNT_Msk           (0xf00UL)                 /*!< OTSECCNT (Bitfield-Mask: 0x0f)                        */
#define LST_LSTCNT_OHSECCNT_Pos           (4UL)                     /*!< OHSECCNT (Bit 4)                                      */
#define LST_LSTCNT_OHSECCNT_Msk           (0xf0UL)                  /*!< OHSECCNT (Bitfield-Mask: 0x0f)                        */
#define LST_LSTCNT_OTHSECCNT_Pos          (0UL)                     /*!< OTHSECCNT (Bit 0)                                     */
#define LST_LSTCNT_OTHSECCNT_Msk          (0xfUL)                   /*!< OTHSECCNT (Bitfield-Mask: 0x0f)                       */
/* ========================================================  LSTCTRL  ======================================================== */
#define LST_LSTCTRL_LSTRST_Pos            (1UL)                     /*!< LSTRST (Bit 1)                                        */
#define LST_LSTCTRL_LSTRST_Msk            (0x2UL)                   /*!< LSTRST (Bitfield-Mask: 0x01)                          */
#define LST_LSTCTRL_LSTSTART_Pos          (0UL)                     /*!< LSTSTART (Bit 0)                                      */
#define LST_LSTCTRL_LSTSTART_Msk          (0x1UL)                   /*!< LSTSTART (Bitfield-Mask: 0x01)                        */


/* =========================================================================================================================== */
/* ================                                           MLCD                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  MLCDCR  ========================================================= */
#define MLCD_MLCDCR_VADDRDEC_Pos          (29UL)                    /*!< VADDRDEC (Bit 29)                                     */
#define MLCD_MLCDCR_VADDRDEC_Msk          (0x20000000UL)            /*!< VADDRDEC (Bitfield-Mask: 0x01)                        */
#define MLCD_MLCDCR_HADDRDEC_Pos          (28UL)                    /*!< HADDRDEC (Bit 28)                                     */
#define MLCD_MLCDCR_HADDRDEC_Msk          (0x10000000UL)            /*!< HADDRDEC (Bitfield-Mask: 0x01)                        */
#define MLCD_MLCDCR_SCKCR_Pos             (16UL)                    /*!< SCKCR (Bit 16)                                        */
#define MLCD_MLCDCR_SCKCR_Msk             (0xff0000UL)              /*!< SCKCR (Bitfield-Mask: 0xff)                           */
#define MLCD_MLCDCR_BITSW_Pos             (12UL)                    /*!< BITSW (Bit 12)                                        */
#define MLCD_MLCDCR_BITSW_Msk             (0x1000UL)                /*!< BITSW (Bitfield-Mask: 0x01)                           */
#define MLCD_MLCDCR_XRST_Pos              (8UL)                     /*!< XRST (Bit 8)                                          */
#define MLCD_MLCDCR_XRST_Msk              (0x100UL)                 /*!< XRST (Bitfield-Mask: 0x01)                            */
#define MLCD_MLCDCR_TEMIE_Pos             (6UL)                     /*!< TEMIE (Bit 6)                                         */
#define MLCD_MLCDCR_TEMIE_Msk             (0x40UL)                  /*!< TEMIE (Bitfield-Mask: 0x01)                           */
#define MLCD_MLCDCR_TEIE_Pos              (5UL)                     /*!< TEIE (Bit 5)                                          */
#define MLCD_MLCDCR_TEIE_Msk              (0x20UL)                  /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define MLCD_MLCDCR_TE_Pos                (0UL)                     /*!< TE (Bit 0)                                            */
#define MLCD_MLCDCR_TE_Msk                (0x1UL)                   /*!< TE (Bitfield-Mask: 0x01)                              */
/* ========================================================  MLCDSR  ========================================================= */
#define MLCD_MLCDSR_Reserved0_Pos         (16UL)                    /*!< Reserved0 (Bit 16)                                    */
#define MLCD_MLCDSR_Reserved0_Msk         (0xffff0000UL)            /*!< Reserved0 (Bitfield-Mask: 0xffff)                     */
#define MLCD_MLCDSR_TEF_Pos               (1UL)                     /*!< TEF (Bit 1)                                           */
#define MLCD_MLCDSR_TEF_Msk               (0x2UL)                   /*!< TEF (Bitfield-Mask: 0x01)                             */
#define MLCD_MLCDSR_TEND_Pos              (0UL)                     /*!< TEND (Bit 0)                                          */
#define MLCD_MLCDSR_TEND_Msk              (0x1UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
/* =======================================================  MLCDADDR  ======================================================== */
#define MLCD_MLCDADDR_VADDR_Pos           (16UL)                    /*!< VADDR (Bit 16)                                        */
#define MLCD_MLCDADDR_VADDR_Msk           (0xff0000UL)              /*!< VADDR (Bitfield-Mask: 0xff)                           */
#define MLCD_MLCDADDR_HADDR_Pos           (3UL)                     /*!< HADDR (Bit 3)                                         */
#define MLCD_MLCDADDR_HADDR_Msk           (0xf8UL)                  /*!< HADDR (Bitfield-Mask: 0x1f)                           */
/* =======================================================  MLCDWRCR  ======================================================== */
#define MLCD_MLCDWRCR_LINE_Pos            (16UL)                    /*!< LINE (Bit 16)                                         */
#define MLCD_MLCDWRCR_LINE_Msk            (0x1ff0000UL)             /*!< LINE (Bitfield-Mask: 0x1ff)                           */
#define MLCD_MLCDWRCR_BYTE_Pos            (0UL)                     /*!< BYTE (Bit 0)                                          */
#define MLCD_MLCDWRCR_BYTE_Msk            (0x3fUL)                  /*!< BYTE (Bitfield-Mask: 0x3f)                            */
/* =======================================================  MLCDSEND  ======================================================== */
#define MLCD_MLCDSEND_Reserved0_Pos       (16UL)                    /*!< Reserved0 (Bit 16)                                    */
#define MLCD_MLCDSEND_Reserved0_Msk       (0xffff0000UL)            /*!< Reserved0 (Bitfield-Mask: 0xffff)                     */
#define MLCD_MLCDSEND_EN_Pos              (0UL)                     /*!< EN (Bit 0)                                            */
#define MLCD_MLCDSEND_EN_Msk              (0x1UL)                   /*!< EN (Bitfield-Mask: 0x01)                              */
/* =======================================================  MLCDBKCR  ======================================================== */
#define MLCD_MLCDBKCR_BKVNUM_Pos          (24UL)                    /*!< BKVNUM (Bit 24)                                       */
#define MLCD_MLCDBKCR_BKVNUM_Msk          (0x1f000000UL)            /*!< BKVNUM (Bitfield-Mask: 0x1f)                          */
#define MLCD_MLCDBKCR_BKHNUM_Pos          (16UL)                    /*!< BKHNUM (Bit 16)                                       */
#define MLCD_MLCDBKCR_BKHNUM_Msk          (0x1f0000UL)              /*!< BKHNUM (Bitfield-Mask: 0x1f)                          */
#define MLCD_MLCDBKCR_BKMODE_Pos          (8UL)                     /*!< BKMODE (Bit 8)                                        */
#define MLCD_MLCDBKCR_BKMODE_Msk          (0x300UL)                 /*!< BKMODE (Bitfield-Mask: 0x03)                          */
#define MLCD_MLCDBKCR_BKEN_Pos            (0UL)                     /*!< BKEN (Bit 0)                                          */
#define MLCD_MLCDBKCR_BKEN_Msk            (0x1UL)                   /*!< BKEN (Bitfield-Mask: 0x01)                            */
/* ======================================================  MLCDVCOMCTL  ====================================================== */
#define MLCD_MLCDVCOMCTL_Reserved0_Pos    (28UL)                    /*!< Reserved0 (Bit 28)                                    */
#define MLCD_MLCDVCOMCTL_Reserved0_Msk    (0xf0000000UL)            /*!< Reserved0 (Bitfield-Mask: 0x0f)                       */
#define MLCD_MLCDVCOMCTL_VCOMW_Pos        (1UL)                     /*!< VCOMW (Bit 1)                                         */
#define MLCD_MLCDVCOMCTL_VCOMW_Msk        (0x6UL)                   /*!< VCOMW (Bitfield-Mask: 0x03)                           */
#define MLCD_MLCDVCOMCTL_VCOME_Pos        (0UL)                     /*!< VCOME (Bit 0)                                         */
#define MLCD_MLCDVCOMCTL_VCOME_Msk        (0x1UL)                   /*!< VCOME (Bitfield-Mask: 0x01)                           */
/* =======================================================  MLCDENBCR  ======================================================= */
#define MLCD_MLCDENBCR_ENBEG_Pos          (16UL)                    /*!< ENBEG (Bit 16)                                        */
#define MLCD_MLCDENBCR_ENBEG_Msk          (0xff0000UL)              /*!< ENBEG (Bitfield-Mask: 0xff)                           */
#define MLCD_MLCDENBCR_ENBW_Pos           (0UL)                     /*!< ENBW (Bit 0)                                          */
#define MLCD_MLCDENBCR_ENBW_Msk           (0x3ffUL)                 /*!< ENBW (Bitfield-Mask: 0x3ff)                           */
/* =========================================================  DATA0  ========================================================= */
#define MLCD_DATA0_DATA_Pos               (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA0_DATA_Msk               (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* =========================================================  DATA1  ========================================================= */
#define MLCD_DATA1_DATA_Pos               (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA1_DATA_Msk               (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* =========================================================  DATA2  ========================================================= */
#define MLCD_DATA2_DATA_Pos               (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA2_DATA_Msk               (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* =========================================================  DATA3  ========================================================= */
#define MLCD_DATA3_DATA_Pos               (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA3_DATA_Msk               (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* =========================================================  DATA4  ========================================================= */
#define MLCD_DATA4_DATA_Pos               (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA4_DATA_Msk               (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* =========================================================  DATA5  ========================================================= */
#define MLCD_DATA5_DATA_Pos               (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA5_DATA_Msk               (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* =========================================================  DATA6  ========================================================= */
#define MLCD_DATA6_DATA_Pos               (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA6_DATA_Msk               (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* =========================================================  DATA7  ========================================================= */
#define MLCD_DATA7_DATA_Pos               (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA7_DATA_Msk               (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* =========================================================  DATA8  ========================================================= */
#define MLCD_DATA8_DATA_Pos               (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA8_DATA_Msk               (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* =========================================================  DATA9  ========================================================= */
#define MLCD_DATA9_DATA_Pos               (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA9_DATA_Msk               (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA10  ========================================================= */
#define MLCD_DATA10_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA10_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA11  ========================================================= */
#define MLCD_DATA11_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA11_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA12  ========================================================= */
#define MLCD_DATA12_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA12_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA13  ========================================================= */
#define MLCD_DATA13_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA13_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA14  ========================================================= */
#define MLCD_DATA14_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA14_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA15  ========================================================= */
#define MLCD_DATA15_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA15_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA16  ========================================================= */
#define MLCD_DATA16_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA16_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA17  ========================================================= */
#define MLCD_DATA17_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA17_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA18  ========================================================= */
#define MLCD_DATA18_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA18_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA19  ========================================================= */
#define MLCD_DATA19_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA19_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA20  ========================================================= */
#define MLCD_DATA20_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA20_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA21  ========================================================= */
#define MLCD_DATA21_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA21_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA22  ========================================================= */
#define MLCD_DATA22_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA22_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA23  ========================================================= */
#define MLCD_DATA23_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA23_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA24  ========================================================= */
#define MLCD_DATA24_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA24_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA25  ========================================================= */
#define MLCD_DATA25_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA25_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA26  ========================================================= */
#define MLCD_DATA26_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA26_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA27  ========================================================= */
#define MLCD_DATA27_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA27_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA28  ========================================================= */
#define MLCD_DATA28_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA28_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA29  ========================================================= */
#define MLCD_DATA29_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA29_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA30  ========================================================= */
#define MLCD_DATA30_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA30_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* ========================================================  DATA31  ========================================================= */
#define MLCD_DATA31_DATA_Pos              (0UL)                     /*!< DATA (Bit 0)                                          */
#define MLCD_DATA31_DATA_Msk              (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
/* =======================================================  DATA_HW0  ======================================================== */
/* =======================================================  DATA_HW1  ======================================================== */
/* =======================================================  DATA_HW2  ======================================================== */
/* =======================================================  DATA_HW3  ======================================================== */
/* =======================================================  DATA_HW4  ======================================================== */
/* =======================================================  DATA_HW5  ======================================================== */
/* =======================================================  DATA_HW6  ======================================================== */
/* =======================================================  DATA_HW7  ======================================================== */
/* =======================================================  DATA_HW8  ======================================================== */
/* =======================================================  DATA_HW9  ======================================================== */
/* =======================================================  DATA_HW10  ======================================================= */
/* =======================================================  DATA_HW11  ======================================================= */
/* =======================================================  DATA_HW12  ======================================================= */
/* =======================================================  DATA_HW13  ======================================================= */
/* =======================================================  DATA_HW14  ======================================================= */
/* =======================================================  DATA_HW15  ======================================================= */
/* ========================================================  DATA_W0  ======================================================== */
/* ========================================================  DATA_W1  ======================================================== */
/* ========================================================  DATA_W2  ======================================================== */
/* ========================================================  DATA_W3  ======================================================== */
/* ========================================================  DATA_W4  ======================================================== */
/* ========================================================  DATA_W5  ======================================================== */
/* ========================================================  DATA_W6  ======================================================== */
/* ========================================================  DATA_W7  ======================================================== */


/* =========================================================================================================================== */
/* ================                                            MMF                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  MMSFR  ========================================================= */
#define MMF_MMSFR_KEY_Pos                 (24UL)                    /*!< KEY (Bit 24)                                          */
#define MMF_MMSFR_KEY_Msk                 (0xff000000UL)            /*!< KEY (Bitfield-Mask: 0xff)                             */
#define MMF_MMSFR_MEMMIRADDR_Pos          (7UL)                     /*!< MEMMIRADDR (Bit 7)                                    */
#define MMF_MMSFR_MEMMIRADDR_Msk          (0x7fff80UL)              /*!< MEMMIRADDR (Bitfield-Mask: 0xffff)                    */
/* =========================================================  MMEN  ========================================================== */
#define MMF_MMEN_KEY_Pos                  (24UL)                    /*!< KEY (Bit 24)                                          */
#define MMF_MMEN_KEY_Msk                  (0xff000000UL)            /*!< KEY (Bitfield-Mask: 0xff)                             */
#define MMF_MMEN_EN_Pos                   (0UL)                     /*!< EN (Bit 0)                                            */
#define MMF_MMEN_EN_Msk                   (0x1UL)                   /*!< EN (Bitfield-Mask: 0x01)                              */


/* =========================================================================================================================== */
/* ================                                           MMPU                                            ================ */
/* =========================================================================================================================== */

/* =======================================================  MMPUCTLA  ======================================================== */
#define MMPU_MMPUCTLA_KEY_Pos             (8UL)                     /*!< KEY (Bit 8)                                           */
#define MMPU_MMPUCTLA_KEY_Msk             (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
#define MMPU_MMPUCTLA_OAD_Pos             (1UL)                     /*!< OAD (Bit 1)                                           */
#define MMPU_MMPUCTLA_OAD_Msk             (0x2UL)                   /*!< OAD (Bitfield-Mask: 0x01)                             */
#define MMPU_MMPUCTLA_ENABLE_Pos          (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define MMPU_MMPUCTLA_ENABLE_Msk          (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
/* ========================================================  MMPUPTA  ======================================================== */
#define MMPU_MMPUPTA_KEY_Pos              (8UL)                     /*!< KEY (Bit 8)                                           */
#define MMPU_MMPUPTA_KEY_Msk              (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
#define MMPU_MMPUPTA_PROTECT_Pos          (0UL)                     /*!< PROTECT (Bit 0)                                       */
#define MMPU_MMPUPTA_PROTECT_Msk          (0x1UL)                   /*!< PROTECT (Bitfield-Mask: 0x01)                         */
/* =======================================================  MMPUACA0  ======================================================== */
#define MMPU_MMPUACA0_WP_Pos              (2UL)                     /*!< WP (Bit 2)                                            */
#define MMPU_MMPUACA0_WP_Msk              (0x4UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
#define MMPU_MMPUACA0_RP_Pos              (1UL)                     /*!< RP (Bit 1)                                            */
#define MMPU_MMPUACA0_RP_Msk              (0x2UL)                   /*!< RP (Bitfield-Mask: 0x01)                              */
#define MMPU_MMPUACA0_ENABLE_Pos          (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define MMPU_MMPUACA0_ENABLE_Msk          (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
/* =======================================================  MMPUACA1  ======================================================== */
#define MMPU_MMPUACA1_WP_Pos              (2UL)                     /*!< WP (Bit 2)                                            */
#define MMPU_MMPUACA1_WP_Msk              (0x4UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
#define MMPU_MMPUACA1_RP_Pos              (1UL)                     /*!< RP (Bit 1)                                            */
#define MMPU_MMPUACA1_RP_Msk              (0x2UL)                   /*!< RP (Bitfield-Mask: 0x01)                              */
#define MMPU_MMPUACA1_ENABLE_Pos          (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define MMPU_MMPUACA1_ENABLE_Msk          (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
/* =======================================================  MMPUACA2  ======================================================== */
#define MMPU_MMPUACA2_WP_Pos              (2UL)                     /*!< WP (Bit 2)                                            */
#define MMPU_MMPUACA2_WP_Msk              (0x4UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
#define MMPU_MMPUACA2_RP_Pos              (1UL)                     /*!< RP (Bit 1)                                            */
#define MMPU_MMPUACA2_RP_Msk              (0x2UL)                   /*!< RP (Bitfield-Mask: 0x01)                              */
#define MMPU_MMPUACA2_ENABLE_Pos          (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define MMPU_MMPUACA2_ENABLE_Msk          (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
/* =======================================================  MMPUACA3  ======================================================== */
#define MMPU_MMPUACA3_WP_Pos              (2UL)                     /*!< WP (Bit 2)                                            */
#define MMPU_MMPUACA3_WP_Msk              (0x4UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
#define MMPU_MMPUACA3_RP_Pos              (1UL)                     /*!< RP (Bit 1)                                            */
#define MMPU_MMPUACA3_RP_Msk              (0x2UL)                   /*!< RP (Bitfield-Mask: 0x01)                              */
#define MMPU_MMPUACA3_ENABLE_Pos          (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define MMPU_MMPUACA3_ENABLE_Msk          (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
/* ========================================================  MMPUSA0  ======================================================== */
#define MMPU_MMPUSA0_MMPUSA0_Pos          (0UL)                     /*!< MMPUSA0 (Bit 0)                                       */
#define MMPU_MMPUSA0_MMPUSA0_Msk          (0xffffffffUL)            /*!< MMPUSA0 (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  MMPUSA1  ======================================================== */
#define MMPU_MMPUSA1_MMPUSA1_Pos          (0UL)                     /*!< MMPUSA1 (Bit 0)                                       */
#define MMPU_MMPUSA1_MMPUSA1_Msk          (0xffffffffUL)            /*!< MMPUSA1 (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  MMPUSA2  ======================================================== */
#define MMPU_MMPUSA2_MMPUSA2_Pos          (0UL)                     /*!< MMPUSA2 (Bit 0)                                       */
#define MMPU_MMPUSA2_MMPUSA2_Msk          (0xffffffffUL)            /*!< MMPUSA2 (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  MMPUSA3  ======================================================== */
#define MMPU_MMPUSA3_MMPUSA3_Pos          (0UL)                     /*!< MMPUSA3 (Bit 0)                                       */
#define MMPU_MMPUSA3_MMPUSA3_Msk          (0xffffffffUL)            /*!< MMPUSA3 (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  MMPUEA0  ======================================================== */
#define MMPU_MMPUEA0_MMPUEA0_Pos          (0UL)                     /*!< MMPUEA0 (Bit 0)                                       */
#define MMPU_MMPUEA0_MMPUEA0_Msk          (0xffffffffUL)            /*!< MMPUEA0 (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  MMPUEA1  ======================================================== */
#define MMPU_MMPUEA1_MMPUEA1_Pos          (0UL)                     /*!< MMPUEA1 (Bit 0)                                       */
#define MMPU_MMPUEA1_MMPUEA1_Msk          (0xffffffffUL)            /*!< MMPUEA1 (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  MMPUEA2  ======================================================== */
#define MMPU_MMPUEA2_MMPUEA2_Pos          (0UL)                     /*!< MMPUEA2 (Bit 0)                                       */
#define MMPU_MMPUEA2_MMPUEA2_Msk          (0xffffffffUL)            /*!< MMPUEA2 (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  MMPUEA3  ======================================================== */
#define MMPU_MMPUEA3_MMPUEA3_Pos          (0UL)                     /*!< MMPUEA3 (Bit 0)                                       */
#define MMPU_MMPUEA3_MMPUEA3_Msk          (0xffffffffUL)            /*!< MMPUEA3 (Bitfield-Mask: 0xffffffff)                   */


/* =========================================================================================================================== */
/* ================                                           MSTP                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  MSTPCRB  ======================================================== */
#define MSTP_MSTPCRB_MSTPB31_Pos          (31UL)                    /*!< MSTPB31 (Bit 31)                                      */
#define MSTP_MSTPCRB_MSTPB31_Msk          (0x80000000UL)            /*!< MSTPB31 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB30_Pos          (30UL)                    /*!< MSTPB30 (Bit 30)                                      */
#define MSTP_MSTPCRB_MSTPB30_Msk          (0x40000000UL)            /*!< MSTPB30 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB29_Pos          (29UL)                    /*!< MSTPB29 (Bit 29)                                      */
#define MSTP_MSTPCRB_MSTPB29_Msk          (0x20000000UL)            /*!< MSTPB29 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB28_Pos          (28UL)                    /*!< MSTPB28 (Bit 28)                                      */
#define MSTP_MSTPCRB_MSTPB28_Msk          (0x10000000UL)            /*!< MSTPB28 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB27_Pos          (27UL)                    /*!< MSTPB27 (Bit 27)                                      */
#define MSTP_MSTPCRB_MSTPB27_Msk          (0x8000000UL)             /*!< MSTPB27 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB26_Pos          (26UL)                    /*!< MSTPB26 (Bit 26)                                      */
#define MSTP_MSTPCRB_MSTPB26_Msk          (0x4000000UL)             /*!< MSTPB26 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB22_Pos          (22UL)                    /*!< MSTPB22 (Bit 22)                                      */
#define MSTP_MSTPCRB_MSTPB22_Msk          (0x400000UL)              /*!< MSTPB22 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB19_Pos          (19UL)                    /*!< MSTPB19 (Bit 19)                                      */
#define MSTP_MSTPCRB_MSTPB19_Msk          (0x80000UL)               /*!< MSTPB19 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB18_Pos          (18UL)                    /*!< MSTPB18 (Bit 18)                                      */
#define MSTP_MSTPCRB_MSTPB18_Msk          (0x40000UL)               /*!< MSTPB18 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB11_Pos          (11UL)                    /*!< MSTPB11 (Bit 11)                                      */
#define MSTP_MSTPCRB_MSTPB11_Msk          (0x800UL)                 /*!< MSTPB11 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB9_Pos           (9UL)                     /*!< MSTPB9 (Bit 9)                                        */
#define MSTP_MSTPCRB_MSTPB9_Msk           (0x200UL)                 /*!< MSTPB9 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRB_MSTPB8_Pos           (8UL)                     /*!< MSTPB8 (Bit 8)                                        */
#define MSTP_MSTPCRB_MSTPB8_Msk           (0x100UL)                 /*!< MSTPB8 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRB_MSTPB6_Pos           (6UL)                     /*!< MSTPB6 (Bit 6)                                        */
#define MSTP_MSTPCRB_MSTPB6_Msk           (0x40UL)                  /*!< MSTPB6 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRB_MSTPB5_Pos           (5UL)                     /*!< MSTPB5 (Bit 5)                                        */
#define MSTP_MSTPCRB_MSTPB5_Msk           (0x20UL)                  /*!< MSTPB5 (Bitfield-Mask: 0x01)                          */
/* ========================================================  MSTPCRC  ======================================================== */
#define MSTP_MSTPCRC_MSTPC31_Pos          (31UL)                    /*!< MSTPC31 (Bit 31)                                      */
#define MSTP_MSTPCRC_MSTPC31_Msk          (0x80000000UL)            /*!< MSTPC31 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC26_Pos          (26UL)                    /*!< MSTPC26 (Bit 26)                                      */
#define MSTP_MSTPCRC_MSTPC26_Msk          (0x4000000UL)             /*!< MSTPC26 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC25_Pos          (25UL)                    /*!< MSTPC25 (Bit 25)                                      */
#define MSTP_MSTPCRC_MSTPC25_Msk          (0x2000000UL)             /*!< MSTPC25 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC22_Pos          (22UL)                    /*!< MSTPC22 (Bit 22)                                      */
#define MSTP_MSTPCRC_MSTPC22_Msk          (0x400000UL)              /*!< MSTPC22 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC15_Pos          (15UL)                    /*!< MSTPC15 (Bit 15)                                      */
#define MSTP_MSTPCRC_MSTPC15_Msk          (0x8000UL)                /*!< MSTPC15 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC14_Pos          (14UL)                    /*!< MSTPC14 (Bit 14)                                      */
#define MSTP_MSTPCRC_MSTPC14_Msk          (0x4000UL)                /*!< MSTPC14 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC13_Pos          (13UL)                    /*!< MSTPC13 (Bit 13)                                      */
#define MSTP_MSTPCRC_MSTPC13_Msk          (0x2000UL)                /*!< MSTPC13 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC10_Pos          (10UL)                    /*!< MSTPC10 (Bit 10)                                      */
#define MSTP_MSTPCRC_MSTPC10_Msk          (0x400UL)                 /*!< MSTPC10 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC1_Pos           (1UL)                     /*!< MSTPC1 (Bit 1)                                        */
#define MSTP_MSTPCRC_MSTPC1_Msk           (0x2UL)                   /*!< MSTPC1 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRC_MSTPC0_Pos           (0UL)                     /*!< MSTPC0 (Bit 0)                                        */
#define MSTP_MSTPCRC_MSTPC0_Msk           (0x1UL)                   /*!< MSTPC0 (Bitfield-Mask: 0x01)                          */
/* ========================================================  MSTPCRD  ======================================================== */
#define MSTP_MSTPCRD_MSTPD28_Pos          (28UL)                    /*!< MSTPD28 (Bit 28)                                      */
#define MSTP_MSTPCRD_MSTPD28_Msk          (0x10000000UL)            /*!< MSTPD28 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD22_Pos          (22UL)                    /*!< MSTPD22 (Bit 22)                                      */
#define MSTP_MSTPCRD_MSTPD22_Msk          (0x400000UL)              /*!< MSTPD22 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD20_Pos          (20UL)                    /*!< MSTPD20 (Bit 20)                                      */
#define MSTP_MSTPCRD_MSTPD20_Msk          (0x100000UL)              /*!< MSTPD20 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD17_Pos          (17UL)                    /*!< MSTPD17 (Bit 17)                                      */
#define MSTP_MSTPCRD_MSTPD17_Msk          (0x20000UL)               /*!< MSTPD17 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD16_Pos          (16UL)                    /*!< MSTPD16 (Bit 16)                                      */
#define MSTP_MSTPCRD_MSTPD16_Msk          (0x10000UL)               /*!< MSTPD16 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD14_Pos          (14UL)                    /*!< MSTPD14 (Bit 14)                                      */
#define MSTP_MSTPCRD_MSTPD14_Msk          (0x4000UL)                /*!< MSTPD14 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD8_Pos           (8UL)                     /*!< MSTPD8 (Bit 8)                                        */
#define MSTP_MSTPCRD_MSTPD8_Msk           (0x100UL)                 /*!< MSTPD8 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD7_Pos           (7UL)                     /*!< MSTPD7 (Bit 7)                                        */
#define MSTP_MSTPCRD_MSTPD7_Msk           (0x80UL)                  /*!< MSTPD7 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD6_Pos           (6UL)                     /*!< MSTPD6 (Bit 6)                                        */
#define MSTP_MSTPCRD_MSTPD6_Msk           (0x40UL)                  /*!< MSTPD6 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD5_Pos           (5UL)                     /*!< MSTPD5 (Bit 5)                                        */
#define MSTP_MSTPCRD_MSTPD5_Msk           (0x20UL)                  /*!< MSTPD5 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD4_Pos           (4UL)                     /*!< MSTPD4 (Bit 4)                                        */
#define MSTP_MSTPCRD_MSTPD4_Msk           (0x10UL)                  /*!< MSTPD4 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD3_Pos           (3UL)                     /*!< MSTPD3 (Bit 3)                                        */
#define MSTP_MSTPCRD_MSTPD3_Msk           (0x8UL)                   /*!< MSTPD3 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD2_Pos           (2UL)                     /*!< MSTPD2 (Bit 2)                                        */
#define MSTP_MSTPCRD_MSTPD2_Msk           (0x4UL)                   /*!< MSTPD2 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD1_Pos           (1UL)                     /*!< MSTPD1 (Bit 1)                                        */
#define MSTP_MSTPCRD_MSTPD1_Msk           (0x2UL)                   /*!< MSTPD1 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD0_Pos           (0UL)                     /*!< MSTPD0 (Bit 0)                                        */
#define MSTP_MSTPCRD_MSTPD0_Msk           (0x1UL)                   /*!< MSTPD0 (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           MTDV                                            ================ */
/* =========================================================================================================================== */

/* =======================================================  PLSENABLE  ======================================================= */
#define MTDV_PLSENABLE_PM6PLSSK_Pos       (13UL)                    /*!< PM6PLSSK (Bit 13)                                     */
#define MTDV_PLSENABLE_PM6PLSSK_Msk       (0x2000UL)                /*!< PM6PLSSK (Bitfield-Mask: 0x01)                        */
#define MTDV_PLSENABLE_PM5PLSSK_Pos       (12UL)                    /*!< PM5PLSSK (Bit 12)                                     */
#define MTDV_PLSENABLE_PM5PLSSK_Msk       (0x1000UL)                /*!< PM5PLSSK (Bitfield-Mask: 0x01)                        */
#define MTDV_PLSENABLE_PM3PLSSK_Pos       (10UL)                    /*!< PM3PLSSK (Bit 10)                                     */
#define MTDV_PLSENABLE_PM3PLSSK_Msk       (0x400UL)                 /*!< PM3PLSSK (Bitfield-Mask: 0x01)                        */
#define MTDV_PLSENABLE_PM2PLSSK_Pos       (9UL)                     /*!< PM2PLSSK (Bit 9)                                      */
#define MTDV_PLSENABLE_PM2PLSSK_Msk       (0x200UL)                 /*!< PM2PLSSK (Bitfield-Mask: 0x01)                        */
#define MTDV_PLSENABLE_PM1PLSSK_Pos       (8UL)                     /*!< PM1PLSSK (Bit 8)                                      */
#define MTDV_PLSENABLE_PM1PLSSK_Msk       (0x100UL)                 /*!< PM1PLSSK (Bitfield-Mask: 0x01)                        */
#define MTDV_PLSENABLE_PM6PLSON_Pos       (5UL)                     /*!< PM6PLSON (Bit 5)                                      */
#define MTDV_PLSENABLE_PM6PLSON_Msk       (0x20UL)                  /*!< PM6PLSON (Bitfield-Mask: 0x01)                        */
#define MTDV_PLSENABLE_PM5PLSON_Pos       (4UL)                     /*!< PM5PLSON (Bit 4)                                      */
#define MTDV_PLSENABLE_PM5PLSON_Msk       (0x10UL)                  /*!< PM5PLSON (Bitfield-Mask: 0x01)                        */
#define MTDV_PLSENABLE_PM3PLSON_Pos       (2UL)                     /*!< PM3PLSON (Bit 2)                                      */
#define MTDV_PLSENABLE_PM3PLSON_Msk       (0x4UL)                   /*!< PM3PLSON (Bitfield-Mask: 0x01)                        */
#define MTDV_PLSENABLE_PM2PLSON_Pos       (1UL)                     /*!< PM2PLSON (Bit 1)                                      */
#define MTDV_PLSENABLE_PM2PLSON_Msk       (0x2UL)                   /*!< PM2PLSON (Bitfield-Mask: 0x01)                        */
#define MTDV_PLSENABLE_PM1PLSON_Pos       (0UL)                     /*!< PM1PLSON (Bit 0)                                      */
#define MTDV_PLSENABLE_PM1PLSON_Msk       (0x1UL)                   /*!< PM1PLSON (Bitfield-Mask: 0x01)                        */
/* =======================================================  REVENABLE  ======================================================= */
#define MTDV_REVENABLE_PM6REVSK_Pos       (13UL)                    /*!< PM6REVSK (Bit 13)                                     */
#define MTDV_REVENABLE_PM6REVSK_Msk       (0x2000UL)                /*!< PM6REVSK (Bitfield-Mask: 0x01)                        */
#define MTDV_REVENABLE_PM5REVSK_Pos       (12UL)                    /*!< PM5REVSK (Bit 12)                                     */
#define MTDV_REVENABLE_PM5REVSK_Msk       (0x1000UL)                /*!< PM5REVSK (Bitfield-Mask: 0x01)                        */
#define MTDV_REVENABLE_PM3REVSK_Pos       (10UL)                    /*!< PM3REVSK (Bit 10)                                     */
#define MTDV_REVENABLE_PM3REVSK_Msk       (0x400UL)                 /*!< PM3REVSK (Bitfield-Mask: 0x01)                        */
#define MTDV_REVENABLE_PM2REVSK_Pos       (9UL)                     /*!< PM2REVSK (Bit 9)                                      */
#define MTDV_REVENABLE_PM2REVSK_Msk       (0x200UL)                 /*!< PM2REVSK (Bitfield-Mask: 0x01)                        */
#define MTDV_REVENABLE_PM1REVSK_Pos       (8UL)                     /*!< PM1REVSK (Bit 8)                                      */
#define MTDV_REVENABLE_PM1REVSK_Msk       (0x100UL)                 /*!< PM1REVSK (Bitfield-Mask: 0x01)                        */
#define MTDV_REVENABLE_PM6REVON_Pos       (5UL)                     /*!< PM6REVON (Bit 5)                                      */
#define MTDV_REVENABLE_PM6REVON_Msk       (0x20UL)                  /*!< PM6REVON (Bitfield-Mask: 0x01)                        */
#define MTDV_REVENABLE_PM5REVON_Pos       (4UL)                     /*!< PM5REVON (Bit 4)                                      */
#define MTDV_REVENABLE_PM5REVON_Msk       (0x10UL)                  /*!< PM5REVON (Bitfield-Mask: 0x01)                        */
#define MTDV_REVENABLE_PM3REVON_Pos       (2UL)                     /*!< PM3REVON (Bit 2)                                      */
#define MTDV_REVENABLE_PM3REVON_Msk       (0x4UL)                   /*!< PM3REVON (Bitfield-Mask: 0x01)                        */
#define MTDV_REVENABLE_PM2REVON_Pos       (1UL)                     /*!< PM2REVON (Bit 1)                                      */
#define MTDV_REVENABLE_PM2REVON_Msk       (0x2UL)                   /*!< PM2REVON (Bitfield-Mask: 0x01)                        */
#define MTDV_REVENABLE_PM1REVON_Pos       (0UL)                     /*!< PM1REVON (Bit 0)                                      */
#define MTDV_REVENABLE_PM1REVON_Msk       (0x1UL)                   /*!< PM1REVON (Bitfield-Mask: 0x01)                        */
/* ========================================================  KYOCON  ========================================================= */
#define MTDV_KYOCON_PM6KYC_Pos            (5UL)                     /*!< PM6KYC (Bit 5)                                        */
#define MTDV_KYOCON_PM6KYC_Msk            (0x20UL)                  /*!< PM6KYC (Bitfield-Mask: 0x01)                          */
#define MTDV_KYOCON_PM5KYC_Pos            (4UL)                     /*!< PM5KYC (Bit 4)                                        */
#define MTDV_KYOCON_PM5KYC_Msk            (0x10UL)                  /*!< PM5KYC (Bitfield-Mask: 0x01)                          */
#define MTDV_KYOCON_PM3KYC_Pos            (2UL)                     /*!< PM3KYC (Bit 2)                                        */
#define MTDV_KYOCON_PM3KYC_Msk            (0x4UL)                   /*!< PM3KYC (Bitfield-Mask: 0x01)                          */
#define MTDV_KYOCON_PM2KYC_Pos            (1UL)                     /*!< PM2KYC (Bit 1)                                        */
#define MTDV_KYOCON_PM2KYC_Msk            (0x2UL)                   /*!< PM2KYC (Bitfield-Mask: 0x01)                          */
#define MTDV_KYOCON_PM1KYC_Pos            (0UL)                     /*!< PM1KYC (Bit 0)                                        */
#define MTDV_KYOCON_PM1KYC_Msk            (0x1UL)                   /*!< PM1KYC (Bitfield-Mask: 0x01)                          */
/* =======================================================  PMSTATE1  ======================================================== */
#define MTDV_PMSTATE1_PM6WAIT_Pos         (13UL)                    /*!< PM6WAIT (Bit 13)                                      */
#define MTDV_PMSTATE1_PM6WAIT_Msk         (0x2000UL)                /*!< PM6WAIT (Bitfield-Mask: 0x01)                         */
#define MTDV_PMSTATE1_PM5WAIT_Pos         (12UL)                    /*!< PM5WAIT (Bit 12)                                      */
#define MTDV_PMSTATE1_PM5WAIT_Msk         (0x1000UL)                /*!< PM5WAIT (Bitfield-Mask: 0x01)                         */
#define MTDV_PMSTATE1_PM3WAIT_Pos         (10UL)                    /*!< PM3WAIT (Bit 10)                                      */
#define MTDV_PMSTATE1_PM3WAIT_Msk         (0x400UL)                 /*!< PM3WAIT (Bitfield-Mask: 0x01)                         */
#define MTDV_PMSTATE1_PM2WAIT_Pos         (9UL)                     /*!< PM2WAIT (Bit 9)                                       */
#define MTDV_PMSTATE1_PM2WAIT_Msk         (0x200UL)                 /*!< PM2WAIT (Bitfield-Mask: 0x01)                         */
#define MTDV_PMSTATE1_PM1WAIT_Pos         (8UL)                     /*!< PM1WAIT (Bit 8)                                       */
#define MTDV_PMSTATE1_PM1WAIT_Msk         (0x100UL)                 /*!< PM1WAIT (Bitfield-Mask: 0x01)                         */
#define MTDV_PMSTATE1_PM6ON_Pos           (5UL)                     /*!< PM6ON (Bit 5)                                         */
#define MTDV_PMSTATE1_PM6ON_Msk           (0x20UL)                  /*!< PM6ON (Bitfield-Mask: 0x01)                           */
#define MTDV_PMSTATE1_PM5ON_Pos           (4UL)                     /*!< PM5ON (Bit 4)                                         */
#define MTDV_PMSTATE1_PM5ON_Msk           (0x10UL)                  /*!< PM5ON (Bitfield-Mask: 0x01)                           */
#define MTDV_PMSTATE1_PM3ON_Pos           (2UL)                     /*!< PM3ON (Bit 2)                                         */
#define MTDV_PMSTATE1_PM3ON_Msk           (0x4UL)                   /*!< PM3ON (Bitfield-Mask: 0x01)                           */
#define MTDV_PMSTATE1_PM2ON_Pos           (1UL)                     /*!< PM2ON (Bit 1)                                         */
#define MTDV_PMSTATE1_PM2ON_Msk           (0x2UL)                   /*!< PM2ON (Bitfield-Mask: 0x01)                           */
#define MTDV_PMSTATE1_PM1ON_Pos           (0UL)                     /*!< PM1ON (Bit 0)                                         */
#define MTDV_PMSTATE1_PM1ON_Msk           (0x1UL)                   /*!< PM1ON (Bitfield-Mask: 0x01)                           */
/* =======================================================  PMSTATE2  ======================================================== */
#define MTDV_PMSTATE2_PM6KCIN_Pos         (5UL)                     /*!< PM6KCIN (Bit 5)                                       */
#define MTDV_PMSTATE2_PM6KCIN_Msk         (0x20UL)                  /*!< PM6KCIN (Bitfield-Mask: 0x01)                         */
#define MTDV_PMSTATE2_PM5KCIN_Pos         (4UL)                     /*!< PM5KCIN (Bit 4)                                       */
#define MTDV_PMSTATE2_PM5KCIN_Msk         (0x10UL)                  /*!< PM5KCIN (Bitfield-Mask: 0x01)                         */
#define MTDV_PMSTATE2_PM3KCIN_Pos         (2UL)                     /*!< PM3KCIN (Bit 2)                                       */
#define MTDV_PMSTATE2_PM3KCIN_Msk         (0x4UL)                   /*!< PM3KCIN (Bitfield-Mask: 0x01)                         */
#define MTDV_PMSTATE2_PM2KCIN_Pos         (1UL)                     /*!< PM2KCIN (Bit 1)                                       */
#define MTDV_PMSTATE2_PM2KCIN_Msk         (0x2UL)                   /*!< PM2KCIN (Bitfield-Mask: 0x01)                         */
#define MTDV_PMSTATE2_PM1KCIN_Pos         (0UL)                     /*!< PM1KCIN (Bit 0)                                       */
#define MTDV_PMSTATE2_PM1KCIN_Msk         (0x1UL)                   /*!< PM1KCIN (Bitfield-Mask: 0x01)                         */
/* =========================================================  PMDVR  ========================================================= */
#define MTDV_PMDVR_O9DVR_Pos              (8UL)                     /*!< O9DVR (Bit 8)                                         */
#define MTDV_PMDVR_O9DVR_Msk              (0x100UL)                 /*!< O9DVR (Bitfield-Mask: 0x01)                           */
#define MTDV_PMDVR_O8DVR_Pos              (7UL)                     /*!< O8DVR (Bit 7)                                         */
#define MTDV_PMDVR_O8DVR_Msk              (0x80UL)                  /*!< O8DVR (Bitfield-Mask: 0x01)                           */
#define MTDV_PMDVR_O7DVR_Pos              (6UL)                     /*!< O7DVR (Bit 6)                                         */
#define MTDV_PMDVR_O7DVR_Msk              (0x40UL)                  /*!< O7DVR (Bitfield-Mask: 0x01)                           */
#define MTDV_PMDVR_O6DVR_Pos              (5UL)                     /*!< O6DVR (Bit 5)                                         */
#define MTDV_PMDVR_O6DVR_Msk              (0x20UL)                  /*!< O6DVR (Bitfield-Mask: 0x01)                           */
#define MTDV_PMDVR_O5DVR_Pos              (4UL)                     /*!< O5DVR (Bit 4)                                         */
#define MTDV_PMDVR_O5DVR_Msk              (0x10UL)                  /*!< O5DVR (Bitfield-Mask: 0x01)                           */
#define MTDV_PMDVR_O4DVR_Pos              (3UL)                     /*!< O4DVR (Bit 3)                                         */
#define MTDV_PMDVR_O4DVR_Msk              (0x8UL)                   /*!< O4DVR (Bitfield-Mask: 0x01)                           */
#define MTDV_PMDVR_O2DVR_Pos              (1UL)                     /*!< O2DVR (Bit 1)                                         */
#define MTDV_PMDVR_O2DVR_Msk              (0x2UL)                   /*!< O2DVR (Bitfield-Mask: 0x01)                           */
#define MTDV_PMDVR_O1DVR_Pos              (0UL)                     /*!< O1DVR (Bit 0)                                         */
#define MTDV_PMDVR_O1DVR_Msk              (0x1UL)                   /*!< O1DVR (Bitfield-Mask: 0x01)                           */
/* ========================================================  VPMCON  ========================================================= */
#define MTDV_VPMCON_WAITSKIP_Pos          (7UL)                     /*!< WAITSKIP (Bit 7)                                      */
#define MTDV_VPMCON_WAITSKIP_Msk          (0x80UL)                  /*!< WAITSKIP (Bitfield-Mask: 0x01)                        */
#define MTDV_VPMCON_VPMSEL_Pos            (6UL)                     /*!< VPMSEL (Bit 6)                                        */
#define MTDV_VPMCON_VPMSEL_Msk            (0x40UL)                  /*!< VPMSEL (Bitfield-Mask: 0x01)                          */
#define MTDV_VPMCON_VSYSSEL_Pos           (4UL)                     /*!< VSYSSEL (Bit 4)                                       */
#define MTDV_VPMCON_VSYSSEL_Msk           (0x10UL)                  /*!< VSYSSEL (Bitfield-Mask: 0x01)                         */
#define MTDV_VPMCON_VPMENA_Pos            (3UL)                     /*!< VPMENA (Bit 3)                                        */
#define MTDV_VPMCON_VPMENA_Msk            (0x8UL)                   /*!< VPMENA (Bitfield-Mask: 0x01)                          */
#define MTDV_VPMCON_VPMAS_Pos             (0UL)                     /*!< VPMAS (Bit 0)                                         */
#define MTDV_VPMCON_VPMAS_Msk             (0x7UL)                   /*!< VPMAS (Bitfield-Mask: 0x07)                           */
/* ========================================================  RESREG  ========================================================= */
#define MTDV_RESREG_PM1RES_Pos            (0UL)                     /*!< PM1RES (Bit 0)                                        */
#define MTDV_RESREG_PM1RES_Msk            (0x7UL)                   /*!< PM1RES (Bitfield-Mask: 0x07)                          */
/* ========================================================  PMCHKTM  ======================================================== */
#define MTDV_PMCHKTM_CHK_Pos              (0UL)                     /*!< CHK (Bit 0)                                           */
#define MTDV_PMCHKTM_CHK_Msk              (0x3ffUL)                 /*!< CHK (Bitfield-Mask: 0x3ff)                            */
/* ========================================================  PMCHKCK  ======================================================== */
#define MTDV_PMCHKCK_PM36RVCK_Pos         (6UL)                     /*!< PM36RVCK (Bit 6)                                      */
#define MTDV_PMCHKCK_PM36RVCK_Msk         (0x40UL)                  /*!< PM36RVCK (Bitfield-Mask: 0x01)                        */
#define MTDV_PMCHKCK_PM25RVCK_Pos         (5UL)                     /*!< PM25RVCK (Bit 5)                                      */
#define MTDV_PMCHKCK_PM25RVCK_Msk         (0x20UL)                  /*!< PM25RVCK (Bitfield-Mask: 0x01)                        */
#define MTDV_PMCHKCK_PM1RVCK_Pos          (4UL)                     /*!< PM1RVCK (Bit 4)                                       */
#define MTDV_PMCHKCK_PM1RVCK_Msk          (0x10UL)                  /*!< PM1RVCK (Bitfield-Mask: 0x01)                         */
#define MTDV_PMCHKCK_PM36PLCK_Pos         (2UL)                     /*!< PM36PLCK (Bit 2)                                      */
#define MTDV_PMCHKCK_PM36PLCK_Msk         (0x4UL)                   /*!< PM36PLCK (Bitfield-Mask: 0x01)                        */
#define MTDV_PMCHKCK_PM25PLCK_Pos         (1UL)                     /*!< PM25PLCK (Bit 1)                                      */
#define MTDV_PMCHKCK_PM25PLCK_Msk         (0x2UL)                   /*!< PM25PLCK (Bitfield-Mask: 0x01)                        */
#define MTDV_PMCHKCK_PM1PLCK_Pos          (0UL)                     /*!< PM1PLCK (Bit 0)                                       */
#define MTDV_PMCHKCK_PM1PLCK_Msk          (0x1UL)                   /*!< PM1PLCK (Bitfield-Mask: 0x01)                         */
/* =======================================================  PMCHKSTA  ======================================================== */
#define MTDV_PMCHKSTA_PM36CKNG_Pos        (2UL)                     /*!< PM36CKNG (Bit 2)                                      */
#define MTDV_PMCHKSTA_PM36CKNG_Msk        (0x4UL)                   /*!< PM36CKNG (Bitfield-Mask: 0x01)                        */
#define MTDV_PMCHKSTA_PM25CKNG_Pos        (1UL)                     /*!< PM25CKNG (Bit 1)                                      */
#define MTDV_PMCHKSTA_PM25CKNG_Msk        (0x2UL)                   /*!< PM25CKNG (Bitfield-Mask: 0x01)                        */
#define MTDV_PMCHKSTA_PM1CKNG_Pos         (0UL)                     /*!< PM1CKNG (Bit 0)                                       */
#define MTDV_PMCHKSTA_PM1CKNG_Msk         (0x1UL)                   /*!< PM1CKNG (Bitfield-Mask: 0x01)                         */
/* ========================================================  PM1SET  ========================================================= */
#define MTDV_PM1SET_PM1LVDW_Pos           (7UL)                     /*!< PM1LVDW (Bit 7)                                       */
#define MTDV_PM1SET_PM1LVDW_Msk           (0x80UL)                  /*!< PM1LVDW (Bitfield-Mask: 0x01)                         */
#define MTDV_PM1SET_PM1STY_Pos            (6UL)                     /*!< PM1STY (Bit 6)                                        */
#define MTDV_PM1SET_PM1STY_Msk            (0x40UL)                  /*!< PM1STY (Bitfield-Mask: 0x01)                          */
#define MTDV_PM1SET_PM1LVINI_Pos          (5UL)                     /*!< PM1LVINI (Bit 5)                                      */
#define MTDV_PM1SET_PM1LVINI_Msk          (0x20UL)                  /*!< PM1LVINI (Bitfield-Mask: 0x01)                        */
#define MTDV_PM1SET_PM1PAT_Pos            (0UL)                     /*!< PM1PAT (Bit 0)                                        */
#define MTDV_PM1SET_PM1PAT_Msk            (0x3UL)                   /*!< PM1PAT (Bitfield-Mask: 0x03)                          */
/* ========================================================  PM56PAT  ======================================================== */
#define MTDV_PM56PAT_PM6PAT_Pos           (2UL)                     /*!< PM6PAT (Bit 2)                                        */
#define MTDV_PM56PAT_PM6PAT_Msk           (0x4UL)                   /*!< PM6PAT (Bitfield-Mask: 0x01)                          */
#define MTDV_PM56PAT_PM5PAT_Pos           (1UL)                     /*!< PM5PAT (Bit 1)                                        */
#define MTDV_PM56PAT_PM5PAT_Msk           (0x2UL)                   /*!< PM5PAT (Bitfield-Mask: 0x01)                          */
/* ========================================================  PM1STA  ========================================================= */
#define MTDV_PM1STA_PM1HPFLG_Pos          (4UL)                     /*!< PM1HPFLG (Bit 4)                                      */
#define MTDV_PM1STA_PM1HPFLG_Msk          (0x10UL)                  /*!< PM1HPFLG (Bitfield-Mask: 0x01)                        */
#define MTDV_PM1STA_PM1BIT_Pos            (0UL)                     /*!< PM1BIT (Bit 0)                                        */
#define MTDV_PM1STA_PM1BIT_Msk            (0xfUL)                   /*!< PM1BIT (Bitfield-Mask: 0x0f)                          */
/* ======================================================  P1FPCT1ALL  ======================================================= */
#define MTDV_P1FPCT1ALL_P1FPFL_Pos        (0UL)                     /*!< P1FPFL (Bit 0)                                        */
#define MTDV_P1FPCT1ALL_P1FPFL_Msk        (0xffUL)                  /*!< P1FPFL (Bitfield-Mask: 0xff)                          */
/* =======================================================  P1FDUTYHL  ======================================================= */
#define MTDV_P1FDUTYHL_P1HIGH_Pos         (8UL)                     /*!< P1HIGH (Bit 8)                                        */
#define MTDV_P1FDUTYHL_P1HIGH_Msk         (0x1f00UL)                /*!< P1HIGH (Bitfield-Mask: 0x1f)                          */
#define MTDV_P1FDUTYHL_P1LOW_Pos          (0UL)                     /*!< P1LOW (Bit 0)                                         */
#define MTDV_P1FDUTYHL_P1LOW_Msk          (0x1fUL)                  /*!< P1LOW (Bitfield-Mask: 0x1f)                           */
/* =======================================================  P2FDUTYHL  ======================================================= */
#define MTDV_P2FDUTYHL_P2HIGH_Pos         (8UL)                     /*!< P2HIGH (Bit 8)                                        */
#define MTDV_P2FDUTYHL_P2HIGH_Msk         (0x1f00UL)                /*!< P2HIGH (Bitfield-Mask: 0x1f)                          */
#define MTDV_P2FDUTYHL_P2LOW_Pos          (0UL)                     /*!< P2LOW (Bit 0)                                         */
#define MTDV_P2FDUTYHL_P2LOW_Msk          (0x1fUL)                  /*!< P2LOW (Bitfield-Mask: 0x1f)                           */
/* =======================================================  P3FDUTYHL  ======================================================= */
#define MTDV_P3FDUTYHL_P3HIGH_Pos         (8UL)                     /*!< P3HIGH (Bit 8)                                        */
#define MTDV_P3FDUTYHL_P3HIGH_Msk         (0x1f00UL)                /*!< P3HIGH (Bitfield-Mask: 0x1f)                          */
#define MTDV_P3FDUTYHL_P3LOW_Pos          (0UL)                     /*!< P3LOW (Bit 0)                                         */
#define MTDV_P3FDUTYHL_P3LOW_Msk          (0x1fUL)                  /*!< P3LOW (Bitfield-Mask: 0x1f)                           */
/* =====================================================  P1FPCT1DETVPM  ===================================================== */
#define MTDV_P1FPCT1DETVPM_P1KENSYUTSU_Pos (8UL)                    /*!< P1KENSYUTSU (Bit 8)                                   */
#define MTDV_P1FPCT1DETVPM_P1KENSYUTSU_Msk (0x300UL)                /*!< P1KENSYUTSU (Bitfield-Mask: 0x03)                     */
#define MTDV_P1FPCT1DETVPM_P1INVSEL_Pos   (5UL)                     /*!< P1INVSEL (Bit 5)                                      */
#define MTDV_P1FPCT1DETVPM_P1INVSEL_Msk   (0x20UL)                  /*!< P1INVSEL (Bitfield-Mask: 0x01)                        */
#define MTDV_P1FPCT1DETVPM_P1VCCSEL_Pos   (3UL)                     /*!< P1VCCSEL (Bit 3)                                      */
#define MTDV_P1FPCT1DETVPM_P1VCCSEL_Msk   (0x8UL)                   /*!< P1VCCSEL (Bitfield-Mask: 0x01)                        */
#define MTDV_P1FPCT1DETVPM_P1VPM_Pos      (0UL)                     /*!< P1VPM (Bit 0)                                         */
#define MTDV_P1FPCT1DETVPM_P1VPM_Msk      (0x7UL)                   /*!< P1VPM (Bitfield-Mask: 0x07)                           */
/* ======================================================  P1FCOR1ALL  ======================================================= */
#define MTDV_P1FCOR1ALL_P1CP1VPM_Pos      (13UL)                    /*!< P1CP1VPM (Bit 13)                                     */
#define MTDV_P1FCOR1ALL_P1CP1VPM_Msk      (0xe000UL)                /*!< P1CP1VPM (Bitfield-Mask: 0x07)                        */
#define MTDV_P1FCOR1ALL_P1CP1FL_Pos       (0UL)                     /*!< P1CP1FL (Bit 0)                                       */
#define MTDV_P1FCOR1ALL_P1CP1FL_Msk       (0x1ffUL)                 /*!< P1CP1FL (Bitfield-Mask: 0x1ff)                        */
/* ======================================================  P1FCOR2ALL  ======================================================= */
#define MTDV_P1FCOR2ALL_P1CP2VPM_Pos      (13UL)                    /*!< P1CP2VPM (Bit 13)                                     */
#define MTDV_P1FCOR2ALL_P1CP2VPM_Msk      (0xe000UL)                /*!< P1CP2VPM (Bitfield-Mask: 0x07)                        */
#define MTDV_P1FCOR2ALL_P1CP2FL_Pos       (0UL)                     /*!< P1CP2FL (Bit 0)                                       */
#define MTDV_P1FCOR2ALL_P1CP2FL_Msk       (0x1ffUL)                 /*!< P1CP2FL (Bitfield-Mask: 0x1ff)                        */
/* =======================================================  P1FCOR1B  ======================================================== */
#define MTDV_P1FCOR1B_P1CP1B_Pos          (0UL)                     /*!< P1CP1B (Bit 0)                                        */
#define MTDV_P1FCOR1B_P1CP1B_Msk          (0x1ffUL)                 /*!< P1CP1B (Bitfield-Mask: 0x1ff)                         */
/* =======================================================  P1FCOR2B  ======================================================== */
#define MTDV_P1FCOR2B_P1CP2B_Pos          (0UL)                     /*!< P1CP2B (Bit 0)                                        */
#define MTDV_P1FCOR2B_P1CP2B_Msk          (0x1ffUL)                 /*!< P1CP2B (Bitfield-Mask: 0x1ff)                         */
/* =======================================================  P1FCOR1HL  ======================================================= */
#define MTDV_P1FCOR1HL_P1CP1HIGH_Pos      (8UL)                     /*!< P1CP1HIGH (Bit 8)                                     */
#define MTDV_P1FCOR1HL_P1CP1HIGH_Msk      (0x1f00UL)                /*!< P1CP1HIGH (Bitfield-Mask: 0x1f)                       */
#define MTDV_P1FCOR1HL_P1CP1LOW_Pos       (0UL)                     /*!< P1CP1LOW (Bit 0)                                      */
#define MTDV_P1FCOR1HL_P1CP1LOW_Msk       (0x1fUL)                  /*!< P1CP1LOW (Bitfield-Mask: 0x1f)                        */
/* =======================================================  P1FCOR2HL  ======================================================= */
#define MTDV_P1FCOR2HL_P1CP2HIGH_Pos      (8UL)                     /*!< P1CP2HIGH (Bit 8)                                     */
#define MTDV_P1FCOR2HL_P1CP2HIGH_Msk      (0x1f00UL)                /*!< P1CP2HIGH (Bitfield-Mask: 0x1f)                       */
#define MTDV_P1FCOR2HL_P1CP2LOW_Pos       (0UL)                     /*!< P1CP2LOW (Bit 0)                                      */
#define MTDV_P1FCOR2HL_P1CP2LOW_Msk       (0x1fUL)                  /*!< P1CP2LOW (Bitfield-Mask: 0x1f)                        */
/* =======================================================  P2FDRVALL  ======================================================= */
#define MTDV_P2FDRVALL_P2FPVPM_Pos        (15UL)                    /*!< P2FPVPM (Bit 15)                                      */
#define MTDV_P2FDRVALL_P2FPVPM_Msk        (0x8000UL)                /*!< P2FPVPM (Bitfield-Mask: 0x01)                         */
#define MTDV_P2FDRVALL_P2FPFL_Pos         (0UL)                     /*!< P2FPFL (Bit 0)                                        */
#define MTDV_P2FDRVALL_P2FPFL_Msk         (0x1ffUL)                 /*!< P2FPFL (Bitfield-Mask: 0x1ff)                         */
/* =======================================================  P3FDRVALL  ======================================================= */
#define MTDV_P3FDRVALL_P3FPVPM_Pos        (15UL)                    /*!< P3FPVPM (Bit 15)                                      */
#define MTDV_P3FDRVALL_P3FPVPM_Msk        (0x8000UL)                /*!< P3FPVPM (Bitfield-Mask: 0x01)                         */
#define MTDV_P3FDRVALL_P3FPFL_Pos         (0UL)                     /*!< P3FPFL (Bit 0)                                        */
#define MTDV_P3FDRVALL_P3FPFL_Msk         (0x1ffUL)                 /*!< P3FPFL (Bitfield-Mask: 0x1ff)                         */
/* ========================================================  P2FDRVB  ======================================================== */
#define MTDV_P2FDRVB_P2FPB_Pos            (0UL)                     /*!< P2FPB (Bit 0)                                         */
#define MTDV_P2FDRVB_P2FPB_Msk            (0x1ffUL)                 /*!< P2FPB (Bitfield-Mask: 0x1ff)                          */
/* ========================================================  P3FDRVB  ======================================================== */
#define MTDV_P3FDRVB_P3FPB_Pos            (0UL)                     /*!< P3FPB (Bit 0)                                         */
#define MTDV_P3FDRVB_P3FPB_Msk            (0x1ffUL)                 /*!< P3FPB (Bitfield-Mask: 0x1ff)                          */
/* ========================================================  P1RALL  ========================================================= */
#define MTDV_P1RALL_P1RPVPM_Pos           (15UL)                    /*!< P1RPVPM (Bit 15)                                      */
#define MTDV_P1RALL_P1RPVPM_Msk           (0x8000UL)                /*!< P1RPVPM (Bitfield-Mask: 0x01)                         */
#define MTDV_P1RALL_P1RPFL_Pos            (0UL)                     /*!< P1RPFL (Bit 0)                                        */
#define MTDV_P1RALL_P1RPFL_Msk            (0x3ffUL)                 /*!< P1RPFL (Bitfield-Mask: 0x3ff)                         */
/* ========================================================  P2RALL  ========================================================= */
#define MTDV_P2RALL_P2RPVPM_Pos           (15UL)                    /*!< P2RPVPM (Bit 15)                                      */
#define MTDV_P2RALL_P2RPVPM_Msk           (0x8000UL)                /*!< P2RPVPM (Bitfield-Mask: 0x01)                         */
#define MTDV_P2RALL_P2RPFL_Pos            (0UL)                     /*!< P2RPFL (Bit 0)                                        */
#define MTDV_P2RALL_P2RPFL_Msk            (0x3ffUL)                 /*!< P2RPFL (Bitfield-Mask: 0x3ff)                         */
/* ========================================================  P3RALL  ========================================================= */
#define MTDV_P3RALL_P3RPVPM_Pos           (15UL)                    /*!< P3RPVPM (Bit 15)                                      */
#define MTDV_P3RALL_P3RPVPM_Msk           (0x8000UL)                /*!< P3RPVPM (Bitfield-Mask: 0x01)                         */
#define MTDV_P3RALL_P3RPFL_Pos            (0UL)                     /*!< P3RPFL (Bit 0)                                        */
#define MTDV_P3RALL_P3RPFL_Msk            (0x3ffUL)                 /*!< P3RPFL (Bitfield-Mask: 0x3ff)                         */
/* =======================================================  P1RP1SET  ======================================================== */
#define MTDV_P1RP1SET_P1REVP1_Pos         (0UL)                     /*!< P1REVP1 (Bit 0)                                       */
#define MTDV_P1RP1SET_P1REVP1_Msk         (0xffUL)                  /*!< P1REVP1 (Bitfield-Mask: 0xff)                         */
/* =======================================================  P2RP1SET  ======================================================== */
#define MTDV_P2RP1SET_P2REVP1_Pos         (0UL)                     /*!< P2REVP1 (Bit 0)                                       */
#define MTDV_P2RP1SET_P2REVP1_Msk         (0xffUL)                  /*!< P2REVP1 (Bitfield-Mask: 0xff)                         */
/* =======================================================  P3RP1SET  ======================================================== */
#define MTDV_P3RP1SET_P3REVP1_Pos         (0UL)                     /*!< P3REVP1 (Bit 0)                                       */
#define MTDV_P3RP1SET_P3REVP1_Msk         (0xffUL)                  /*!< P3REVP1 (Bitfield-Mask: 0xff)                         */
/* =======================================================  P1RP2SET  ======================================================== */
#define MTDV_P1RP2SET_P1REVP2_Pos         (0UL)                     /*!< P1REVP2 (Bit 0)                                       */
#define MTDV_P1RP2SET_P1REVP2_Msk         (0xffUL)                  /*!< P1REVP2 (Bitfield-Mask: 0xff)                         */
/* =======================================================  P2RP2SET  ======================================================== */
#define MTDV_P2RP2SET_P2REVP2_Pos         (0UL)                     /*!< P2REVP2 (Bit 0)                                       */
#define MTDV_P2RP2SET_P2REVP2_Msk         (0xffUL)                  /*!< P2REVP2 (Bitfield-Mask: 0xff)                         */
/* =======================================================  P3RP2SET  ======================================================== */
#define MTDV_P3RP2SET_P3REVP2_Pos         (0UL)                     /*!< P3REVP2 (Bit 0)                                       */
#define MTDV_P3RP2SET_P3REVP2_Msk         (0xffUL)                  /*!< P3REVP2 (Bitfield-Mask: 0xff)                         */
/* =======================================================  P1RP3SET  ======================================================== */
#define MTDV_P1RP3SET_P1REVP3_Pos         (0UL)                     /*!< P1REVP3 (Bit 0)                                       */
#define MTDV_P1RP3SET_P1REVP3_Msk         (0x1ffUL)                 /*!< P1REVP3 (Bitfield-Mask: 0x1ff)                        */
/* =======================================================  P2RP3SET  ======================================================== */
#define MTDV_P2RP3SET_P2REVP3_Pos         (0UL)                     /*!< P2REVP3 (Bit 0)                                       */
#define MTDV_P2RP3SET_P2REVP3_Msk         (0x1ffUL)                 /*!< P2REVP3 (Bitfield-Mask: 0x1ff)                        */
/* =======================================================  P3RP3SET  ======================================================== */
#define MTDV_P3RP3SET_P3REVP3_Pos         (0UL)                     /*!< P3REVP3 (Bit 0)                                       */
#define MTDV_P3RP3SET_P3REVP3_Msk         (0x1ffUL)                 /*!< P3REVP3 (Bitfield-Mask: 0x1ff)                        */
/* =======================================================  P1RDUTYHL  ======================================================= */
#define MTDV_P1RDUTYHL_P1REVHIGH_Pos      (8UL)                     /*!< P1REVHIGH (Bit 8)                                     */
#define MTDV_P1RDUTYHL_P1REVHIGH_Msk      (0x1f00UL)                /*!< P1REVHIGH (Bitfield-Mask: 0x1f)                       */
#define MTDV_P1RDUTYHL_P1REVLOW_Pos       (0UL)                     /*!< P1REVLOW (Bit 0)                                      */
#define MTDV_P1RDUTYHL_P1REVLOW_Msk       (0x1fUL)                  /*!< P1REVLOW (Bitfield-Mask: 0x1f)                        */
/* =======================================================  P2RDUTYHL  ======================================================= */
#define MTDV_P2RDUTYHL_P2REVHIGH_Pos      (8UL)                     /*!< P2REVHIGH (Bit 8)                                     */
#define MTDV_P2RDUTYHL_P2REVHIGH_Msk      (0x1f00UL)                /*!< P2REVHIGH (Bitfield-Mask: 0x1f)                       */
#define MTDV_P2RDUTYHL_P2REVLOW_Pos       (0UL)                     /*!< P2REVLOW (Bit 0)                                      */
#define MTDV_P2RDUTYHL_P2REVLOW_Msk       (0x1fUL)                  /*!< P2REVLOW (Bitfield-Mask: 0x1f)                        */
/* =======================================================  P3RDUTYHL  ======================================================= */
#define MTDV_P3RDUTYHL_P3REVHIGH_Pos      (8UL)                     /*!< P3REVHIGH (Bit 8)                                     */
#define MTDV_P3RDUTYHL_P3REVHIGH_Msk      (0x1f00UL)                /*!< P3REVHIGH (Bitfield-Mask: 0x1f)                       */
#define MTDV_P3RDUTYHL_P3REVLOW_Pos       (0UL)                     /*!< P3REVLOW (Bit 0)                                      */
#define MTDV_P3RDUTYHL_P3REVLOW_Msk       (0x1fUL)                  /*!< P3REVLOW (Bitfield-Mask: 0x1f)                        */
/* =======================================================  P5COR1ALL  ======================================================= */
#define MTDV_P5COR1ALL_P5CP1VPM_Pos       (13UL)                    /*!< P5CP1VPM (Bit 13)                                     */
#define MTDV_P5COR1ALL_P5CP1VPM_Msk       (0xe000UL)                /*!< P5CP1VPM (Bitfield-Mask: 0x07)                        */
#define MTDV_P5COR1ALL_P5CP1FL_Pos        (0UL)                     /*!< P5CP1FL (Bit 0)                                       */
#define MTDV_P5COR1ALL_P5CP1FL_Msk        (0x1ffUL)                 /*!< P5CP1FL (Bitfield-Mask: 0x1ff)                        */
/* =======================================================  P5COR2ALL  ======================================================= */
#define MTDV_P5COR2ALL_P5CP2VPM_Pos       (13UL)                    /*!< P5CP2VPM (Bit 13)                                     */
#define MTDV_P5COR2ALL_P5CP2VPM_Msk       (0xe000UL)                /*!< P5CP2VPM (Bitfield-Mask: 0x07)                        */
#define MTDV_P5COR2ALL_P5CP2FL_Pos        (0UL)                     /*!< P5CP2FL (Bit 0)                                       */
#define MTDV_P5COR2ALL_P5CP2FL_Msk        (0x1ffUL)                 /*!< P5CP2FL (Bitfield-Mask: 0x1ff)                        */
/* =======================================================  P6COR1ALL  ======================================================= */
#define MTDV_P6COR1ALL_P6CP1VPM_Pos       (13UL)                    /*!< P6CP1VPM (Bit 13)                                     */
#define MTDV_P6COR1ALL_P6CP1VPM_Msk       (0xe000UL)                /*!< P6CP1VPM (Bitfield-Mask: 0x07)                        */
#define MTDV_P6COR1ALL_P6CP1FL_Pos        (0UL)                     /*!< P6CP1FL (Bit 0)                                       */
#define MTDV_P6COR1ALL_P6CP1FL_Msk        (0x1ffUL)                 /*!< P6CP1FL (Bitfield-Mask: 0x1ff)                        */
/* =======================================================  P6COR2ALL  ======================================================= */
#define MTDV_P6COR2ALL_P6CP2VPM_Pos       (13UL)                    /*!< P6CP2VPM (Bit 13)                                     */
#define MTDV_P6COR2ALL_P6CP2VPM_Msk       (0xe000UL)                /*!< P6CP2VPM (Bitfield-Mask: 0x07)                        */
#define MTDV_P6COR2ALL_P6CP2FL_Pos        (0UL)                     /*!< P6CP2FL (Bit 0)                                       */
#define MTDV_P6COR2ALL_P6CP2FL_Msk        (0x1ffUL)                 /*!< P6CP2FL (Bitfield-Mask: 0x1ff)                        */
/* ======================================================  P5COR1P1SET  ====================================================== */
#define MTDV_P5COR1P1SET_P5CP1P1_Pos      (0UL)                     /*!< P5CP1P1 (Bit 0)                                       */
#define MTDV_P5COR1P1SET_P5CP1P1_Msk      (0xffUL)                  /*!< P5CP1P1 (Bitfield-Mask: 0xff)                         */
/* ======================================================  P5COR1P2SET  ====================================================== */
#define MTDV_P5COR1P2SET_P5CP1P2_Pos      (0UL)                     /*!< P5CP1P2 (Bit 0)                                       */
#define MTDV_P5COR1P2SET_P5CP1P2_Msk      (0xffUL)                  /*!< P5CP1P2 (Bitfield-Mask: 0xff)                         */
/* ======================================================  P5COR2P1SET  ====================================================== */
#define MTDV_P5COR2P1SET_P5CP2P1_Pos      (0UL)                     /*!< P5CP2P1 (Bit 0)                                       */
#define MTDV_P5COR2P1SET_P5CP2P1_Msk      (0xffUL)                  /*!< P5CP2P1 (Bitfield-Mask: 0xff)                         */
/* ======================================================  P5COR2P2SET  ====================================================== */
#define MTDV_P5COR2P2SET_P5CP2P2_Pos      (0UL)                     /*!< P5CP2P2 (Bit 0)                                       */
#define MTDV_P5COR2P2SET_P5CP2P2_Msk      (0xffUL)                  /*!< P5CP2P2 (Bitfield-Mask: 0xff)                         */
/* ======================================================  P6COR1P1SET  ====================================================== */
#define MTDV_P6COR1P1SET_P6CP1P1_Pos      (0UL)                     /*!< P6CP1P1 (Bit 0)                                       */
#define MTDV_P6COR1P1SET_P6CP1P1_Msk      (0xffUL)                  /*!< P6CP1P1 (Bitfield-Mask: 0xff)                         */
/* ======================================================  P6COR1P2SET  ====================================================== */
#define MTDV_P6COR1P2SET_P6CP1P2_Pos      (0UL)                     /*!< P6CP1P2 (Bit 0)                                       */
#define MTDV_P6COR1P2SET_P6CP1P2_Msk      (0xffUL)                  /*!< P6CP1P2 (Bitfield-Mask: 0xff)                         */
/* ======================================================  P6COR2P1SET  ====================================================== */
#define MTDV_P6COR2P1SET_P6CP2P1_Pos      (0UL)                     /*!< P6CP2P1 (Bit 0)                                       */
#define MTDV_P6COR2P1SET_P6CP2P1_Msk      (0xffUL)                  /*!< P6CP2P1 (Bitfield-Mask: 0xff)                         */
/* ======================================================  P6COR2P2SET  ====================================================== */
#define MTDV_P6COR2P2SET_P6CP2P2_Pos      (0UL)                     /*!< P6CP2P2 (Bit 0)                                       */
#define MTDV_P6COR2P2SET_P6CP2P2_Msk      (0xffUL)                  /*!< P6CP2P2 (Bitfield-Mask: 0xff)                         */


/* =========================================================================================================================== */
/* ================                                            OSM                                            ================ */
/* =========================================================================================================================== */

/* ======================================================  SECMPUPCS0  ======================================================= */
#define OSM_SECMPUPCS0_SECMPUPCS0_Pos     (0UL)                     /*!< SECMPUPCS0 (Bit 0)                                    */
#define OSM_SECMPUPCS0_SECMPUPCS0_Msk     (0xffffffffUL)            /*!< SECMPUPCS0 (Bitfield-Mask: 0xffffffff)                */
/* ======================================================  SECMPUPCS1  ======================================================= */
#define OSM_SECMPUPCS1_SECMPUPCS1_Pos     (0UL)                     /*!< SECMPUPCS1 (Bit 0)                                    */
#define OSM_SECMPUPCS1_SECMPUPCS1_Msk     (0xffffffffUL)            /*!< SECMPUPCS1 (Bitfield-Mask: 0xffffffff)                */
/* ======================================================  SECMPUPCE0  ======================================================= */
#define OSM_SECMPUPCE0_SECMPUPCE0_Pos     (0UL)                     /*!< SECMPUPCE0 (Bit 0)                                    */
#define OSM_SECMPUPCE0_SECMPUPCE0_Msk     (0xffffffffUL)            /*!< SECMPUPCE0 (Bitfield-Mask: 0xffffffff)                */
/* ======================================================  SECMPUPCE1  ======================================================= */
#define OSM_SECMPUPCE1_SECMPUPCE1_Pos     (0UL)                     /*!< SECMPUPCE1 (Bit 0)                                    */
#define OSM_SECMPUPCE1_SECMPUPCE1_Msk     (0xffffffffUL)            /*!< SECMPUPCE1 (Bitfield-Mask: 0xffffffff)                */
/* =======================================================  SECMPUS0  ======================================================== */
#define OSM_SECMPUS0_SECMPUS0_Pos         (0UL)                     /*!< SECMPUS0 (Bit 0)                                      */
#define OSM_SECMPUS0_SECMPUS0_Msk         (0xffffffffUL)            /*!< SECMPUS0 (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  SECMPUE0  ======================================================== */
#define OSM_SECMPUE0_SECMPUE0_Pos         (0UL)                     /*!< SECMPUE0 (Bit 0)                                      */
#define OSM_SECMPUE0_SECMPUE0_Msk         (0xffffffffUL)            /*!< SECMPUE0 (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  SECMPUS1  ======================================================== */
#define OSM_SECMPUS1_SECMPUS1_Pos         (0UL)                     /*!< SECMPUS1 (Bit 0)                                      */
#define OSM_SECMPUS1_SECMPUS1_Msk         (0xffffffffUL)            /*!< SECMPUS1 (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  SECMPUE1  ======================================================== */
#define OSM_SECMPUE1_SECMPUE1_Pos         (0UL)                     /*!< SECMPUE1 (Bit 0)                                      */
#define OSM_SECMPUE1_SECMPUE1_Msk         (0xffffffffUL)            /*!< SECMPUE1 (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  SECMPUS2  ======================================================== */
#define OSM_SECMPUS2_SECMPUS2_Pos         (0UL)                     /*!< SECMPUS2 (Bit 0)                                      */
#define OSM_SECMPUS2_SECMPUS2_Msk         (0xffffffffUL)            /*!< SECMPUS2 (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  SECMPUE2  ======================================================== */
#define OSM_SECMPUE2_SECMPUE2_Pos         (0UL)                     /*!< SECMPUE2 (Bit 0)                                      */
#define OSM_SECMPUE2_SECMPUE2_Msk         (0xffffffffUL)            /*!< SECMPUE2 (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  SECMPUAC  ======================================================== */
#define OSM_SECMPUAC_DISPC1_Pos           (9UL)                     /*!< DISPC1 (Bit 9)                                        */
#define OSM_SECMPUAC_DISPC1_Msk           (0x200UL)                 /*!< DISPC1 (Bitfield-Mask: 0x01)                          */
#define OSM_SECMPUAC_DISPC0_Pos           (8UL)                     /*!< DISPC0 (Bit 8)                                        */
#define OSM_SECMPUAC_DISPC0_Msk           (0x100UL)                 /*!< DISPC0 (Bitfield-Mask: 0x01)                          */
#define OSM_SECMPUAC_DIS2_Pos             (2UL)                     /*!< DIS2 (Bit 2)                                          */
#define OSM_SECMPUAC_DIS2_Msk             (0x4UL)                   /*!< DIS2 (Bitfield-Mask: 0x01)                            */
#define OSM_SECMPUAC_DIS1_Pos             (1UL)                     /*!< DIS1 (Bit 1)                                          */
#define OSM_SECMPUAC_DIS1_Msk             (0x2UL)                   /*!< DIS1 (Bitfield-Mask: 0x01)                            */
#define OSM_SECMPUAC_DIS0_Pos             (0UL)                     /*!< DIS0 (Bit 0)                                          */
#define OSM_SECMPUAC_DIS0_Msk             (0x1UL)                   /*!< DIS0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  OFS0  ========================================================== */
#define OSM_OFS0_WDTSTPCTL_Pos            (30UL)                    /*!< WDTSTPCTL (Bit 30)                                    */
#define OSM_OFS0_WDTSTPCTL_Msk            (0x40000000UL)            /*!< WDTSTPCTL (Bitfield-Mask: 0x01)                       */
#define OSM_OFS0_WDTRSTIRQS_Pos           (28UL)                    /*!< WDTRSTIRQS (Bit 28)                                   */
#define OSM_OFS0_WDTRSTIRQS_Msk           (0x10000000UL)            /*!< WDTRSTIRQS (Bitfield-Mask: 0x01)                      */
#define OSM_OFS0_WDTRPSS_Pos              (26UL)                    /*!< WDTRPSS (Bit 26)                                      */
#define OSM_OFS0_WDTRPSS_Msk              (0xc000000UL)             /*!< WDTRPSS (Bitfield-Mask: 0x03)                         */
#define OSM_OFS0_WDTRPES_Pos              (24UL)                    /*!< WDTRPES (Bit 24)                                      */
#define OSM_OFS0_WDTRPES_Msk              (0x3000000UL)             /*!< WDTRPES (Bitfield-Mask: 0x03)                         */
#define OSM_OFS0_WDTCKS_Pos               (20UL)                    /*!< WDTCKS (Bit 20)                                       */
#define OSM_OFS0_WDTCKS_Msk               (0xf00000UL)              /*!< WDTCKS (Bitfield-Mask: 0x0f)                          */
#define OSM_OFS0_WDTTOPS_Pos              (18UL)                    /*!< WDTTOPS (Bit 18)                                      */
#define OSM_OFS0_WDTTOPS_Msk              (0xc0000UL)               /*!< WDTTOPS (Bitfield-Mask: 0x03)                         */
#define OSM_OFS0_WDTSTRT_Pos              (17UL)                    /*!< WDTSTRT (Bit 17)                                      */
#define OSM_OFS0_WDTSTRT_Msk              (0x20000UL)               /*!< WDTSTRT (Bitfield-Mask: 0x01)                         */
#define OSM_OFS0_WDTCLKSEL_Pos            (16UL)                    /*!< WDTCLKSEL (Bit 16)                                    */
#define OSM_OFS0_WDTCLKSEL_Msk            (0x10000UL)               /*!< WDTCLKSEL (Bitfield-Mask: 0x01)                       */
#define OSM_OFS0_IWDTSTPCTL_Pos           (14UL)                    /*!< IWDTSTPCTL (Bit 14)                                   */
#define OSM_OFS0_IWDTSTPCTL_Msk           (0x4000UL)                /*!< IWDTSTPCTL (Bitfield-Mask: 0x01)                      */
#define OSM_OFS0_IWDTRSTIRQS_Pos          (12UL)                    /*!< IWDTRSTIRQS (Bit 12)                                  */
#define OSM_OFS0_IWDTRSTIRQS_Msk          (0x1000UL)                /*!< IWDTRSTIRQS (Bitfield-Mask: 0x01)                     */
#define OSM_OFS0_IWDTRPSS_Pos             (10UL)                    /*!< IWDTRPSS (Bit 10)                                     */
#define OSM_OFS0_IWDTRPSS_Msk             (0xc00UL)                 /*!< IWDTRPSS (Bitfield-Mask: 0x03)                        */
#define OSM_OFS0_IWDTRPES_Pos             (8UL)                     /*!< IWDTRPES (Bit 8)                                      */
#define OSM_OFS0_IWDTRPES_Msk             (0x300UL)                 /*!< IWDTRPES (Bitfield-Mask: 0x03)                        */
#define OSM_OFS0_IWDTCKS_Pos              (4UL)                     /*!< IWDTCKS (Bit 4)                                       */
#define OSM_OFS0_IWDTCKS_Msk              (0xf0UL)                  /*!< IWDTCKS (Bitfield-Mask: 0x0f)                         */
#define OSM_OFS0_IWDTTOPS_Pos             (2UL)                     /*!< IWDTTOPS (Bit 2)                                      */
#define OSM_OFS0_IWDTTOPS_Msk             (0xcUL)                   /*!< IWDTTOPS (Bitfield-Mask: 0x03)                        */
#define OSM_OFS0_IWDTSTRT_Pos             (1UL)                     /*!< IWDTSTRT (Bit 1)                                      */
#define OSM_OFS0_IWDTSTRT_Msk             (0x2UL)                   /*!< IWDTSTRT (Bitfield-Mask: 0x01)                        */
/* =========================================================  OFS1  ========================================================== */
#define OSM_OFS1_VBATSEL_Pos              (16UL)                    /*!< VBATSEL (Bit 16)                                      */
#define OSM_OFS1_VBATSEL_Msk              (0x10000UL)               /*!< VBATSEL (Bitfield-Mask: 0x01)                         */
#define OSM_OFS1_HOCOFRQ_Pos              (9UL)                     /*!< HOCOFRQ (Bit 9)                                       */
#define OSM_OFS1_HOCOFRQ_Msk              (0x200UL)                 /*!< HOCOFRQ (Bitfield-Mask: 0x01)                         */
#define OSM_OFS1_HOCOEN_Pos               (8UL)                     /*!< HOCOEN (Bit 8)                                        */
#define OSM_OFS1_HOCOEN_Msk               (0x100UL)                 /*!< HOCOEN (Bitfield-Mask: 0x01)                          */
#define OSM_OFS1_VDSEL_Pos                (3UL)                     /*!< VDSEL (Bit 3)                                         */
#define OSM_OFS1_VDSEL_Msk                (0x38UL)                  /*!< VDSEL (Bitfield-Mask: 0x07)                           */
#define OSM_OFS1_LVDAS_Pos                (2UL)                     /*!< LVDAS (Bit 2)                                         */
#define OSM_OFS1_LVDAS_Msk                (0x4UL)                   /*!< LVDAS (Bitfield-Mask: 0x01)                           */
/* ==========================================================  AWS  ========================================================== */
#define OSM_AWS_BTFLG_Pos                 (31UL)                    /*!< BTFLG (Bit 31)                                        */
#define OSM_AWS_BTFLG_Msk                 (0x80000000UL)            /*!< BTFLG (Bitfield-Mask: 0x01)                           */
#define OSM_AWS_FAWE_Pos                  (16UL)                    /*!< FAWE (Bit 16)                                         */
#define OSM_AWS_FAWE_Msk                  (0x3ff0000UL)             /*!< FAWE (Bitfield-Mask: 0x3ff)                           */
#define OSM_AWS_FSPR_Pos                  (15UL)                    /*!< FSPR (Bit 15)                                         */
#define OSM_AWS_FSPR_Msk                  (0x8000UL)                /*!< FSPR (Bitfield-Mask: 0x01)                            */
#define OSM_AWS_FAWS_Pos                  (0UL)                     /*!< FAWS (Bit 0)                                          */
#define OSM_AWS_FAWS_Msk                  (0x3ffUL)                 /*!< FAWS (Bitfield-Mask: 0x3ff)                           */
/* =========================================================  OSIS  ========================================================== */
#define OSM_OSIS_OSIS_Pos                 (0UL)                     /*!< OSIS (Bit 0)                                          */
#define OSM_OSIS_OSIS_Msk                 (0xffffffffUL)            /*!< OSIS (Bitfield-Mask: 0xffffffff)                      */


/* =========================================================================================================================== */
/* ================                                            PFS                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  P104PFS  ======================================================== */
#define PFS_P104PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P104PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P104PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P104PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P104PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P104PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P104PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P104PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P104PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P104PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P104PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P104PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P104PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P104PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P104PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P104PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P104PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P104PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P104PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P104PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P104PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P104PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P104PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P104PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P104PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P104PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P108PFS  ======================================================== */
#define PFS_P108PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P108PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P108PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P108PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P108PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P108PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P108PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P108PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P108PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P108PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P108PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P108PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P108PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P108PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P108PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P108PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P108PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P108PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P108PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P108PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P108PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P108PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P108PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P108PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P108PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P108PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P109PFS  ======================================================== */
#define PFS_P109PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P109PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P109PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P109PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P109PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P109PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P109PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P109PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P109PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P109PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P109PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P109PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P109PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P109PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P109PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P109PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P109PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P109PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P109PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P109PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P109PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P109PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P109PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P109PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P109PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P109PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P110PFS  ======================================================== */
#define PFS_P110PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P110PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P110PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P110PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P110PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P110PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P110PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P110PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P110PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P110PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P110PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P110PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P110PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P110PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P110PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P110PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P110PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P110PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P110PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P110PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P110PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P110PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P110PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P110PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P110PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P110PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P207PFS  ======================================================== */
#define PFS_P207PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P207PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P207PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P207PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P207PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P207PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P207PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P207PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P207PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P207PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P207PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P207PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P207PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P207PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P207PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P207PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P207PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P207PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P207PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P207PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P207PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P207PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P207PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P207PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P207PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P207PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P300PFS  ======================================================== */
#define PFS_P300PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P300PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P300PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P300PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P300PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P300PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P300PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P300PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P300PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P300PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P300PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P300PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P300PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P300PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P300PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P300PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P300PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P300PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P300PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P300PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P300PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P300PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P300PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P300PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P300PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P300PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P512PFS  ======================================================== */
#define PFS_P512PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P512PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P512PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P512PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P512PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P512PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P512PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P512PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P512PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P512PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P512PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P512PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P512PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P512PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P512PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P512PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P512PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P512PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P512PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P512PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P512PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P512PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P000PFS  ======================================================== */
#define PFS_P000PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P000PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P000PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P000PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P000PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P000PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P000PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P000PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P000PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P000PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P000PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P000PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P000PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P000PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P000PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P000PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P000PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P000PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P000PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P000PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P000PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P000PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P000PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P000PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P000PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P000PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P001PFS  ======================================================== */
#define PFS_P001PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P001PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P001PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P001PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P001PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P001PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P001PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P001PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P001PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P001PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P001PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P001PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P001PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P001PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P001PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P001PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P001PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P001PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P001PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P001PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P001PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P001PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P001PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P001PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P001PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P001PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P002PFS  ======================================================== */
#define PFS_P002PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P002PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P002PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P002PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P002PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P002PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P002PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P002PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P002PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P002PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P002PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P002PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P002PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P002PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P002PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P002PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P002PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P002PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P002PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P002PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P002PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P002PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P002PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P002PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P002PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P002PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P003PFS  ======================================================== */
#define PFS_P003PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P003PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P003PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P003PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P003PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P003PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P003PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P003PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P003PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P003PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P003PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P003PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P003PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P003PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P003PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P003PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P003PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P003PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P003PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P003PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P003PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P003PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P003PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P003PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P003PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P003PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P004PFS  ======================================================== */
#define PFS_P004PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P004PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P004PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P004PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P004PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P004PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P004PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P004PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P004PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P004PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P004PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P004PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P004PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P004PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P004PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P004PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P004PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P004PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P004PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P004PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P004PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P004PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P004PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P004PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P004PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P004PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P005PFS  ======================================================== */
#define PFS_P005PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P005PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P005PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P005PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P005PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P005PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P005PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P005PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P005PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P005PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P005PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P005PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P005PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P005PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P005PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P005PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P005PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P005PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P005PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P005PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P005PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P005PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P005PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P005PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P005PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P005PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P006PFS  ======================================================== */
#define PFS_P006PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P006PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P006PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P006PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P006PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P006PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P006PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P006PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P006PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P006PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P006PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P006PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P006PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P006PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P006PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P006PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P006PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P006PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P006PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P006PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P006PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P006PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P006PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P006PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P006PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P006PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P007PFS  ======================================================== */
#define PFS_P007PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P007PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P007PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P007PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P007PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P007PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P007PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P007PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P007PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P007PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P007PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P007PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P007PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P007PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P007PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P007PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P007PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P007PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P007PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P007PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P007PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P007PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P007PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P007PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P007PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P007PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P008PFS  ======================================================== */
#define PFS_P008PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P008PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P008PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P008PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P008PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P008PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P008PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P008PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P008PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P008PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P008PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P008PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P008PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P008PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P008PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P008PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P008PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P008PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P008PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P008PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P008PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P008PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P008PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P008PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P008PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P008PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P009PFS  ======================================================== */
#define PFS_P009PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P009PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P009PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P009PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P009PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P009PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P009PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P009PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P009PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P009PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P009PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P009PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P009PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P009PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P009PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P009PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P009PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P009PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P009PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P009PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P009PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P009PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P009PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P009PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P009PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P009PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P010PFS  ======================================================== */
#define PFS_P010PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P010PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P010PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P010PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P010PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P010PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P010PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P010PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P010PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P010PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P010PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P010PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P010PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P010PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P010PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P010PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P010PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P010PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P010PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P010PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P010PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P010PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P010PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P010PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P010PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P010PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P011PFS  ======================================================== */
#define PFS_P011PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P011PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P011PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P011PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P011PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P011PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P011PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P011PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P011PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P011PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P011PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P011PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P011PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P011PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P011PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P011PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P011PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P011PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P011PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P011PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P011PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P011PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P011PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P011PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P011PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P011PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P012PFS  ======================================================== */
#define PFS_P012PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P012PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P012PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P012PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P012PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P012PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P012PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P012PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P012PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P012PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P012PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P012PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P012PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P012PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P012PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P012PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P012PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P012PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P012PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P012PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P012PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P012PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P012PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P012PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P012PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P012PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P013PFS  ======================================================== */
#define PFS_P013PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P013PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P013PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P013PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P013PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P013PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P013PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P013PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P013PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P013PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P013PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P013PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P013PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P013PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P013PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P013PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P013PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P013PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P013PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P013PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P013PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P013PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P013PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P013PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P013PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P013PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P014PFS  ======================================================== */
#define PFS_P014PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P014PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P014PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P014PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P014PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P014PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P014PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P014PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P014PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P014PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P014PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P014PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P014PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P014PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P014PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P014PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P014PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P014PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P014PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P014PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P014PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P014PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P014PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P014PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P014PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P014PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P015PFS  ======================================================== */
#define PFS_P015PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P015PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P015PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P015PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P015PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P015PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P015PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P015PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P015PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P015PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P015PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P015PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P015PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P015PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P015PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P015PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P015PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P015PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P015PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P015PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P015PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P015PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P015PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P015PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P015PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P015PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P100PFS  ======================================================== */
#define PFS_P100PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P100PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P100PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P100PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P100PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P100PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P100PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P100PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P100PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P100PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P100PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P100PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P100PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P100PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P100PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P100PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P100PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P100PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P100PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P100PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P100PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P100PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P100PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P100PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P100PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P100PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P101PFS  ======================================================== */
#define PFS_P101PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P101PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P101PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P101PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P101PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P101PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P101PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P101PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P101PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P101PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P101PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P101PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P101PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P101PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P101PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P101PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P101PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P101PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P101PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P101PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P101PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P101PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P101PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P101PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P101PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P101PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P102PFS  ======================================================== */
#define PFS_P102PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P102PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P102PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P102PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P102PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P102PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P102PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P102PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P102PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P102PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P102PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P102PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P102PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P102PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P102PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P102PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P102PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P102PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P102PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P102PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P102PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P102PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P102PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P102PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P102PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P102PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P103PFS  ======================================================== */
#define PFS_P103PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P103PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P103PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P103PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P103PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P103PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P103PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P103PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P103PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P103PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P103PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P103PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P103PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P103PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P103PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P103PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P103PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P103PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P103PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P103PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P103PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P103PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P103PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P103PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P103PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P103PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P105PFS  ======================================================== */
#define PFS_P105PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P105PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P105PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P105PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P105PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P105PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P105PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P105PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P105PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P105PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P105PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P105PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P105PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P105PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P105PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P105PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P105PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P105PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P105PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P105PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P105PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P105PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P105PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P105PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P105PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P105PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P106PFS  ======================================================== */
#define PFS_P106PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P106PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P106PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P106PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P106PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P106PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P106PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P106PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P106PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P106PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P106PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P106PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P106PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P106PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P106PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P106PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P106PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P106PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P106PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P106PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P106PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P106PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P106PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P106PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P106PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P106PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P107PFS  ======================================================== */
#define PFS_P107PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P107PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P107PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P107PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P107PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P107PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P107PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P107PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P107PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P107PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P107PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P107PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P107PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P107PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P107PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P107PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P107PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P107PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P107PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P107PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P107PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P107PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P107PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P107PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P107PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P107PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P111PFS  ======================================================== */
#define PFS_P111PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P111PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P111PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P111PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P111PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P111PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P111PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P111PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P111PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P111PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P111PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P111PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P111PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P111PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P111PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P111PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P111PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P111PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P111PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P111PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P111PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P111PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P111PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P111PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P111PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P111PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P112PFS  ======================================================== */
#define PFS_P112PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P112PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P112PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P112PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P112PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P112PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P112PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P112PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P112PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P112PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P112PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P112PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P112PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P112PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P112PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P112PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P112PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P112PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P112PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P112PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P112PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P112PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P112PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P112PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P112PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P112PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P113PFS  ======================================================== */
#define PFS_P113PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P113PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P113PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P113PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P113PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P113PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P113PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P113PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P113PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P113PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P113PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P113PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P113PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P113PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P113PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P113PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P113PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P113PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P113PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P113PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P113PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P113PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P113PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P113PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P113PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P113PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P114PFS  ======================================================== */
#define PFS_P114PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P114PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P114PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P114PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P114PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P114PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P114PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P114PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P114PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P114PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P114PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P114PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P114PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P114PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P114PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P114PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P114PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P114PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P114PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P114PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P114PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P114PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P114PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P114PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P114PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P114PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P202PFS  ======================================================== */
#define PFS_P202PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P202PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P202PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P202PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P202PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P202PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P202PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P202PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P202PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P202PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P202PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P202PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P202PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P202PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P202PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P202PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P202PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P202PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P202PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P202PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P202PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P202PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P202PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P202PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P202PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P202PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P203PFS  ======================================================== */
#define PFS_P203PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P203PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P203PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P203PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P203PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P203PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P203PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P203PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P203PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P203PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P203PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P203PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P203PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P203PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P203PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P203PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P203PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P203PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P203PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P203PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P203PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P203PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P203PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P203PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P203PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P203PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P204PFS  ======================================================== */
#define PFS_P204PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P204PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P204PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P204PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P204PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P204PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P204PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P204PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P204PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P204PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P204PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P204PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P204PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P204PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P204PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P204PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P204PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P204PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P204PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P204PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P204PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P204PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P204PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P204PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P204PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P204PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P205PFS  ======================================================== */
#define PFS_P205PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P205PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P205PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P205PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P205PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P205PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P205PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P205PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P205PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P205PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P205PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P205PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P205PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P205PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P205PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P205PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P205PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P205PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P205PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P205PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P205PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P205PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P205PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P205PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P205PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P205PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P200PFS  ======================================================== */
#define PFS_P200PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P200PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P200PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P200PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P200PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P200PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P200PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P200PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P200PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P200PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P200PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P200PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P200PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P200PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P200PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P200PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P200PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P200PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P200PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P200PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P200PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P200PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P200PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P200PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P200PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P200PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P201PFS  ======================================================== */
#define PFS_P201PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P201PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P201PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P201PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P201PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P201PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P201PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P201PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P201PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P201PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P201PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P201PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P201PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P201PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P201PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P201PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P201PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P201PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P201PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P201PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P201PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P201PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P201PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P201PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P201PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P201PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P301PFS  ======================================================== */
#define PFS_P301PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P301PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P301PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P301PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P301PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P301PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P301PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P301PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P301PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P301PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P301PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P301PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P301PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P301PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P301PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P301PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P301PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P301PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P301PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P301PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P301PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P301PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P301PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P301PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P301PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P301PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P302PFS  ======================================================== */
#define PFS_P302PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P302PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P302PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P302PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P302PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P302PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P302PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P302PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P302PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P302PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P302PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P302PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P302PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P302PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P302PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P302PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P302PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P302PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P302PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P302PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P302PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P302PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P302PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P302PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P302PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P302PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P303PFS  ======================================================== */
#define PFS_P303PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P303PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P303PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P303PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P303PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P303PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P303PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P303PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P303PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P303PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P303PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P303PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P303PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P303PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P303PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P303PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P303PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P303PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P303PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P303PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P303PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P303PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P303PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P303PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P303PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P303PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P304PFS  ======================================================== */
#define PFS_P304PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P304PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P304PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P304PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P304PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P304PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P304PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P304PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P304PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P304PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P304PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P304PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P304PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P304PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P304PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P304PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P304PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P304PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P304PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P304PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P304PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P304PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P304PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P304PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P304PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P304PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P305PFS  ======================================================== */
#define PFS_P305PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P305PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P305PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P305PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P305PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P305PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P305PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P305PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P305PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P305PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P305PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P305PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P305PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P305PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P305PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P305PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P305PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P305PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P305PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P305PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P305PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P305PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P305PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P305PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P305PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P305PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P306PFS  ======================================================== */
#define PFS_P306PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P306PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P306PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P306PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P306PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P306PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P306PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P306PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P306PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P306PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P306PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P306PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P306PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P306PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P306PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P306PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P306PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P306PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P306PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P306PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P306PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P306PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P306PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P306PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P306PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P306PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P307PFS  ======================================================== */
#define PFS_P307PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P307PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P307PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P307PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P307PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P307PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P307PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P307PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P307PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P307PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P307PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P307PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P307PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P307PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P307PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P307PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P307PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P307PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P307PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P307PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P307PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P307PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P307PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P307PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P307PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P307PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P308PFS  ======================================================== */
#define PFS_P308PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P308PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P308PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P308PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P308PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P308PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P308PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P308PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P308PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P308PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P308PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P308PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P308PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P308PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P308PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P308PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P308PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P308PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P308PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P308PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P308PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P308PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P308PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P308PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P308PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P308PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P309PFS  ======================================================== */
#define PFS_P309PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P309PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P309PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P309PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P309PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P309PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P309PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P309PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P309PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P309PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P309PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P309PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P309PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P309PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P309PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P309PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P309PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P309PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P309PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P309PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P309PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P309PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P309PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P309PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P309PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P309PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P310PFS  ======================================================== */
#define PFS_P310PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P310PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P310PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P310PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P310PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P310PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P310PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P310PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P310PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P310PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P310PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P310PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P310PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P310PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P310PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P310PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P310PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P310PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P310PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P310PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P310PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P310PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P310PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P310PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P310PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P310PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P311PFS  ======================================================== */
#define PFS_P311PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P311PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P311PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P311PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P311PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P311PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P311PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P311PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P311PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P311PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P311PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P311PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P311PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P311PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P311PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P311PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P311PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P311PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P311PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P311PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P311PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P311PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P311PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P311PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P311PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P311PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P312PFS  ======================================================== */
#define PFS_P312PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P312PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P312PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P312PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P312PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P312PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P312PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P312PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P312PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P312PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P312PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P312PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P312PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P312PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P312PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P312PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P312PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P312PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P312PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P312PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P312PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P312PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P312PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P312PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P312PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P312PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P313PFS  ======================================================== */
#define PFS_P313PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P313PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P313PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P313PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P313PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P313PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P313PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P313PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P313PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P313PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P313PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P313PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P313PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P313PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P313PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P313PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P313PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P313PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P313PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P313PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P313PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P313PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P313PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P313PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P313PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P313PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P314PFS  ======================================================== */
#define PFS_P314PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P314PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P314PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P314PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P314PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P314PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P314PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P314PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P314PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P314PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P314PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P314PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P314PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P314PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P314PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P314PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P314PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P314PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P314PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P314PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P314PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P314PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P314PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P314PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P314PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P314PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P315PFS  ======================================================== */
#define PFS_P315PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P315PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P315PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P315PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P315PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P315PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P315PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P315PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P315PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P315PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P315PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P315PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P315PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P315PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P315PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P315PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P315PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P315PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P315PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P315PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P315PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P315PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P315PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P315PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P315PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P315PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P404PFS  ======================================================== */
#define PFS_P404PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P404PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P404PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P404PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P404PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P404PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P404PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P404PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P404PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P404PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P404PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P404PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P404PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P404PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P404PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P404PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P404PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P404PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P404PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P404PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P404PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P404PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P404PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P404PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P404PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P404PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P405PFS  ======================================================== */
#define PFS_P405PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P405PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P405PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P405PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P405PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P405PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P405PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P405PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P405PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P405PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P405PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P405PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P405PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P405PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P405PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P405PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P405PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P405PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P405PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P405PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P405PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P405PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P405PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P405PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P405PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P405PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P406PFS  ======================================================== */
#define PFS_P406PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P406PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P406PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P406PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P406PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P406PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P406PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P406PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P406PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P406PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P406PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P406PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P406PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P406PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P406PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P406PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P406PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P406PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P406PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P406PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P406PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P406PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P406PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P406PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P406PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P406PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P407PFS  ======================================================== */
#define PFS_P407PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P407PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P407PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P407PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P407PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P407PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P407PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P407PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P407PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P407PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P407PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P407PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P407PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P407PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P407PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P407PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P407PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P407PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P407PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P407PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P407PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P407PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P407PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P407PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P407PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P407PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P408PFS  ======================================================== */
#define PFS_P408PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P408PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P408PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P408PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P408PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P408PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P408PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P408PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P408PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P408PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P408PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P408PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P408PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P408PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P408PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P408PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P408PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P408PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P408PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P408PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P408PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P408PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P408PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P408PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P408PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P408PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P409PFS  ======================================================== */
#define PFS_P409PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P409PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P409PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P409PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P409PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P409PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P409PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P409PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P409PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P409PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P409PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P409PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P409PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P409PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P409PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P409PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P409PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P409PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P409PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P409PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P409PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P409PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P409PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P409PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P409PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P409PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P410PFS  ======================================================== */
#define PFS_P410PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P410PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P410PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P410PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P410PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P410PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P410PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P410PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P410PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P410PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P410PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P410PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P410PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P410PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P410PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P410PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P410PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P410PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P410PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P410PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P410PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P410PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P410PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P410PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P410PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P410PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P411PFS  ======================================================== */
#define PFS_P411PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P411PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P411PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P411PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P411PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P411PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P411PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P411PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P411PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P411PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P411PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P411PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P411PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P411PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P411PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P411PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P411PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P411PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P411PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P411PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P411PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P411PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P411PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P411PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P411PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P411PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P412PFS  ======================================================== */
#define PFS_P412PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P412PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P412PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P412PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P412PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P412PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P412PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P412PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P412PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P412PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P412PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P412PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P412PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P412PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P412PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P412PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P412PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P412PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P412PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P412PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P412PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P412PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P412PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P412PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P412PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P412PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P413PFS  ======================================================== */
#define PFS_P413PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P413PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P413PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P413PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P413PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P413PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P413PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P413PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P413PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P413PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P413PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P413PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P413PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P413PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P413PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P413PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P413PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P413PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P413PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P413PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P413PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P413PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P413PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P413PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P413PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P413PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P500PFS  ======================================================== */
#define PFS_P500PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P500PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P500PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P500PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P500PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P500PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P500PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P500PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P500PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P500PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P500PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P500PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P500PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P500PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P500PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P500PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P500PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P500PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P500PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P500PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P500PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P500PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P500PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P500PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P500PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P500PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P501PFS  ======================================================== */
#define PFS_P501PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P501PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P501PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P501PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P501PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P501PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P501PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P501PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P501PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P501PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P501PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P501PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P501PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P501PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P501PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P501PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P501PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P501PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P501PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P501PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P501PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P501PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P501PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P501PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P501PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P501PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P502PFS  ======================================================== */
#define PFS_P502PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P502PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P502PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P502PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P502PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P502PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P502PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P502PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P502PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P502PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P502PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P502PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P502PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P502PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P502PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P502PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P502PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P502PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P502PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P502PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P502PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P502PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P502PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P502PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P502PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P502PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P503PFS  ======================================================== */
#define PFS_P503PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P503PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P503PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P503PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P503PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P503PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P503PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P503PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P503PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P503PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P503PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P503PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P503PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P503PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P503PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P503PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P503PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P503PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P503PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P503PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P503PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P503PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P503PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P503PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P503PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P503PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P504PFS  ======================================================== */
#define PFS_P504PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P504PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P504PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P504PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P504PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P504PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P504PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P504PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P504PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P504PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P504PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P504PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P504PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P504PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P504PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P504PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P504PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P504PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P504PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P504PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P504PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P504PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P504PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P504PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P504PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P504PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P505PFS  ======================================================== */
#define PFS_P505PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P505PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P505PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P505PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P505PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P505PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P505PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P505PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P505PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P505PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P505PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P505PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P505PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P505PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P505PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P505PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P505PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P505PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P505PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P505PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P505PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P505PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P505PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P505PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P505PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P505PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P506PFS  ======================================================== */
#define PFS_P506PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P506PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P506PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P506PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P506PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P506PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P506PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P506PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P506PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P506PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P506PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P506PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P506PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P506PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P506PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P506PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P506PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P506PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P506PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P506PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P506PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P506PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P506PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P506PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P506PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P506PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P507PFS  ======================================================== */
#define PFS_P507PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P507PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P507PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P507PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P507PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P507PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P507PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P507PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P507PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P507PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P507PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P507PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P507PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P507PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P507PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P507PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P507PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P507PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P507PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P507PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P507PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P507PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P507PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P507PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P507PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P507PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P508PFS  ======================================================== */
#define PFS_P508PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P508PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P508PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P508PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P508PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P508PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P508PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P508PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P508PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P508PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P508PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P508PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P508PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P508PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P508PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P508PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P508PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P508PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P508PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P508PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P508PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P508PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P508PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P508PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P508PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P508PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P509PFS  ======================================================== */
#define PFS_P509PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P509PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P509PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P509PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P509PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P509PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P509PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P509PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P509PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P509PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P509PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P509PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P509PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P509PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P509PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P509PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P509PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P509PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P509PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P509PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P509PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P509PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P509PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P509PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P509PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P509PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P510PFS  ======================================================== */
#define PFS_P510PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P510PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P510PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P510PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P510PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P510PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P510PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P510PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P510PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P510PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P510PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P510PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P510PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P510PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P510PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P510PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P510PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P510PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P510PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P510PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P510PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P510PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P510PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P510PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P510PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P510PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P511PFS  ======================================================== */
#define PFS_P511PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P511PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P511PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P511PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P511PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P511PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P511PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P511PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P511PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P511PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P511PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P511PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P511PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P511PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P511PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P511PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P511PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P511PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P511PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P511PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P511PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P511PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P511PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P511PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P511PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P511PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P513PFS  ======================================================== */
#define PFS_P513PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P513PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P513PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P513PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P513PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P513PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P513PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P513PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P513PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P513PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P513PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P513PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P513PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P513PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P513PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P513PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P513PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P513PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P513PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P513PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P513PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P513PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P514PFS  ======================================================== */
#define PFS_P514PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P514PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P514PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P514PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P514PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P514PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P514PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P514PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P514PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P514PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P514PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P514PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P514PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P514PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P514PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P514PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P514PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P514PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P514PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P514PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P514PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P514PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P600PFS  ======================================================== */
#define PFS_P600PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P600PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P600PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P600PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P600PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P600PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P600PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P600PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P600PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P600PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P600PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P600PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P600PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P600PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P600PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P600PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P600PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P600PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P600PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P600PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P600PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P600PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P600PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P600PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P600PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P600PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P601PFS  ======================================================== */
#define PFS_P601PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P601PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P601PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P601PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P601PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P601PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P601PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P601PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P601PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P601PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P601PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P601PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P601PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P601PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P601PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P601PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P601PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P601PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P601PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P601PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P601PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P601PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P601PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P601PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P601PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P601PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P602PFS  ======================================================== */
#define PFS_P602PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P602PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P602PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P602PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P602PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P602PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P602PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P602PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P602PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P602PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P602PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P602PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P602PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P602PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P602PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P602PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P602PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P602PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P602PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P602PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P602PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P602PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P602PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P602PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P602PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P602PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P603PFS  ======================================================== */
#define PFS_P603PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P603PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P603PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P603PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P603PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P603PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P603PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P603PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P603PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P603PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P603PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P603PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P603PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P603PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P603PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P603PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P603PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P603PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P603PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P603PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P603PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P603PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P603PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P603PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P603PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P603PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P604PFS  ======================================================== */
#define PFS_P604PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P604PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P604PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P604PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P604PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P604PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P604PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P604PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P604PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P604PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P604PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P604PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P604PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P604PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P604PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P604PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P604PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P604PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P604PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P604PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P604PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P604PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P604PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P604PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P604PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P604PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P605PFS  ======================================================== */
#define PFS_P605PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P605PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P605PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P605PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P605PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P605PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P605PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P605PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P605PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P605PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P605PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P605PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P605PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P605PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P605PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P605PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P605PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P605PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P605PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P605PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P605PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P605PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P605PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P605PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P605PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P605PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P606PFS  ======================================================== */
#define PFS_P606PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P606PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P606PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P606PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P606PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P606PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P606PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P606PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P606PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P606PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P606PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P606PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P606PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P606PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P606PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P606PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P606PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P606PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P606PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P606PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P606PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P606PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P606PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P606PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P606PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P606PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P607PFS  ======================================================== */
#define PFS_P607PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P607PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P607PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P607PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P607PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P607PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P607PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P607PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P607PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P607PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P607PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P607PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P607PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P607PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P607PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P607PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P607PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P607PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P607PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P607PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P607PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P607PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P607PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P607PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P607PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P607PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P608PFS  ======================================================== */
#define PFS_P608PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P608PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P608PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P608PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P608PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P608PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P608PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P608PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P608PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P608PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P608PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P608PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P608PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P608PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P608PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P608PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P608PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P608PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P608PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P608PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P608PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P608PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P608PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P608PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P608PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P608PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P609PFS  ======================================================== */
#define PFS_P609PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P609PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P609PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P609PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P609PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P609PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P609PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P609PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P609PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P609PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P609PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P609PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P609PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P609PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P609PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P609PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P609PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P609PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P609PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P609PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P609PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P609PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P609PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P609PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P609PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P609PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P610PFS  ======================================================== */
#define PFS_P610PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P610PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P610PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P610PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P610PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P610PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P610PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P610PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P610PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P610PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P610PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P610PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P610PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P610PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P610PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P610PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P610PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P610PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P610PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P610PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P610PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P610PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P610PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P610PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P610PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P610PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P700PFS  ======================================================== */
#define PFS_P700PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P700PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P700PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P700PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P700PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P700PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P700PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P700PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P700PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P700PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P700PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P700PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P700PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P700PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P700PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P700PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P700PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P700PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P700PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P700PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P700PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P700PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P700PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P700PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P700PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P700PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P701PFS  ======================================================== */
#define PFS_P701PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P701PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P701PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P701PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P701PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P701PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P701PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P701PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P701PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P701PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P701PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P701PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P701PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P701PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P701PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P701PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P701PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P701PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P701PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P701PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P701PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P701PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P701PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P701PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P701PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P701PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P702PFS  ======================================================== */
#define PFS_P702PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P702PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P702PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P702PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P702PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P702PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P702PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P702PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P702PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P702PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P702PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P702PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P702PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P702PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P702PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P702PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P702PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P702PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P702PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P702PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P702PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P702PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P702PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P702PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P702PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P702PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P703PFS  ======================================================== */
#define PFS_P703PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P703PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P703PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P703PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P703PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P703PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P703PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P703PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P703PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P703PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P703PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P703PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P703PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P703PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P703PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P703PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P703PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P703PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P703PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P703PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P703PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P703PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P703PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P703PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P703PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P703PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P704PFS  ======================================================== */
#define PFS_P704PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P704PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P704PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P704PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P704PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P704PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P704PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P704PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P704PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P704PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P704PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P704PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P704PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P704PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P704PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P704PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P704PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P704PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P704PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P704PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P704PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P704PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P704PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P704PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P704PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P704PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P800PFS  ======================================================== */
#define PFS_P800PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P800PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P800PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P800PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P800PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P800PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P800PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P800PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P800PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P800PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P800PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P800PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P800PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P800PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P800PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P800PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P800PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P800PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P800PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P800PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P800PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P800PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P800PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P800PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P800PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P800PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P801PFS  ======================================================== */
#define PFS_P801PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P801PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P801PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P801PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P801PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P801PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P801PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P801PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P801PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P801PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P801PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P801PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P801PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P801PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P801PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P801PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P801PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P801PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P801PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P801PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P801PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P801PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P801PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P801PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P801PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P801PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P802PFS  ======================================================== */
#define PFS_P802PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P802PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P802PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P802PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P802PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P802PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P802PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P802PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P802PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P802PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P802PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P802PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P802PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P802PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P802PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P802PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P802PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P802PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P802PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P802PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P802PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P802PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P802PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P802PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P802PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P802PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P803PFS  ======================================================== */
#define PFS_P803PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P803PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P803PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P803PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P803PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P803PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P803PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P803PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P803PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P803PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P803PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P803PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P803PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P803PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P803PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P803PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P803PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P803PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P803PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P803PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P803PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P803PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P803PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P803PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P803PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P803PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P804PFS  ======================================================== */
#define PFS_P804PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P804PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P804PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P804PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P804PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P804PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P804PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P804PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P804PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P804PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P804PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P804PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P804PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P804PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P804PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P804PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P804PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P804PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P804PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P804PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P804PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P804PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P804PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P804PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P804PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P804PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P805PFS  ======================================================== */
#define PFS_P805PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P805PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P805PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P805PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P805PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P805PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P805PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P805PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P805PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P805PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P805PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P805PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P805PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P805PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P805PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P805PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P805PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P805PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P805PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P805PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P805PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P805PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P805PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P805PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P805PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P805PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P806PFS  ======================================================== */
#define PFS_P806PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P806PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P806PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P806PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P806PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P806PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P806PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P806PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P806PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P806PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P806PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P806PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P806PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P806PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P806PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P806PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P806PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P806PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P806PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P806PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P806PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P806PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P806PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P806PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P806PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P806PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P807PFS  ======================================================== */
#define PFS_P807PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P807PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P807PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P807PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P807PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P807PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P807PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P807PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P807PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P807PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P807PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P807PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P807PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P807PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P807PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P807PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P807PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P807PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P807PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P807PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P807PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P807PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P807PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P807PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P807PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P807PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P808PFS  ======================================================== */
#define PFS_P808PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P808PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P808PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P808PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P808PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P808PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P808PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P808PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P808PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P808PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P808PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P808PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P808PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P808PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P808PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P808PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P808PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P808PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P808PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P808PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P808PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P808PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P808PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P808PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P808PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P808PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P809PFS  ======================================================== */
#define PFS_P809PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P809PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P809PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P809PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P809PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P809PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P809PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P809PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P809PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P809PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P809PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P809PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P809PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P809PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P809PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P809PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P809PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P809PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P809PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P809PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P809PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P809PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P809PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P809PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P809PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P809PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P810PFS  ======================================================== */
#define PFS_P810PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P810PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P810PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P810PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P810PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P810PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P810PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P810PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P810PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P810PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P810PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P810PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P810PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P810PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P810PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P810PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P810PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P810PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P810PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P810PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P810PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P810PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P810PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P810PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P810PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P810PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P811PFS  ======================================================== */
#define PFS_P811PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P811PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P811PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P811PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P811PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P811PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P811PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P811PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P811PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P811PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P811PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P811PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P811PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P811PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P811PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P811PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P811PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P811PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P811PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P811PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P811PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P811PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P811PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P811PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P811PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P811PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P812PFS  ======================================================== */
#define PFS_P812PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P812PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P812PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P812PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P812PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P812PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P812PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P812PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P812PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P812PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P812PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P812PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P812PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P812PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P812PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P812PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P812PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P812PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P812PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P812PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P812PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P812PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P812PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P812PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P812PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P812PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P813PFS  ======================================================== */
#define PFS_P813PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P813PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P813PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P813PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P813PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P813PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P813PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P813PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P813PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P813PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P813PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P813PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P813PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P813PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P813PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P813PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P813PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P813PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P813PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P813PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P813PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P813PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P813PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P813PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P813PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P813PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P814PFS  ======================================================== */
#define PFS_P814PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P814PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P814PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P814PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P814PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P814PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P814PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P814PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P814PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P814PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P814PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P814PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P814PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P814PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P814PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P814PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P814PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P814PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P814PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P814PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P814PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P814PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P814PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P814PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P814PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P814PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
/* ========================================================  P815PFS  ======================================================== */
#define PFS_P815PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P815PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
#define PFS_P815PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P815PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P815PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P815PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P815PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P815PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P815PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P815PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P815PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P815PFS_DSCR_Msk              (0xc00UL)                 /*!< DSCR (Bitfield-Mask: 0x03)                            */
#define PFS_P815PFS_PCODR_Pos             (7UL)                     /*!< PCODR (Bit 7)                                         */
#define PFS_P815PFS_PCODR_Msk             (0x80UL)                  /*!< PCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P815PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P815PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P815PFS_PDCR_Pos              (5UL)                     /*!< PDCR (Bit 5)                                          */
#define PFS_P815PFS_PDCR_Msk              (0x20UL)                  /*!< PDCR (Bitfield-Mask: 0x01)                            */
#define PFS_P815PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P815PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P815PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P815PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P815PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P815PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P815PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P815PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           PMISC                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  INLATCH  ======================================================== */
#define PMISC_INLATCH_INLON8_Pos          (8UL)                     /*!< INLON8 (Bit 8)                                        */
#define PMISC_INLATCH_INLON8_Msk          (0x100UL)                 /*!< INLON8 (Bitfield-Mask: 0x01)                          */
#define PMISC_INLATCH_INLON7_Pos          (7UL)                     /*!< INLON7 (Bit 7)                                        */
#define PMISC_INLATCH_INLON7_Msk          (0x80UL)                  /*!< INLON7 (Bitfield-Mask: 0x01)                          */
#define PMISC_INLATCH_INLON6_Pos          (6UL)                     /*!< INLON6 (Bit 6)                                        */
#define PMISC_INLATCH_INLON6_Msk          (0x40UL)                  /*!< INLON6 (Bitfield-Mask: 0x01)                          */
#define PMISC_INLATCH_INLON5_Pos          (5UL)                     /*!< INLON5 (Bit 5)                                        */
#define PMISC_INLATCH_INLON5_Msk          (0x20UL)                  /*!< INLON5 (Bitfield-Mask: 0x01)                          */
#define PMISC_INLATCH_INLON4_Pos          (4UL)                     /*!< INLON4 (Bit 4)                                        */
#define PMISC_INLATCH_INLON4_Msk          (0x10UL)                  /*!< INLON4 (Bitfield-Mask: 0x01)                          */
#define PMISC_INLATCH_INLON3_Pos          (3UL)                     /*!< INLON3 (Bit 3)                                        */
#define PMISC_INLATCH_INLON3_Msk          (0x8UL)                   /*!< INLON3 (Bitfield-Mask: 0x01)                          */
#define PMISC_INLATCH_INLON2_Pos          (2UL)                     /*!< INLON2 (Bit 2)                                        */
#define PMISC_INLATCH_INLON2_Msk          (0x4UL)                   /*!< INLON2 (Bitfield-Mask: 0x01)                          */
#define PMISC_INLATCH_INLON1_Pos          (1UL)                     /*!< INLON1 (Bit 1)                                        */
#define PMISC_INLATCH_INLON1_Msk          (0x2UL)                   /*!< INLON1 (Bitfield-Mask: 0x01)                          */
#define PMISC_INLATCH_INLON0_Pos          (0UL)                     /*!< INLON0 (Bit 0)                                        */
#define PMISC_INLATCH_INLON0_Msk          (0x1UL)                   /*!< INLON0 (Bitfield-Mask: 0x01)                          */
/* =====================================================  INLATCHRSTLV  ====================================================== */
#define PMISC_INLATCHRSTLV_LEVRST8_Pos    (8UL)                     /*!< LEVRST8 (Bit 8)                                       */
#define PMISC_INLATCHRSTLV_LEVRST8_Msk    (0x100UL)                 /*!< LEVRST8 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTLV_LEVRST7_Pos    (7UL)                     /*!< LEVRST7 (Bit 7)                                       */
#define PMISC_INLATCHRSTLV_LEVRST7_Msk    (0x80UL)                  /*!< LEVRST7 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTLV_LEVRST6_Pos    (6UL)                     /*!< LEVRST6 (Bit 6)                                       */
#define PMISC_INLATCHRSTLV_LEVRST6_Msk    (0x40UL)                  /*!< LEVRST6 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTLV_LEVRST5_Pos    (5UL)                     /*!< LEVRST5 (Bit 5)                                       */
#define PMISC_INLATCHRSTLV_LEVRST5_Msk    (0x20UL)                  /*!< LEVRST5 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTLV_LEVRST4_Pos    (4UL)                     /*!< LEVRST4 (Bit 4)                                       */
#define PMISC_INLATCHRSTLV_LEVRST4_Msk    (0x10UL)                  /*!< LEVRST4 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTLV_LEVRST3_Pos    (3UL)                     /*!< LEVRST3 (Bit 3)                                       */
#define PMISC_INLATCHRSTLV_LEVRST3_Msk    (0x8UL)                   /*!< LEVRST3 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTLV_LEVRST2_Pos    (2UL)                     /*!< LEVRST2 (Bit 2)                                       */
#define PMISC_INLATCHRSTLV_LEVRST2_Msk    (0x4UL)                   /*!< LEVRST2 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTLV_LEVRST1_Pos    (1UL)                     /*!< LEVRST1 (Bit 1)                                       */
#define PMISC_INLATCHRSTLV_LEVRST1_Msk    (0x2UL)                   /*!< LEVRST1 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTLV_LEVRST0_Pos    (0UL)                     /*!< LEVRST0 (Bit 0)                                       */
#define PMISC_INLATCHRSTLV_LEVRST0_Msk    (0x1UL)                   /*!< LEVRST0 (Bitfield-Mask: 0x01)                         */
/* =====================================================  INLATCHRSTPL  ====================================================== */
#define PMISC_INLATCHRSTPL_PLSRST8_Pos    (8UL)                     /*!< PLSRST8 (Bit 8)                                       */
#define PMISC_INLATCHRSTPL_PLSRST8_Msk    (0x100UL)                 /*!< PLSRST8 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTPL_PLSRST7_Pos    (7UL)                     /*!< PLSRST7 (Bit 7)                                       */
#define PMISC_INLATCHRSTPL_PLSRST7_Msk    (0x80UL)                  /*!< PLSRST7 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTPL_PLSRST6_Pos    (6UL)                     /*!< PLSRST6 (Bit 6)                                       */
#define PMISC_INLATCHRSTPL_PLSRST6_Msk    (0x40UL)                  /*!< PLSRST6 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTPL_PLSRST5_Pos    (5UL)                     /*!< PLSRST5 (Bit 5)                                       */
#define PMISC_INLATCHRSTPL_PLSRST5_Msk    (0x20UL)                  /*!< PLSRST5 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTPL_PLSRST4_Pos    (4UL)                     /*!< PLSRST4 (Bit 4)                                       */
#define PMISC_INLATCHRSTPL_PLSRST4_Msk    (0x10UL)                  /*!< PLSRST4 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTPL_PLSRST3_Pos    (3UL)                     /*!< PLSRST3 (Bit 3)                                       */
#define PMISC_INLATCHRSTPL_PLSRST3_Msk    (0x8UL)                   /*!< PLSRST3 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTPL_PLSRST2_Pos    (2UL)                     /*!< PLSRST2 (Bit 2)                                       */
#define PMISC_INLATCHRSTPL_PLSRST2_Msk    (0x4UL)                   /*!< PLSRST2 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTPL_PLSRST1_Pos    (1UL)                     /*!< PLSRST1 (Bit 1)                                       */
#define PMISC_INLATCHRSTPL_PLSRST1_Msk    (0x2UL)                   /*!< PLSRST1 (Bitfield-Mask: 0x01)                         */
#define PMISC_INLATCHRSTPL_PLSRST0_Pos    (0UL)                     /*!< PLSRST0 (Bit 0)                                       */
#define PMISC_INLATCHRSTPL_PLSRST0_Msk    (0x1UL)                   /*!< PLSRST0 (Bitfield-Mask: 0x01)                         */
/* =========================================================  PWPR  ========================================================== */
#define PMISC_PWPR_B0WI_Pos               (7UL)                     /*!< B0WI (Bit 7)                                          */
#define PMISC_PWPR_B0WI_Msk               (0x80UL)                  /*!< B0WI (Bitfield-Mask: 0x01)                            */
#define PMISC_PWPR_PFSWE_Pos              (6UL)                     /*!< PFSWE (Bit 6)                                         */
#define PMISC_PWPR_PFSWE_Msk              (0x40UL)                  /*!< PFSWE (Bitfield-Mask: 0x01)                           */


/* =========================================================================================================================== */
/* ================                                            POE                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  POEGGA  ========================================================= */
#define POE_POEGGA_NFCS_Pos               (30UL)                    /*!< NFCS (Bit 30)                                         */
#define POE_POEGGA_NFCS_Msk               (0xc0000000UL)            /*!< NFCS (Bitfield-Mask: 0x03)                            */
#define POE_POEGGA_NFEN_Pos               (29UL)                    /*!< NFEN (Bit 29)                                         */
#define POE_POEGGA_NFEN_Msk               (0x20000000UL)            /*!< NFEN (Bitfield-Mask: 0x01)                            */
#define POE_POEGGA_INV_Pos                (28UL)                    /*!< INV (Bit 28)                                          */
#define POE_POEGGA_INV_Msk                (0x10000000UL)            /*!< INV (Bitfield-Mask: 0x01)                             */
#define POE_POEGGA_ST_Pos                 (16UL)                    /*!< ST (Bit 16)                                           */
#define POE_POEGGA_ST_Msk                 (0x10000UL)               /*!< ST (Bitfield-Mask: 0x01)                              */
#define POE_POEGGA_CDRE0_Pos              (8UL)                     /*!< CDRE0 (Bit 8)                                         */
#define POE_POEGGA_CDRE0_Msk              (0x100UL)                 /*!< CDRE0 (Bitfield-Mask: 0x01)                           */
#define POE_POEGGA_OSTPE_Pos              (6UL)                     /*!< OSTPE (Bit 6)                                         */
#define POE_POEGGA_OSTPE_Msk              (0x40UL)                  /*!< OSTPE (Bitfield-Mask: 0x01)                           */
#define POE_POEGGA_IOCE_Pos               (5UL)                     /*!< IOCE (Bit 5)                                          */
#define POE_POEGGA_IOCE_Msk               (0x20UL)                  /*!< IOCE (Bitfield-Mask: 0x01)                            */
#define POE_POEGGA_PIDE_Pos               (4UL)                     /*!< PIDE (Bit 4)                                          */
#define POE_POEGGA_PIDE_Msk               (0x10UL)                  /*!< PIDE (Bitfield-Mask: 0x01)                            */
#define POE_POEGGA_SSF_Pos                (3UL)                     /*!< SSF (Bit 3)                                           */
#define POE_POEGGA_SSF_Msk                (0x8UL)                   /*!< SSF (Bitfield-Mask: 0x01)                             */
#define POE_POEGGA_OSTPF_Pos              (2UL)                     /*!< OSTPF (Bit 2)                                         */
#define POE_POEGGA_OSTPF_Msk              (0x4UL)                   /*!< OSTPF (Bitfield-Mask: 0x01)                           */
#define POE_POEGGA_IOCF_Pos               (1UL)                     /*!< IOCF (Bit 1)                                          */
#define POE_POEGGA_IOCF_Msk               (0x2UL)                   /*!< IOCF (Bitfield-Mask: 0x01)                            */
#define POE_POEGGA_PIDF_Pos               (0UL)                     /*!< PIDF (Bit 0)                                          */
#define POE_POEGGA_PIDF_Msk               (0x1UL)                   /*!< PIDF (Bitfield-Mask: 0x01)                            */
/* ========================================================  POEGGB  ========================================================= */
#define POE_POEGGB_NFCS_Pos               (30UL)                    /*!< NFCS (Bit 30)                                         */
#define POE_POEGGB_NFCS_Msk               (0xc0000000UL)            /*!< NFCS (Bitfield-Mask: 0x03)                            */
#define POE_POEGGB_NFEN_Pos               (29UL)                    /*!< NFEN (Bit 29)                                         */
#define POE_POEGGB_NFEN_Msk               (0x20000000UL)            /*!< NFEN (Bitfield-Mask: 0x01)                            */
#define POE_POEGGB_INV_Pos                (28UL)                    /*!< INV (Bit 28)                                          */
#define POE_POEGGB_INV_Msk                (0x10000000UL)            /*!< INV (Bitfield-Mask: 0x01)                             */
#define POE_POEGGB_ST_Pos                 (16UL)                    /*!< ST (Bit 16)                                           */
#define POE_POEGGB_ST_Msk                 (0x10000UL)               /*!< ST (Bitfield-Mask: 0x01)                              */
#define POE_POEGGB_CDRE0_Pos              (8UL)                     /*!< CDRE0 (Bit 8)                                         */
#define POE_POEGGB_CDRE0_Msk              (0x100UL)                 /*!< CDRE0 (Bitfield-Mask: 0x01)                           */
#define POE_POEGGB_OSTPE_Pos              (6UL)                     /*!< OSTPE (Bit 6)                                         */
#define POE_POEGGB_OSTPE_Msk              (0x40UL)                  /*!< OSTPE (Bitfield-Mask: 0x01)                           */
#define POE_POEGGB_IOCE_Pos               (5UL)                     /*!< IOCE (Bit 5)                                          */
#define POE_POEGGB_IOCE_Msk               (0x20UL)                  /*!< IOCE (Bitfield-Mask: 0x01)                            */
#define POE_POEGGB_PIDE_Pos               (4UL)                     /*!< PIDE (Bit 4)                                          */
#define POE_POEGGB_PIDE_Msk               (0x10UL)                  /*!< PIDE (Bitfield-Mask: 0x01)                            */
#define POE_POEGGB_SSF_Pos                (3UL)                     /*!< SSF (Bit 3)                                           */
#define POE_POEGGB_SSF_Msk                (0x8UL)                   /*!< SSF (Bitfield-Mask: 0x01)                             */
#define POE_POEGGB_OSTPF_Pos              (2UL)                     /*!< OSTPF (Bit 2)                                         */
#define POE_POEGGB_OSTPF_Msk              (0x4UL)                   /*!< OSTPF (Bitfield-Mask: 0x01)                           */
#define POE_POEGGB_IOCF_Pos               (1UL)                     /*!< IOCF (Bit 1)                                          */
#define POE_POEGGB_IOCF_Msk               (0x2UL)                   /*!< IOCF (Bitfield-Mask: 0x01)                            */
#define POE_POEGGB_PIDF_Pos               (0UL)                     /*!< PIDF (Bit 0)                                          */
#define POE_POEGGB_PIDF_Msk               (0x1UL)                   /*!< PIDF (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           PORT0                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  PCNTR1  ========================================================= */
#define PORT0_PCNTR1_PODR15_Pos           (31UL)                    /*!< PODR15 (Bit 31)                                       */
#define PORT0_PCNTR1_PODR15_Msk           (0x80000000UL)            /*!< PODR15 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR14_Pos           (30UL)                    /*!< PODR14 (Bit 30)                                       */
#define PORT0_PCNTR1_PODR14_Msk           (0x40000000UL)            /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR13_Pos           (29UL)                    /*!< PODR13 (Bit 29)                                       */
#define PORT0_PCNTR1_PODR13_Msk           (0x20000000UL)            /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR12_Pos           (28UL)                    /*!< PODR12 (Bit 28)                                       */
#define PORT0_PCNTR1_PODR12_Msk           (0x10000000UL)            /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR11_Pos           (27UL)                    /*!< PODR11 (Bit 27)                                       */
#define PORT0_PCNTR1_PODR11_Msk           (0x8000000UL)             /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR10_Pos           (26UL)                    /*!< PODR10 (Bit 26)                                       */
#define PORT0_PCNTR1_PODR10_Msk           (0x4000000UL)             /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR09_Pos           (25UL)                    /*!< PODR09 (Bit 25)                                       */
#define PORT0_PCNTR1_PODR09_Msk           (0x2000000UL)             /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR08_Pos           (24UL)                    /*!< PODR08 (Bit 24)                                       */
#define PORT0_PCNTR1_PODR08_Msk           (0x1000000UL)             /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR07_Pos           (23UL)                    /*!< PODR07 (Bit 23)                                       */
#define PORT0_PCNTR1_PODR07_Msk           (0x800000UL)              /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR06_Pos           (22UL)                    /*!< PODR06 (Bit 22)                                       */
#define PORT0_PCNTR1_PODR06_Msk           (0x400000UL)              /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR05_Pos           (21UL)                    /*!< PODR05 (Bit 21)                                       */
#define PORT0_PCNTR1_PODR05_Msk           (0x200000UL)              /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR04_Pos           (20UL)                    /*!< PODR04 (Bit 20)                                       */
#define PORT0_PCNTR1_PODR04_Msk           (0x100000UL)              /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR03_Pos           (19UL)                    /*!< PODR03 (Bit 19)                                       */
#define PORT0_PCNTR1_PODR03_Msk           (0x80000UL)               /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR02_Pos           (18UL)                    /*!< PODR02 (Bit 18)                                       */
#define PORT0_PCNTR1_PODR02_Msk           (0x40000UL)               /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR01_Pos           (17UL)                    /*!< PODR01 (Bit 17)                                       */
#define PORT0_PCNTR1_PODR01_Msk           (0x20000UL)               /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR00_Pos           (16UL)                    /*!< PODR00 (Bit 16)                                       */
#define PORT0_PCNTR1_PODR00_Msk           (0x10000UL)               /*!< PODR00 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PDR15_Pos            (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT0_PCNTR1_PDR15_Msk            (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR14_Pos            (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT0_PCNTR1_PDR14_Msk            (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR13_Pos            (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT0_PCNTR1_PDR13_Msk            (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR12_Pos            (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT0_PCNTR1_PDR12_Msk            (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR11_Pos            (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT0_PCNTR1_PDR11_Msk            (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR10_Pos            (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT0_PCNTR1_PDR10_Msk            (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR09_Pos            (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT0_PCNTR1_PDR09_Msk            (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR08_Pos            (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT0_PCNTR1_PDR08_Msk            (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR07_Pos            (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT0_PCNTR1_PDR07_Msk            (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR06_Pos            (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT0_PCNTR1_PDR06_Msk            (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR05_Pos            (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT0_PCNTR1_PDR05_Msk            (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR04_Pos            (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT0_PCNTR1_PDR04_Msk            (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR03_Pos            (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT0_PCNTR1_PDR03_Msk            (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR02_Pos            (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT0_PCNTR1_PDR02_Msk            (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR01_Pos            (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT0_PCNTR1_PDR01_Msk            (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR00_Pos            (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT0_PCNTR1_PDR00_Msk            (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
/* =========================================================  PODR  ========================================================== */
#define PORT0_PODR_PODR15_Pos             (15UL)                    /*!< PODR15 (Bit 15)                                       */
#define PORT0_PODR_PODR15_Msk             (0x8000UL)                /*!< PODR15 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR14_Pos             (14UL)                    /*!< PODR14 (Bit 14)                                       */
#define PORT0_PODR_PODR14_Msk             (0x4000UL)                /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR13_Pos             (13UL)                    /*!< PODR13 (Bit 13)                                       */
#define PORT0_PODR_PODR13_Msk             (0x2000UL)                /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR12_Pos             (12UL)                    /*!< PODR12 (Bit 12)                                       */
#define PORT0_PODR_PODR12_Msk             (0x1000UL)                /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR11_Pos             (11UL)                    /*!< PODR11 (Bit 11)                                       */
#define PORT0_PODR_PODR11_Msk             (0x800UL)                 /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR10_Pos             (10UL)                    /*!< PODR10 (Bit 10)                                       */
#define PORT0_PODR_PODR10_Msk             (0x400UL)                 /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR09_Pos             (9UL)                     /*!< PODR09 (Bit 9)                                        */
#define PORT0_PODR_PODR09_Msk             (0x200UL)                 /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR08_Pos             (8UL)                     /*!< PODR08 (Bit 8)                                        */
#define PORT0_PODR_PODR08_Msk             (0x100UL)                 /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR07_Pos             (7UL)                     /*!< PODR07 (Bit 7)                                        */
#define PORT0_PODR_PODR07_Msk             (0x80UL)                  /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR06_Pos             (6UL)                     /*!< PODR06 (Bit 6)                                        */
#define PORT0_PODR_PODR06_Msk             (0x40UL)                  /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR05_Pos             (5UL)                     /*!< PODR05 (Bit 5)                                        */
#define PORT0_PODR_PODR05_Msk             (0x20UL)                  /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR04_Pos             (4UL)                     /*!< PODR04 (Bit 4)                                        */
#define PORT0_PODR_PODR04_Msk             (0x10UL)                  /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR03_Pos             (3UL)                     /*!< PODR03 (Bit 3)                                        */
#define PORT0_PODR_PODR03_Msk             (0x8UL)                   /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR02_Pos             (2UL)                     /*!< PODR02 (Bit 2)                                        */
#define PORT0_PODR_PODR02_Msk             (0x4UL)                   /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR01_Pos             (1UL)                     /*!< PODR01 (Bit 1)                                        */
#define PORT0_PODR_PODR01_Msk             (0x2UL)                   /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR00_Pos             (0UL)                     /*!< PODR00 (Bit 0)                                        */
#define PORT0_PODR_PODR00_Msk             (0x1UL)                   /*!< PODR00 (Bitfield-Mask: 0x01)                          */
/* ==========================================================  PDR  ========================================================== */
#define PORT0_PDR_PDR15_Pos               (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT0_PDR_PDR15_Msk               (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR14_Pos               (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT0_PDR_PDR14_Msk               (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR13_Pos               (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT0_PDR_PDR13_Msk               (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR12_Pos               (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT0_PDR_PDR12_Msk               (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR11_Pos               (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT0_PDR_PDR11_Msk               (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR10_Pos               (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT0_PDR_PDR10_Msk               (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR09_Pos               (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT0_PDR_PDR09_Msk               (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR08_Pos               (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT0_PDR_PDR08_Msk               (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR07_Pos               (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT0_PDR_PDR07_Msk               (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR06_Pos               (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT0_PDR_PDR06_Msk               (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR05_Pos               (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT0_PDR_PDR05_Msk               (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR04_Pos               (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT0_PDR_PDR04_Msk               (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR03_Pos               (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT0_PDR_PDR03_Msk               (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR02_Pos               (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT0_PDR_PDR02_Msk               (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR01_Pos               (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT0_PDR_PDR01_Msk               (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR00_Pos               (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT0_PDR_PDR00_Msk               (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
/* ========================================================  PCNTR2  ========================================================= */
#define PORT0_PCNTR2_EIDR15_Pos           (31UL)                    /*!< EIDR15 (Bit 31)                                       */
#define PORT0_PCNTR2_EIDR15_Msk           (0x80000000UL)            /*!< EIDR15 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR14_Pos           (30UL)                    /*!< EIDR14 (Bit 30)                                       */
#define PORT0_PCNTR2_EIDR14_Msk           (0x40000000UL)            /*!< EIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR13_Pos           (29UL)                    /*!< EIDR13 (Bit 29)                                       */
#define PORT0_PCNTR2_EIDR13_Msk           (0x20000000UL)            /*!< EIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR12_Pos           (28UL)                    /*!< EIDR12 (Bit 28)                                       */
#define PORT0_PCNTR2_EIDR12_Msk           (0x10000000UL)            /*!< EIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR11_Pos           (27UL)                    /*!< EIDR11 (Bit 27)                                       */
#define PORT0_PCNTR2_EIDR11_Msk           (0x8000000UL)             /*!< EIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR10_Pos           (26UL)                    /*!< EIDR10 (Bit 26)                                       */
#define PORT0_PCNTR2_EIDR10_Msk           (0x4000000UL)             /*!< EIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR09_Pos           (25UL)                    /*!< EIDR09 (Bit 25)                                       */
#define PORT0_PCNTR2_EIDR09_Msk           (0x2000000UL)             /*!< EIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR08_Pos           (24UL)                    /*!< EIDR08 (Bit 24)                                       */
#define PORT0_PCNTR2_EIDR08_Msk           (0x1000000UL)             /*!< EIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR07_Pos           (23UL)                    /*!< EIDR07 (Bit 23)                                       */
#define PORT0_PCNTR2_EIDR07_Msk           (0x800000UL)              /*!< EIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR06_Pos           (22UL)                    /*!< EIDR06 (Bit 22)                                       */
#define PORT0_PCNTR2_EIDR06_Msk           (0x400000UL)              /*!< EIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR05_Pos           (21UL)                    /*!< EIDR05 (Bit 21)                                       */
#define PORT0_PCNTR2_EIDR05_Msk           (0x200000UL)              /*!< EIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR04_Pos           (20UL)                    /*!< EIDR04 (Bit 20)                                       */
#define PORT0_PCNTR2_EIDR04_Msk           (0x100000UL)              /*!< EIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR03_Pos           (19UL)                    /*!< EIDR03 (Bit 19)                                       */
#define PORT0_PCNTR2_EIDR03_Msk           (0x80000UL)               /*!< EIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR02_Pos           (18UL)                    /*!< EIDR02 (Bit 18)                                       */
#define PORT0_PCNTR2_EIDR02_Msk           (0x40000UL)               /*!< EIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR01_Pos           (17UL)                    /*!< EIDR01 (Bit 17)                                       */
#define PORT0_PCNTR2_EIDR01_Msk           (0x20000UL)               /*!< EIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_EIDR00_Pos           (16UL)                    /*!< EIDR00 (Bit 16)                                       */
#define PORT0_PCNTR2_EIDR00_Msk           (0x10000UL)               /*!< EIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR15_Pos           (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT0_PCNTR2_PIDR15_Msk           (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR14_Pos           (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT0_PCNTR2_PIDR14_Msk           (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR13_Pos           (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT0_PCNTR2_PIDR13_Msk           (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR12_Pos           (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT0_PCNTR2_PIDR12_Msk           (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR11_Pos           (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT0_PCNTR2_PIDR11_Msk           (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR10_Pos           (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT0_PCNTR2_PIDR10_Msk           (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR09_Pos           (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT0_PCNTR2_PIDR09_Msk           (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR08_Pos           (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT0_PCNTR2_PIDR08_Msk           (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR07_Pos           (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT0_PCNTR2_PIDR07_Msk           (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR06_Pos           (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT0_PCNTR2_PIDR06_Msk           (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR05_Pos           (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT0_PCNTR2_PIDR05_Msk           (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR04_Pos           (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT0_PCNTR2_PIDR04_Msk           (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR03_Pos           (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT0_PCNTR2_PIDR03_Msk           (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR02_Pos           (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT0_PCNTR2_PIDR02_Msk           (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR01_Pos           (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT0_PCNTR2_PIDR01_Msk           (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR00_Pos           (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT0_PCNTR2_PIDR00_Msk           (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PIDR  ========================================================== */
#define PORT0_PIDR_PIDR15_Pos             (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT0_PIDR_PIDR15_Msk             (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR14_Pos             (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT0_PIDR_PIDR14_Msk             (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR13_Pos             (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT0_PIDR_PIDR13_Msk             (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR12_Pos             (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT0_PIDR_PIDR12_Msk             (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR11_Pos             (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT0_PIDR_PIDR11_Msk             (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR10_Pos             (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT0_PIDR_PIDR10_Msk             (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR09_Pos             (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT0_PIDR_PIDR09_Msk             (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR08_Pos             (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT0_PIDR_PIDR08_Msk             (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR07_Pos             (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT0_PIDR_PIDR07_Msk             (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR06_Pos             (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT0_PIDR_PIDR06_Msk             (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR05_Pos             (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT0_PIDR_PIDR05_Msk             (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR04_Pos             (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT0_PIDR_PIDR04_Msk             (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR03_Pos             (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT0_PIDR_PIDR03_Msk             (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR02_Pos             (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT0_PIDR_PIDR02_Msk             (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR01_Pos             (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT0_PIDR_PIDR01_Msk             (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR00_Pos             (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT0_PIDR_PIDR00_Msk             (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
/* ========================================================  PCNTR3  ========================================================= */
#define PORT0_PCNTR3_PORR15_Pos           (31UL)                    /*!< PORR15 (Bit 31)                                       */
#define PORT0_PCNTR3_PORR15_Msk           (0x80000000UL)            /*!< PORR15 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR14_Pos           (30UL)                    /*!< PORR14 (Bit 30)                                       */
#define PORT0_PCNTR3_PORR14_Msk           (0x40000000UL)            /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR13_Pos           (29UL)                    /*!< PORR13 (Bit 29)                                       */
#define PORT0_PCNTR3_PORR13_Msk           (0x20000000UL)            /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR12_Pos           (28UL)                    /*!< PORR12 (Bit 28)                                       */
#define PORT0_PCNTR3_PORR12_Msk           (0x10000000UL)            /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR11_Pos           (27UL)                    /*!< PORR11 (Bit 27)                                       */
#define PORT0_PCNTR3_PORR11_Msk           (0x8000000UL)             /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR10_Pos           (26UL)                    /*!< PORR10 (Bit 26)                                       */
#define PORT0_PCNTR3_PORR10_Msk           (0x4000000UL)             /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR09_Pos           (25UL)                    /*!< PORR09 (Bit 25)                                       */
#define PORT0_PCNTR3_PORR09_Msk           (0x2000000UL)             /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR08_Pos           (24UL)                    /*!< PORR08 (Bit 24)                                       */
#define PORT0_PCNTR3_PORR08_Msk           (0x1000000UL)             /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR07_Pos           (23UL)                    /*!< PORR07 (Bit 23)                                       */
#define PORT0_PCNTR3_PORR07_Msk           (0x800000UL)              /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR06_Pos           (22UL)                    /*!< PORR06 (Bit 22)                                       */
#define PORT0_PCNTR3_PORR06_Msk           (0x400000UL)              /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR05_Pos           (21UL)                    /*!< PORR05 (Bit 21)                                       */
#define PORT0_PCNTR3_PORR05_Msk           (0x200000UL)              /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR04_Pos           (20UL)                    /*!< PORR04 (Bit 20)                                       */
#define PORT0_PCNTR3_PORR04_Msk           (0x100000UL)              /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR03_Pos           (19UL)                    /*!< PORR03 (Bit 19)                                       */
#define PORT0_PCNTR3_PORR03_Msk           (0x80000UL)               /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR02_Pos           (18UL)                    /*!< PORR02 (Bit 18)                                       */
#define PORT0_PCNTR3_PORR02_Msk           (0x40000UL)               /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR01_Pos           (17UL)                    /*!< PORR01 (Bit 17)                                       */
#define PORT0_PCNTR3_PORR01_Msk           (0x20000UL)               /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR00_Pos           (16UL)                    /*!< PORR00 (Bit 16)                                       */
#define PORT0_PCNTR3_PORR00_Msk           (0x10000UL)               /*!< PORR00 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR15_Pos           (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT0_PCNTR3_POSR15_Msk           (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR14_Pos           (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT0_PCNTR3_POSR14_Msk           (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR13_Pos           (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT0_PCNTR3_POSR13_Msk           (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR12_Pos           (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT0_PCNTR3_POSR12_Msk           (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR11_Pos           (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT0_PCNTR3_POSR11_Msk           (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR10_Pos           (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT0_PCNTR3_POSR10_Msk           (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR09_Pos           (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT0_PCNTR3_POSR09_Msk           (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR08_Pos           (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT0_PCNTR3_POSR08_Msk           (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR07_Pos           (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT0_PCNTR3_POSR07_Msk           (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR06_Pos           (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT0_PCNTR3_POSR06_Msk           (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR05_Pos           (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT0_PCNTR3_POSR05_Msk           (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR04_Pos           (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT0_PCNTR3_POSR04_Msk           (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR03_Pos           (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT0_PCNTR3_POSR03_Msk           (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR02_Pos           (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT0_PCNTR3_POSR02_Msk           (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR01_Pos           (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT0_PCNTR3_POSR01_Msk           (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR00_Pos           (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT0_PCNTR3_POSR00_Msk           (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PORR  ========================================================== */
#define PORT0_PORR_PORR15_Pos             (15UL)                    /*!< PORR15 (Bit 15)                                       */
#define PORT0_PORR_PORR15_Msk             (0x8000UL)                /*!< PORR15 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR14_Pos             (14UL)                    /*!< PORR14 (Bit 14)                                       */
#define PORT0_PORR_PORR14_Msk             (0x4000UL)                /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR13_Pos             (13UL)                    /*!< PORR13 (Bit 13)                                       */
#define PORT0_PORR_PORR13_Msk             (0x2000UL)                /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR12_Pos             (12UL)                    /*!< PORR12 (Bit 12)                                       */
#define PORT0_PORR_PORR12_Msk             (0x1000UL)                /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR11_Pos             (11UL)                    /*!< PORR11 (Bit 11)                                       */
#define PORT0_PORR_PORR11_Msk             (0x800UL)                 /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR10_Pos             (10UL)                    /*!< PORR10 (Bit 10)                                       */
#define PORT0_PORR_PORR10_Msk             (0x400UL)                 /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR09_Pos             (9UL)                     /*!< PORR09 (Bit 9)                                        */
#define PORT0_PORR_PORR09_Msk             (0x200UL)                 /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR08_Pos             (8UL)                     /*!< PORR08 (Bit 8)                                        */
#define PORT0_PORR_PORR08_Msk             (0x100UL)                 /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR07_Pos             (7UL)                     /*!< PORR07 (Bit 7)                                        */
#define PORT0_PORR_PORR07_Msk             (0x80UL)                  /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR06_Pos             (6UL)                     /*!< PORR06 (Bit 6)                                        */
#define PORT0_PORR_PORR06_Msk             (0x40UL)                  /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR05_Pos             (5UL)                     /*!< PORR05 (Bit 5)                                        */
#define PORT0_PORR_PORR05_Msk             (0x20UL)                  /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR04_Pos             (4UL)                     /*!< PORR04 (Bit 4)                                        */
#define PORT0_PORR_PORR04_Msk             (0x10UL)                  /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR03_Pos             (3UL)                     /*!< PORR03 (Bit 3)                                        */
#define PORT0_PORR_PORR03_Msk             (0x8UL)                   /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR02_Pos             (2UL)                     /*!< PORR02 (Bit 2)                                        */
#define PORT0_PORR_PORR02_Msk             (0x4UL)                   /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR01_Pos             (1UL)                     /*!< PORR01 (Bit 1)                                        */
#define PORT0_PORR_PORR01_Msk             (0x2UL)                   /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR00_Pos             (0UL)                     /*!< PORR00 (Bit 0)                                        */
#define PORT0_PORR_PORR00_Msk             (0x1UL)                   /*!< PORR00 (Bitfield-Mask: 0x01)                          */
/* =========================================================  POSR  ========================================================== */
#define PORT0_POSR_POSR15_Pos             (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT0_POSR_POSR15_Msk             (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR14_Pos             (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT0_POSR_POSR14_Msk             (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR13_Pos             (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT0_POSR_POSR13_Msk             (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR12_Pos             (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT0_POSR_POSR12_Msk             (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR11_Pos             (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT0_POSR_POSR11_Msk             (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR10_Pos             (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT0_POSR_POSR10_Msk             (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR09_Pos             (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT0_POSR_POSR09_Msk             (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR08_Pos             (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT0_POSR_POSR08_Msk             (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR07_Pos             (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT0_POSR_POSR07_Msk             (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR06_Pos             (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT0_POSR_POSR06_Msk             (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR05_Pos             (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT0_POSR_POSR05_Msk             (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR04_Pos             (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT0_POSR_POSR04_Msk             (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR03_Pos             (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT0_POSR_POSR03_Msk             (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR02_Pos             (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT0_POSR_POSR02_Msk             (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR01_Pos             (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT0_POSR_POSR01_Msk             (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR00_Pos             (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT0_POSR_POSR00_Msk             (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           PORT2                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  PCNTR1  ========================================================= */
#define PORT2_PCNTR1_PODR15_Pos           (31UL)                    /*!< PODR15 (Bit 31)                                       */
#define PORT2_PCNTR1_PODR15_Msk           (0x80000000UL)            /*!< PODR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR14_Pos           (30UL)                    /*!< PODR14 (Bit 30)                                       */
#define PORT2_PCNTR1_PODR14_Msk           (0x40000000UL)            /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR13_Pos           (29UL)                    /*!< PODR13 (Bit 29)                                       */
#define PORT2_PCNTR1_PODR13_Msk           (0x20000000UL)            /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR12_Pos           (28UL)                    /*!< PODR12 (Bit 28)                                       */
#define PORT2_PCNTR1_PODR12_Msk           (0x10000000UL)            /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR11_Pos           (27UL)                    /*!< PODR11 (Bit 27)                                       */
#define PORT2_PCNTR1_PODR11_Msk           (0x8000000UL)             /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR10_Pos           (26UL)                    /*!< PODR10 (Bit 26)                                       */
#define PORT2_PCNTR1_PODR10_Msk           (0x4000000UL)             /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR09_Pos           (25UL)                    /*!< PODR09 (Bit 25)                                       */
#define PORT2_PCNTR1_PODR09_Msk           (0x2000000UL)             /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR08_Pos           (24UL)                    /*!< PODR08 (Bit 24)                                       */
#define PORT2_PCNTR1_PODR08_Msk           (0x1000000UL)             /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR07_Pos           (23UL)                    /*!< PODR07 (Bit 23)                                       */
#define PORT2_PCNTR1_PODR07_Msk           (0x800000UL)              /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR06_Pos           (22UL)                    /*!< PODR06 (Bit 22)                                       */
#define PORT2_PCNTR1_PODR06_Msk           (0x400000UL)              /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR05_Pos           (21UL)                    /*!< PODR05 (Bit 21)                                       */
#define PORT2_PCNTR1_PODR05_Msk           (0x200000UL)              /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR04_Pos           (20UL)                    /*!< PODR04 (Bit 20)                                       */
#define PORT2_PCNTR1_PODR04_Msk           (0x100000UL)              /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR03_Pos           (19UL)                    /*!< PODR03 (Bit 19)                                       */
#define PORT2_PCNTR1_PODR03_Msk           (0x80000UL)               /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR02_Pos           (18UL)                    /*!< PODR02 (Bit 18)                                       */
#define PORT2_PCNTR1_PODR02_Msk           (0x40000UL)               /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR01_Pos           (17UL)                    /*!< PODR01 (Bit 17)                                       */
#define PORT2_PCNTR1_PODR01_Msk           (0x20000UL)               /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR00_Pos           (16UL)                    /*!< PODR00 (Bit 16)                                       */
#define PORT2_PCNTR1_PODR00_Msk           (0x10000UL)               /*!< PODR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PDR15_Pos            (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT2_PCNTR1_PDR15_Msk            (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR14_Pos            (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT2_PCNTR1_PDR14_Msk            (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR13_Pos            (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT2_PCNTR1_PDR13_Msk            (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR12_Pos            (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT2_PCNTR1_PDR12_Msk            (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR11_Pos            (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT2_PCNTR1_PDR11_Msk            (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR10_Pos            (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT2_PCNTR1_PDR10_Msk            (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR09_Pos            (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT2_PCNTR1_PDR09_Msk            (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR08_Pos            (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT2_PCNTR1_PDR08_Msk            (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR07_Pos            (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT2_PCNTR1_PDR07_Msk            (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR06_Pos            (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT2_PCNTR1_PDR06_Msk            (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR05_Pos            (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT2_PCNTR1_PDR05_Msk            (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR04_Pos            (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT2_PCNTR1_PDR04_Msk            (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR03_Pos            (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT2_PCNTR1_PDR03_Msk            (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR02_Pos            (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT2_PCNTR1_PDR02_Msk            (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR01_Pos            (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT2_PCNTR1_PDR01_Msk            (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR00_Pos            (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT2_PCNTR1_PDR00_Msk            (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
/* =========================================================  PODR  ========================================================== */
#define PORT2_PODR_PODR15_Pos             (15UL)                    /*!< PODR15 (Bit 15)                                       */
#define PORT2_PODR_PODR15_Msk             (0x8000UL)                /*!< PODR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR14_Pos             (14UL)                    /*!< PODR14 (Bit 14)                                       */
#define PORT2_PODR_PODR14_Msk             (0x4000UL)                /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR13_Pos             (13UL)                    /*!< PODR13 (Bit 13)                                       */
#define PORT2_PODR_PODR13_Msk             (0x2000UL)                /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR12_Pos             (12UL)                    /*!< PODR12 (Bit 12)                                       */
#define PORT2_PODR_PODR12_Msk             (0x1000UL)                /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR11_Pos             (11UL)                    /*!< PODR11 (Bit 11)                                       */
#define PORT2_PODR_PODR11_Msk             (0x800UL)                 /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR10_Pos             (10UL)                    /*!< PODR10 (Bit 10)                                       */
#define PORT2_PODR_PODR10_Msk             (0x400UL)                 /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR09_Pos             (9UL)                     /*!< PODR09 (Bit 9)                                        */
#define PORT2_PODR_PODR09_Msk             (0x200UL)                 /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR08_Pos             (8UL)                     /*!< PODR08 (Bit 8)                                        */
#define PORT2_PODR_PODR08_Msk             (0x100UL)                 /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR07_Pos             (7UL)                     /*!< PODR07 (Bit 7)                                        */
#define PORT2_PODR_PODR07_Msk             (0x80UL)                  /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR06_Pos             (6UL)                     /*!< PODR06 (Bit 6)                                        */
#define PORT2_PODR_PODR06_Msk             (0x40UL)                  /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR05_Pos             (5UL)                     /*!< PODR05 (Bit 5)                                        */
#define PORT2_PODR_PODR05_Msk             (0x20UL)                  /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR04_Pos             (4UL)                     /*!< PODR04 (Bit 4)                                        */
#define PORT2_PODR_PODR04_Msk             (0x10UL)                  /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR03_Pos             (3UL)                     /*!< PODR03 (Bit 3)                                        */
#define PORT2_PODR_PODR03_Msk             (0x8UL)                   /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR02_Pos             (2UL)                     /*!< PODR02 (Bit 2)                                        */
#define PORT2_PODR_PODR02_Msk             (0x4UL)                   /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR01_Pos             (1UL)                     /*!< PODR01 (Bit 1)                                        */
#define PORT2_PODR_PODR01_Msk             (0x2UL)                   /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR00_Pos             (0UL)                     /*!< PODR00 (Bit 0)                                        */
#define PORT2_PODR_PODR00_Msk             (0x1UL)                   /*!< PODR00 (Bitfield-Mask: 0x01)                          */
/* ==========================================================  PDR  ========================================================== */
#define PORT2_PDR_PDR15_Pos               (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT2_PDR_PDR15_Msk               (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR14_Pos               (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT2_PDR_PDR14_Msk               (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR13_Pos               (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT2_PDR_PDR13_Msk               (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR12_Pos               (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT2_PDR_PDR12_Msk               (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR11_Pos               (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT2_PDR_PDR11_Msk               (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR10_Pos               (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT2_PDR_PDR10_Msk               (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR09_Pos               (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT2_PDR_PDR09_Msk               (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR08_Pos               (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT2_PDR_PDR08_Msk               (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR07_Pos               (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT2_PDR_PDR07_Msk               (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR06_Pos               (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT2_PDR_PDR06_Msk               (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR05_Pos               (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT2_PDR_PDR05_Msk               (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR04_Pos               (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT2_PDR_PDR04_Msk               (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR03_Pos               (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT2_PDR_PDR03_Msk               (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR02_Pos               (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT2_PDR_PDR02_Msk               (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR01_Pos               (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT2_PDR_PDR01_Msk               (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR00_Pos               (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT2_PDR_PDR00_Msk               (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
/* ========================================================  PCNTR2  ========================================================= */
#define PORT2_PCNTR2_EIDR15_Pos           (31UL)                    /*!< EIDR15 (Bit 31)                                       */
#define PORT2_PCNTR2_EIDR15_Msk           (0x80000000UL)            /*!< EIDR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR14_Pos           (30UL)                    /*!< EIDR14 (Bit 30)                                       */
#define PORT2_PCNTR2_EIDR14_Msk           (0x40000000UL)            /*!< EIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR13_Pos           (29UL)                    /*!< EIDR13 (Bit 29)                                       */
#define PORT2_PCNTR2_EIDR13_Msk           (0x20000000UL)            /*!< EIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR12_Pos           (28UL)                    /*!< EIDR12 (Bit 28)                                       */
#define PORT2_PCNTR2_EIDR12_Msk           (0x10000000UL)            /*!< EIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR11_Pos           (27UL)                    /*!< EIDR11 (Bit 27)                                       */
#define PORT2_PCNTR2_EIDR11_Msk           (0x8000000UL)             /*!< EIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR10_Pos           (26UL)                    /*!< EIDR10 (Bit 26)                                       */
#define PORT2_PCNTR2_EIDR10_Msk           (0x4000000UL)             /*!< EIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR09_Pos           (25UL)                    /*!< EIDR09 (Bit 25)                                       */
#define PORT2_PCNTR2_EIDR09_Msk           (0x2000000UL)             /*!< EIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR08_Pos           (24UL)                    /*!< EIDR08 (Bit 24)                                       */
#define PORT2_PCNTR2_EIDR08_Msk           (0x1000000UL)             /*!< EIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR07_Pos           (23UL)                    /*!< EIDR07 (Bit 23)                                       */
#define PORT2_PCNTR2_EIDR07_Msk           (0x800000UL)              /*!< EIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR06_Pos           (22UL)                    /*!< EIDR06 (Bit 22)                                       */
#define PORT2_PCNTR2_EIDR06_Msk           (0x400000UL)              /*!< EIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR05_Pos           (21UL)                    /*!< EIDR05 (Bit 21)                                       */
#define PORT2_PCNTR2_EIDR05_Msk           (0x200000UL)              /*!< EIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR04_Pos           (20UL)                    /*!< EIDR04 (Bit 20)                                       */
#define PORT2_PCNTR2_EIDR04_Msk           (0x100000UL)              /*!< EIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR03_Pos           (19UL)                    /*!< EIDR03 (Bit 19)                                       */
#define PORT2_PCNTR2_EIDR03_Msk           (0x80000UL)               /*!< EIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR02_Pos           (18UL)                    /*!< EIDR02 (Bit 18)                                       */
#define PORT2_PCNTR2_EIDR02_Msk           (0x40000UL)               /*!< EIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR01_Pos           (17UL)                    /*!< EIDR01 (Bit 17)                                       */
#define PORT2_PCNTR2_EIDR01_Msk           (0x20000UL)               /*!< EIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR00_Pos           (16UL)                    /*!< EIDR00 (Bit 16)                                       */
#define PORT2_PCNTR2_EIDR00_Msk           (0x10000UL)               /*!< EIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR15_Pos           (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT2_PCNTR2_PIDR15_Msk           (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR14_Pos           (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT2_PCNTR2_PIDR14_Msk           (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR13_Pos           (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT2_PCNTR2_PIDR13_Msk           (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR12_Pos           (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT2_PCNTR2_PIDR12_Msk           (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR11_Pos           (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT2_PCNTR2_PIDR11_Msk           (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR10_Pos           (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT2_PCNTR2_PIDR10_Msk           (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR09_Pos           (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT2_PCNTR2_PIDR09_Msk           (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR08_Pos           (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT2_PCNTR2_PIDR08_Msk           (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR07_Pos           (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT2_PCNTR2_PIDR07_Msk           (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR06_Pos           (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT2_PCNTR2_PIDR06_Msk           (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR05_Pos           (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT2_PCNTR2_PIDR05_Msk           (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR04_Pos           (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT2_PCNTR2_PIDR04_Msk           (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR03_Pos           (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT2_PCNTR2_PIDR03_Msk           (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR02_Pos           (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT2_PCNTR2_PIDR02_Msk           (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR01_Pos           (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT2_PCNTR2_PIDR01_Msk           (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR00_Pos           (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT2_PCNTR2_PIDR00_Msk           (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
/* =========================================================  EIDR  ========================================================== */
#define PORT2_EIDR_EIDR15_Pos             (15UL)                    /*!< EIDR15 (Bit 15)                                       */
#define PORT2_EIDR_EIDR15_Msk             (0x8000UL)                /*!< EIDR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR14_Pos             (14UL)                    /*!< EIDR14 (Bit 14)                                       */
#define PORT2_EIDR_EIDR14_Msk             (0x4000UL)                /*!< EIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR13_Pos             (13UL)                    /*!< EIDR13 (Bit 13)                                       */
#define PORT2_EIDR_EIDR13_Msk             (0x2000UL)                /*!< EIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR12_Pos             (12UL)                    /*!< EIDR12 (Bit 12)                                       */
#define PORT2_EIDR_EIDR12_Msk             (0x1000UL)                /*!< EIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR11_Pos             (11UL)                    /*!< EIDR11 (Bit 11)                                       */
#define PORT2_EIDR_EIDR11_Msk             (0x800UL)                 /*!< EIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR10_Pos             (10UL)                    /*!< EIDR10 (Bit 10)                                       */
#define PORT2_EIDR_EIDR10_Msk             (0x400UL)                 /*!< EIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR09_Pos             (9UL)                     /*!< EIDR09 (Bit 9)                                        */
#define PORT2_EIDR_EIDR09_Msk             (0x200UL)                 /*!< EIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR08_Pos             (8UL)                     /*!< EIDR08 (Bit 8)                                        */
#define PORT2_EIDR_EIDR08_Msk             (0x100UL)                 /*!< EIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR07_Pos             (7UL)                     /*!< EIDR07 (Bit 7)                                        */
#define PORT2_EIDR_EIDR07_Msk             (0x80UL)                  /*!< EIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR06_Pos             (6UL)                     /*!< EIDR06 (Bit 6)                                        */
#define PORT2_EIDR_EIDR06_Msk             (0x40UL)                  /*!< EIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR05_Pos             (5UL)                     /*!< EIDR05 (Bit 5)                                        */
#define PORT2_EIDR_EIDR05_Msk             (0x20UL)                  /*!< EIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR04_Pos             (4UL)                     /*!< EIDR04 (Bit 4)                                        */
#define PORT2_EIDR_EIDR04_Msk             (0x10UL)                  /*!< EIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR03_Pos             (3UL)                     /*!< EIDR03 (Bit 3)                                        */
#define PORT2_EIDR_EIDR03_Msk             (0x8UL)                   /*!< EIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR02_Pos             (2UL)                     /*!< EIDR02 (Bit 2)                                        */
#define PORT2_EIDR_EIDR02_Msk             (0x4UL)                   /*!< EIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR01_Pos             (1UL)                     /*!< EIDR01 (Bit 1)                                        */
#define PORT2_EIDR_EIDR01_Msk             (0x2UL)                   /*!< EIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR00_Pos             (0UL)                     /*!< EIDR00 (Bit 0)                                        */
#define PORT2_EIDR_EIDR00_Msk             (0x1UL)                   /*!< EIDR00 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PIDR  ========================================================== */
#define PORT2_PIDR_PIDR15_Pos             (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT2_PIDR_PIDR15_Msk             (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR14_Pos             (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT2_PIDR_PIDR14_Msk             (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR13_Pos             (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT2_PIDR_PIDR13_Msk             (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR12_Pos             (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT2_PIDR_PIDR12_Msk             (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR11_Pos             (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT2_PIDR_PIDR11_Msk             (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR10_Pos             (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT2_PIDR_PIDR10_Msk             (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR09_Pos             (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT2_PIDR_PIDR09_Msk             (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR08_Pos             (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT2_PIDR_PIDR08_Msk             (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR07_Pos             (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT2_PIDR_PIDR07_Msk             (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR06_Pos             (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT2_PIDR_PIDR06_Msk             (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR05_Pos             (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT2_PIDR_PIDR05_Msk             (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR04_Pos             (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT2_PIDR_PIDR04_Msk             (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR03_Pos             (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT2_PIDR_PIDR03_Msk             (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR02_Pos             (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT2_PIDR_PIDR02_Msk             (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR01_Pos             (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT2_PIDR_PIDR01_Msk             (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR00_Pos             (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT2_PIDR_PIDR00_Msk             (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
/* ========================================================  PCNTR3  ========================================================= */
#define PORT2_PCNTR3_PORR15_Pos           (31UL)                    /*!< PORR15 (Bit 31)                                       */
#define PORT2_PCNTR3_PORR15_Msk           (0x80000000UL)            /*!< PORR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR14_Pos           (30UL)                    /*!< PORR14 (Bit 30)                                       */
#define PORT2_PCNTR3_PORR14_Msk           (0x40000000UL)            /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR13_Pos           (29UL)                    /*!< PORR13 (Bit 29)                                       */
#define PORT2_PCNTR3_PORR13_Msk           (0x20000000UL)            /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR12_Pos           (28UL)                    /*!< PORR12 (Bit 28)                                       */
#define PORT2_PCNTR3_PORR12_Msk           (0x10000000UL)            /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR11_Pos           (27UL)                    /*!< PORR11 (Bit 27)                                       */
#define PORT2_PCNTR3_PORR11_Msk           (0x8000000UL)             /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR10_Pos           (26UL)                    /*!< PORR10 (Bit 26)                                       */
#define PORT2_PCNTR3_PORR10_Msk           (0x4000000UL)             /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR09_Pos           (25UL)                    /*!< PORR09 (Bit 25)                                       */
#define PORT2_PCNTR3_PORR09_Msk           (0x2000000UL)             /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR08_Pos           (24UL)                    /*!< PORR08 (Bit 24)                                       */
#define PORT2_PCNTR3_PORR08_Msk           (0x1000000UL)             /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR07_Pos           (23UL)                    /*!< PORR07 (Bit 23)                                       */
#define PORT2_PCNTR3_PORR07_Msk           (0x800000UL)              /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR06_Pos           (22UL)                    /*!< PORR06 (Bit 22)                                       */
#define PORT2_PCNTR3_PORR06_Msk           (0x400000UL)              /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR05_Pos           (21UL)                    /*!< PORR05 (Bit 21)                                       */
#define PORT2_PCNTR3_PORR05_Msk           (0x200000UL)              /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR04_Pos           (20UL)                    /*!< PORR04 (Bit 20)                                       */
#define PORT2_PCNTR3_PORR04_Msk           (0x100000UL)              /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR03_Pos           (19UL)                    /*!< PORR03 (Bit 19)                                       */
#define PORT2_PCNTR3_PORR03_Msk           (0x80000UL)               /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR02_Pos           (18UL)                    /*!< PORR02 (Bit 18)                                       */
#define PORT2_PCNTR3_PORR02_Msk           (0x40000UL)               /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR01_Pos           (17UL)                    /*!< PORR01 (Bit 17)                                       */
#define PORT2_PCNTR3_PORR01_Msk           (0x20000UL)               /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR00_Pos           (16UL)                    /*!< PORR00 (Bit 16)                                       */
#define PORT2_PCNTR3_PORR00_Msk           (0x10000UL)               /*!< PORR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR15_Pos           (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT2_PCNTR3_POSR15_Msk           (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR14_Pos           (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT2_PCNTR3_POSR14_Msk           (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR13_Pos           (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT2_PCNTR3_POSR13_Msk           (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR12_Pos           (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT2_PCNTR3_POSR12_Msk           (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR11_Pos           (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT2_PCNTR3_POSR11_Msk           (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR10_Pos           (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT2_PCNTR3_POSR10_Msk           (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR09_Pos           (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT2_PCNTR3_POSR09_Msk           (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR08_Pos           (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT2_PCNTR3_POSR08_Msk           (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR07_Pos           (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT2_PCNTR3_POSR07_Msk           (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR06_Pos           (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT2_PCNTR3_POSR06_Msk           (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR05_Pos           (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT2_PCNTR3_POSR05_Msk           (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR04_Pos           (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT2_PCNTR3_POSR04_Msk           (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR03_Pos           (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT2_PCNTR3_POSR03_Msk           (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR02_Pos           (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT2_PCNTR3_POSR02_Msk           (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR01_Pos           (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT2_PCNTR3_POSR01_Msk           (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR00_Pos           (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT2_PCNTR3_POSR00_Msk           (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PORR  ========================================================== */
#define PORT2_PORR_PORR15_Pos             (15UL)                    /*!< PORR15 (Bit 15)                                       */
#define PORT2_PORR_PORR15_Msk             (0x8000UL)                /*!< PORR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR14_Pos             (14UL)                    /*!< PORR14 (Bit 14)                                       */
#define PORT2_PORR_PORR14_Msk             (0x4000UL)                /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR13_Pos             (13UL)                    /*!< PORR13 (Bit 13)                                       */
#define PORT2_PORR_PORR13_Msk             (0x2000UL)                /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR12_Pos             (12UL)                    /*!< PORR12 (Bit 12)                                       */
#define PORT2_PORR_PORR12_Msk             (0x1000UL)                /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR11_Pos             (11UL)                    /*!< PORR11 (Bit 11)                                       */
#define PORT2_PORR_PORR11_Msk             (0x800UL)                 /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR10_Pos             (10UL)                    /*!< PORR10 (Bit 10)                                       */
#define PORT2_PORR_PORR10_Msk             (0x400UL)                 /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR09_Pos             (9UL)                     /*!< PORR09 (Bit 9)                                        */
#define PORT2_PORR_PORR09_Msk             (0x200UL)                 /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR08_Pos             (8UL)                     /*!< PORR08 (Bit 8)                                        */
#define PORT2_PORR_PORR08_Msk             (0x100UL)                 /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR07_Pos             (7UL)                     /*!< PORR07 (Bit 7)                                        */
#define PORT2_PORR_PORR07_Msk             (0x80UL)                  /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR06_Pos             (6UL)                     /*!< PORR06 (Bit 6)                                        */
#define PORT2_PORR_PORR06_Msk             (0x40UL)                  /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR05_Pos             (5UL)                     /*!< PORR05 (Bit 5)                                        */
#define PORT2_PORR_PORR05_Msk             (0x20UL)                  /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR04_Pos             (4UL)                     /*!< PORR04 (Bit 4)                                        */
#define PORT2_PORR_PORR04_Msk             (0x10UL)                  /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR03_Pos             (3UL)                     /*!< PORR03 (Bit 3)                                        */
#define PORT2_PORR_PORR03_Msk             (0x8UL)                   /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR02_Pos             (2UL)                     /*!< PORR02 (Bit 2)                                        */
#define PORT2_PORR_PORR02_Msk             (0x4UL)                   /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR01_Pos             (1UL)                     /*!< PORR01 (Bit 1)                                        */
#define PORT2_PORR_PORR01_Msk             (0x2UL)                   /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR00_Pos             (0UL)                     /*!< PORR00 (Bit 0)                                        */
#define PORT2_PORR_PORR00_Msk             (0x1UL)                   /*!< PORR00 (Bitfield-Mask: 0x01)                          */
/* =========================================================  POSR  ========================================================== */
#define PORT2_POSR_POSR15_Pos             (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT2_POSR_POSR15_Msk             (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR14_Pos             (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT2_POSR_POSR14_Msk             (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR13_Pos             (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT2_POSR_POSR13_Msk             (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR12_Pos             (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT2_POSR_POSR12_Msk             (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR11_Pos             (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT2_POSR_POSR11_Msk             (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR10_Pos             (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT2_POSR_POSR10_Msk             (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR09_Pos             (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT2_POSR_POSR09_Msk             (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR08_Pos             (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT2_POSR_POSR08_Msk             (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR07_Pos             (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT2_POSR_POSR07_Msk             (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR06_Pos             (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT2_POSR_POSR06_Msk             (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR05_Pos             (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT2_POSR_POSR05_Msk             (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR04_Pos             (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT2_POSR_POSR04_Msk             (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR03_Pos             (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT2_POSR_POSR03_Msk             (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR02_Pos             (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT2_POSR_POSR02_Msk             (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR01_Pos             (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT2_POSR_POSR01_Msk             (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR00_Pos             (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT2_POSR_POSR00_Msk             (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */
/* ========================================================  PCNTR4  ========================================================= */
#define PORT2_PCNTR4_EORR15_Pos           (31UL)                    /*!< EORR15 (Bit 31)                                       */
#define PORT2_PCNTR4_EORR15_Msk           (0x80000000UL)            /*!< EORR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR14_Pos           (30UL)                    /*!< EORR14 (Bit 30)                                       */
#define PORT2_PCNTR4_EORR14_Msk           (0x40000000UL)            /*!< EORR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR13_Pos           (29UL)                    /*!< EORR13 (Bit 29)                                       */
#define PORT2_PCNTR4_EORR13_Msk           (0x20000000UL)            /*!< EORR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR12_Pos           (28UL)                    /*!< EORR12 (Bit 28)                                       */
#define PORT2_PCNTR4_EORR12_Msk           (0x10000000UL)            /*!< EORR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR11_Pos           (27UL)                    /*!< EORR11 (Bit 27)                                       */
#define PORT2_PCNTR4_EORR11_Msk           (0x8000000UL)             /*!< EORR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR10_Pos           (26UL)                    /*!< EORR10 (Bit 26)                                       */
#define PORT2_PCNTR4_EORR10_Msk           (0x4000000UL)             /*!< EORR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR09_Pos           (25UL)                    /*!< EORR09 (Bit 25)                                       */
#define PORT2_PCNTR4_EORR09_Msk           (0x2000000UL)             /*!< EORR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR08_Pos           (24UL)                    /*!< EORR08 (Bit 24)                                       */
#define PORT2_PCNTR4_EORR08_Msk           (0x1000000UL)             /*!< EORR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR07_Pos           (23UL)                    /*!< EORR07 (Bit 23)                                       */
#define PORT2_PCNTR4_EORR07_Msk           (0x800000UL)              /*!< EORR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR06_Pos           (22UL)                    /*!< EORR06 (Bit 22)                                       */
#define PORT2_PCNTR4_EORR06_Msk           (0x400000UL)              /*!< EORR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR05_Pos           (21UL)                    /*!< EORR05 (Bit 21)                                       */
#define PORT2_PCNTR4_EORR05_Msk           (0x200000UL)              /*!< EORR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR04_Pos           (20UL)                    /*!< EORR04 (Bit 20)                                       */
#define PORT2_PCNTR4_EORR04_Msk           (0x100000UL)              /*!< EORR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR03_Pos           (19UL)                    /*!< EORR03 (Bit 19)                                       */
#define PORT2_PCNTR4_EORR03_Msk           (0x80000UL)               /*!< EORR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR02_Pos           (18UL)                    /*!< EORR02 (Bit 18)                                       */
#define PORT2_PCNTR4_EORR02_Msk           (0x40000UL)               /*!< EORR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR01_Pos           (17UL)                    /*!< EORR01 (Bit 17)                                       */
#define PORT2_PCNTR4_EORR01_Msk           (0x20000UL)               /*!< EORR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR00_Pos           (16UL)                    /*!< EORR00 (Bit 16)                                       */
#define PORT2_PCNTR4_EORR00_Msk           (0x10000UL)               /*!< EORR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR15_Pos           (15UL)                    /*!< EOSR15 (Bit 15)                                       */
#define PORT2_PCNTR4_EOSR15_Msk           (0x8000UL)                /*!< EOSR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR14_Pos           (14UL)                    /*!< EOSR14 (Bit 14)                                       */
#define PORT2_PCNTR4_EOSR14_Msk           (0x4000UL)                /*!< EOSR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR13_Pos           (13UL)                    /*!< EOSR13 (Bit 13)                                       */
#define PORT2_PCNTR4_EOSR13_Msk           (0x2000UL)                /*!< EOSR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR12_Pos           (12UL)                    /*!< EOSR12 (Bit 12)                                       */
#define PORT2_PCNTR4_EOSR12_Msk           (0x1000UL)                /*!< EOSR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR11_Pos           (11UL)                    /*!< EOSR11 (Bit 11)                                       */
#define PORT2_PCNTR4_EOSR11_Msk           (0x800UL)                 /*!< EOSR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR10_Pos           (10UL)                    /*!< EOSR10 (Bit 10)                                       */
#define PORT2_PCNTR4_EOSR10_Msk           (0x400UL)                 /*!< EOSR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR09_Pos           (9UL)                     /*!< EOSR09 (Bit 9)                                        */
#define PORT2_PCNTR4_EOSR09_Msk           (0x200UL)                 /*!< EOSR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR08_Pos           (8UL)                     /*!< EOSR08 (Bit 8)                                        */
#define PORT2_PCNTR4_EOSR08_Msk           (0x100UL)                 /*!< EOSR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR07_Pos           (7UL)                     /*!< EOSR07 (Bit 7)                                        */
#define PORT2_PCNTR4_EOSR07_Msk           (0x80UL)                  /*!< EOSR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR06_Pos           (6UL)                     /*!< EOSR06 (Bit 6)                                        */
#define PORT2_PCNTR4_EOSR06_Msk           (0x40UL)                  /*!< EOSR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR05_Pos           (5UL)                     /*!< EOSR05 (Bit 5)                                        */
#define PORT2_PCNTR4_EOSR05_Msk           (0x20UL)                  /*!< EOSR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR04_Pos           (4UL)                     /*!< EOSR04 (Bit 4)                                        */
#define PORT2_PCNTR4_EOSR04_Msk           (0x10UL)                  /*!< EOSR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR03_Pos           (3UL)                     /*!< EOSR03 (Bit 3)                                        */
#define PORT2_PCNTR4_EOSR03_Msk           (0x8UL)                   /*!< EOSR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR02_Pos           (2UL)                     /*!< EOSR02 (Bit 2)                                        */
#define PORT2_PCNTR4_EOSR02_Msk           (0x4UL)                   /*!< EOSR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR01_Pos           (1UL)                     /*!< EOSR01 (Bit 1)                                        */
#define PORT2_PCNTR4_EOSR01_Msk           (0x2UL)                   /*!< EOSR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR00_Pos           (0UL)                     /*!< EOSR00 (Bit 0)                                        */
#define PORT2_PCNTR4_EOSR00_Msk           (0x1UL)                   /*!< EOSR00 (Bitfield-Mask: 0x01)                          */
/* =========================================================  EORR  ========================================================== */
#define PORT2_EORR_EORR15_Pos             (15UL)                    /*!< EORR15 (Bit 15)                                       */
#define PORT2_EORR_EORR15_Msk             (0x8000UL)                /*!< EORR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR14_Pos             (14UL)                    /*!< EORR14 (Bit 14)                                       */
#define PORT2_EORR_EORR14_Msk             (0x4000UL)                /*!< EORR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR13_Pos             (13UL)                    /*!< EORR13 (Bit 13)                                       */
#define PORT2_EORR_EORR13_Msk             (0x2000UL)                /*!< EORR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR12_Pos             (12UL)                    /*!< EORR12 (Bit 12)                                       */
#define PORT2_EORR_EORR12_Msk             (0x1000UL)                /*!< EORR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR11_Pos             (11UL)                    /*!< EORR11 (Bit 11)                                       */
#define PORT2_EORR_EORR11_Msk             (0x800UL)                 /*!< EORR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR10_Pos             (10UL)                    /*!< EORR10 (Bit 10)                                       */
#define PORT2_EORR_EORR10_Msk             (0x400UL)                 /*!< EORR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR09_Pos             (9UL)                     /*!< EORR09 (Bit 9)                                        */
#define PORT2_EORR_EORR09_Msk             (0x200UL)                 /*!< EORR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR08_Pos             (8UL)                     /*!< EORR08 (Bit 8)                                        */
#define PORT2_EORR_EORR08_Msk             (0x100UL)                 /*!< EORR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR07_Pos             (7UL)                     /*!< EORR07 (Bit 7)                                        */
#define PORT2_EORR_EORR07_Msk             (0x80UL)                  /*!< EORR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR06_Pos             (6UL)                     /*!< EORR06 (Bit 6)                                        */
#define PORT2_EORR_EORR06_Msk             (0x40UL)                  /*!< EORR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR05_Pos             (5UL)                     /*!< EORR05 (Bit 5)                                        */
#define PORT2_EORR_EORR05_Msk             (0x20UL)                  /*!< EORR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR04_Pos             (4UL)                     /*!< EORR04 (Bit 4)                                        */
#define PORT2_EORR_EORR04_Msk             (0x10UL)                  /*!< EORR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR03_Pos             (3UL)                     /*!< EORR03 (Bit 3)                                        */
#define PORT2_EORR_EORR03_Msk             (0x8UL)                   /*!< EORR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR02_Pos             (2UL)                     /*!< EORR02 (Bit 2)                                        */
#define PORT2_EORR_EORR02_Msk             (0x4UL)                   /*!< EORR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR01_Pos             (1UL)                     /*!< EORR01 (Bit 1)                                        */
#define PORT2_EORR_EORR01_Msk             (0x2UL)                   /*!< EORR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR00_Pos             (0UL)                     /*!< EORR00 (Bit 0)                                        */
#define PORT2_EORR_EORR00_Msk             (0x1UL)                   /*!< EORR00 (Bitfield-Mask: 0x01)                          */
/* =========================================================  EOSR  ========================================================== */
#define PORT2_EOSR_EOSR15_Pos             (15UL)                    /*!< EOSR15 (Bit 15)                                       */
#define PORT2_EOSR_EOSR15_Msk             (0x8000UL)                /*!< EOSR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR14_Pos             (14UL)                    /*!< EOSR14 (Bit 14)                                       */
#define PORT2_EOSR_EOSR14_Msk             (0x4000UL)                /*!< EOSR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR13_Pos             (13UL)                    /*!< EOSR13 (Bit 13)                                       */
#define PORT2_EOSR_EOSR13_Msk             (0x2000UL)                /*!< EOSR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR12_Pos             (12UL)                    /*!< EOSR12 (Bit 12)                                       */
#define PORT2_EOSR_EOSR12_Msk             (0x1000UL)                /*!< EOSR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR11_Pos             (11UL)                    /*!< EOSR11 (Bit 11)                                       */
#define PORT2_EOSR_EOSR11_Msk             (0x800UL)                 /*!< EOSR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR10_Pos             (10UL)                    /*!< EOSR10 (Bit 10)                                       */
#define PORT2_EOSR_EOSR10_Msk             (0x400UL)                 /*!< EOSR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR09_Pos             (9UL)                     /*!< EOSR09 (Bit 9)                                        */
#define PORT2_EOSR_EOSR09_Msk             (0x200UL)                 /*!< EOSR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR08_Pos             (8UL)                     /*!< EOSR08 (Bit 8)                                        */
#define PORT2_EOSR_EOSR08_Msk             (0x100UL)                 /*!< EOSR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR07_Pos             (7UL)                     /*!< EOSR07 (Bit 7)                                        */
#define PORT2_EOSR_EOSR07_Msk             (0x80UL)                  /*!< EOSR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR06_Pos             (6UL)                     /*!< EOSR06 (Bit 6)                                        */
#define PORT2_EOSR_EOSR06_Msk             (0x40UL)                  /*!< EOSR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR05_Pos             (5UL)                     /*!< EOSR05 (Bit 5)                                        */
#define PORT2_EOSR_EOSR05_Msk             (0x20UL)                  /*!< EOSR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR04_Pos             (4UL)                     /*!< EOSR04 (Bit 4)                                        */
#define PORT2_EOSR_EOSR04_Msk             (0x10UL)                  /*!< EOSR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR03_Pos             (3UL)                     /*!< EOSR03 (Bit 3)                                        */
#define PORT2_EOSR_EOSR03_Msk             (0x8UL)                   /*!< EOSR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR02_Pos             (2UL)                     /*!< EOSR02 (Bit 2)                                        */
#define PORT2_EOSR_EOSR02_Msk             (0x4UL)                   /*!< EOSR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR01_Pos             (1UL)                     /*!< EOSR01 (Bit 1)                                        */
#define PORT2_EOSR_EOSR01_Msk             (0x2UL)                   /*!< EOSR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR00_Pos             (0UL)                     /*!< EOSR00 (Bit 0)                                        */
#define PORT2_EOSR_EOSR00_Msk             (0x1UL)                   /*!< EOSR00 (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           QSPI                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  SFMSMD  ========================================================= */
#define QSPI_SFMSMD_SFMCCE_Pos            (15UL)                    /*!< SFMCCE (Bit 15)                                       */
#define QSPI_SFMSMD_SFMCCE_Msk            (0x8000UL)                /*!< SFMCCE (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSMD_SFMOEX_Pos            (9UL)                     /*!< SFMOEX (Bit 9)                                        */
#define QSPI_SFMSMD_SFMOEX_Msk            (0x200UL)                 /*!< SFMOEX (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSMD_SFMMD3_Pos            (8UL)                     /*!< SFMMD3 (Bit 8)                                        */
#define QSPI_SFMSMD_SFMMD3_Msk            (0x100UL)                 /*!< SFMMD3 (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSMD_SFMPAE_Pos            (7UL)                     /*!< SFMPAE (Bit 7)                                        */
#define QSPI_SFMSMD_SFMPAE_Msk            (0x80UL)                  /*!< SFMPAE (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSMD_SFMPFE_Pos            (6UL)                     /*!< SFMPFE (Bit 6)                                        */
#define QSPI_SFMSMD_SFMPFE_Msk            (0x40UL)                  /*!< SFMPFE (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSMD_SFMSE_Pos             (4UL)                     /*!< SFMSE (Bit 4)                                         */
#define QSPI_SFMSMD_SFMSE_Msk             (0x30UL)                  /*!< SFMSE (Bitfield-Mask: 0x03)                           */
#define QSPI_SFMSMD_SFMRM_Pos             (0UL)                     /*!< SFMRM (Bit 0)                                         */
#define QSPI_SFMSMD_SFMRM_Msk             (0x7UL)                   /*!< SFMRM (Bitfield-Mask: 0x07)                           */
/* ========================================================  SFMSSC  ========================================================= */
#define QSPI_SFMSSC_SFMSLD_Pos            (5UL)                     /*!< SFMSLD (Bit 5)                                        */
#define QSPI_SFMSSC_SFMSLD_Msk            (0x20UL)                  /*!< SFMSLD (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSSC_SFMSHD_Pos            (4UL)                     /*!< SFMSHD (Bit 4)                                        */
#define QSPI_SFMSSC_SFMSHD_Msk            (0x10UL)                  /*!< SFMSHD (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSSC_SFMSW_Pos             (0UL)                     /*!< SFMSW (Bit 0)                                         */
#define QSPI_SFMSSC_SFMSW_Msk             (0xfUL)                   /*!< SFMSW (Bitfield-Mask: 0x0f)                           */
/* ========================================================  SFMSKC  ========================================================= */
#define QSPI_SFMSKC_SFMDTY_Pos            (5UL)                     /*!< SFMDTY (Bit 5)                                        */
#define QSPI_SFMSKC_SFMDTY_Msk            (0x20UL)                  /*!< SFMDTY (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSKC_SFMDV_Pos             (0UL)                     /*!< SFMDV (Bit 0)                                         */
#define QSPI_SFMSKC_SFMDV_Msk             (0x1fUL)                  /*!< SFMDV (Bitfield-Mask: 0x1f)                           */
/* ========================================================  SFMSST  ========================================================= */
#define QSPI_SFMSST_PFOFF_Pos             (7UL)                     /*!< PFOFF (Bit 7)                                         */
#define QSPI_SFMSST_PFOFF_Msk             (0x80UL)                  /*!< PFOFF (Bitfield-Mask: 0x01)                           */
#define QSPI_SFMSST_PFFUL_Pos             (6UL)                     /*!< PFFUL (Bit 6)                                         */
#define QSPI_SFMSST_PFFUL_Msk             (0x40UL)                  /*!< PFFUL (Bitfield-Mask: 0x01)                           */
#define QSPI_SFMSST_PFCNT_Pos             (0UL)                     /*!< PFCNT (Bit 0)                                         */
#define QSPI_SFMSST_PFCNT_Msk             (0x1fUL)                  /*!< PFCNT (Bitfield-Mask: 0x1f)                           */
/* ========================================================  SFMCOM  ========================================================= */
#define QSPI_SFMCOM_SFMD_Pos              (0UL)                     /*!< SFMD (Bit 0)                                          */
#define QSPI_SFMCOM_SFMD_Msk              (0xffUL)                  /*!< SFMD (Bitfield-Mask: 0xff)                            */
/* ========================================================  SFMCMD  ========================================================= */
#define QSPI_SFMCMD_DCOM_Pos              (0UL)                     /*!< DCOM (Bit 0)                                          */
#define QSPI_SFMCMD_DCOM_Msk              (0x1UL)                   /*!< DCOM (Bitfield-Mask: 0x01)                            */
/* ========================================================  SFMCST  ========================================================= */
#define QSPI_SFMCST_EROMR_Pos             (7UL)                     /*!< EROMR (Bit 7)                                         */
#define QSPI_SFMCST_EROMR_Msk             (0x80UL)                  /*!< EROMR (Bitfield-Mask: 0x01)                           */
#define QSPI_SFMCST_COMBSY_Pos            (0UL)                     /*!< COMBSY (Bit 0)                                        */
#define QSPI_SFMCST_COMBSY_Msk            (0x1UL)                   /*!< COMBSY (Bitfield-Mask: 0x01)                          */
/* ========================================================  SFMSIC  ========================================================= */
#define QSPI_SFMSIC_SFMCIC_Pos            (0UL)                     /*!< SFMCIC (Bit 0)                                        */
#define QSPI_SFMSIC_SFMCIC_Msk            (0xffUL)                  /*!< SFMCIC (Bitfield-Mask: 0xff)                          */
/* ========================================================  SFMSAC  ========================================================= */
#define QSPI_SFMSAC_SFM4BC_Pos            (4UL)                     /*!< SFM4BC (Bit 4)                                        */
#define QSPI_SFMSAC_SFM4BC_Msk            (0x10UL)                  /*!< SFM4BC (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSAC_SFMAS_Pos             (0UL)                     /*!< SFMAS (Bit 0)                                         */
#define QSPI_SFMSAC_SFMAS_Msk             (0x3UL)                   /*!< SFMAS (Bitfield-Mask: 0x03)                           */
/* ========================================================  SFMSDC  ========================================================= */
#define QSPI_SFMSDC_SFMXD_Pos             (8UL)                     /*!< SFMXD (Bit 8)                                         */
#define QSPI_SFMSDC_SFMXD_Msk             (0xff00UL)                /*!< SFMXD (Bitfield-Mask: 0xff)                           */
#define QSPI_SFMSDC_SFMXEN_Pos            (7UL)                     /*!< SFMXEN (Bit 7)                                        */
#define QSPI_SFMSDC_SFMXEN_Msk            (0x80UL)                  /*!< SFMXEN (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSDC_SFMXST_Pos            (6UL)                     /*!< SFMXST (Bit 6)                                        */
#define QSPI_SFMSDC_SFMXST_Msk            (0x40UL)                  /*!< SFMXST (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSDC_SFMDN_Pos             (0UL)                     /*!< SFMDN (Bit 0)                                         */
#define QSPI_SFMSDC_SFMDN_Msk             (0xfUL)                   /*!< SFMDN (Bitfield-Mask: 0x0f)                           */
/* ========================================================  SFMSPC  ========================================================= */
#define QSPI_SFMSPC_SFMSDE_Pos            (4UL)                     /*!< SFMSDE (Bit 4)                                        */
#define QSPI_SFMSPC_SFMSDE_Msk            (0x10UL)                  /*!< SFMSDE (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSPC_SFMSPI_Pos            (0UL)                     /*!< SFMSPI (Bit 0)                                        */
#define QSPI_SFMSPC_SFMSPI_Msk            (0x3UL)                   /*!< SFMSPI (Bitfield-Mask: 0x03)                          */
/* ========================================================  SFMPMD  ========================================================= */
#define QSPI_SFMPMD_SFMWPL_Pos            (2UL)                     /*!< SFMWPL (Bit 2)                                        */
#define QSPI_SFMPMD_SFMWPL_Msk            (0x4UL)                   /*!< SFMWPL (Bitfield-Mask: 0x01)                          */
/* ========================================================  SFMCNT1  ======================================================== */
#define QSPI_SFMCNT1_QSPI_EXT_Pos         (26UL)                    /*!< QSPI_EXT (Bit 26)                                     */
#define QSPI_SFMCNT1_QSPI_EXT_Msk         (0xfc000000UL)            /*!< QSPI_EXT (Bitfield-Mask: 0x3f)                        */


/* =========================================================================================================================== */
/* ================                                           R12DA                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  DADR0  ========================================================= */
#define R12DA_DADR0_DADR0_Pos             (0UL)                     /*!< DADR0 (Bit 0)                                         */
#define R12DA_DADR0_DADR0_Msk             (0xffffUL)                /*!< DADR0 (Bitfield-Mask: 0xffff)                         */
/* =========================================================  DACR  ========================================================== */
#define R12DA_DACR_DAOE0_Pos              (6UL)                     /*!< DAOE0 (Bit 6)                                         */
#define R12DA_DACR_DAOE0_Msk              (0x40UL)                  /*!< DAOE0 (Bitfield-Mask: 0x01)                           */
/* =========================================================  DADPR  ========================================================= */
#define R12DA_DADPR_DPSEL_Pos             (7UL)                     /*!< DPSEL (Bit 7)                                         */
#define R12DA_DADPR_DPSEL_Msk             (0x80UL)                  /*!< DPSEL (Bitfield-Mask: 0x01)                           */
/* ========================================================  DAAMPCR  ======================================================== */
#define R12DA_DAAMPCR_DAAMP0_Pos          (6UL)                     /*!< DAAMP0 (Bit 6)                                        */
#define R12DA_DAAMPCR_DAAMP0_Msk          (0x40UL)                  /*!< DAAMP0 (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  R64CNT  ========================================================= */
#define RTC_R64CNT_F1HZ_Pos               (6UL)                     /*!< F1HZ (Bit 6)                                          */
#define RTC_R64CNT_F1HZ_Msk               (0x40UL)                  /*!< F1HZ (Bitfield-Mask: 0x01)                            */
#define RTC_R64CNT_F2HZ_Pos               (5UL)                     /*!< F2HZ (Bit 5)                                          */
#define RTC_R64CNT_F2HZ_Msk               (0x20UL)                  /*!< F2HZ (Bitfield-Mask: 0x01)                            */
#define RTC_R64CNT_F4HZ_Pos               (4UL)                     /*!< F4HZ (Bit 4)                                          */
#define RTC_R64CNT_F4HZ_Msk               (0x10UL)                  /*!< F4HZ (Bitfield-Mask: 0x01)                            */
#define RTC_R64CNT_F8HZ_Pos               (3UL)                     /*!< F8HZ (Bit 3)                                          */
#define RTC_R64CNT_F8HZ_Msk               (0x8UL)                   /*!< F8HZ (Bitfield-Mask: 0x01)                            */
#define RTC_R64CNT_F16HZ_Pos              (2UL)                     /*!< F16HZ (Bit 2)                                         */
#define RTC_R64CNT_F16HZ_Msk              (0x4UL)                   /*!< F16HZ (Bitfield-Mask: 0x01)                           */
#define RTC_R64CNT_F32HZ_Pos              (1UL)                     /*!< F32HZ (Bit 1)                                         */
#define RTC_R64CNT_F32HZ_Msk              (0x2UL)                   /*!< F32HZ (Bitfield-Mask: 0x01)                           */
#define RTC_R64CNT_F64HZ_Pos              (0UL)                     /*!< F64HZ (Bit 0)                                         */
#define RTC_R64CNT_F64HZ_Msk              (0x1UL)                   /*!< F64HZ (Bitfield-Mask: 0x01)                           */
/* ========================================================  RSECCNT  ======================================================== */
#define RTC_RSECCNT_SEC10_Pos             (4UL)                     /*!< SEC10 (Bit 4)                                         */
#define RTC_RSECCNT_SEC10_Msk             (0x70UL)                  /*!< SEC10 (Bitfield-Mask: 0x07)                           */
#define RTC_RSECCNT_SEC1_Pos              (0UL)                     /*!< SEC1 (Bit 0)                                          */
#define RTC_RSECCNT_SEC1_Msk              (0xfUL)                   /*!< SEC1 (Bitfield-Mask: 0x0f)                            */
/* =========================================================  BCNT0  ========================================================= */
#define RTC_BCNT0_BCNT0_Pos               (0UL)                     /*!< BCNT0 (Bit 0)                                         */
#define RTC_BCNT0_BCNT0_Msk               (0xffUL)                  /*!< BCNT0 (Bitfield-Mask: 0xff)                           */
/* ========================================================  RMINCNT  ======================================================== */
#define RTC_RMINCNT_MIN10_Pos             (4UL)                     /*!< MIN10 (Bit 4)                                         */
#define RTC_RMINCNT_MIN10_Msk             (0x70UL)                  /*!< MIN10 (Bitfield-Mask: 0x07)                           */
#define RTC_RMINCNT_MIN1_Pos              (0UL)                     /*!< MIN1 (Bit 0)                                          */
#define RTC_RMINCNT_MIN1_Msk              (0xfUL)                   /*!< MIN1 (Bitfield-Mask: 0x0f)                            */
/* =========================================================  BCNT1  ========================================================= */
#define RTC_BCNT1_BCNT1_Pos               (0UL)                     /*!< BCNT1 (Bit 0)                                         */
#define RTC_BCNT1_BCNT1_Msk               (0xffUL)                  /*!< BCNT1 (Bitfield-Mask: 0xff)                           */
/* ========================================================  RHRCNT  ========================================================= */
#define RTC_RHRCNT_PM_Pos                 (6UL)                     /*!< PM (Bit 6)                                            */
#define RTC_RHRCNT_PM_Msk                 (0x40UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define RTC_RHRCNT_HR10_Pos               (4UL)                     /*!< HR10 (Bit 4)                                          */
#define RTC_RHRCNT_HR10_Msk               (0x30UL)                  /*!< HR10 (Bitfield-Mask: 0x03)                            */
#define RTC_RHRCNT_HR1_Pos                (0UL)                     /*!< HR1 (Bit 0)                                           */
#define RTC_RHRCNT_HR1_Msk                (0xfUL)                   /*!< HR1 (Bitfield-Mask: 0x0f)                             */
/* =========================================================  BCNT2  ========================================================= */
#define RTC_BCNT2_BCNT2_Pos               (0UL)                     /*!< BCNT2 (Bit 0)                                         */
#define RTC_BCNT2_BCNT2_Msk               (0xffUL)                  /*!< BCNT2 (Bitfield-Mask: 0xff)                           */
/* ========================================================  RWKCNT  ========================================================= */
#define RTC_RWKCNT_DAYW_Pos               (0UL)                     /*!< DAYW (Bit 0)                                          */
#define RTC_RWKCNT_DAYW_Msk               (0x7UL)                   /*!< DAYW (Bitfield-Mask: 0x07)                            */
/* =========================================================  BCNT3  ========================================================= */
#define RTC_BCNT3_BCNT3_Pos               (0UL)                     /*!< BCNT3 (Bit 0)                                         */
#define RTC_BCNT3_BCNT3_Msk               (0xffUL)                  /*!< BCNT3 (Bitfield-Mask: 0xff)                           */
/* ========================================================  RDAYCNT  ======================================================== */
#define RTC_RDAYCNT_DATE10_Pos            (4UL)                     /*!< DATE10 (Bit 4)                                        */
#define RTC_RDAYCNT_DATE10_Msk            (0x30UL)                  /*!< DATE10 (Bitfield-Mask: 0x03)                          */
#define RTC_RDAYCNT_DATE1_Pos             (0UL)                     /*!< DATE1 (Bit 0)                                         */
#define RTC_RDAYCNT_DATE1_Msk             (0xfUL)                   /*!< DATE1 (Bitfield-Mask: 0x0f)                           */
/* ========================================================  RMONCNT  ======================================================== */
#define RTC_RMONCNT_MON10_Pos             (4UL)                     /*!< MON10 (Bit 4)                                         */
#define RTC_RMONCNT_MON10_Msk             (0x10UL)                  /*!< MON10 (Bitfield-Mask: 0x01)                           */
#define RTC_RMONCNT_MON1_Pos              (0UL)                     /*!< MON1 (Bit 0)                                          */
#define RTC_RMONCNT_MON1_Msk              (0xfUL)                   /*!< MON1 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  RYRCNT  ========================================================= */
#define RTC_RYRCNT_YR10_Pos               (4UL)                     /*!< YR10 (Bit 4)                                          */
#define RTC_RYRCNT_YR10_Msk               (0xf0UL)                  /*!< YR10 (Bitfield-Mask: 0x0f)                            */
#define RTC_RYRCNT_YR1_Pos                (0UL)                     /*!< YR1 (Bit 0)                                           */
#define RTC_RYRCNT_YR1_Msk                (0xfUL)                   /*!< YR1 (Bitfield-Mask: 0x0f)                             */
/* ========================================================  RSECAR  ========================================================= */
#define RTC_RSECAR_ENB_Pos                (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RSECAR_ENB_Msk                (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
#define RTC_RSECAR_SEC10_Pos              (4UL)                     /*!< SEC10 (Bit 4)                                         */
#define RTC_RSECAR_SEC10_Msk              (0x70UL)                  /*!< SEC10 (Bitfield-Mask: 0x07)                           */
#define RTC_RSECAR_SEC1_Pos               (0UL)                     /*!< SEC1 (Bit 0)                                          */
#define RTC_RSECAR_SEC1_Msk               (0xfUL)                   /*!< SEC1 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  BCNT0AR  ======================================================== */
#define RTC_BCNT0AR_BCNT0AR_Pos           (0UL)                     /*!< BCNT0AR (Bit 0)                                       */
#define RTC_BCNT0AR_BCNT0AR_Msk           (0xffUL)                  /*!< BCNT0AR (Bitfield-Mask: 0xff)                         */
/* ========================================================  RMINAR  ========================================================= */
#define RTC_RMINAR_ENB_Pos                (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RMINAR_ENB_Msk                (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
#define RTC_RMINAR_MIN10_Pos              (4UL)                     /*!< MIN10 (Bit 4)                                         */
#define RTC_RMINAR_MIN10_Msk              (0x70UL)                  /*!< MIN10 (Bitfield-Mask: 0x07)                           */
#define RTC_RMINAR_MIN1_Pos               (0UL)                     /*!< MIN1 (Bit 0)                                          */
#define RTC_RMINAR_MIN1_Msk               (0xfUL)                   /*!< MIN1 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  BCNT1AR  ======================================================== */
#define RTC_BCNT1AR_BCNT1AR_Pos           (0UL)                     /*!< BCNT1AR (Bit 0)                                       */
#define RTC_BCNT1AR_BCNT1AR_Msk           (0xffUL)                  /*!< BCNT1AR (Bitfield-Mask: 0xff)                         */
/* =========================================================  RHRAR  ========================================================= */
#define RTC_RHRAR_ENB_Pos                 (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RHRAR_ENB_Msk                 (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
#define RTC_RHRAR_PM_Pos                  (6UL)                     /*!< PM (Bit 6)                                            */
#define RTC_RHRAR_PM_Msk                  (0x40UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define RTC_RHRAR_HR10_Pos                (4UL)                     /*!< HR10 (Bit 4)                                          */
#define RTC_RHRAR_HR10_Msk                (0x30UL)                  /*!< HR10 (Bitfield-Mask: 0x03)                            */
#define RTC_RHRAR_HR1_Pos                 (0UL)                     /*!< HR1 (Bit 0)                                           */
#define RTC_RHRAR_HR1_Msk                 (0xfUL)                   /*!< HR1 (Bitfield-Mask: 0x0f)                             */
/* ========================================================  BCNT2AR  ======================================================== */
#define RTC_BCNT2AR_BCNT2AR_Pos           (0UL)                     /*!< BCNT2AR (Bit 0)                                       */
#define RTC_BCNT2AR_BCNT2AR_Msk           (0xffUL)                  /*!< BCNT2AR (Bitfield-Mask: 0xff)                         */
/* =========================================================  RWKAR  ========================================================= */
#define RTC_RWKAR_ENB_Pos                 (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RWKAR_ENB_Msk                 (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
#define RTC_RWKAR_DAYW_Pos                (0UL)                     /*!< DAYW (Bit 0)                                          */
#define RTC_RWKAR_DAYW_Msk                (0x7UL)                   /*!< DAYW (Bitfield-Mask: 0x07)                            */
/* ========================================================  BCNT3AR  ======================================================== */
#define RTC_BCNT3AR_BCNT3AR_Pos           (0UL)                     /*!< BCNT3AR (Bit 0)                                       */
#define RTC_BCNT3AR_BCNT3AR_Msk           (0xffUL)                  /*!< BCNT3AR (Bitfield-Mask: 0xff)                         */
/* ========================================================  RDAYAR  ========================================================= */
#define RTC_RDAYAR_ENB_Pos                (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RDAYAR_ENB_Msk                (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
#define RTC_RDAYAR_DATE10_Pos             (4UL)                     /*!< DATE10 (Bit 4)                                        */
#define RTC_RDAYAR_DATE10_Msk             (0x30UL)                  /*!< DATE10 (Bitfield-Mask: 0x03)                          */
#define RTC_RDAYAR_DATE1_Pos              (0UL)                     /*!< DATE1 (Bit 0)                                         */
#define RTC_RDAYAR_DATE1_Msk              (0xfUL)                   /*!< DATE1 (Bitfield-Mask: 0x0f)                           */
/* =======================================================  BCNT0AER  ======================================================== */
#define RTC_BCNT0AER_ENB_Pos              (0UL)                     /*!< ENB (Bit 0)                                           */
#define RTC_BCNT0AER_ENB_Msk              (0xffUL)                  /*!< ENB (Bitfield-Mask: 0xff)                             */
/* ========================================================  RMONAR  ========================================================= */
#define RTC_RMONAR_ENB_Pos                (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RMONAR_ENB_Msk                (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
#define RTC_RMONAR_MON10_Pos              (4UL)                     /*!< MON10 (Bit 4)                                         */
#define RTC_RMONAR_MON10_Msk              (0x10UL)                  /*!< MON10 (Bitfield-Mask: 0x01)                           */
#define RTC_RMONAR_MON1_Pos               (0UL)                     /*!< MON1 (Bit 0)                                          */
#define RTC_RMONAR_MON1_Msk               (0xfUL)                   /*!< MON1 (Bitfield-Mask: 0x0f)                            */
/* =======================================================  BCNT1AER  ======================================================== */
#define RTC_BCNT1AER_ENB_Pos              (0UL)                     /*!< ENB (Bit 0)                                           */
#define RTC_BCNT1AER_ENB_Msk              (0xffUL)                  /*!< ENB (Bitfield-Mask: 0xff)                             */
/* =========================================================  RYRAR  ========================================================= */
#define RTC_RYRAR_YR10_Pos                (4UL)                     /*!< YR10 (Bit 4)                                          */
#define RTC_RYRAR_YR10_Msk                (0xf0UL)                  /*!< YR10 (Bitfield-Mask: 0x0f)                            */
#define RTC_RYRAR_YR1_Pos                 (0UL)                     /*!< YR1 (Bit 0)                                           */
#define RTC_RYRAR_YR1_Msk                 (0xfUL)                   /*!< YR1 (Bitfield-Mask: 0x0f)                             */
/* =======================================================  BCNT2AER  ======================================================== */
#define RTC_BCNT2AER_ENB_Pos              (0UL)                     /*!< ENB (Bit 0)                                           */
#define RTC_BCNT2AER_ENB_Msk              (0xffUL)                  /*!< ENB (Bitfield-Mask: 0xff)                             */
/* ========================================================  RYRAREN  ======================================================== */
#define RTC_RYRAREN_ENB_Pos               (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RYRAREN_ENB_Msk               (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
/* =======================================================  BCNT3AER  ======================================================== */
#define RTC_BCNT3AER_ENB_Pos              (0UL)                     /*!< ENB (Bit 0)                                           */
#define RTC_BCNT3AER_ENB_Msk              (0xffUL)                  /*!< ENB (Bitfield-Mask: 0xff)                             */
/* =========================================================  RCR1  ========================================================== */
#define RTC_RCR1_PES_Pos                  (4UL)                     /*!< PES (Bit 4)                                           */
#define RTC_RCR1_PES_Msk                  (0xf0UL)                  /*!< PES (Bitfield-Mask: 0x0f)                             */
#define RTC_RCR1_RTCOS_Pos                (3UL)                     /*!< RTCOS (Bit 3)                                         */
#define RTC_RCR1_RTCOS_Msk                (0x8UL)                   /*!< RTCOS (Bitfield-Mask: 0x01)                           */
#define RTC_RCR1_PIE_Pos                  (2UL)                     /*!< PIE (Bit 2)                                           */
#define RTC_RCR1_PIE_Msk                  (0x4UL)                   /*!< PIE (Bitfield-Mask: 0x01)                             */
#define RTC_RCR1_CIE_Pos                  (1UL)                     /*!< CIE (Bit 1)                                           */
#define RTC_RCR1_CIE_Msk                  (0x2UL)                   /*!< CIE (Bitfield-Mask: 0x01)                             */
#define RTC_RCR1_AIE_Pos                  (0UL)                     /*!< AIE (Bit 0)                                           */
#define RTC_RCR1_AIE_Msk                  (0x1UL)                   /*!< AIE (Bitfield-Mask: 0x01)                             */
/* =========================================================  RCR2  ========================================================== */
#define RTC_RCR2_CNTMD_Pos                (7UL)                     /*!< CNTMD (Bit 7)                                         */
#define RTC_RCR2_CNTMD_Msk                (0x80UL)                  /*!< CNTMD (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_HR24_Pos                 (6UL)                     /*!< HR24 (Bit 6)                                          */
#define RTC_RCR2_HR24_Msk                 (0x40UL)                  /*!< HR24 (Bitfield-Mask: 0x01)                            */
#define RTC_RCR2_AADJP_Pos                (5UL)                     /*!< AADJP (Bit 5)                                         */
#define RTC_RCR2_AADJP_Msk                (0x20UL)                  /*!< AADJP (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_AADJE_Pos                (4UL)                     /*!< AADJE (Bit 4)                                         */
#define RTC_RCR2_AADJE_Msk                (0x10UL)                  /*!< AADJE (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_RTCOE_Pos                (3UL)                     /*!< RTCOE (Bit 3)                                         */
#define RTC_RCR2_RTCOE_Msk                (0x8UL)                   /*!< RTCOE (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_ADJ30_Pos                (2UL)                     /*!< ADJ30 (Bit 2)                                         */
#define RTC_RCR2_ADJ30_Msk                (0x4UL)                   /*!< ADJ30 (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_RESET_Pos                (1UL)                     /*!< RESET (Bit 1)                                         */
#define RTC_RCR2_RESET_Msk                (0x2UL)                   /*!< RESET (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_START_Pos                (0UL)                     /*!< START (Bit 0)                                         */
#define RTC_RCR2_START_Msk                (0x1UL)                   /*!< START (Bitfield-Mask: 0x01)                           */
/* =========================================================  RCPE  ========================================================== */
#define RTC_RCPE_RTCEN_Pos                (0UL)                     /*!< RTCEN (Bit 0)                                         */
#define RTC_RCPE_RTCEN_Msk                (0x1UL)                   /*!< RTCEN (Bitfield-Mask: 0x01)                           */
/* =========================================================  RCR4  ========================================================== */
#define RTC_RCR4_RCKSEL_Pos               (0UL)                     /*!< RCKSEL (Bit 0)                                        */
#define RTC_RCR4_RCKSEL_Msk               (0x1UL)                   /*!< RCKSEL (Bitfield-Mask: 0x01)                          */
/* =========================================================  RFRH  ========================================================== */
#define RTC_RFRH_RFC16_Pos                (0UL)                     /*!< RFC16 (Bit 0)                                         */
#define RTC_RFRH_RFC16_Msk                (0x1UL)                   /*!< RFC16 (Bitfield-Mask: 0x01)                           */
/* =========================================================  RFRL  ========================================================== */
#define RTC_RFRL_RFC_Pos                  (0UL)                     /*!< RFC (Bit 0)                                           */
#define RTC_RFRL_RFC_Msk                  (0xffffUL)                /*!< RFC (Bitfield-Mask: 0xffff)                           */
/* =========================================================  RADJ  ========================================================== */
#define RTC_RADJ_PMADJ_Pos                (6UL)                     /*!< PMADJ (Bit 6)                                         */
#define RTC_RADJ_PMADJ_Msk                (0xc0UL)                  /*!< PMADJ (Bitfield-Mask: 0x03)                           */
#define RTC_RADJ_ADJ_Pos                  (0UL)                     /*!< ADJ (Bit 0)                                           */
#define RTC_RADJ_ADJ_Msk                  (0x3fUL)                  /*!< ADJ (Bitfield-Mask: 0x3f)                             */
/* ========================================================  RTCCR0  ========================================================= */
#define RTC_RTCCR0_TCEN_Pos               (7UL)                     /*!< TCEN (Bit 7)                                          */
#define RTC_RTCCR0_TCEN_Msk               (0x80UL)                  /*!< TCEN (Bitfield-Mask: 0x01)                            */
#define RTC_RTCCR0_TCNF_Pos               (4UL)                     /*!< TCNF (Bit 4)                                          */
#define RTC_RTCCR0_TCNF_Msk               (0x30UL)                  /*!< TCNF (Bitfield-Mask: 0x03)                            */
#define RTC_RTCCR0_TCST_Pos               (2UL)                     /*!< TCST (Bit 2)                                          */
#define RTC_RTCCR0_TCST_Msk               (0x4UL)                   /*!< TCST (Bitfield-Mask: 0x01)                            */
#define RTC_RTCCR0_TCCT_Pos               (0UL)                     /*!< TCCT (Bit 0)                                          */
#define RTC_RTCCR0_TCCT_Msk               (0x3UL)                   /*!< TCCT (Bitfield-Mask: 0x03)                            */
/* ========================================================  RTCCR1  ========================================================= */
#define RTC_RTCCR1_TCEN_Pos               (7UL)                     /*!< TCEN (Bit 7)                                          */
#define RTC_RTCCR1_TCEN_Msk               (0x80UL)                  /*!< TCEN (Bitfield-Mask: 0x01)                            */
#define RTC_RTCCR1_TCNF_Pos               (4UL)                     /*!< TCNF (Bit 4)                                          */
#define RTC_RTCCR1_TCNF_Msk               (0x30UL)                  /*!< TCNF (Bitfield-Mask: 0x03)                            */
#define RTC_RTCCR1_TCST_Pos               (2UL)                     /*!< TCST (Bit 2)                                          */
#define RTC_RTCCR1_TCST_Msk               (0x4UL)                   /*!< TCST (Bitfield-Mask: 0x01)                            */
#define RTC_RTCCR1_TCCT_Pos               (0UL)                     /*!< TCCT (Bit 0)                                          */
#define RTC_RTCCR1_TCCT_Msk               (0x3UL)                   /*!< TCCT (Bitfield-Mask: 0x03)                            */
/* ========================================================  RTCCR2  ========================================================= */
#define RTC_RTCCR2_TCEN_Pos               (7UL)                     /*!< TCEN (Bit 7)                                          */
#define RTC_RTCCR2_TCEN_Msk               (0x80UL)                  /*!< TCEN (Bitfield-Mask: 0x01)                            */
#define RTC_RTCCR2_TCNF_Pos               (4UL)                     /*!< TCNF (Bit 4)                                          */
#define RTC_RTCCR2_TCNF_Msk               (0x30UL)                  /*!< TCNF (Bitfield-Mask: 0x03)                            */
#define RTC_RTCCR2_TCST_Pos               (2UL)                     /*!< TCST (Bit 2)                                          */
#define RTC_RTCCR2_TCST_Msk               (0x4UL)                   /*!< TCST (Bitfield-Mask: 0x01)                            */
#define RTC_RTCCR2_TCCT_Pos               (0UL)                     /*!< TCCT (Bit 0)                                          */
#define RTC_RTCCR2_TCCT_Msk               (0x3UL)                   /*!< TCCT (Bitfield-Mask: 0x03)                            */
/* ========================================================  RSECCP0  ======================================================== */
#define RTC_RSECCP0_SEC10_Pos             (4UL)                     /*!< SEC10 (Bit 4)                                         */
#define RTC_RSECCP0_SEC10_Msk             (0x70UL)                  /*!< SEC10 (Bitfield-Mask: 0x07)                           */
#define RTC_RSECCP0_SEC1_Pos              (0UL)                     /*!< SEC1 (Bit 0)                                          */
#define RTC_RSECCP0_SEC1_Msk              (0xfUL)                   /*!< SEC1 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  RSECCP1  ======================================================== */
#define RTC_RSECCP1_SEC10_Pos             (4UL)                     /*!< SEC10 (Bit 4)                                         */
#define RTC_RSECCP1_SEC10_Msk             (0x70UL)                  /*!< SEC10 (Bitfield-Mask: 0x07)                           */
#define RTC_RSECCP1_SEC1_Pos              (0UL)                     /*!< SEC1 (Bit 0)                                          */
#define RTC_RSECCP1_SEC1_Msk              (0xfUL)                   /*!< SEC1 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  RSECCP2  ======================================================== */
#define RTC_RSECCP2_SEC10_Pos             (4UL)                     /*!< SEC10 (Bit 4)                                         */
#define RTC_RSECCP2_SEC10_Msk             (0x70UL)                  /*!< SEC10 (Bitfield-Mask: 0x07)                           */
#define RTC_RSECCP2_SEC1_Pos              (0UL)                     /*!< SEC1 (Bit 0)                                          */
#define RTC_RSECCP2_SEC1_Msk              (0xfUL)                   /*!< SEC1 (Bitfield-Mask: 0x0f)                            */
/* =======================================================  BCNT0CP0  ======================================================== */
#define RTC_BCNT0CP0_BCNTCP0_Pos          (0UL)                     /*!< BCNTCP0 (Bit 0)                                       */
#define RTC_BCNT0CP0_BCNTCP0_Msk          (0xffUL)                  /*!< BCNTCP0 (Bitfield-Mask: 0xff)                         */
/* =======================================================  BCNT0CP1  ======================================================== */
#define RTC_BCNT0CP1_BCNTCP1_Pos          (0UL)                     /*!< BCNTCP1 (Bit 0)                                       */
#define RTC_BCNT0CP1_BCNTCP1_Msk          (0xffUL)                  /*!< BCNTCP1 (Bitfield-Mask: 0xff)                         */
/* =======================================================  BCNT0CP2  ======================================================== */
#define RTC_BCNT0CP2_BCNTCP2_Pos          (0UL)                     /*!< BCNTCP2 (Bit 0)                                       */
#define RTC_BCNT0CP2_BCNTCP2_Msk          (0xffUL)                  /*!< BCNTCP2 (Bitfield-Mask: 0xff)                         */
/* ========================================================  RMINCP0  ======================================================== */
#define RTC_RMINCP0_MIN10_Pos             (4UL)                     /*!< MIN10 (Bit 4)                                         */
#define RTC_RMINCP0_MIN10_Msk             (0x70UL)                  /*!< MIN10 (Bitfield-Mask: 0x07)                           */
#define RTC_RMINCP0_MIN1_Pos              (0UL)                     /*!< MIN1 (Bit 0)                                          */
#define RTC_RMINCP0_MIN1_Msk              (0xfUL)                   /*!< MIN1 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  RMINCP1  ======================================================== */
#define RTC_RMINCP1_MIN10_Pos             (4UL)                     /*!< MIN10 (Bit 4)                                         */
#define RTC_RMINCP1_MIN10_Msk             (0x70UL)                  /*!< MIN10 (Bitfield-Mask: 0x07)                           */
#define RTC_RMINCP1_MIN1_Pos              (0UL)                     /*!< MIN1 (Bit 0)                                          */
#define RTC_RMINCP1_MIN1_Msk              (0xfUL)                   /*!< MIN1 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  RMINCP2  ======================================================== */
#define RTC_RMINCP2_MIN10_Pos             (4UL)                     /*!< MIN10 (Bit 4)                                         */
#define RTC_RMINCP2_MIN10_Msk             (0x70UL)                  /*!< MIN10 (Bitfield-Mask: 0x07)                           */
#define RTC_RMINCP2_MIN1_Pos              (0UL)                     /*!< MIN1 (Bit 0)                                          */
#define RTC_RMINCP2_MIN1_Msk              (0xfUL)                   /*!< MIN1 (Bitfield-Mask: 0x0f)                            */
/* =======================================================  BCNT1CP0  ======================================================== */
#define RTC_BCNT1CP0_BCNTCP0_Pos          (0UL)                     /*!< BCNTCP0 (Bit 0)                                       */
#define RTC_BCNT1CP0_BCNTCP0_Msk          (0xffUL)                  /*!< BCNTCP0 (Bitfield-Mask: 0xff)                         */
/* =======================================================  BCNT1CP1  ======================================================== */
#define RTC_BCNT1CP1_BCNTCP1_Pos          (0UL)                     /*!< BCNTCP1 (Bit 0)                                       */
#define RTC_BCNT1CP1_BCNTCP1_Msk          (0xffUL)                  /*!< BCNTCP1 (Bitfield-Mask: 0xff)                         */
/* =======================================================  BCNT1CP2  ======================================================== */
#define RTC_BCNT1CP2_BCNTCP2_Pos          (0UL)                     /*!< BCNTCP2 (Bit 0)                                       */
#define RTC_BCNT1CP2_BCNTCP2_Msk          (0xffUL)                  /*!< BCNTCP2 (Bitfield-Mask: 0xff)                         */
/* ========================================================  RHRCP0  ========================================================= */
#define RTC_RHRCP0_PM_Pos                 (6UL)                     /*!< PM (Bit 6)                                            */
#define RTC_RHRCP0_PM_Msk                 (0x40UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define RTC_RHRCP0_HR10_Pos               (4UL)                     /*!< HR10 (Bit 4)                                          */
#define RTC_RHRCP0_HR10_Msk               (0x30UL)                  /*!< HR10 (Bitfield-Mask: 0x03)                            */
#define RTC_RHRCP0_HR1_Pos                (0UL)                     /*!< HR1 (Bit 0)                                           */
#define RTC_RHRCP0_HR1_Msk                (0xfUL)                   /*!< HR1 (Bitfield-Mask: 0x0f)                             */
/* ========================================================  RHRCP1  ========================================================= */
#define RTC_RHRCP1_PM_Pos                 (6UL)                     /*!< PM (Bit 6)                                            */
#define RTC_RHRCP1_PM_Msk                 (0x40UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define RTC_RHRCP1_HR10_Pos               (4UL)                     /*!< HR10 (Bit 4)                                          */
#define RTC_RHRCP1_HR10_Msk               (0x30UL)                  /*!< HR10 (Bitfield-Mask: 0x03)                            */
#define RTC_RHRCP1_HR1_Pos                (0UL)                     /*!< HR1 (Bit 0)                                           */
#define RTC_RHRCP1_HR1_Msk                (0xfUL)                   /*!< HR1 (Bitfield-Mask: 0x0f)                             */
/* ========================================================  RHRCP2  ========================================================= */
#define RTC_RHRCP2_PM_Pos                 (6UL)                     /*!< PM (Bit 6)                                            */
#define RTC_RHRCP2_PM_Msk                 (0x40UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define RTC_RHRCP2_HR10_Pos               (4UL)                     /*!< HR10 (Bit 4)                                          */
#define RTC_RHRCP2_HR10_Msk               (0x30UL)                  /*!< HR10 (Bitfield-Mask: 0x03)                            */
#define RTC_RHRCP2_HR1_Pos                (0UL)                     /*!< HR1 (Bit 0)                                           */
#define RTC_RHRCP2_HR1_Msk                (0xfUL)                   /*!< HR1 (Bitfield-Mask: 0x0f)                             */
/* =======================================================  BCNT2CP0  ======================================================== */
#define RTC_BCNT2CP0_BCNTCP0_Pos          (0UL)                     /*!< BCNTCP0 (Bit 0)                                       */
#define RTC_BCNT2CP0_BCNTCP0_Msk          (0xffUL)                  /*!< BCNTCP0 (Bitfield-Mask: 0xff)                         */
/* =======================================================  BCNT2CP1  ======================================================== */
#define RTC_BCNT2CP1_BCNTCP1_Pos          (0UL)                     /*!< BCNTCP1 (Bit 0)                                       */
#define RTC_BCNT2CP1_BCNTCP1_Msk          (0xffUL)                  /*!< BCNTCP1 (Bitfield-Mask: 0xff)                         */
/* =======================================================  BCNT2CP2  ======================================================== */
#define RTC_BCNT2CP2_BCNTCP2_Pos          (0UL)                     /*!< BCNTCP2 (Bit 0)                                       */
#define RTC_BCNT2CP2_BCNTCP2_Msk          (0xffUL)                  /*!< BCNTCP2 (Bitfield-Mask: 0xff)                         */
/* ========================================================  RDAYCP0  ======================================================== */
#define RTC_RDAYCP0_DATE10_Pos            (4UL)                     /*!< DATE10 (Bit 4)                                        */
#define RTC_RDAYCP0_DATE10_Msk            (0x30UL)                  /*!< DATE10 (Bitfield-Mask: 0x03)                          */
#define RTC_RDAYCP0_DATE1_Pos             (0UL)                     /*!< DATE1 (Bit 0)                                         */
#define RTC_RDAYCP0_DATE1_Msk             (0xfUL)                   /*!< DATE1 (Bitfield-Mask: 0x0f)                           */
/* ========================================================  RDAYCP1  ======================================================== */
#define RTC_RDAYCP1_DATE10_Pos            (4UL)                     /*!< DATE10 (Bit 4)                                        */
#define RTC_RDAYCP1_DATE10_Msk            (0x30UL)                  /*!< DATE10 (Bitfield-Mask: 0x03)                          */
#define RTC_RDAYCP1_DATE1_Pos             (0UL)                     /*!< DATE1 (Bit 0)                                         */
#define RTC_RDAYCP1_DATE1_Msk             (0xfUL)                   /*!< DATE1 (Bitfield-Mask: 0x0f)                           */
/* ========================================================  RDAYCP2  ======================================================== */
#define RTC_RDAYCP2_DATE10_Pos            (4UL)                     /*!< DATE10 (Bit 4)                                        */
#define RTC_RDAYCP2_DATE10_Msk            (0x30UL)                  /*!< DATE10 (Bitfield-Mask: 0x03)                          */
#define RTC_RDAYCP2_DATE1_Pos             (0UL)                     /*!< DATE1 (Bit 0)                                         */
#define RTC_RDAYCP2_DATE1_Msk             (0xfUL)                   /*!< DATE1 (Bitfield-Mask: 0x0f)                           */
/* =======================================================  BCNT3CP0  ======================================================== */
#define RTC_BCNT3CP0_BCNTCP0_Pos          (0UL)                     /*!< BCNTCP0 (Bit 0)                                       */
#define RTC_BCNT3CP0_BCNTCP0_Msk          (0xffUL)                  /*!< BCNTCP0 (Bitfield-Mask: 0xff)                         */
/* =======================================================  BCNT3CP1  ======================================================== */
#define RTC_BCNT3CP1_BCNTCP1_Pos          (0UL)                     /*!< BCNTCP1 (Bit 0)                                       */
#define RTC_BCNT3CP1_BCNTCP1_Msk          (0xffUL)                  /*!< BCNTCP1 (Bitfield-Mask: 0xff)                         */
/* =======================================================  BCNT3CP2  ======================================================== */
#define RTC_BCNT3CP2_BCNTCP2_Pos          (0UL)                     /*!< BCNTCP2 (Bit 0)                                       */
#define RTC_BCNT3CP2_BCNTCP2_Msk          (0xffUL)                  /*!< BCNTCP2 (Bitfield-Mask: 0xff)                         */
/* ========================================================  RMONCP0  ======================================================== */
#define RTC_RMONCP0_MON10_Pos             (4UL)                     /*!< MON10 (Bit 4)                                         */
#define RTC_RMONCP0_MON10_Msk             (0x10UL)                  /*!< MON10 (Bitfield-Mask: 0x01)                           */
#define RTC_RMONCP0_MON1_Pos              (0UL)                     /*!< MON1 (Bit 0)                                          */
#define RTC_RMONCP0_MON1_Msk              (0xfUL)                   /*!< MON1 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  RMONCP1  ======================================================== */
#define RTC_RMONCP1_MON10_Pos             (4UL)                     /*!< MON10 (Bit 4)                                         */
#define RTC_RMONCP1_MON10_Msk             (0x10UL)                  /*!< MON10 (Bitfield-Mask: 0x01)                           */
#define RTC_RMONCP1_MON1_Pos              (0UL)                     /*!< MON1 (Bit 0)                                          */
#define RTC_RMONCP1_MON1_Msk              (0xfUL)                   /*!< MON1 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  RMONCP2  ======================================================== */
#define RTC_RMONCP2_MON10_Pos             (4UL)                     /*!< MON10 (Bit 4)                                         */
#define RTC_RMONCP2_MON10_Msk             (0x10UL)                  /*!< MON10 (Bitfield-Mask: 0x01)                           */
#define RTC_RMONCP2_MON1_Pos              (0UL)                     /*!< MON1 (Bit 0)                                          */
#define RTC_RMONCP2_MON1_Msk              (0xfUL)                   /*!< MON1 (Bitfield-Mask: 0x0f)                            */


/* =========================================================================================================================== */
/* ================                                           S14AD                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  ADCSR  ========================================================= */
#define S14AD_ADCSR_ADST_Pos              (15UL)                    /*!< ADST (Bit 15)                                         */
#define S14AD_ADCSR_ADST_Msk              (0x8000UL)                /*!< ADST (Bitfield-Mask: 0x01)                            */
#define S14AD_ADCSR_ADCS_Pos              (13UL)                    /*!< ADCS (Bit 13)                                         */
#define S14AD_ADCSR_ADCS_Msk              (0x6000UL)                /*!< ADCS (Bitfield-Mask: 0x03)                            */
#define S14AD_ADCSR_ADIE_Pos              (12UL)                    /*!< ADIE (Bit 12)                                         */
#define S14AD_ADCSR_ADIE_Msk              (0x1000UL)                /*!< ADIE (Bitfield-Mask: 0x01)                            */
#define S14AD_ADCSR_TRGE_Pos              (9UL)                     /*!< TRGE (Bit 9)                                          */
#define S14AD_ADCSR_TRGE_Msk              (0x200UL)                 /*!< TRGE (Bitfield-Mask: 0x01)                            */
#define S14AD_ADCSR_EXTRG_Pos             (8UL)                     /*!< EXTRG (Bit 8)                                         */
#define S14AD_ADCSR_EXTRG_Msk             (0x100UL)                 /*!< EXTRG (Bitfield-Mask: 0x01)                           */
#define S14AD_ADCSR_DBLE_Pos              (7UL)                     /*!< DBLE (Bit 7)                                          */
#define S14AD_ADCSR_DBLE_Msk              (0x80UL)                  /*!< DBLE (Bitfield-Mask: 0x01)                            */
#define S14AD_ADCSR_GBADIE_Pos            (6UL)                     /*!< GBADIE (Bit 6)                                        */
#define S14AD_ADCSR_GBADIE_Msk            (0x40UL)                  /*!< GBADIE (Bitfield-Mask: 0x01)                          */
#define S14AD_ADCSR_DBLANS_Pos            (0UL)                     /*!< DBLANS (Bit 0)                                        */
#define S14AD_ADCSR_DBLANS_Msk            (0x1fUL)                  /*!< DBLANS (Bitfield-Mask: 0x1f)                          */
/* ========================================================  ADANSA0  ======================================================== */
#define S14AD_ADANSA0_ANSA06_Pos          (6UL)                     /*!< ANSA06 (Bit 6)                                        */
#define S14AD_ADANSA0_ANSA06_Msk          (0x40UL)                  /*!< ANSA06 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA0_ANSA05_Pos          (5UL)                     /*!< ANSA05 (Bit 5)                                        */
#define S14AD_ADANSA0_ANSA05_Msk          (0x20UL)                  /*!< ANSA05 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA0_ANSA04_Pos          (4UL)                     /*!< ANSA04 (Bit 4)                                        */
#define S14AD_ADANSA0_ANSA04_Msk          (0x10UL)                  /*!< ANSA04 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA0_ANSA03_Pos          (3UL)                     /*!< ANSA03 (Bit 3)                                        */
#define S14AD_ADANSA0_ANSA03_Msk          (0x8UL)                   /*!< ANSA03 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA0_ANSA02_Pos          (2UL)                     /*!< ANSA02 (Bit 2)                                        */
#define S14AD_ADANSA0_ANSA02_Msk          (0x4UL)                   /*!< ANSA02 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA0_ANSA01_Pos          (1UL)                     /*!< ANSA01 (Bit 1)                                        */
#define S14AD_ADANSA0_ANSA01_Msk          (0x2UL)                   /*!< ANSA01 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA0_ANSA00_Pos          (0UL)                     /*!< ANSA00 (Bit 0)                                        */
#define S14AD_ADANSA0_ANSA00_Msk          (0x1UL)                   /*!< ANSA00 (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADANSA1  ======================================================== */
#define S14AD_ADANSA1_ANSA28_Pos          (12UL)                    /*!< ANSA28 (Bit 12)                                       */
#define S14AD_ADANSA1_ANSA28_Msk          (0x1000UL)                /*!< ANSA28 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA1_ANSA27_Pos          (11UL)                    /*!< ANSA27 (Bit 11)                                       */
#define S14AD_ADANSA1_ANSA27_Msk          (0x800UL)                 /*!< ANSA27 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA1_ANSA26_Pos          (10UL)                    /*!< ANSA26 (Bit 10)                                       */
#define S14AD_ADANSA1_ANSA26_Msk          (0x400UL)                 /*!< ANSA26 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA1_ANSA25_Pos          (9UL)                     /*!< ANSA25 (Bit 9)                                        */
#define S14AD_ADANSA1_ANSA25_Msk          (0x200UL)                 /*!< ANSA25 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA1_ANSA24_Pos          (8UL)                     /*!< ANSA24 (Bit 8)                                        */
#define S14AD_ADANSA1_ANSA24_Msk          (0x100UL)                 /*!< ANSA24 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA1_ANSA23_Pos          (7UL)                     /*!< ANSA23 (Bit 7)                                        */
#define S14AD_ADANSA1_ANSA23_Msk          (0x80UL)                  /*!< ANSA23 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA1_ANSA22_Pos          (6UL)                     /*!< ANSA22 (Bit 6)                                        */
#define S14AD_ADANSA1_ANSA22_Msk          (0x40UL)                  /*!< ANSA22 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA1_ANSA21_Pos          (5UL)                     /*!< ANSA21 (Bit 5)                                        */
#define S14AD_ADANSA1_ANSA21_Msk          (0x20UL)                  /*!< ANSA21 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA1_ANSA20_Pos          (4UL)                     /*!< ANSA20 (Bit 4)                                        */
#define S14AD_ADANSA1_ANSA20_Msk          (0x10UL)                  /*!< ANSA20 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA1_ANSA17_Pos          (1UL)                     /*!< ANSA17 (Bit 1)                                        */
#define S14AD_ADANSA1_ANSA17_Msk          (0x2UL)                   /*!< ANSA17 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSA1_ANSA16_Pos          (0UL)                     /*!< ANSA16 (Bit 0)                                        */
#define S14AD_ADANSA1_ANSA16_Msk          (0x1UL)                   /*!< ANSA16 (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADADS0  ========================================================= */
#define S14AD_ADADS0_ADS06_Pos            (6UL)                     /*!< ADS06 (Bit 6)                                         */
#define S14AD_ADADS0_ADS06_Msk            (0x40UL)                  /*!< ADS06 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS0_ADS05_Pos            (5UL)                     /*!< ADS05 (Bit 5)                                         */
#define S14AD_ADADS0_ADS05_Msk            (0x20UL)                  /*!< ADS05 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS0_ADS04_Pos            (4UL)                     /*!< ADS04 (Bit 4)                                         */
#define S14AD_ADADS0_ADS04_Msk            (0x10UL)                  /*!< ADS04 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS0_ADS03_Pos            (3UL)                     /*!< ADS03 (Bit 3)                                         */
#define S14AD_ADADS0_ADS03_Msk            (0x8UL)                   /*!< ADS03 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS0_ADS02_Pos            (2UL)                     /*!< ADS02 (Bit 2)                                         */
#define S14AD_ADADS0_ADS02_Msk            (0x4UL)                   /*!< ADS02 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS0_ADS01_Pos            (1UL)                     /*!< ADS01 (Bit 1)                                         */
#define S14AD_ADADS0_ADS01_Msk            (0x2UL)                   /*!< ADS01 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS0_ADS00_Pos            (0UL)                     /*!< ADS00 (Bit 0)                                         */
#define S14AD_ADADS0_ADS00_Msk            (0x1UL)                   /*!< ADS00 (Bitfield-Mask: 0x01)                           */
/* ========================================================  ADADS1  ========================================================= */
#define S14AD_ADADS1_ADS28_Pos            (12UL)                    /*!< ADS28 (Bit 12)                                        */
#define S14AD_ADADS1_ADS28_Msk            (0x1000UL)                /*!< ADS28 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS1_ADS27_Pos            (11UL)                    /*!< ADS27 (Bit 11)                                        */
#define S14AD_ADADS1_ADS27_Msk            (0x800UL)                 /*!< ADS27 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS1_ADS26_Pos            (10UL)                    /*!< ADS26 (Bit 10)                                        */
#define S14AD_ADADS1_ADS26_Msk            (0x400UL)                 /*!< ADS26 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS1_ADS25_Pos            (9UL)                     /*!< ADS25 (Bit 9)                                         */
#define S14AD_ADADS1_ADS25_Msk            (0x200UL)                 /*!< ADS25 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS1_ADS24_Pos            (8UL)                     /*!< ADS24 (Bit 8)                                         */
#define S14AD_ADADS1_ADS24_Msk            (0x100UL)                 /*!< ADS24 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS1_ADS23_Pos            (7UL)                     /*!< ADS23 (Bit 7)                                         */
#define S14AD_ADADS1_ADS23_Msk            (0x80UL)                  /*!< ADS23 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS1_ADS22_Pos            (6UL)                     /*!< ADS22 (Bit 6)                                         */
#define S14AD_ADADS1_ADS22_Msk            (0x40UL)                  /*!< ADS22 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS1_ADS21_Pos            (5UL)                     /*!< ADS21 (Bit 5)                                         */
#define S14AD_ADADS1_ADS21_Msk            (0x20UL)                  /*!< ADS21 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS1_ADS20_Pos            (4UL)                     /*!< ADS20 (Bit 4)                                         */
#define S14AD_ADADS1_ADS20_Msk            (0x10UL)                  /*!< ADS20 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS1_ADS17_Pos            (1UL)                     /*!< ADS17 (Bit 1)                                         */
#define S14AD_ADADS1_ADS17_Msk            (0x2UL)                   /*!< ADS17 (Bitfield-Mask: 0x01)                           */
#define S14AD_ADADS1_ADS16_Pos            (0UL)                     /*!< ADS16 (Bit 0)                                         */
#define S14AD_ADADS1_ADS16_Msk            (0x1UL)                   /*!< ADS16 (Bitfield-Mask: 0x01)                           */
/* =========================================================  ADADC  ========================================================= */
#define S14AD_ADADC_AVEE_Pos              (7UL)                     /*!< AVEE (Bit 7)                                          */
#define S14AD_ADADC_AVEE_Msk              (0x80UL)                  /*!< AVEE (Bitfield-Mask: 0x01)                            */
#define S14AD_ADADC_ADC_Pos               (0UL)                     /*!< ADC (Bit 0)                                           */
#define S14AD_ADADC_ADC_Msk               (0x7UL)                   /*!< ADC (Bitfield-Mask: 0x07)                             */
/* =========================================================  ADCER  ========================================================= */
#define S14AD_ADCER_ADRFMT_Pos            (15UL)                    /*!< ADRFMT (Bit 15)                                       */
#define S14AD_ADCER_ADRFMT_Msk            (0x8000UL)                /*!< ADRFMT (Bitfield-Mask: 0x01)                          */
#define S14AD_ADCER_DIAGM_Pos             (11UL)                    /*!< DIAGM (Bit 11)                                        */
#define S14AD_ADCER_DIAGM_Msk             (0x800UL)                 /*!< DIAGM (Bitfield-Mask: 0x01)                           */
#define S14AD_ADCER_DIAGLD_Pos            (10UL)                    /*!< DIAGLD (Bit 10)                                       */
#define S14AD_ADCER_DIAGLD_Msk            (0x400UL)                 /*!< DIAGLD (Bitfield-Mask: 0x01)                          */
#define S14AD_ADCER_DIAGVAL_Pos           (8UL)                     /*!< DIAGVAL (Bit 8)                                       */
#define S14AD_ADCER_DIAGVAL_Msk           (0x300UL)                 /*!< DIAGVAL (Bitfield-Mask: 0x03)                         */
#define S14AD_ADCER_ACE_Pos               (5UL)                     /*!< ACE (Bit 5)                                           */
#define S14AD_ADCER_ACE_Msk               (0x20UL)                  /*!< ACE (Bitfield-Mask: 0x01)                             */
#define S14AD_ADCER_ADPRC_Pos             (1UL)                     /*!< ADPRC (Bit 1)                                         */
#define S14AD_ADCER_ADPRC_Msk             (0x6UL)                   /*!< ADPRC (Bitfield-Mask: 0x03)                           */
/* ========================================================  ADSTRGR  ======================================================== */
#define S14AD_ADSTRGR_TRSA_Pos            (8UL)                     /*!< TRSA (Bit 8)                                          */
#define S14AD_ADSTRGR_TRSA_Msk            (0x3f00UL)                /*!< TRSA (Bitfield-Mask: 0x3f)                            */
#define S14AD_ADSTRGR_TRSB_Pos            (0UL)                     /*!< TRSB (Bit 0)                                          */
#define S14AD_ADSTRGR_TRSB_Msk            (0x3fUL)                  /*!< TRSB (Bitfield-Mask: 0x3f)                            */
/* ========================================================  ADEXICR  ======================================================== */
#define S14AD_ADEXICR_TSSB_Pos            (10UL)                    /*!< TSSB (Bit 10)                                         */
#define S14AD_ADEXICR_TSSB_Msk            (0x400UL)                 /*!< TSSB (Bitfield-Mask: 0x01)                            */
#define S14AD_ADEXICR_TSSA_Pos            (8UL)                     /*!< TSSA (Bit 8)                                          */
#define S14AD_ADEXICR_TSSA_Msk            (0x100UL)                 /*!< TSSA (Bitfield-Mask: 0x01)                            */
#define S14AD_ADEXICR_TSSAD_Pos           (0UL)                     /*!< TSSAD (Bit 0)                                         */
#define S14AD_ADEXICR_TSSAD_Msk           (0x1UL)                   /*!< TSSAD (Bitfield-Mask: 0x01)                           */
/* ========================================================  ADANSB0  ======================================================== */
#define S14AD_ADANSB0_ANSB06_Pos          (6UL)                     /*!< ANSB06 (Bit 6)                                        */
#define S14AD_ADANSB0_ANSB06_Msk          (0x40UL)                  /*!< ANSB06 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB0_ANSB05_Pos          (5UL)                     /*!< ANSB05 (Bit 5)                                        */
#define S14AD_ADANSB0_ANSB05_Msk          (0x20UL)                  /*!< ANSB05 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB0_ANSB04_Pos          (4UL)                     /*!< ANSB04 (Bit 4)                                        */
#define S14AD_ADANSB0_ANSB04_Msk          (0x10UL)                  /*!< ANSB04 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB0_ANSB03_Pos          (3UL)                     /*!< ANSB03 (Bit 3)                                        */
#define S14AD_ADANSB0_ANSB03_Msk          (0x8UL)                   /*!< ANSB03 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB0_ANSB02_Pos          (2UL)                     /*!< ANSB02 (Bit 2)                                        */
#define S14AD_ADANSB0_ANSB02_Msk          (0x4UL)                   /*!< ANSB02 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB0_ANSB01_Pos          (1UL)                     /*!< ANSB01 (Bit 1)                                        */
#define S14AD_ADANSB0_ANSB01_Msk          (0x2UL)                   /*!< ANSB01 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB0_ANSB00_Pos          (0UL)                     /*!< ANSB00 (Bit 0)                                        */
#define S14AD_ADANSB0_ANSB00_Msk          (0x1UL)                   /*!< ANSB00 (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADANSB1  ======================================================== */
#define S14AD_ADANSB1_ANSB28_Pos          (12UL)                    /*!< ANSB28 (Bit 12)                                       */
#define S14AD_ADANSB1_ANSB28_Msk          (0x1000UL)                /*!< ANSB28 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB1_ANSB27_Pos          (11UL)                    /*!< ANSB27 (Bit 11)                                       */
#define S14AD_ADANSB1_ANSB27_Msk          (0x800UL)                 /*!< ANSB27 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB1_ANSB26_Pos          (10UL)                    /*!< ANSB26 (Bit 10)                                       */
#define S14AD_ADANSB1_ANSB26_Msk          (0x400UL)                 /*!< ANSB26 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB1_ANSB25_Pos          (9UL)                     /*!< ANSB25 (Bit 9)                                        */
#define S14AD_ADANSB1_ANSB25_Msk          (0x200UL)                 /*!< ANSB25 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB1_ANSB24_Pos          (8UL)                     /*!< ANSB24 (Bit 8)                                        */
#define S14AD_ADANSB1_ANSB24_Msk          (0x100UL)                 /*!< ANSB24 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB1_ANSB23_Pos          (7UL)                     /*!< ANSB23 (Bit 7)                                        */
#define S14AD_ADANSB1_ANSB23_Msk          (0x80UL)                  /*!< ANSB23 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB1_ANSB22_Pos          (6UL)                     /*!< ANSB22 (Bit 6)                                        */
#define S14AD_ADANSB1_ANSB22_Msk          (0x40UL)                  /*!< ANSB22 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB1_ANSB21_Pos          (5UL)                     /*!< ANSB21 (Bit 5)                                        */
#define S14AD_ADANSB1_ANSB21_Msk          (0x20UL)                  /*!< ANSB21 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB1_ANSB20_Pos          (4UL)                     /*!< ANSB20 (Bit 4)                                        */
#define S14AD_ADANSB1_ANSB20_Msk          (0x10UL)                  /*!< ANSB20 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB1_ANSB17_Pos          (1UL)                     /*!< ANSB17 (Bit 1)                                        */
#define S14AD_ADANSB1_ANSB17_Msk          (0x2UL)                   /*!< ANSB17 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSB1_ANSB16_Pos          (0UL)                     /*!< ANSB16 (Bit 0)                                        */
#define S14AD_ADANSB1_ANSB16_Msk          (0x1UL)                   /*!< ANSB16 (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADDBLDR  ======================================================== */
#define S14AD_ADDBLDR_ADDBLDR_Pos         (0UL)                     /*!< ADDBLDR (Bit 0)                                       */
#define S14AD_ADDBLDR_ADDBLDR_Msk         (0xffffUL)                /*!< ADDBLDR (Bitfield-Mask: 0xffff)                       */
/* ========================================================  ADTSDR  ========================================================= */
#define S14AD_ADTSDR_ADTSDR_Pos           (0UL)                     /*!< ADTSDR (Bit 0)                                        */
#define S14AD_ADTSDR_ADTSDR_Msk           (0xffffUL)                /*!< ADTSDR (Bitfield-Mask: 0xffff)                        */
/* =========================================================  ADRD  ========================================================== */
#define S14AD_ADRD_DIAGST_Pos             (14UL)                    /*!< DIAGST (Bit 14)                                       */
#define S14AD_ADRD_DIAGST_Msk             (0xc000UL)                /*!< DIAGST (Bitfield-Mask: 0x03)                          */
#define S14AD_ADRD_AD_Pos                 (0UL)                     /*!< AD (Bit 0)                                            */
#define S14AD_ADRD_AD_Msk                 (0x3fffUL)                /*!< AD (Bitfield-Mask: 0x3fff)                            */
/* =========================================================  ADDR0  ========================================================= */
#define S14AD_ADDR0_ADDR_Pos              (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR0_ADDR_Msk              (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* =========================================================  ADDR1  ========================================================= */
#define S14AD_ADDR1_ADDR_Pos              (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR1_ADDR_Msk              (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* =========================================================  ADDR2  ========================================================= */
#define S14AD_ADDR2_ADDR_Pos              (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR2_ADDR_Msk              (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* =========================================================  ADDR3  ========================================================= */
#define S14AD_ADDR3_ADDR_Pos              (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR3_ADDR_Msk              (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* =========================================================  ADDR4  ========================================================= */
#define S14AD_ADDR4_ADDR_Pos              (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR4_ADDR_Msk              (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* =========================================================  ADDR5  ========================================================= */
#define S14AD_ADDR5_ADDR_Pos              (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR5_ADDR_Msk              (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* =========================================================  ADDR6  ========================================================= */
#define S14AD_ADDR6_ADDR_Pos              (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR6_ADDR_Msk              (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDR16  ========================================================= */
#define S14AD_ADDR16_ADDR_Pos             (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR16_ADDR_Msk             (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDR17  ========================================================= */
#define S14AD_ADDR17_ADDR_Pos             (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR17_ADDR_Msk             (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDR20  ========================================================= */
#define S14AD_ADDR20_ADDR_Pos             (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR20_ADDR_Msk             (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDR21  ========================================================= */
#define S14AD_ADDR21_ADDR_Pos             (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR21_ADDR_Msk             (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDR22  ========================================================= */
#define S14AD_ADDR22_ADDR_Pos             (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR22_ADDR_Msk             (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDR23  ========================================================= */
#define S14AD_ADDR23_ADDR_Pos             (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR23_ADDR_Msk             (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDR24  ========================================================= */
#define S14AD_ADDR24_ADDR_Pos             (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR24_ADDR_Msk             (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDR25  ========================================================= */
#define S14AD_ADDR25_ADDR_Pos             (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR25_ADDR_Msk             (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDR26  ========================================================= */
#define S14AD_ADDR26_ADDR_Pos             (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR26_ADDR_Msk             (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDR27  ========================================================= */
#define S14AD_ADDR27_ADDR_Pos             (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR27_ADDR_Msk             (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDR28  ========================================================= */
#define S14AD_ADDR28_ADDR_Pos             (0UL)                     /*!< ADDR (Bit 0)                                          */
#define S14AD_ADDR28_ADDR_Msk             (0xffffUL)                /*!< ADDR (Bitfield-Mask: 0xffff)                          */
/* ========================================================  ADDISCR  ======================================================== */
#define S14AD_ADDISCR_ADNDIS_Pos          (0UL)                     /*!< ADNDIS (Bit 0)                                        */
#define S14AD_ADDISCR_ADNDIS_Msk          (0x1fUL)                  /*!< ADNDIS (Bitfield-Mask: 0x1f)                          */
/* ========================================================  ADGSPCR  ======================================================== */
#define S14AD_ADGSPCR_GBRP_Pos            (15UL)                    /*!< GBRP (Bit 15)                                         */
#define S14AD_ADGSPCR_GBRP_Msk            (0x8000UL)                /*!< GBRP (Bitfield-Mask: 0x01)                            */
#define S14AD_ADGSPCR_LGRRS_Pos           (14UL)                    /*!< LGRRS (Bit 14)                                        */
#define S14AD_ADGSPCR_LGRRS_Msk           (0x4000UL)                /*!< LGRRS (Bitfield-Mask: 0x01)                           */
#define S14AD_ADGSPCR_GBRSCN_Pos          (1UL)                     /*!< GBRSCN (Bit 1)                                        */
#define S14AD_ADGSPCR_GBRSCN_Msk          (0x2UL)                   /*!< GBRSCN (Bitfield-Mask: 0x01)                          */
#define S14AD_ADGSPCR_PGS_Pos             (0UL)                     /*!< PGS (Bit 0)                                           */
#define S14AD_ADGSPCR_PGS_Msk             (0x1UL)                   /*!< PGS (Bitfield-Mask: 0x01)                             */
/* ======================================================  ADHVREFCNT  ======================================================= */
#define S14AD_ADHVREFCNT_LVSEL_Pos        (4UL)                     /*!< LVSEL (Bit 4)                                         */
#define S14AD_ADHVREFCNT_LVSEL_Msk        (0x10UL)                  /*!< LVSEL (Bitfield-Mask: 0x01)                           */
#define S14AD_ADHVREFCNT_HVSEL_Pos        (0UL)                     /*!< HVSEL (Bit 0)                                         */
#define S14AD_ADHVREFCNT_HVSEL_Msk        (0x3UL)                   /*!< HVSEL (Bitfield-Mask: 0x03)                           */
/* =======================================================  ADWINMON  ======================================================== */
#define S14AD_ADWINMON_MONCMPB_Pos        (5UL)                     /*!< MONCMPB (Bit 5)                                       */
#define S14AD_ADWINMON_MONCMPB_Msk        (0x20UL)                  /*!< MONCMPB (Bitfield-Mask: 0x01)                         */
#define S14AD_ADWINMON_MONCMPA_Pos        (4UL)                     /*!< MONCMPA (Bit 4)                                       */
#define S14AD_ADWINMON_MONCMPA_Msk        (0x10UL)                  /*!< MONCMPA (Bitfield-Mask: 0x01)                         */
#define S14AD_ADWINMON_MONCOMB_Pos        (0UL)                     /*!< MONCOMB (Bit 0)                                       */
#define S14AD_ADWINMON_MONCOMB_Msk        (0x1UL)                   /*!< MONCOMB (Bitfield-Mask: 0x01)                         */
/* ========================================================  ADCMPCR  ======================================================== */
#define S14AD_ADCMPCR_CMPAIE_Pos          (15UL)                    /*!< CMPAIE (Bit 15)                                       */
#define S14AD_ADCMPCR_CMPAIE_Msk          (0x8000UL)                /*!< CMPAIE (Bitfield-Mask: 0x01)                          */
#define S14AD_ADCMPCR_WCMPE_Pos           (14UL)                    /*!< WCMPE (Bit 14)                                        */
#define S14AD_ADCMPCR_WCMPE_Msk           (0x4000UL)                /*!< WCMPE (Bitfield-Mask: 0x01)                           */
#define S14AD_ADCMPCR_CMPBIE_Pos          (13UL)                    /*!< CMPBIE (Bit 13)                                       */
#define S14AD_ADCMPCR_CMPBIE_Msk          (0x2000UL)                /*!< CMPBIE (Bitfield-Mask: 0x01)                          */
#define S14AD_ADCMPCR_CMPAE_Pos           (11UL)                    /*!< CMPAE (Bit 11)                                        */
#define S14AD_ADCMPCR_CMPAE_Msk           (0x800UL)                 /*!< CMPAE (Bitfield-Mask: 0x01)                           */
#define S14AD_ADCMPCR_CMPBE_Pos           (9UL)                     /*!< CMPBE (Bit 9)                                         */
#define S14AD_ADCMPCR_CMPBE_Msk           (0x200UL)                 /*!< CMPBE (Bitfield-Mask: 0x01)                           */
#define S14AD_ADCMPCR_CMPAB_Pos           (0UL)                     /*!< CMPAB (Bit 0)                                         */
#define S14AD_ADCMPCR_CMPAB_Msk           (0x3UL)                   /*!< CMPAB (Bitfield-Mask: 0x03)                           */
/* ======================================================  ADCMPANSER  ======================================================= */
#define S14AD_ADCMPANSER_CMPTSA_Pos       (0UL)                     /*!< CMPTSA (Bit 0)                                        */
#define S14AD_ADCMPANSER_CMPTSA_Msk       (0x1UL)                   /*!< CMPTSA (Bitfield-Mask: 0x01)                          */
/* =======================================================  ADCMPLER  ======================================================== */
#define S14AD_ADCMPLER_CMPLTSA_Pos        (0UL)                     /*!< CMPLTSA (Bit 0)                                       */
#define S14AD_ADCMPLER_CMPLTSA_Msk        (0x1UL)                   /*!< CMPLTSA (Bitfield-Mask: 0x01)                         */
/* ======================================================  ADCMPANSR0  ======================================================= */
#define S14AD_ADCMPANSR0_CMPCHA06_Pos     (6UL)                     /*!< CMPCHA06 (Bit 6)                                      */
#define S14AD_ADCMPANSR0_CMPCHA06_Msk     (0x40UL)                  /*!< CMPCHA06 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR0_CMPCHA05_Pos     (5UL)                     /*!< CMPCHA05 (Bit 5)                                      */
#define S14AD_ADCMPANSR0_CMPCHA05_Msk     (0x20UL)                  /*!< CMPCHA05 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR0_CMPCHA04_Pos     (4UL)                     /*!< CMPCHA04 (Bit 4)                                      */
#define S14AD_ADCMPANSR0_CMPCHA04_Msk     (0x10UL)                  /*!< CMPCHA04 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR0_CMPCHA03_Pos     (3UL)                     /*!< CMPCHA03 (Bit 3)                                      */
#define S14AD_ADCMPANSR0_CMPCHA03_Msk     (0x8UL)                   /*!< CMPCHA03 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR0_CMPCHA02_Pos     (2UL)                     /*!< CMPCHA02 (Bit 2)                                      */
#define S14AD_ADCMPANSR0_CMPCHA02_Msk     (0x4UL)                   /*!< CMPCHA02 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR0_CMPCHA01_Pos     (1UL)                     /*!< CMPCHA01 (Bit 1)                                      */
#define S14AD_ADCMPANSR0_CMPCHA01_Msk     (0x2UL)                   /*!< CMPCHA01 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR0_CMPCHA00_Pos     (0UL)                     /*!< CMPCHA00 (Bit 0)                                      */
#define S14AD_ADCMPANSR0_CMPCHA00_Msk     (0x1UL)                   /*!< CMPCHA00 (Bitfield-Mask: 0x01)                        */
/* ======================================================  ADCMPANSR1  ======================================================= */
#define S14AD_ADCMPANSR1_CMPCHA28_Pos     (12UL)                    /*!< CMPCHA28 (Bit 12)                                     */
#define S14AD_ADCMPANSR1_CMPCHA28_Msk     (0x1000UL)                /*!< CMPCHA28 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR1_CMPCHA27_Pos     (11UL)                    /*!< CMPCHA27 (Bit 11)                                     */
#define S14AD_ADCMPANSR1_CMPCHA27_Msk     (0x800UL)                 /*!< CMPCHA27 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR1_CMPCHA26_Pos     (10UL)                    /*!< CMPCHA26 (Bit 10)                                     */
#define S14AD_ADCMPANSR1_CMPCHA26_Msk     (0x400UL)                 /*!< CMPCHA26 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR1_CMPCHA25_Pos     (9UL)                     /*!< CMPCHA25 (Bit 9)                                      */
#define S14AD_ADCMPANSR1_CMPCHA25_Msk     (0x200UL)                 /*!< CMPCHA25 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR1_CMPCHA24_Pos     (8UL)                     /*!< CMPCHA24 (Bit 8)                                      */
#define S14AD_ADCMPANSR1_CMPCHA24_Msk     (0x100UL)                 /*!< CMPCHA24 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR1_CMPCHA23_Pos     (7UL)                     /*!< CMPCHA23 (Bit 7)                                      */
#define S14AD_ADCMPANSR1_CMPCHA23_Msk     (0x80UL)                  /*!< CMPCHA23 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR1_CMPCHA22_Pos     (6UL)                     /*!< CMPCHA22 (Bit 6)                                      */
#define S14AD_ADCMPANSR1_CMPCHA22_Msk     (0x40UL)                  /*!< CMPCHA22 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR1_CMPCHA21_Pos     (5UL)                     /*!< CMPCHA21 (Bit 5)                                      */
#define S14AD_ADCMPANSR1_CMPCHA21_Msk     (0x20UL)                  /*!< CMPCHA21 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR1_CMPCHA20_Pos     (4UL)                     /*!< CMPCHA20 (Bit 4)                                      */
#define S14AD_ADCMPANSR1_CMPCHA20_Msk     (0x10UL)                  /*!< CMPCHA20 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR1_CMPCHA17_Pos     (1UL)                     /*!< CMPCHA17 (Bit 1)                                      */
#define S14AD_ADCMPANSR1_CMPCHA17_Msk     (0x2UL)                   /*!< CMPCHA17 (Bitfield-Mask: 0x01)                        */
#define S14AD_ADCMPANSR1_CMPCHA16_Pos     (0UL)                     /*!< CMPCHA16 (Bit 0)                                      */
#define S14AD_ADCMPANSR1_CMPCHA16_Msk     (0x1UL)                   /*!< CMPCHA16 (Bitfield-Mask: 0x01)                        */
/* =======================================================  ADCMPLR0  ======================================================== */
#define S14AD_ADCMPLR0_CMPLCHA06_Pos      (6UL)                     /*!< CMPLCHA06 (Bit 6)                                     */
#define S14AD_ADCMPLR0_CMPLCHA06_Msk      (0x40UL)                  /*!< CMPLCHA06 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR0_CMPLCHA05_Pos      (5UL)                     /*!< CMPLCHA05 (Bit 5)                                     */
#define S14AD_ADCMPLR0_CMPLCHA05_Msk      (0x20UL)                  /*!< CMPLCHA05 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR0_CMPLCHA04_Pos      (4UL)                     /*!< CMPLCHA04 (Bit 4)                                     */
#define S14AD_ADCMPLR0_CMPLCHA04_Msk      (0x10UL)                  /*!< CMPLCHA04 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR0_CMPLCHA03_Pos      (3UL)                     /*!< CMPLCHA03 (Bit 3)                                     */
#define S14AD_ADCMPLR0_CMPLCHA03_Msk      (0x8UL)                   /*!< CMPLCHA03 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR0_CMPLCHA02_Pos      (2UL)                     /*!< CMPLCHA02 (Bit 2)                                     */
#define S14AD_ADCMPLR0_CMPLCHA02_Msk      (0x4UL)                   /*!< CMPLCHA02 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR0_CMPLCHA01_Pos      (1UL)                     /*!< CMPLCHA01 (Bit 1)                                     */
#define S14AD_ADCMPLR0_CMPLCHA01_Msk      (0x2UL)                   /*!< CMPLCHA01 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR0_CMPLCHA00_Pos      (0UL)                     /*!< CMPLCHA00 (Bit 0)                                     */
#define S14AD_ADCMPLR0_CMPLCHA00_Msk      (0x1UL)                   /*!< CMPLCHA00 (Bitfield-Mask: 0x01)                       */
/* =======================================================  ADCMPLR1  ======================================================== */
#define S14AD_ADCMPLR1_CMPLCHA28_Pos      (12UL)                    /*!< CMPLCHA28 (Bit 12)                                    */
#define S14AD_ADCMPLR1_CMPLCHA28_Msk      (0x1000UL)                /*!< CMPLCHA28 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR1_CMPLCHA27_Pos      (11UL)                    /*!< CMPLCHA27 (Bit 11)                                    */
#define S14AD_ADCMPLR1_CMPLCHA27_Msk      (0x800UL)                 /*!< CMPLCHA27 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR1_CMPLCHA26_Pos      (10UL)                    /*!< CMPLCHA26 (Bit 10)                                    */
#define S14AD_ADCMPLR1_CMPLCHA26_Msk      (0x400UL)                 /*!< CMPLCHA26 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR1_CMPLCHA25_Pos      (9UL)                     /*!< CMPLCHA25 (Bit 9)                                     */
#define S14AD_ADCMPLR1_CMPLCHA25_Msk      (0x200UL)                 /*!< CMPLCHA25 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR1_CMPLCHA24_Pos      (8UL)                     /*!< CMPLCHA24 (Bit 8)                                     */
#define S14AD_ADCMPLR1_CMPLCHA24_Msk      (0x100UL)                 /*!< CMPLCHA24 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR1_CMPLCHA23_Pos      (7UL)                     /*!< CMPLCHA23 (Bit 7)                                     */
#define S14AD_ADCMPLR1_CMPLCHA23_Msk      (0x80UL)                  /*!< CMPLCHA23 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR1_CMPLCHA22_Pos      (6UL)                     /*!< CMPLCHA22 (Bit 6)                                     */
#define S14AD_ADCMPLR1_CMPLCHA22_Msk      (0x40UL)                  /*!< CMPLCHA22 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR1_CMPLCHA21_Pos      (5UL)                     /*!< CMPLCHA21 (Bit 5)                                     */
#define S14AD_ADCMPLR1_CMPLCHA21_Msk      (0x20UL)                  /*!< CMPLCHA21 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR1_CMPLCHA20_Pos      (4UL)                     /*!< CMPLCHA20 (Bit 4)                                     */
#define S14AD_ADCMPLR1_CMPLCHA20_Msk      (0x10UL)                  /*!< CMPLCHA20 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR1_CMPLCHA17_Pos      (1UL)                     /*!< CMPLCHA17 (Bit 1)                                     */
#define S14AD_ADCMPLR1_CMPLCHA17_Msk      (0x2UL)                   /*!< CMPLCHA17 (Bitfield-Mask: 0x01)                       */
#define S14AD_ADCMPLR1_CMPLCHA16_Pos      (0UL)                     /*!< CMPLCHA16 (Bit 0)                                     */
#define S14AD_ADCMPLR1_CMPLCHA16_Msk      (0x1UL)                   /*!< CMPLCHA16 (Bitfield-Mask: 0x01)                       */
/* =======================================================  ADCMPDR0  ======================================================== */
#define S14AD_ADCMPDR0_ADCMPDR0_Pos       (0UL)                     /*!< ADCMPDR0 (Bit 0)                                      */
#define S14AD_ADCMPDR0_ADCMPDR0_Msk       (0xffffUL)                /*!< ADCMPDR0 (Bitfield-Mask: 0xffff)                      */
/* =======================================================  ADCMPDR1  ======================================================== */
#define S14AD_ADCMPDR1_ADCMPDR1_Pos       (0UL)                     /*!< ADCMPDR1 (Bit 0)                                      */
#define S14AD_ADCMPDR1_ADCMPDR1_Msk       (0xffffUL)                /*!< ADCMPDR1 (Bitfield-Mask: 0xffff)                      */
/* =======================================================  ADCMPSR0  ======================================================== */
#define S14AD_ADCMPSR0_CMPSTCHA06_Pos     (6UL)                     /*!< CMPSTCHA06 (Bit 6)                                    */
#define S14AD_ADCMPSR0_CMPSTCHA06_Msk     (0x40UL)                  /*!< CMPSTCHA06 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR0_CMPSTCHA05_Pos     (5UL)                     /*!< CMPSTCHA05 (Bit 5)                                    */
#define S14AD_ADCMPSR0_CMPSTCHA05_Msk     (0x20UL)                  /*!< CMPSTCHA05 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR0_CMPSTCHA04_Pos     (4UL)                     /*!< CMPSTCHA04 (Bit 4)                                    */
#define S14AD_ADCMPSR0_CMPSTCHA04_Msk     (0x10UL)                  /*!< CMPSTCHA04 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR0_CMPSTCHA03_Pos     (3UL)                     /*!< CMPSTCHA03 (Bit 3)                                    */
#define S14AD_ADCMPSR0_CMPSTCHA03_Msk     (0x8UL)                   /*!< CMPSTCHA03 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR0_CMPSTCHA02_Pos     (2UL)                     /*!< CMPSTCHA02 (Bit 2)                                    */
#define S14AD_ADCMPSR0_CMPSTCHA02_Msk     (0x4UL)                   /*!< CMPSTCHA02 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR0_CMPSTCHA01_Pos     (1UL)                     /*!< CMPSTCHA01 (Bit 1)                                    */
#define S14AD_ADCMPSR0_CMPSTCHA01_Msk     (0x2UL)                   /*!< CMPSTCHA01 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR0_CMPSTCHA00_Pos     (0UL)                     /*!< CMPSTCHA00 (Bit 0)                                    */
#define S14AD_ADCMPSR0_CMPSTCHA00_Msk     (0x1UL)                   /*!< CMPSTCHA00 (Bitfield-Mask: 0x01)                      */
/* =======================================================  ADCMPSR1  ======================================================== */
#define S14AD_ADCMPSR1_CMPSTCHA28_Pos     (12UL)                    /*!< CMPSTCHA28 (Bit 12)                                   */
#define S14AD_ADCMPSR1_CMPSTCHA28_Msk     (0x1000UL)                /*!< CMPSTCHA28 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR1_CMPSTCHA27_Pos     (11UL)                    /*!< CMPSTCHA27 (Bit 11)                                   */
#define S14AD_ADCMPSR1_CMPSTCHA27_Msk     (0x800UL)                 /*!< CMPSTCHA27 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR1_CMPSTCHA26_Pos     (10UL)                    /*!< CMPSTCHA26 (Bit 10)                                   */
#define S14AD_ADCMPSR1_CMPSTCHA26_Msk     (0x400UL)                 /*!< CMPSTCHA26 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR1_CMPSTCHA25_Pos     (9UL)                     /*!< CMPSTCHA25 (Bit 9)                                    */
#define S14AD_ADCMPSR1_CMPSTCHA25_Msk     (0x200UL)                 /*!< CMPSTCHA25 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR1_CMPSTCHA24_Pos     (8UL)                     /*!< CMPSTCHA24 (Bit 8)                                    */
#define S14AD_ADCMPSR1_CMPSTCHA24_Msk     (0x100UL)                 /*!< CMPSTCHA24 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR1_CMPSTCHA23_Pos     (7UL)                     /*!< CMPSTCHA23 (Bit 7)                                    */
#define S14AD_ADCMPSR1_CMPSTCHA23_Msk     (0x80UL)                  /*!< CMPSTCHA23 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR1_CMPSTCHA22_Pos     (6UL)                     /*!< CMPSTCHA22 (Bit 6)                                    */
#define S14AD_ADCMPSR1_CMPSTCHA22_Msk     (0x40UL)                  /*!< CMPSTCHA22 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR1_CMPSTCHA21_Pos     (5UL)                     /*!< CMPSTCHA21 (Bit 5)                                    */
#define S14AD_ADCMPSR1_CMPSTCHA21_Msk     (0x20UL)                  /*!< CMPSTCHA21 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR1_CMPSTCHA20_Pos     (4UL)                     /*!< CMPSTCHA20 (Bit 4)                                    */
#define S14AD_ADCMPSR1_CMPSTCHA20_Msk     (0x10UL)                  /*!< CMPSTCHA20 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR1_CMPSTCHA17_Pos     (1UL)                     /*!< CMPSTCHA17 (Bit 1)                                    */
#define S14AD_ADCMPSR1_CMPSTCHA17_Msk     (0x2UL)                   /*!< CMPSTCHA17 (Bitfield-Mask: 0x01)                      */
#define S14AD_ADCMPSR1_CMPSTCHA16_Pos     (0UL)                     /*!< CMPSTCHA16 (Bit 0)                                    */
#define S14AD_ADCMPSR1_CMPSTCHA16_Msk     (0x1UL)                   /*!< CMPSTCHA16 (Bitfield-Mask: 0x01)                      */
/* =======================================================  ADCMPSER  ======================================================== */
#define S14AD_ADCMPSER_CMPSTTSA_Pos       (0UL)                     /*!< CMPSTTSA (Bit 0)                                      */
#define S14AD_ADCMPSER_CMPSTTSA_Msk       (0x1UL)                   /*!< CMPSTTSA (Bitfield-Mask: 0x01)                        */
/* =======================================================  ADCMPBNSR  ======================================================= */
#define S14AD_ADCMPBNSR_CMPLB_Pos         (7UL)                     /*!< CMPLB (Bit 7)                                         */
#define S14AD_ADCMPBNSR_CMPLB_Msk         (0x80UL)                  /*!< CMPLB (Bitfield-Mask: 0x01)                           */
#define S14AD_ADCMPBNSR_CMPCHB_Pos        (0UL)                     /*!< CMPCHB (Bit 0)                                        */
#define S14AD_ADCMPBNSR_CMPCHB_Msk        (0x3fUL)                  /*!< CMPCHB (Bitfield-Mask: 0x3f)                          */
/* =======================================================  ADWINLLB  ======================================================== */
#define S14AD_ADWINLLB_ADWINLLB_Pos       (0UL)                     /*!< ADWINLLB (Bit 0)                                      */
#define S14AD_ADWINLLB_ADWINLLB_Msk       (0xffffUL)                /*!< ADWINLLB (Bitfield-Mask: 0xffff)                      */
/* =======================================================  ADWINULB  ======================================================== */
#define S14AD_ADWINULB_ADWINULB_Pos       (0UL)                     /*!< ADWINULB (Bit 0)                                      */
#define S14AD_ADWINULB_ADWINULB_Msk       (0xffffUL)                /*!< ADWINULB (Bitfield-Mask: 0xffff)                      */
/* =======================================================  ADCMPBSR  ======================================================== */
#define S14AD_ADCMPBSR_CMPSTB_Pos         (0UL)                     /*!< CMPSTB (Bit 0)                                        */
#define S14AD_ADCMPBSR_CMPSTB_Msk         (0x1UL)                   /*!< CMPSTB (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADSSTRL  ======================================================== */
#define S14AD_ADSSTRL_SST_Pos             (0UL)                     /*!< SST (Bit 0)                                           */
#define S14AD_ADSSTRL_SST_Msk             (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTRT  ======================================================== */
#define S14AD_ADSSTRT_SST_Pos             (0UL)                     /*!< SST (Bit 0)                                           */
#define S14AD_ADSSTRT_SST_Msk             (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR0  ======================================================== */
#define S14AD_ADSSTR0_SST_Pos             (0UL)                     /*!< SST (Bit 0)                                           */
#define S14AD_ADSSTR0_SST_Msk             (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR1  ======================================================== */
#define S14AD_ADSSTR1_SST_Pos             (0UL)                     /*!< SST (Bit 0)                                           */
#define S14AD_ADSSTR1_SST_Msk             (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR2  ======================================================== */
#define S14AD_ADSSTR2_SST_Pos             (0UL)                     /*!< SST (Bit 0)                                           */
#define S14AD_ADSSTR2_SST_Msk             (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR3  ======================================================== */
#define S14AD_ADSSTR3_SST_Pos             (0UL)                     /*!< SST (Bit 0)                                           */
#define S14AD_ADSSTR3_SST_Msk             (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR4  ======================================================== */
#define S14AD_ADSSTR4_SST_Pos             (0UL)                     /*!< SST (Bit 0)                                           */
#define S14AD_ADSSTR4_SST_Msk             (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR5  ======================================================== */
#define S14AD_ADSSTR5_SST_Pos             (0UL)                     /*!< SST (Bit 0)                                           */
#define S14AD_ADSSTR5_SST_Msk             (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR6  ======================================================== */
#define S14AD_ADSSTR6_SST_Pos             (0UL)                     /*!< SST (Bit 0)                                           */
#define S14AD_ADSSTR6_SST_Msk             (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADELCCR  ======================================================== */
#define S14AD_ADELCCR_GCELC_Pos           (2UL)                     /*!< GCELC (Bit 2)                                         */
#define S14AD_ADELCCR_GCELC_Msk           (0x4UL)                   /*!< GCELC (Bitfield-Mask: 0x01)                           */
#define S14AD_ADELCCR_ELCC_Pos            (0UL)                     /*!< ELCC (Bit 0)                                          */
#define S14AD_ADELCCR_ELCC_Msk            (0x3UL)                   /*!< ELCC (Bitfield-Mask: 0x03)                            */
/* =======================================================  ADSCLKCR  ======================================================== */
#define S14AD_ADSCLKCR_SCLKEN_Pos         (0UL)                     /*!< SCLKEN (Bit 0)                                        */
#define S14AD_ADSCLKCR_SCLKEN_Msk         (0x1UL)                   /*!< SCLKEN (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADANSC0  ======================================================== */
#define S14AD_ADANSC0_ANSC06_Pos          (6UL)                     /*!< ANSC06 (Bit 6)                                        */
#define S14AD_ADANSC0_ANSC06_Msk          (0x40UL)                  /*!< ANSC06 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC0_ANSC05_Pos          (5UL)                     /*!< ANSC05 (Bit 5)                                        */
#define S14AD_ADANSC0_ANSC05_Msk          (0x20UL)                  /*!< ANSC05 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC0_ANSC04_Pos          (4UL)                     /*!< ANSC04 (Bit 4)                                        */
#define S14AD_ADANSC0_ANSC04_Msk          (0x10UL)                  /*!< ANSC04 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC0_ANSC03_Pos          (3UL)                     /*!< ANSC03 (Bit 3)                                        */
#define S14AD_ADANSC0_ANSC03_Msk          (0x8UL)                   /*!< ANSC03 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC0_ANSC02_Pos          (2UL)                     /*!< ANSC02 (Bit 2)                                        */
#define S14AD_ADANSC0_ANSC02_Msk          (0x4UL)                   /*!< ANSC02 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC0_ANSC01_Pos          (1UL)                     /*!< ANSC01 (Bit 1)                                        */
#define S14AD_ADANSC0_ANSC01_Msk          (0x2UL)                   /*!< ANSC01 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC0_ANSC00_Pos          (0UL)                     /*!< ANSC00 (Bit 0)                                        */
#define S14AD_ADANSC0_ANSC00_Msk          (0x1UL)                   /*!< ANSC00 (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADANSC1  ======================================================== */
#define S14AD_ADANSC1_ANSC28_Pos          (12UL)                    /*!< ANSC28 (Bit 12)                                       */
#define S14AD_ADANSC1_ANSC28_Msk          (0x1000UL)                /*!< ANSC28 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC1_ANSC27_Pos          (11UL)                    /*!< ANSC27 (Bit 11)                                       */
#define S14AD_ADANSC1_ANSC27_Msk          (0x800UL)                 /*!< ANSC27 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC1_ANSC26_Pos          (10UL)                    /*!< ANSC26 (Bit 10)                                       */
#define S14AD_ADANSC1_ANSC26_Msk          (0x400UL)                 /*!< ANSC26 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC1_ANSC25_Pos          (9UL)                     /*!< ANSC25 (Bit 9)                                        */
#define S14AD_ADANSC1_ANSC25_Msk          (0x200UL)                 /*!< ANSC25 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC1_ANSC24_Pos          (8UL)                     /*!< ANSC24 (Bit 8)                                        */
#define S14AD_ADANSC1_ANSC24_Msk          (0x100UL)                 /*!< ANSC24 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC1_ANSC23_Pos          (7UL)                     /*!< ANSC23 (Bit 7)                                        */
#define S14AD_ADANSC1_ANSC23_Msk          (0x80UL)                  /*!< ANSC23 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC1_ANSC22_Pos          (6UL)                     /*!< ANSC22 (Bit 6)                                        */
#define S14AD_ADANSC1_ANSC22_Msk          (0x40UL)                  /*!< ANSC22 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC1_ANSC21_Pos          (5UL)                     /*!< ANSC21 (Bit 5)                                        */
#define S14AD_ADANSC1_ANSC21_Msk          (0x20UL)                  /*!< ANSC21 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC1_ANSC20_Pos          (4UL)                     /*!< ANSC20 (Bit 4)                                        */
#define S14AD_ADANSC1_ANSC20_Msk          (0x10UL)                  /*!< ANSC20 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC1_ANSC17_Pos          (1UL)                     /*!< ANSC17 (Bit 1)                                        */
#define S14AD_ADANSC1_ANSC17_Msk          (0x2UL)                   /*!< ANSC17 (Bitfield-Mask: 0x01)                          */
#define S14AD_ADANSC1_ANSC16_Pos          (0UL)                     /*!< ANSC16 (Bit 0)                                        */
#define S14AD_ADANSC1_ANSC16_Msk          (0x1UL)                   /*!< ANSC16 (Bitfield-Mask: 0x01)                          */
/* =======================================================  ADGCEXCR  ======================================================== */
#define S14AD_ADGCEXCR_TSSC_Pos           (0UL)                     /*!< TSSC (Bit 0)                                          */
#define S14AD_ADGCEXCR_TSSC_Msk           (0x1UL)                   /*!< TSSC (Bitfield-Mask: 0x01)                            */
/* =======================================================  ADGCTRGR  ======================================================== */
#define S14AD_ADGCTRGR_GRCE_Pos           (7UL)                     /*!< GRCE (Bit 7)                                          */
#define S14AD_ADGCTRGR_GRCE_Msk           (0x80UL)                  /*!< GRCE (Bitfield-Mask: 0x01)                            */
#define S14AD_ADGCTRGR_GCADIE_Pos         (6UL)                     /*!< GCADIE (Bit 6)                                        */
#define S14AD_ADGCTRGR_GCADIE_Msk         (0x40UL)                  /*!< GCADIE (Bitfield-Mask: 0x01)                          */
#define S14AD_ADGCTRGR_TRSC_Pos           (0UL)                     /*!< TRSC (Bit 0)                                          */
#define S14AD_ADGCTRGR_TRSC_Msk           (0x3fUL)                  /*!< TRSC (Bitfield-Mask: 0x3f)                            */
/* ========================================================  ADCALC  ========================================================= */
#define S14AD_ADCALC_CALST_Pos            (7UL)                     /*!< CALST (Bit 7)                                         */
#define S14AD_ADCALC_CALST_Msk            (0x80UL)                  /*!< CALST (Bitfield-Mask: 0x01)                           */
#define S14AD_ADCALC_CALEN_Pos            (6UL)                     /*!< CALEN (Bit 6)                                         */
#define S14AD_ADCALC_CALEN_Msk            (0x40UL)                  /*!< CALEN (Bitfield-Mask: 0x01)                           */
/* ========================================================  ADEDCR0  ======================================================== */
#define S14AD_ADEDCR0_EDANC3_Pos          (12UL)                    /*!< EDANC3 (Bit 12)                                       */
#define S14AD_ADEDCR0_EDANC3_Msk          (0x3000UL)                /*!< EDANC3 (Bitfield-Mask: 0x03)                          */
#define S14AD_ADEDCR0_EDANC2_Pos          (8UL)                     /*!< EDANC2 (Bit 8)                                        */
#define S14AD_ADEDCR0_EDANC2_Msk          (0x300UL)                 /*!< EDANC2 (Bitfield-Mask: 0x03)                          */
#define S14AD_ADEDCR0_EDANC1_Pos          (4UL)                     /*!< EDANC1 (Bit 4)                                        */
#define S14AD_ADEDCR0_EDANC1_Msk          (0x30UL)                  /*!< EDANC1 (Bitfield-Mask: 0x03)                          */
#define S14AD_ADEDCR0_EDANC0_Pos          (0UL)                     /*!< EDANC0 (Bit 0)                                        */
#define S14AD_ADEDCR0_EDANC0_Msk          (0x3UL)                   /*!< EDANC0 (Bitfield-Mask: 0x03)                          */
/* ========================================================  ADEDCR1  ======================================================== */
#define S14AD_ADEDCR1_EDANC6_Pos          (8UL)                     /*!< EDANC6 (Bit 8)                                        */
#define S14AD_ADEDCR1_EDANC6_Msk          (0x300UL)                 /*!< EDANC6 (Bitfield-Mask: 0x03)                          */
#define S14AD_ADEDCR1_EDANC5_Pos          (4UL)                     /*!< EDANC5 (Bit 4)                                        */
#define S14AD_ADEDCR1_EDANC5_Msk          (0x30UL)                  /*!< EDANC5 (Bitfield-Mask: 0x03)                          */
#define S14AD_ADEDCR1_EDANC4_Pos          (0UL)                     /*!< EDANC4 (Bit 0)                                        */
#define S14AD_ADEDCR1_EDANC4_Msk          (0x3UL)                   /*!< EDANC4 (Bitfield-Mask: 0x03)                          */
/* ========================================================  ADEDCR4  ======================================================== */
#define S14AD_ADEDCR4_EDANC17_Pos         (4UL)                     /*!< EDANC17 (Bit 4)                                       */
#define S14AD_ADEDCR4_EDANC17_Msk         (0x30UL)                  /*!< EDANC17 (Bitfield-Mask: 0x03)                         */
#define S14AD_ADEDCR4_EDANC16_Pos         (0UL)                     /*!< EDANC16 (Bit 0)                                       */
#define S14AD_ADEDCR4_EDANC16_Msk         (0x3UL)                   /*!< EDANC16 (Bitfield-Mask: 0x03)                         */
/* ========================================================  ADEDCR5  ======================================================== */
#define S14AD_ADEDCR5_EDANC23_Pos         (12UL)                    /*!< EDANC23 (Bit 12)                                      */
#define S14AD_ADEDCR5_EDANC23_Msk         (0x3000UL)                /*!< EDANC23 (Bitfield-Mask: 0x03)                         */
#define S14AD_ADEDCR5_EDANC22_Pos         (8UL)                     /*!< EDANC22 (Bit 8)                                       */
#define S14AD_ADEDCR5_EDANC22_Msk         (0x300UL)                 /*!< EDANC22 (Bitfield-Mask: 0x03)                         */
#define S14AD_ADEDCR5_EDANC21_Pos         (4UL)                     /*!< EDANC21 (Bit 4)                                       */
#define S14AD_ADEDCR5_EDANC21_Msk         (0x30UL)                  /*!< EDANC21 (Bitfield-Mask: 0x03)                         */
#define S14AD_ADEDCR5_EDANC20_Pos         (0UL)                     /*!< EDANC20 (Bit 0)                                       */
#define S14AD_ADEDCR5_EDANC20_Msk         (0x3UL)                   /*!< EDANC20 (Bitfield-Mask: 0x03)                         */
/* ========================================================  ADEDCR6  ======================================================== */
#define S14AD_ADEDCR6_EDANC27_Pos         (12UL)                    /*!< EDANC27 (Bit 12)                                      */
#define S14AD_ADEDCR6_EDANC27_Msk         (0x3000UL)                /*!< EDANC27 (Bitfield-Mask: 0x03)                         */
#define S14AD_ADEDCR6_EDANC26_Pos         (8UL)                     /*!< EDANC26 (Bit 8)                                       */
#define S14AD_ADEDCR6_EDANC26_Msk         (0x300UL)                 /*!< EDANC26 (Bitfield-Mask: 0x03)                         */
#define S14AD_ADEDCR6_EDANC25_Pos         (4UL)                     /*!< EDANC25 (Bit 4)                                       */
#define S14AD_ADEDCR6_EDANC25_Msk         (0x30UL)                  /*!< EDANC25 (Bitfield-Mask: 0x03)                         */
#define S14AD_ADEDCR6_EDANC24_Pos         (0UL)                     /*!< EDANC24 (Bit 0)                                       */
#define S14AD_ADEDCR6_EDANC24_Msk         (0x3UL)                   /*!< EDANC24 (Bitfield-Mask: 0x03)                         */
/* ========================================================  ADEDCR7  ======================================================== */
#define S14AD_ADEDCR7_EDANC28_Pos         (0UL)                     /*!< EDANC28 (Bit 0)                                       */
#define S14AD_ADEDCR7_EDANC28_Msk         (0x3UL)                   /*!< EDANC28 (Bitfield-Mask: 0x03)                         */
/* =======================================================  ADEDEXCR  ======================================================== */
#define S14AD_ADEDEXCR_EDTSC_Pos          (4UL)                     /*!< EDTSC (Bit 4)                                         */
#define S14AD_ADEDEXCR_EDTSC_Msk          (0x30UL)                  /*!< EDTSC (Bitfield-Mask: 0x03)                           */
#define S14AD_ADEDEXCR_EDDIAGC_Pos        (0UL)                     /*!< EDDIAGC (Bit 0)                                       */
#define S14AD_ADEDEXCR_EDDIAGC_Msk        (0x3UL)                   /*!< EDDIAGC (Bitfield-Mask: 0x03)                         */
/* =======================================================  ADEDDMY0  ======================================================== */
#define S14AD_ADEDDMY0_EDDMY0_Pos         (0UL)                     /*!< EDDMY0 (Bit 0)                                        */
#define S14AD_ADEDDMY0_EDDMY0_Msk         (0x3fffUL)                /*!< EDDMY0 (Bitfield-Mask: 0x3fff)                        */
/* =======================================================  ADEDDMY1  ======================================================== */
#define S14AD_ADEDDMY1_EDDMY1_Pos         (0UL)                     /*!< EDDMY1 (Bit 0)                                        */
#define S14AD_ADEDDMY1_EDDMY1_Msk         (0x3fffUL)                /*!< EDDMY1 (Bitfield-Mask: 0x3fff)                        */
/* ========================================================  ADSCS0  ========================================================= */
#define S14AD_ADSCS0_SCS00_Pos            (0UL)                     /*!< SCS00 (Bit 0)                                         */
#define S14AD_ADSCS0_SCS00_Msk            (0x1fUL)                  /*!< SCS00 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS1  ========================================================= */
#define S14AD_ADSCS1_SCS01_Pos            (0UL)                     /*!< SCS01 (Bit 0)                                         */
#define S14AD_ADSCS1_SCS01_Msk            (0x1fUL)                  /*!< SCS01 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS2  ========================================================= */
#define S14AD_ADSCS2_SCS02_Pos            (0UL)                     /*!< SCS02 (Bit 0)                                         */
#define S14AD_ADSCS2_SCS02_Msk            (0x1fUL)                  /*!< SCS02 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS3  ========================================================= */
#define S14AD_ADSCS3_SCS03_Pos            (0UL)                     /*!< SCS03 (Bit 0)                                         */
#define S14AD_ADSCS3_SCS03_Msk            (0x1fUL)                  /*!< SCS03 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS4  ========================================================= */
#define S14AD_ADSCS4_SCS04_Pos            (0UL)                     /*!< SCS04 (Bit 0)                                         */
#define S14AD_ADSCS4_SCS04_Msk            (0x1fUL)                  /*!< SCS04 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS5  ========================================================= */
#define S14AD_ADSCS5_SCS05_Pos            (0UL)                     /*!< SCS05 (Bit 0)                                         */
#define S14AD_ADSCS5_SCS05_Msk            (0x1fUL)                  /*!< SCS05 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS6  ========================================================= */
#define S14AD_ADSCS6_SCS06_Pos            (0UL)                     /*!< SCS06 (Bit 0)                                         */
#define S14AD_ADSCS6_SCS06_Msk            (0x1fUL)                  /*!< SCS06 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS16  ======================================================== */
#define S14AD_ADSCS16_SCS07_Pos           (0UL)                     /*!< SCS07 (Bit 0)                                         */
#define S14AD_ADSCS16_SCS07_Msk           (0x1fUL)                  /*!< SCS07 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS17  ======================================================== */
#define S14AD_ADSCS17_SCS08_Pos           (0UL)                     /*!< SCS08 (Bit 0)                                         */
#define S14AD_ADSCS17_SCS08_Msk           (0x1fUL)                  /*!< SCS08 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS20  ======================================================== */
#define S14AD_ADSCS20_SCS11_Pos           (0UL)                     /*!< SCS11 (Bit 0)                                         */
#define S14AD_ADSCS20_SCS11_Msk           (0x1fUL)                  /*!< SCS11 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS21  ======================================================== */
#define S14AD_ADSCS21_SCS12_Pos           (0UL)                     /*!< SCS12 (Bit 0)                                         */
#define S14AD_ADSCS21_SCS12_Msk           (0x1fUL)                  /*!< SCS12 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS22  ======================================================== */
#define S14AD_ADSCS22_SCS13_Pos           (0UL)                     /*!< SCS13 (Bit 0)                                         */
#define S14AD_ADSCS22_SCS13_Msk           (0x1fUL)                  /*!< SCS13 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS23  ======================================================== */
#define S14AD_ADSCS23_SCS14_Pos           (0UL)                     /*!< SCS14 (Bit 0)                                         */
#define S14AD_ADSCS23_SCS14_Msk           (0x1fUL)                  /*!< SCS14 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS24  ======================================================== */
#define S14AD_ADSCS24_SCS15_Pos           (0UL)                     /*!< SCS15 (Bit 0)                                         */
#define S14AD_ADSCS24_SCS15_Msk           (0x1fUL)                  /*!< SCS15 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS25  ======================================================== */
#define S14AD_ADSCS25_SCS16_Pos           (0UL)                     /*!< SCS16 (Bit 0)                                         */
#define S14AD_ADSCS25_SCS16_Msk           (0x1fUL)                  /*!< SCS16 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS26  ======================================================== */
#define S14AD_ADSCS26_SCS17_Pos           (0UL)                     /*!< SCS17 (Bit 0)                                         */
#define S14AD_ADSCS26_SCS17_Msk           (0x1fUL)                  /*!< SCS17 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS27  ======================================================== */
#define S14AD_ADSCS27_SCS18_Pos           (0UL)                     /*!< SCS18 (Bit 0)                                         */
#define S14AD_ADSCS27_SCS18_Msk           (0x1fUL)                  /*!< SCS18 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS28  ======================================================== */
#define S14AD_ADSCS28_SCS19_Pos           (0UL)                     /*!< SCS19 (Bit 0)                                         */
#define S14AD_ADSCS28_SCS19_Msk           (0x1fUL)                  /*!< SCS19 (Bitfield-Mask: 0x1f)                           */


/* =========================================================================================================================== */
/* ================                                           SCI0                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  SMR  ========================================================== */
#define SCI0_SMR_CM_Pos                   (7UL)                     /*!< CM (Bit 7)                                            */
#define SCI0_SMR_CM_Msk                   (0x80UL)                  /*!< CM (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_CHR_Pos                  (6UL)                     /*!< CHR (Bit 6)                                           */
#define SCI0_SMR_CHR_Msk                  (0x40UL)                  /*!< CHR (Bitfield-Mask: 0x01)                             */
#define SCI0_SMR_PE_Pos                   (5UL)                     /*!< PE (Bit 5)                                            */
#define SCI0_SMR_PE_Msk                   (0x20UL)                  /*!< PE (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_PM_Pos                   (4UL)                     /*!< PM (Bit 4)                                            */
#define SCI0_SMR_PM_Msk                   (0x10UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_STOP_Pos                 (3UL)                     /*!< STOP (Bit 3)                                          */
#define SCI0_SMR_STOP_Msk                 (0x8UL)                   /*!< STOP (Bitfield-Mask: 0x01)                            */
#define SCI0_SMR_MP_Pos                   (2UL)                     /*!< MP (Bit 2)                                            */
#define SCI0_SMR_MP_Msk                   (0x4UL)                   /*!< MP (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_CKS_Pos                  (0UL)                     /*!< CKS (Bit 0)                                           */
#define SCI0_SMR_CKS_Msk                  (0x3UL)                   /*!< CKS (Bitfield-Mask: 0x03)                             */
/* =======================================================  SMR_SMCI  ======================================================== */
#define SCI0_SMR_SMCI_GM_Pos              (7UL)                     /*!< GM (Bit 7)                                            */
#define SCI0_SMR_SMCI_GM_Msk              (0x80UL)                  /*!< GM (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_SMCI_BLK_Pos             (6UL)                     /*!< BLK (Bit 6)                                           */
#define SCI0_SMR_SMCI_BLK_Msk             (0x40UL)                  /*!< BLK (Bitfield-Mask: 0x01)                             */
#define SCI0_SMR_SMCI_PE_Pos              (5UL)                     /*!< PE (Bit 5)                                            */
#define SCI0_SMR_SMCI_PE_Msk              (0x20UL)                  /*!< PE (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_SMCI_PM_Pos              (4UL)                     /*!< PM (Bit 4)                                            */
#define SCI0_SMR_SMCI_PM_Msk              (0x10UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_SMCI_BCP_Pos             (2UL)                     /*!< BCP (Bit 2)                                           */
#define SCI0_SMR_SMCI_BCP_Msk             (0xcUL)                   /*!< BCP (Bitfield-Mask: 0x03)                             */
#define SCI0_SMR_SMCI_CKS_Pos             (0UL)                     /*!< CKS (Bit 0)                                           */
#define SCI0_SMR_SMCI_CKS_Msk             (0x3UL)                   /*!< CKS (Bitfield-Mask: 0x03)                             */
/* ==========================================================  BRR  ========================================================== */
#define SCI0_BRR_BRR_Pos                  (0UL)                     /*!< BRR (Bit 0)                                           */
#define SCI0_BRR_BRR_Msk                  (0xffUL)                  /*!< BRR (Bitfield-Mask: 0xff)                             */
/* ==========================================================  SCR  ========================================================== */
#define SCI0_SCR_TIE_Pos                  (7UL)                     /*!< TIE (Bit 7)                                           */
#define SCI0_SCR_TIE_Msk                  (0x80UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
#define SCI0_SCR_RIE_Pos                  (6UL)                     /*!< RIE (Bit 6)                                           */
#define SCI0_SCR_RIE_Msk                  (0x40UL)                  /*!< RIE (Bitfield-Mask: 0x01)                             */
#define SCI0_SCR_TE_Pos                   (5UL)                     /*!< TE (Bit 5)                                            */
#define SCI0_SCR_TE_Msk                   (0x20UL)                  /*!< TE (Bitfield-Mask: 0x01)                              */
#define SCI0_SCR_RE_Pos                   (4UL)                     /*!< RE (Bit 4)                                            */
#define SCI0_SCR_RE_Msk                   (0x10UL)                  /*!< RE (Bitfield-Mask: 0x01)                              */
#define SCI0_SCR_MPIE_Pos                 (3UL)                     /*!< MPIE (Bit 3)                                          */
#define SCI0_SCR_MPIE_Msk                 (0x8UL)                   /*!< MPIE (Bitfield-Mask: 0x01)                            */
#define SCI0_SCR_TEIE_Pos                 (2UL)                     /*!< TEIE (Bit 2)                                          */
#define SCI0_SCR_TEIE_Msk                 (0x4UL)                   /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define SCI0_SCR_CKE_Pos                  (0UL)                     /*!< CKE (Bit 0)                                           */
#define SCI0_SCR_CKE_Msk                  (0x3UL)                   /*!< CKE (Bitfield-Mask: 0x03)                             */
/* =======================================================  SCR_SMCI  ======================================================== */
#define SCI0_SCR_SMCI_TIE_Pos             (7UL)                     /*!< TIE (Bit 7)                                           */
#define SCI0_SCR_SMCI_TIE_Msk             (0x80UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
#define SCI0_SCR_SMCI_RIE_Pos             (6UL)                     /*!< RIE (Bit 6)                                           */
#define SCI0_SCR_SMCI_RIE_Msk             (0x40UL)                  /*!< RIE (Bitfield-Mask: 0x01)                             */
#define SCI0_SCR_SMCI_TE_Pos              (5UL)                     /*!< TE (Bit 5)                                            */
#define SCI0_SCR_SMCI_TE_Msk              (0x20UL)                  /*!< TE (Bitfield-Mask: 0x01)                              */
#define SCI0_SCR_SMCI_RE_Pos              (4UL)                     /*!< RE (Bit 4)                                            */
#define SCI0_SCR_SMCI_RE_Msk              (0x10UL)                  /*!< RE (Bitfield-Mask: 0x01)                              */
#define SCI0_SCR_SMCI_MPIE_Pos            (3UL)                     /*!< MPIE (Bit 3)                                          */
#define SCI0_SCR_SMCI_MPIE_Msk            (0x8UL)                   /*!< MPIE (Bitfield-Mask: 0x01)                            */
#define SCI0_SCR_SMCI_TEIE_Pos            (2UL)                     /*!< TEIE (Bit 2)                                          */
#define SCI0_SCR_SMCI_TEIE_Msk            (0x4UL)                   /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define SCI0_SCR_SMCI_CKE_Pos             (0UL)                     /*!< CKE (Bit 0)                                           */
#define SCI0_SCR_SMCI_CKE_Msk             (0x3UL)                   /*!< CKE (Bitfield-Mask: 0x03)                             */
/* ==========================================================  TDR  ========================================================== */
#define SCI0_TDR_TDR_Pos                  (0UL)                     /*!< TDR (Bit 0)                                           */
#define SCI0_TDR_TDR_Msk                  (0xffUL)                  /*!< TDR (Bitfield-Mask: 0xff)                             */
/* ==========================================================  SSR  ========================================================== */
#define SCI0_SSR_TDRE_Pos                 (7UL)                     /*!< TDRE (Bit 7)                                          */
#define SCI0_SSR_TDRE_Msk                 (0x80UL)                  /*!< TDRE (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_RDRF_Pos                 (6UL)                     /*!< RDRF (Bit 6)                                          */
#define SCI0_SSR_RDRF_Msk                 (0x40UL)                  /*!< RDRF (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_ORER_Pos                 (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI0_SSR_ORER_Msk                 (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_FER_Pos                  (4UL)                     /*!< FER (Bit 4)                                           */
#define SCI0_SSR_FER_Msk                  (0x10UL)                  /*!< FER (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_PER_Pos                  (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI0_SSR_PER_Msk                  (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_TEND_Pos                 (2UL)                     /*!< TEND (Bit 2)                                          */
#define SCI0_SSR_TEND_Msk                 (0x4UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_MPB_Pos                  (1UL)                     /*!< MPB (Bit 1)                                           */
#define SCI0_SSR_MPB_Msk                  (0x2UL)                   /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_MPBT_Pos                 (0UL)                     /*!< MPBT (Bit 0)                                          */
#define SCI0_SSR_MPBT_Msk                 (0x1UL)                   /*!< MPBT (Bitfield-Mask: 0x01)                            */
/* =======================================================  SSR_FIFO  ======================================================== */
#define SCI0_SSR_FIFO_TDFE_Pos            (7UL)                     /*!< TDFE (Bit 7)                                          */
#define SCI0_SSR_FIFO_TDFE_Msk            (0x80UL)                  /*!< TDFE (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_FIFO_RDF_Pos             (6UL)                     /*!< RDF (Bit 6)                                           */
#define SCI0_SSR_FIFO_RDF_Msk             (0x40UL)                  /*!< RDF (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_FIFO_ORER_Pos            (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI0_SSR_FIFO_ORER_Msk            (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_FIFO_FER_Pos             (4UL)                     /*!< FER (Bit 4)                                           */
#define SCI0_SSR_FIFO_FER_Msk             (0x10UL)                  /*!< FER (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_FIFO_PER_Pos             (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI0_SSR_FIFO_PER_Msk             (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_FIFO_TEND_Pos            (2UL)                     /*!< TEND (Bit 2)                                          */
#define SCI0_SSR_FIFO_TEND_Msk            (0x4UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_FIFO_DR_Pos              (0UL)                     /*!< DR (Bit 0)                                            */
#define SCI0_SSR_FIFO_DR_Msk              (0x1UL)                   /*!< DR (Bitfield-Mask: 0x01)                              */
/* =======================================================  SSR_SMCI  ======================================================== */
#define SCI0_SSR_SMCI_TDRE_Pos            (7UL)                     /*!< TDRE (Bit 7)                                          */
#define SCI0_SSR_SMCI_TDRE_Msk            (0x80UL)                  /*!< TDRE (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_SMCI_RDRF_Pos            (6UL)                     /*!< RDRF (Bit 6)                                          */
#define SCI0_SSR_SMCI_RDRF_Msk            (0x40UL)                  /*!< RDRF (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_SMCI_ORER_Pos            (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI0_SSR_SMCI_ORER_Msk            (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_SMCI_ERS_Pos             (4UL)                     /*!< ERS (Bit 4)                                           */
#define SCI0_SSR_SMCI_ERS_Msk             (0x10UL)                  /*!< ERS (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_SMCI_PER_Pos             (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI0_SSR_SMCI_PER_Msk             (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_SMCI_TEND_Pos            (2UL)                     /*!< TEND (Bit 2)                                          */
#define SCI0_SSR_SMCI_TEND_Msk            (0x4UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_SMCI_MPB_Pos             (1UL)                     /*!< MPB (Bit 1)                                           */
#define SCI0_SSR_SMCI_MPB_Msk             (0x2UL)                   /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_SMCI_MPBT_Pos            (0UL)                     /*!< MPBT (Bit 0)                                          */
#define SCI0_SSR_SMCI_MPBT_Msk            (0x1UL)                   /*!< MPBT (Bitfield-Mask: 0x01)                            */
/* ==========================================================  RDR  ========================================================== */
#define SCI0_RDR_RDR_Pos                  (0UL)                     /*!< RDR (Bit 0)                                           */
#define SCI0_RDR_RDR_Msk                  (0xffUL)                  /*!< RDR (Bitfield-Mask: 0xff)                             */
/* =========================================================  SCMR  ========================================================== */
#define SCI0_SCMR_BCP2_Pos                (7UL)                     /*!< BCP2 (Bit 7)                                          */
#define SCI0_SCMR_BCP2_Msk                (0x80UL)                  /*!< BCP2 (Bitfield-Mask: 0x01)                            */
#define SCI0_SCMR_CHR1_Pos                (4UL)                     /*!< CHR1 (Bit 4)                                          */
#define SCI0_SCMR_CHR1_Msk                (0x10UL)                  /*!< CHR1 (Bitfield-Mask: 0x01)                            */
#define SCI0_SCMR_SDIR_Pos                (3UL)                     /*!< SDIR (Bit 3)                                          */
#define SCI0_SCMR_SDIR_Msk                (0x8UL)                   /*!< SDIR (Bitfield-Mask: 0x01)                            */
#define SCI0_SCMR_SINV_Pos                (2UL)                     /*!< SINV (Bit 2)                                          */
#define SCI0_SCMR_SINV_Msk                (0x4UL)                   /*!< SINV (Bitfield-Mask: 0x01)                            */
#define SCI0_SCMR_SMIF_Pos                (0UL)                     /*!< SMIF (Bit 0)                                          */
#define SCI0_SCMR_SMIF_Msk                (0x1UL)                   /*!< SMIF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SEMR  ========================================================== */
#define SCI0_SEMR_RXDESEL_Pos             (7UL)                     /*!< RXDESEL (Bit 7)                                       */
#define SCI0_SEMR_RXDESEL_Msk             (0x80UL)                  /*!< RXDESEL (Bitfield-Mask: 0x01)                         */
#define SCI0_SEMR_BGDM_Pos                (6UL)                     /*!< BGDM (Bit 6)                                          */
#define SCI0_SEMR_BGDM_Msk                (0x40UL)                  /*!< BGDM (Bitfield-Mask: 0x01)                            */
#define SCI0_SEMR_NFEN_Pos                (5UL)                     /*!< NFEN (Bit 5)                                          */
#define SCI0_SEMR_NFEN_Msk                (0x20UL)                  /*!< NFEN (Bitfield-Mask: 0x01)                            */
#define SCI0_SEMR_ABCS_Pos                (4UL)                     /*!< ABCS (Bit 4)                                          */
#define SCI0_SEMR_ABCS_Msk                (0x10UL)                  /*!< ABCS (Bitfield-Mask: 0x01)                            */
#define SCI0_SEMR_ABCSE_Pos               (3UL)                     /*!< ABCSE (Bit 3)                                         */
#define SCI0_SEMR_ABCSE_Msk               (0x8UL)                   /*!< ABCSE (Bitfield-Mask: 0x01)                           */
#define SCI0_SEMR_BRME_Pos                (2UL)                     /*!< BRME (Bit 2)                                          */
#define SCI0_SEMR_BRME_Msk                (0x4UL)                   /*!< BRME (Bitfield-Mask: 0x01)                            */
/* =========================================================  SNFR  ========================================================== */
#define SCI0_SNFR_NFCS_Pos                (0UL)                     /*!< NFCS (Bit 0)                                          */
#define SCI0_SNFR_NFCS_Msk                (0x7UL)                   /*!< NFCS (Bitfield-Mask: 0x07)                            */
/* =========================================================  SIMR1  ========================================================= */
#define SCI0_SIMR1_IICDL_Pos              (3UL)                     /*!< IICDL (Bit 3)                                         */
#define SCI0_SIMR1_IICDL_Msk              (0xf8UL)                  /*!< IICDL (Bitfield-Mask: 0x1f)                           */
#define SCI0_SIMR1_IICM_Pos               (0UL)                     /*!< IICM (Bit 0)                                          */
#define SCI0_SIMR1_IICM_Msk               (0x1UL)                   /*!< IICM (Bitfield-Mask: 0x01)                            */
/* =========================================================  SIMR2  ========================================================= */
#define SCI0_SIMR2_IICACKT_Pos            (5UL)                     /*!< IICACKT (Bit 5)                                       */
#define SCI0_SIMR2_IICACKT_Msk            (0x20UL)                  /*!< IICACKT (Bitfield-Mask: 0x01)                         */
#define SCI0_SIMR2_IICCSC_Pos             (1UL)                     /*!< IICCSC (Bit 1)                                        */
#define SCI0_SIMR2_IICCSC_Msk             (0x2UL)                   /*!< IICCSC (Bitfield-Mask: 0x01)                          */
#define SCI0_SIMR2_IICINTM_Pos            (0UL)                     /*!< IICINTM (Bit 0)                                       */
#define SCI0_SIMR2_IICINTM_Msk            (0x1UL)                   /*!< IICINTM (Bitfield-Mask: 0x01)                         */
/* =========================================================  SIMR3  ========================================================= */
#define SCI0_SIMR3_IICSCLS_Pos            (6UL)                     /*!< IICSCLS (Bit 6)                                       */
#define SCI0_SIMR3_IICSCLS_Msk            (0xc0UL)                  /*!< IICSCLS (Bitfield-Mask: 0x03)                         */
#define SCI0_SIMR3_IICSDAS_Pos            (4UL)                     /*!< IICSDAS (Bit 4)                                       */
#define SCI0_SIMR3_IICSDAS_Msk            (0x30UL)                  /*!< IICSDAS (Bitfield-Mask: 0x03)                         */
#define SCI0_SIMR3_IICSTIF_Pos            (3UL)                     /*!< IICSTIF (Bit 3)                                       */
#define SCI0_SIMR3_IICSTIF_Msk            (0x8UL)                   /*!< IICSTIF (Bitfield-Mask: 0x01)                         */
#define SCI0_SIMR3_IICSTPREQ_Pos          (2UL)                     /*!< IICSTPREQ (Bit 2)                                     */
#define SCI0_SIMR3_IICSTPREQ_Msk          (0x4UL)                   /*!< IICSTPREQ (Bitfield-Mask: 0x01)                       */
#define SCI0_SIMR3_IICRSTAREQ_Pos         (1UL)                     /*!< IICRSTAREQ (Bit 1)                                    */
#define SCI0_SIMR3_IICRSTAREQ_Msk         (0x2UL)                   /*!< IICRSTAREQ (Bitfield-Mask: 0x01)                      */
#define SCI0_SIMR3_IICSTAREQ_Pos          (0UL)                     /*!< IICSTAREQ (Bit 0)                                     */
#define SCI0_SIMR3_IICSTAREQ_Msk          (0x1UL)                   /*!< IICSTAREQ (Bitfield-Mask: 0x01)                       */
/* =========================================================  SISR  ========================================================== */
#define SCI0_SISR_IICACKR_Pos             (0UL)                     /*!< IICACKR (Bit 0)                                       */
#define SCI0_SISR_IICACKR_Msk             (0x1UL)                   /*!< IICACKR (Bitfield-Mask: 0x01)                         */
/* =========================================================  SPMR  ========================================================== */
#define SCI0_SPMR_CKPH_Pos                (7UL)                     /*!< CKPH (Bit 7)                                          */
#define SCI0_SPMR_CKPH_Msk                (0x80UL)                  /*!< CKPH (Bitfield-Mask: 0x01)                            */
#define SCI0_SPMR_CKPOL_Pos               (6UL)                     /*!< CKPOL (Bit 6)                                         */
#define SCI0_SPMR_CKPOL_Msk               (0x40UL)                  /*!< CKPOL (Bitfield-Mask: 0x01)                           */
#define SCI0_SPMR_MFF_Pos                 (4UL)                     /*!< MFF (Bit 4)                                           */
#define SCI0_SPMR_MFF_Msk                 (0x10UL)                  /*!< MFF (Bitfield-Mask: 0x01)                             */
#define SCI0_SPMR_MSS_Pos                 (2UL)                     /*!< MSS (Bit 2)                                           */
#define SCI0_SPMR_MSS_Msk                 (0x4UL)                   /*!< MSS (Bitfield-Mask: 0x01)                             */
#define SCI0_SPMR_CTSE_Pos                (1UL)                     /*!< CTSE (Bit 1)                                          */
#define SCI0_SPMR_CTSE_Msk                (0x2UL)                   /*!< CTSE (Bitfield-Mask: 0x01)                            */
#define SCI0_SPMR_SSE_Pos                 (0UL)                     /*!< SSE (Bit 0)                                           */
#define SCI0_SPMR_SSE_Msk                 (0x1UL)                   /*!< SSE (Bitfield-Mask: 0x01)                             */
/* =========================================================  TDRHL  ========================================================= */
#define SCI0_TDRHL_TDRHL_Pos              (0UL)                     /*!< TDRHL (Bit 0)                                         */
#define SCI0_TDRHL_TDRHL_Msk              (0xffffUL)                /*!< TDRHL (Bitfield-Mask: 0xffff)                         */
/* ========================================================  FTDRHL  ========================================================= */
#define SCI0_FTDRHL_MPBT_Pos              (9UL)                     /*!< MPBT (Bit 9)                                          */
#define SCI0_FTDRHL_MPBT_Msk              (0x200UL)                 /*!< MPBT (Bitfield-Mask: 0x01)                            */
#define SCI0_FTDRHL_TDAT_Pos              (0UL)                     /*!< TDAT (Bit 0)                                          */
#define SCI0_FTDRHL_TDAT_Msk              (0x1ffUL)                 /*!< TDAT (Bitfield-Mask: 0x1ff)                           */
/* =========================================================  FTDRH  ========================================================= */
#define SCI0_FTDRH_MPBT_Pos               (1UL)                     /*!< MPBT (Bit 1)                                          */
#define SCI0_FTDRH_MPBT_Msk               (0x2UL)                   /*!< MPBT (Bitfield-Mask: 0x01)                            */
#define SCI0_FTDRH_TDATH_Pos              (0UL)                     /*!< TDATH (Bit 0)                                         */
#define SCI0_FTDRH_TDATH_Msk              (0x1UL)                   /*!< TDATH (Bitfield-Mask: 0x01)                           */
/* =========================================================  FTDRL  ========================================================= */
#define SCI0_FTDRL_TDATL_Pos              (0UL)                     /*!< TDATL (Bit 0)                                         */
#define SCI0_FTDRL_TDATL_Msk              (0xffUL)                  /*!< TDATL (Bitfield-Mask: 0xff)                           */
/* =========================================================  RDRHL  ========================================================= */
#define SCI0_RDRHL_RDRHL_Pos              (0UL)                     /*!< RDRHL (Bit 0)                                         */
#define SCI0_RDRHL_RDRHL_Msk              (0xffffUL)                /*!< RDRHL (Bitfield-Mask: 0xffff)                         */
/* ========================================================  FRDRHL  ========================================================= */
#define SCI0_FRDRHL_RDF_Pos               (14UL)                    /*!< RDF (Bit 14)                                          */
#define SCI0_FRDRHL_RDF_Msk               (0x4000UL)                /*!< RDF (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRHL_ORER_Pos              (13UL)                    /*!< ORER (Bit 13)                                         */
#define SCI0_FRDRHL_ORER_Msk              (0x2000UL)                /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI0_FRDRHL_FER_Pos               (12UL)                    /*!< FER (Bit 12)                                          */
#define SCI0_FRDRHL_FER_Msk               (0x1000UL)                /*!< FER (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRHL_PER_Pos               (11UL)                    /*!< PER (Bit 11)                                          */
#define SCI0_FRDRHL_PER_Msk               (0x800UL)                 /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRHL_DR_Pos                (10UL)                    /*!< DR (Bit 10)                                           */
#define SCI0_FRDRHL_DR_Msk                (0x400UL)                 /*!< DR (Bitfield-Mask: 0x01)                              */
#define SCI0_FRDRHL_MPB_Pos               (9UL)                     /*!< MPB (Bit 9)                                           */
#define SCI0_FRDRHL_MPB_Msk               (0x200UL)                 /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRHL_RDAT_Pos              (0UL)                     /*!< RDAT (Bit 0)                                          */
#define SCI0_FRDRHL_RDAT_Msk              (0x1ffUL)                 /*!< RDAT (Bitfield-Mask: 0x1ff)                           */
/* =========================================================  FRDRH  ========================================================= */
#define SCI0_FRDRH_RDF_Pos                (6UL)                     /*!< RDF (Bit 6)                                           */
#define SCI0_FRDRH_RDF_Msk                (0x40UL)                  /*!< RDF (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRH_ORER_Pos               (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI0_FRDRH_ORER_Msk               (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI0_FRDRH_FER_Pos                (4UL)                     /*!< FER (Bit 4)                                           */
#define SCI0_FRDRH_FER_Msk                (0x10UL)                  /*!< FER (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRH_PER_Pos                (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI0_FRDRH_PER_Msk                (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRH_DR_Pos                 (2UL)                     /*!< DR (Bit 2)                                            */
#define SCI0_FRDRH_DR_Msk                 (0x4UL)                   /*!< DR (Bitfield-Mask: 0x01)                              */
#define SCI0_FRDRH_MPB_Pos                (1UL)                     /*!< MPB (Bit 1)                                           */
#define SCI0_FRDRH_MPB_Msk                (0x2UL)                   /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRH_RDATH_Pos              (0UL)                     /*!< RDATH (Bit 0)                                         */
#define SCI0_FRDRH_RDATH_Msk              (0x1UL)                   /*!< RDATH (Bitfield-Mask: 0x01)                           */
/* =========================================================  FRDRL  ========================================================= */
#define SCI0_FRDRL_RDATL_Pos              (0UL)                     /*!< RDATL (Bit 0)                                         */
#define SCI0_FRDRL_RDATL_Msk              (0xffUL)                  /*!< RDATL (Bitfield-Mask: 0xff)                           */
/* =========================================================  MDDR  ========================================================== */
#define SCI0_MDDR_MDDR_Pos                (0UL)                     /*!< MDDR (Bit 0)                                          */
#define SCI0_MDDR_MDDR_Msk                (0xffUL)                  /*!< MDDR (Bitfield-Mask: 0xff)                            */
/* =========================================================  DCCR  ========================================================== */
#define SCI0_DCCR_DCME_Pos                (7UL)                     /*!< DCME (Bit 7)                                          */
#define SCI0_DCCR_DCME_Msk                (0x80UL)                  /*!< DCME (Bitfield-Mask: 0x01)                            */
#define SCI0_DCCR_IDSEL_Pos               (6UL)                     /*!< IDSEL (Bit 6)                                         */
#define SCI0_DCCR_IDSEL_Msk               (0x40UL)                  /*!< IDSEL (Bitfield-Mask: 0x01)                           */
#define SCI0_DCCR_DFER_Pos                (4UL)                     /*!< DFER (Bit 4)                                          */
#define SCI0_DCCR_DFER_Msk                (0x10UL)                  /*!< DFER (Bitfield-Mask: 0x01)                            */
#define SCI0_DCCR_DPER_Pos                (3UL)                     /*!< DPER (Bit 3)                                          */
#define SCI0_DCCR_DPER_Msk                (0x8UL)                   /*!< DPER (Bitfield-Mask: 0x01)                            */
#define SCI0_DCCR_DCMF_Pos                (0UL)                     /*!< DCMF (Bit 0)                                          */
#define SCI0_DCCR_DCMF_Msk                (0x1UL)                   /*!< DCMF (Bitfield-Mask: 0x01)                            */
/* ==========================================================  FCR  ========================================================== */
#define SCI0_FCR_RSTRG_Pos                (12UL)                    /*!< RSTRG (Bit 12)                                        */
#define SCI0_FCR_RSTRG_Msk                (0xf000UL)                /*!< RSTRG (Bitfield-Mask: 0x0f)                           */
#define SCI0_FCR_RTRG_Pos                 (8UL)                     /*!< RTRG (Bit 8)                                          */
#define SCI0_FCR_RTRG_Msk                 (0xf00UL)                 /*!< RTRG (Bitfield-Mask: 0x0f)                            */
#define SCI0_FCR_TTRG_Pos                 (4UL)                     /*!< TTRG (Bit 4)                                          */
#define SCI0_FCR_TTRG_Msk                 (0xf0UL)                  /*!< TTRG (Bitfield-Mask: 0x0f)                            */
#define SCI0_FCR_DRES_Pos                 (3UL)                     /*!< DRES (Bit 3)                                          */
#define SCI0_FCR_DRES_Msk                 (0x8UL)                   /*!< DRES (Bitfield-Mask: 0x01)                            */
#define SCI0_FCR_TFRST_Pos                (2UL)                     /*!< TFRST (Bit 2)                                         */
#define SCI0_FCR_TFRST_Msk                (0x4UL)                   /*!< TFRST (Bitfield-Mask: 0x01)                           */
#define SCI0_FCR_RFRST_Pos                (1UL)                     /*!< RFRST (Bit 1)                                         */
#define SCI0_FCR_RFRST_Msk                (0x2UL)                   /*!< RFRST (Bitfield-Mask: 0x01)                           */
#define SCI0_FCR_FM_Pos                   (0UL)                     /*!< FM (Bit 0)                                            */
#define SCI0_FCR_FM_Msk                   (0x1UL)                   /*!< FM (Bitfield-Mask: 0x01)                              */
/* ==========================================================  FDR  ========================================================== */
#define SCI0_FDR_T_Pos                    (8UL)                     /*!< T (Bit 8)                                             */
#define SCI0_FDR_T_Msk                    (0x1f00UL)                /*!< T (Bitfield-Mask: 0x1f)                               */
#define SCI0_FDR_R_Pos                    (0UL)                     /*!< R (Bit 0)                                             */
#define SCI0_FDR_R_Msk                    (0x1fUL)                  /*!< R (Bitfield-Mask: 0x1f)                               */
/* ==========================================================  LSR  ========================================================== */
#define SCI0_LSR_PNUM_Pos                 (8UL)                     /*!< PNUM (Bit 8)                                          */
#define SCI0_LSR_PNUM_Msk                 (0x1f00UL)                /*!< PNUM (Bitfield-Mask: 0x1f)                            */
#define SCI0_LSR_FNUM_Pos                 (2UL)                     /*!< FNUM (Bit 2)                                          */
#define SCI0_LSR_FNUM_Msk                 (0x7cUL)                  /*!< FNUM (Bitfield-Mask: 0x1f)                            */
#define SCI0_LSR_ORER_Pos                 (0UL)                     /*!< ORER (Bit 0)                                          */
#define SCI0_LSR_ORER_Msk                 (0x1UL)                   /*!< ORER (Bitfield-Mask: 0x01)                            */
/* ==========================================================  CDR  ========================================================== */
#define SCI0_CDR_CMPD_Pos                 (0UL)                     /*!< CMPD (Bit 0)                                          */
#define SCI0_CDR_CMPD_Msk                 (0x1ffUL)                 /*!< CMPD (Bitfield-Mask: 0x1ff)                           */
/* =========================================================  SPTR  ========================================================== */
#define SCI0_SPTR_SPB2IO_Pos              (2UL)                     /*!< SPB2IO (Bit 2)                                        */
#define SCI0_SPTR_SPB2IO_Msk              (0x4UL)                   /*!< SPB2IO (Bitfield-Mask: 0x01)                          */
#define SCI0_SPTR_SPB2DT_Pos              (1UL)                     /*!< SPB2DT (Bit 1)                                        */
#define SCI0_SPTR_SPB2DT_Msk              (0x2UL)                   /*!< SPB2DT (Bitfield-Mask: 0x01)                          */
#define SCI0_SPTR_RXDMON_Pos              (0UL)                     /*!< RXDMON (Bit 0)                                        */
#define SCI0_SPTR_RXDMON_Msk              (0x1UL)                   /*!< RXDMON (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           SCI2                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  SMR  ========================================================== */
#define SCI2_SMR_CM_Pos                   (7UL)                     /*!< CM (Bit 7)                                            */
#define SCI2_SMR_CM_Msk                   (0x80UL)                  /*!< CM (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_CHR_Pos                  (6UL)                     /*!< CHR (Bit 6)                                           */
#define SCI2_SMR_CHR_Msk                  (0x40UL)                  /*!< CHR (Bitfield-Mask: 0x01)                             */
#define SCI2_SMR_PE_Pos                   (5UL)                     /*!< PE (Bit 5)                                            */
#define SCI2_SMR_PE_Msk                   (0x20UL)                  /*!< PE (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_PM_Pos                   (4UL)                     /*!< PM (Bit 4)                                            */
#define SCI2_SMR_PM_Msk                   (0x10UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_STOP_Pos                 (3UL)                     /*!< STOP (Bit 3)                                          */
#define SCI2_SMR_STOP_Msk                 (0x8UL)                   /*!< STOP (Bitfield-Mask: 0x01)                            */
#define SCI2_SMR_MP_Pos                   (2UL)                     /*!< MP (Bit 2)                                            */
#define SCI2_SMR_MP_Msk                   (0x4UL)                   /*!< MP (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_CKS_Pos                  (0UL)                     /*!< CKS (Bit 0)                                           */
#define SCI2_SMR_CKS_Msk                  (0x3UL)                   /*!< CKS (Bitfield-Mask: 0x03)                             */
/* =======================================================  SMR_SMCI  ======================================================== */
#define SCI2_SMR_SMCI_GM_Pos              (7UL)                     /*!< GM (Bit 7)                                            */
#define SCI2_SMR_SMCI_GM_Msk              (0x80UL)                  /*!< GM (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_SMCI_BLK_Pos             (6UL)                     /*!< BLK (Bit 6)                                           */
#define SCI2_SMR_SMCI_BLK_Msk             (0x40UL)                  /*!< BLK (Bitfield-Mask: 0x01)                             */
#define SCI2_SMR_SMCI_PE_Pos              (5UL)                     /*!< PE (Bit 5)                                            */
#define SCI2_SMR_SMCI_PE_Msk              (0x20UL)                  /*!< PE (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_SMCI_PM_Pos              (4UL)                     /*!< PM (Bit 4)                                            */
#define SCI2_SMR_SMCI_PM_Msk              (0x10UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_SMCI_BCP_Pos             (2UL)                     /*!< BCP (Bit 2)                                           */
#define SCI2_SMR_SMCI_BCP_Msk             (0xcUL)                   /*!< BCP (Bitfield-Mask: 0x03)                             */
#define SCI2_SMR_SMCI_CKS_Pos             (0UL)                     /*!< CKS (Bit 0)                                           */
#define SCI2_SMR_SMCI_CKS_Msk             (0x3UL)                   /*!< CKS (Bitfield-Mask: 0x03)                             */
/* ==========================================================  BRR  ========================================================== */
#define SCI2_BRR_BRR_Pos                  (0UL)                     /*!< BRR (Bit 0)                                           */
#define SCI2_BRR_BRR_Msk                  (0xffUL)                  /*!< BRR (Bitfield-Mask: 0xff)                             */
/* ==========================================================  SCR  ========================================================== */
#define SCI2_SCR_TIE_Pos                  (7UL)                     /*!< TIE (Bit 7)                                           */
#define SCI2_SCR_TIE_Msk                  (0x80UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
#define SCI2_SCR_RIE_Pos                  (6UL)                     /*!< RIE (Bit 6)                                           */
#define SCI2_SCR_RIE_Msk                  (0x40UL)                  /*!< RIE (Bitfield-Mask: 0x01)                             */
#define SCI2_SCR_TE_Pos                   (5UL)                     /*!< TE (Bit 5)                                            */
#define SCI2_SCR_TE_Msk                   (0x20UL)                  /*!< TE (Bitfield-Mask: 0x01)                              */
#define SCI2_SCR_RE_Pos                   (4UL)                     /*!< RE (Bit 4)                                            */
#define SCI2_SCR_RE_Msk                   (0x10UL)                  /*!< RE (Bitfield-Mask: 0x01)                              */
#define SCI2_SCR_MPIE_Pos                 (3UL)                     /*!< MPIE (Bit 3)                                          */
#define SCI2_SCR_MPIE_Msk                 (0x8UL)                   /*!< MPIE (Bitfield-Mask: 0x01)                            */
#define SCI2_SCR_TEIE_Pos                 (2UL)                     /*!< TEIE (Bit 2)                                          */
#define SCI2_SCR_TEIE_Msk                 (0x4UL)                   /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define SCI2_SCR_CKE_Pos                  (0UL)                     /*!< CKE (Bit 0)                                           */
#define SCI2_SCR_CKE_Msk                  (0x3UL)                   /*!< CKE (Bitfield-Mask: 0x03)                             */
/* =======================================================  SCR_SMCI  ======================================================== */
#define SCI2_SCR_SMCI_TIE_Pos             (7UL)                     /*!< TIE (Bit 7)                                           */
#define SCI2_SCR_SMCI_TIE_Msk             (0x80UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
#define SCI2_SCR_SMCI_RIE_Pos             (6UL)                     /*!< RIE (Bit 6)                                           */
#define SCI2_SCR_SMCI_RIE_Msk             (0x40UL)                  /*!< RIE (Bitfield-Mask: 0x01)                             */
#define SCI2_SCR_SMCI_TE_Pos              (5UL)                     /*!< TE (Bit 5)                                            */
#define SCI2_SCR_SMCI_TE_Msk              (0x20UL)                  /*!< TE (Bitfield-Mask: 0x01)                              */
#define SCI2_SCR_SMCI_RE_Pos              (4UL)                     /*!< RE (Bit 4)                                            */
#define SCI2_SCR_SMCI_RE_Msk              (0x10UL)                  /*!< RE (Bitfield-Mask: 0x01)                              */
#define SCI2_SCR_SMCI_MPIE_Pos            (3UL)                     /*!< MPIE (Bit 3)                                          */
#define SCI2_SCR_SMCI_MPIE_Msk            (0x8UL)                   /*!< MPIE (Bitfield-Mask: 0x01)                            */
#define SCI2_SCR_SMCI_TEIE_Pos            (2UL)                     /*!< TEIE (Bit 2)                                          */
#define SCI2_SCR_SMCI_TEIE_Msk            (0x4UL)                   /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define SCI2_SCR_SMCI_CKE_Pos             (0UL)                     /*!< CKE (Bit 0)                                           */
#define SCI2_SCR_SMCI_CKE_Msk             (0x3UL)                   /*!< CKE (Bitfield-Mask: 0x03)                             */
/* ==========================================================  TDR  ========================================================== */
#define SCI2_TDR_TDR_Pos                  (0UL)                     /*!< TDR (Bit 0)                                           */
#define SCI2_TDR_TDR_Msk                  (0xffUL)                  /*!< TDR (Bitfield-Mask: 0xff)                             */
/* ==========================================================  SSR  ========================================================== */
#define SCI2_SSR_TDRE_Pos                 (7UL)                     /*!< TDRE (Bit 7)                                          */
#define SCI2_SSR_TDRE_Msk                 (0x80UL)                  /*!< TDRE (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_RDRF_Pos                 (6UL)                     /*!< RDRF (Bit 6)                                          */
#define SCI2_SSR_RDRF_Msk                 (0x40UL)                  /*!< RDRF (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_ORER_Pos                 (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI2_SSR_ORER_Msk                 (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_FER_Pos                  (4UL)                     /*!< FER (Bit 4)                                           */
#define SCI2_SSR_FER_Msk                  (0x10UL)                  /*!< FER (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_PER_Pos                  (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI2_SSR_PER_Msk                  (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_TEND_Pos                 (2UL)                     /*!< TEND (Bit 2)                                          */
#define SCI2_SSR_TEND_Msk                 (0x4UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_MPB_Pos                  (1UL)                     /*!< MPB (Bit 1)                                           */
#define SCI2_SSR_MPB_Msk                  (0x2UL)                   /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_MPBT_Pos                 (0UL)                     /*!< MPBT (Bit 0)                                          */
#define SCI2_SSR_MPBT_Msk                 (0x1UL)                   /*!< MPBT (Bitfield-Mask: 0x01)                            */
/* =======================================================  SSR_SMCI  ======================================================== */
#define SCI2_SSR_SMCI_TDRE_Pos            (7UL)                     /*!< TDRE (Bit 7)                                          */
#define SCI2_SSR_SMCI_TDRE_Msk            (0x80UL)                  /*!< TDRE (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_SMCI_RDRF_Pos            (6UL)                     /*!< RDRF (Bit 6)                                          */
#define SCI2_SSR_SMCI_RDRF_Msk            (0x40UL)                  /*!< RDRF (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_SMCI_ORER_Pos            (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI2_SSR_SMCI_ORER_Msk            (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_SMCI_ERS_Pos             (4UL)                     /*!< ERS (Bit 4)                                           */
#define SCI2_SSR_SMCI_ERS_Msk             (0x10UL)                  /*!< ERS (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_SMCI_PER_Pos             (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI2_SSR_SMCI_PER_Msk             (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_SMCI_TEND_Pos            (2UL)                     /*!< TEND (Bit 2)                                          */
#define SCI2_SSR_SMCI_TEND_Msk            (0x4UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_SMCI_MPB_Pos             (1UL)                     /*!< MPB (Bit 1)                                           */
#define SCI2_SSR_SMCI_MPB_Msk             (0x2UL)                   /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_SMCI_MPBT_Pos            (0UL)                     /*!< MPBT (Bit 0)                                          */
#define SCI2_SSR_SMCI_MPBT_Msk            (0x1UL)                   /*!< MPBT (Bitfield-Mask: 0x01)                            */
/* ==========================================================  RDR  ========================================================== */
#define SCI2_RDR_RDR_Pos                  (0UL)                     /*!< RDR (Bit 0)                                           */
#define SCI2_RDR_RDR_Msk                  (0xffUL)                  /*!< RDR (Bitfield-Mask: 0xff)                             */
/* =========================================================  SCMR  ========================================================== */
#define SCI2_SCMR_BCP2_Pos                (7UL)                     /*!< BCP2 (Bit 7)                                          */
#define SCI2_SCMR_BCP2_Msk                (0x80UL)                  /*!< BCP2 (Bitfield-Mask: 0x01)                            */
#define SCI2_SCMR_CHR1_Pos                (4UL)                     /*!< CHR1 (Bit 4)                                          */
#define SCI2_SCMR_CHR1_Msk                (0x10UL)                  /*!< CHR1 (Bitfield-Mask: 0x01)                            */
#define SCI2_SCMR_SDIR_Pos                (3UL)                     /*!< SDIR (Bit 3)                                          */
#define SCI2_SCMR_SDIR_Msk                (0x8UL)                   /*!< SDIR (Bitfield-Mask: 0x01)                            */
#define SCI2_SCMR_SINV_Pos                (2UL)                     /*!< SINV (Bit 2)                                          */
#define SCI2_SCMR_SINV_Msk                (0x4UL)                   /*!< SINV (Bitfield-Mask: 0x01)                            */
#define SCI2_SCMR_SMIF_Pos                (0UL)                     /*!< SMIF (Bit 0)                                          */
#define SCI2_SCMR_SMIF_Msk                (0x1UL)                   /*!< SMIF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SEMR  ========================================================== */
#define SCI2_SEMR_RXDESEL_Pos             (7UL)                     /*!< RXDESEL (Bit 7)                                       */
#define SCI2_SEMR_RXDESEL_Msk             (0x80UL)                  /*!< RXDESEL (Bitfield-Mask: 0x01)                         */
#define SCI2_SEMR_BGDM_Pos                (6UL)                     /*!< BGDM (Bit 6)                                          */
#define SCI2_SEMR_BGDM_Msk                (0x40UL)                  /*!< BGDM (Bitfield-Mask: 0x01)                            */
#define SCI2_SEMR_NFEN_Pos                (5UL)                     /*!< NFEN (Bit 5)                                          */
#define SCI2_SEMR_NFEN_Msk                (0x20UL)                  /*!< NFEN (Bitfield-Mask: 0x01)                            */
#define SCI2_SEMR_ABCS_Pos                (4UL)                     /*!< ABCS (Bit 4)                                          */
#define SCI2_SEMR_ABCS_Msk                (0x10UL)                  /*!< ABCS (Bitfield-Mask: 0x01)                            */
#define SCI2_SEMR_ABCSE_Pos               (3UL)                     /*!< ABCSE (Bit 3)                                         */
#define SCI2_SEMR_ABCSE_Msk               (0x8UL)                   /*!< ABCSE (Bitfield-Mask: 0x01)                           */
#define SCI2_SEMR_BRME_Pos                (2UL)                     /*!< BRME (Bit 2)                                          */
#define SCI2_SEMR_BRME_Msk                (0x4UL)                   /*!< BRME (Bitfield-Mask: 0x01)                            */
/* =========================================================  SNFR  ========================================================== */
#define SCI2_SNFR_NFCS_Pos                (0UL)                     /*!< NFCS (Bit 0)                                          */
#define SCI2_SNFR_NFCS_Msk                (0x7UL)                   /*!< NFCS (Bitfield-Mask: 0x07)                            */
/* =========================================================  SIMR1  ========================================================= */
#define SCI2_SIMR1_IICDL_Pos              (3UL)                     /*!< IICDL (Bit 3)                                         */
#define SCI2_SIMR1_IICDL_Msk              (0xf8UL)                  /*!< IICDL (Bitfield-Mask: 0x1f)                           */
#define SCI2_SIMR1_IICM_Pos               (0UL)                     /*!< IICM (Bit 0)                                          */
#define SCI2_SIMR1_IICM_Msk               (0x1UL)                   /*!< IICM (Bitfield-Mask: 0x01)                            */
/* =========================================================  SIMR2  ========================================================= */
#define SCI2_SIMR2_IICACKT_Pos            (5UL)                     /*!< IICACKT (Bit 5)                                       */
#define SCI2_SIMR2_IICACKT_Msk            (0x20UL)                  /*!< IICACKT (Bitfield-Mask: 0x01)                         */
#define SCI2_SIMR2_IICCSC_Pos             (1UL)                     /*!< IICCSC (Bit 1)                                        */
#define SCI2_SIMR2_IICCSC_Msk             (0x2UL)                   /*!< IICCSC (Bitfield-Mask: 0x01)                          */
#define SCI2_SIMR2_IICINTM_Pos            (0UL)                     /*!< IICINTM (Bit 0)                                       */
#define SCI2_SIMR2_IICINTM_Msk            (0x1UL)                   /*!< IICINTM (Bitfield-Mask: 0x01)                         */
/* =========================================================  SIMR3  ========================================================= */
#define SCI2_SIMR3_IICSCLS_Pos            (6UL)                     /*!< IICSCLS (Bit 6)                                       */
#define SCI2_SIMR3_IICSCLS_Msk            (0xc0UL)                  /*!< IICSCLS (Bitfield-Mask: 0x03)                         */
#define SCI2_SIMR3_IICSDAS_Pos            (4UL)                     /*!< IICSDAS (Bit 4)                                       */
#define SCI2_SIMR3_IICSDAS_Msk            (0x30UL)                  /*!< IICSDAS (Bitfield-Mask: 0x03)                         */
#define SCI2_SIMR3_IICSTIF_Pos            (3UL)                     /*!< IICSTIF (Bit 3)                                       */
#define SCI2_SIMR3_IICSTIF_Msk            (0x8UL)                   /*!< IICSTIF (Bitfield-Mask: 0x01)                         */
#define SCI2_SIMR3_IICSTPREQ_Pos          (2UL)                     /*!< IICSTPREQ (Bit 2)                                     */
#define SCI2_SIMR3_IICSTPREQ_Msk          (0x4UL)                   /*!< IICSTPREQ (Bitfield-Mask: 0x01)                       */
#define SCI2_SIMR3_IICRSTAREQ_Pos         (1UL)                     /*!< IICRSTAREQ (Bit 1)                                    */
#define SCI2_SIMR3_IICRSTAREQ_Msk         (0x2UL)                   /*!< IICRSTAREQ (Bitfield-Mask: 0x01)                      */
#define SCI2_SIMR3_IICSTAREQ_Pos          (0UL)                     /*!< IICSTAREQ (Bit 0)                                     */
#define SCI2_SIMR3_IICSTAREQ_Msk          (0x1UL)                   /*!< IICSTAREQ (Bitfield-Mask: 0x01)                       */
/* =========================================================  SISR  ========================================================== */
#define SCI2_SISR_IICACKR_Pos             (0UL)                     /*!< IICACKR (Bit 0)                                       */
#define SCI2_SISR_IICACKR_Msk             (0x1UL)                   /*!< IICACKR (Bitfield-Mask: 0x01)                         */
/* =========================================================  SPMR  ========================================================== */
#define SCI2_SPMR_CKPH_Pos                (7UL)                     /*!< CKPH (Bit 7)                                          */
#define SCI2_SPMR_CKPH_Msk                (0x80UL)                  /*!< CKPH (Bitfield-Mask: 0x01)                            */
#define SCI2_SPMR_CKPOL_Pos               (6UL)                     /*!< CKPOL (Bit 6)                                         */
#define SCI2_SPMR_CKPOL_Msk               (0x40UL)                  /*!< CKPOL (Bitfield-Mask: 0x01)                           */
#define SCI2_SPMR_MFF_Pos                 (4UL)                     /*!< MFF (Bit 4)                                           */
#define SCI2_SPMR_MFF_Msk                 (0x10UL)                  /*!< MFF (Bitfield-Mask: 0x01)                             */
#define SCI2_SPMR_MSS_Pos                 (2UL)                     /*!< MSS (Bit 2)                                           */
#define SCI2_SPMR_MSS_Msk                 (0x4UL)                   /*!< MSS (Bitfield-Mask: 0x01)                             */
#define SCI2_SPMR_CTSE_Pos                (1UL)                     /*!< CTSE (Bit 1)                                          */
#define SCI2_SPMR_CTSE_Msk                (0x2UL)                   /*!< CTSE (Bitfield-Mask: 0x01)                            */
#define SCI2_SPMR_SSE_Pos                 (0UL)                     /*!< SSE (Bit 0)                                           */
#define SCI2_SPMR_SSE_Msk                 (0x1UL)                   /*!< SSE (Bitfield-Mask: 0x01)                             */
/* =========================================================  TDRHL  ========================================================= */
#define SCI2_TDRHL_TDRHL_Pos              (0UL)                     /*!< TDRHL (Bit 0)                                         */
#define SCI2_TDRHL_TDRHL_Msk              (0xffffUL)                /*!< TDRHL (Bitfield-Mask: 0xffff)                         */
/* =========================================================  RDRHL  ========================================================= */
#define SCI2_RDRHL_RDRHL_Pos              (0UL)                     /*!< RDRHL (Bit 0)                                         */
#define SCI2_RDRHL_RDRHL_Msk              (0xffffUL)                /*!< RDRHL (Bitfield-Mask: 0xffff)                         */
/* =========================================================  MDDR  ========================================================== */
#define SCI2_MDDR_MDDR_Pos                (0UL)                     /*!< MDDR (Bit 0)                                          */
#define SCI2_MDDR_MDDR_Msk                (0xffUL)                  /*!< MDDR (Bitfield-Mask: 0xff)                            */
/* =========================================================  DCCR  ========================================================== */
#define SCI2_DCCR_DCME_Pos                (7UL)                     /*!< DCME (Bit 7)                                          */
#define SCI2_DCCR_DCME_Msk                (0x80UL)                  /*!< DCME (Bitfield-Mask: 0x01)                            */
#define SCI2_DCCR_IDSEL_Pos               (6UL)                     /*!< IDSEL (Bit 6)                                         */
#define SCI2_DCCR_IDSEL_Msk               (0x40UL)                  /*!< IDSEL (Bitfield-Mask: 0x01)                           */
#define SCI2_DCCR_DFER_Pos                (4UL)                     /*!< DFER (Bit 4)                                          */
#define SCI2_DCCR_DFER_Msk                (0x10UL)                  /*!< DFER (Bitfield-Mask: 0x01)                            */
#define SCI2_DCCR_DPER_Pos                (3UL)                     /*!< DPER (Bit 3)                                          */
#define SCI2_DCCR_DPER_Msk                (0x8UL)                   /*!< DPER (Bitfield-Mask: 0x01)                            */
#define SCI2_DCCR_DCMF_Pos                (0UL)                     /*!< DCMF (Bit 0)                                          */
#define SCI2_DCCR_DCMF_Msk                (0x1UL)                   /*!< DCMF (Bitfield-Mask: 0x01)                            */
/* ==========================================================  CDR  ========================================================== */
#define SCI2_CDR_CMPD_Pos                 (0UL)                     /*!< CMPD (Bit 0)                                          */
#define SCI2_CDR_CMPD_Msk                 (0x1ffUL)                 /*!< CMPD (Bitfield-Mask: 0x1ff)                           */
/* =========================================================  SPTR  ========================================================== */
#define SCI2_SPTR_SPB2IO_Pos              (2UL)                     /*!< SPB2IO (Bit 2)                                        */
#define SCI2_SPTR_SPB2IO_Msk              (0x4UL)                   /*!< SPB2IO (Bitfield-Mask: 0x01)                          */
#define SCI2_SPTR_SPB2DT_Pos              (1UL)                     /*!< SPB2DT (Bit 1)                                        */
#define SCI2_SPTR_SPB2DT_Msk              (0x2UL)                   /*!< SPB2DT (Bitfield-Mask: 0x01)                          */
#define SCI2_SPTR_RXDMON_Pos              (0UL)                     /*!< RXDMON (Bit 0)                                        */
#define SCI2_SPTR_RXDMON_Msk              (0x1UL)                   /*!< RXDMON (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           SMPU                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  SMPUCTL  ======================================================== */
#define SMPU_SMPUCTL_KEY_Pos              (8UL)                     /*!< KEY (Bit 8)                                           */
#define SMPU_SMPUCTL_KEY_Msk              (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
#define SMPU_SMPUCTL_PROTECT_Pos          (1UL)                     /*!< PROTECT (Bit 1)                                       */
#define SMPU_SMPUCTL_PROTECT_Msk          (0x2UL)                   /*!< PROTECT (Bitfield-Mask: 0x01)                         */
#define SMPU_SMPUCTL_OAD_Pos              (0UL)                     /*!< OAD (Bit 0)                                           */
#define SMPU_SMPUCTL_OAD_Msk              (0x1UL)                   /*!< OAD (Bitfield-Mask: 0x01)                             */
/* =======================================================  SMPUMBIU  ======================================================== */
#define SMPU_SMPUMBIU_WPGRPA_Pos          (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define SMPU_SMPUMBIU_WPGRPA_Msk          (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUMBIU_RPGRPA_Pos          (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define SMPU_SMPUMBIU_RPGRPA_Msk          (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
/* =======================================================  SMPUFBIU  ======================================================== */
#define SMPU_SMPUFBIU_WPGRPA_Pos          (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define SMPU_SMPUFBIU_WPGRPA_Msk          (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUFBIU_RPGRPA_Pos          (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define SMPU_SMPUFBIU_RPGRPA_Msk          (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUFBIU_WPCPU_Pos           (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define SMPU_SMPUFBIU_WPCPU_Msk           (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define SMPU_SMPUFBIU_RPCPU_Pos           (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define SMPU_SMPUFBIU_RPCPU_Msk           (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */
/* =======================================================  SMPUSRAM0  ======================================================= */
#define SMPU_SMPUSRAM0_WPGRPA_Pos         (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define SMPU_SMPUSRAM0_WPGRPA_Msk         (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUSRAM0_RPGRPA_Pos         (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define SMPU_SMPUSRAM0_RPGRPA_Msk         (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUSRAM0_WPCPU_Pos          (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define SMPU_SMPUSRAM0_WPCPU_Msk          (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define SMPU_SMPUSRAM0_RPCPU_Pos          (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define SMPU_SMPUSRAM0_RPCPU_Msk          (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */
/* =======================================================  SMPUSRAM1  ======================================================= */
#define SMPU_SMPUSRAM1_WPGRPA_Pos         (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define SMPU_SMPUSRAM1_WPGRPA_Msk         (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUSRAM1_RPGRPA_Pos         (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define SMPU_SMPUSRAM1_RPGRPA_Msk         (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUSRAM1_WPCPU_Pos          (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define SMPU_SMPUSRAM1_WPCPU_Msk          (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define SMPU_SMPUSRAM1_RPCPU_Pos          (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define SMPU_SMPUSRAM1_RPCPU_Msk          (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */
/* =======================================================  SMPUP0BIU  ======================================================= */
#define SMPU_SMPUP0BIU_WPGRPA_Pos         (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define SMPU_SMPUP0BIU_WPGRPA_Msk         (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUP0BIU_RPGRPA_Pos         (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define SMPU_SMPUP0BIU_RPGRPA_Msk         (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUP0BIU_WPCPU_Pos          (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define SMPU_SMPUP0BIU_WPCPU_Msk          (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define SMPU_SMPUP0BIU_RPCPU_Pos          (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define SMPU_SMPUP0BIU_RPCPU_Msk          (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */
/* =======================================================  SMPUP2BIU  ======================================================= */
#define SMPU_SMPUP2BIU_WPGRPA_Pos         (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define SMPU_SMPUP2BIU_WPGRPA_Msk         (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUP2BIU_RPGRPA_Pos         (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define SMPU_SMPUP2BIU_RPGRPA_Msk         (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUP2BIU_WPCPU_Pos          (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define SMPU_SMPUP2BIU_WPCPU_Msk          (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define SMPU_SMPUP2BIU_RPCPU_Pos          (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define SMPU_SMPUP2BIU_RPCPU_Msk          (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */
/* ======================================================  SMPUEXBIU2  ======================================================= */
#define SMPU_SMPUEXBIU2_WPGRPA_Pos        (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define SMPU_SMPUEXBIU2_WPGRPA_Msk        (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUEXBIU2_RPGRPA_Pos        (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define SMPU_SMPUEXBIU2_RPGRPA_Msk        (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define SMPU_SMPUEXBIU2_WPCPU_Pos         (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define SMPU_SMPUEXBIU2_WPCPU_Msk         (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define SMPU_SMPUEXBIU2_RPCPU_Pos         (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define SMPU_SMPUEXBIU2_RPCPU_Msk         (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */


/* =========================================================================================================================== */
/* ================                                           SPI0                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  SPCR  ========================================================== */
#define SPI0_SPCR_SPRIE_Pos               (7UL)                     /*!< SPRIE (Bit 7)                                         */
#define SPI0_SPCR_SPRIE_Msk               (0x80UL)                  /*!< SPRIE (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCR_SPE_Pos                 (6UL)                     /*!< SPE (Bit 6)                                           */
#define SPI0_SPCR_SPE_Msk                 (0x40UL)                  /*!< SPE (Bitfield-Mask: 0x01)                             */
#define SPI0_SPCR_SPTIE_Pos               (5UL)                     /*!< SPTIE (Bit 5)                                         */
#define SPI0_SPCR_SPTIE_Msk               (0x20UL)                  /*!< SPTIE (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCR_SPEIE_Pos               (4UL)                     /*!< SPEIE (Bit 4)                                         */
#define SPI0_SPCR_SPEIE_Msk               (0x10UL)                  /*!< SPEIE (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCR_MSTR_Pos                (3UL)                     /*!< MSTR (Bit 3)                                          */
#define SPI0_SPCR_MSTR_Msk                (0x8UL)                   /*!< MSTR (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCR_MODFEN_Pos              (2UL)                     /*!< MODFEN (Bit 2)                                        */
#define SPI0_SPCR_MODFEN_Msk              (0x4UL)                   /*!< MODFEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCR_TXMD_Pos                (1UL)                     /*!< TXMD (Bit 1)                                          */
#define SPI0_SPCR_TXMD_Msk                (0x2UL)                   /*!< TXMD (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCR_SPMS_Pos                (0UL)                     /*!< SPMS (Bit 0)                                          */
#define SPI0_SPCR_SPMS_Msk                (0x1UL)                   /*!< SPMS (Bitfield-Mask: 0x01)                            */
/* =========================================================  SSLP  ========================================================== */
#define SPI0_SSLP_SSL3P_Pos               (3UL)                     /*!< SSL3P (Bit 3)                                         */
#define SPI0_SSLP_SSL3P_Msk               (0x8UL)                   /*!< SSL3P (Bitfield-Mask: 0x01)                           */
#define SPI0_SSLP_SSL2P_Pos               (2UL)                     /*!< SSL2P (Bit 2)                                         */
#define SPI0_SSLP_SSL2P_Msk               (0x4UL)                   /*!< SSL2P (Bitfield-Mask: 0x01)                           */
#define SPI0_SSLP_SSL1P_Pos               (1UL)                     /*!< SSL1P (Bit 1)                                         */
#define SPI0_SSLP_SSL1P_Msk               (0x2UL)                   /*!< SSL1P (Bitfield-Mask: 0x01)                           */
#define SPI0_SSLP_SSL0P_Pos               (0UL)                     /*!< SSL0P (Bit 0)                                         */
#define SPI0_SSLP_SSL0P_Msk               (0x1UL)                   /*!< SSL0P (Bitfield-Mask: 0x01)                           */
/* =========================================================  SPPCR  ========================================================= */
#define SPI0_SPPCR_MOIFE_Pos              (5UL)                     /*!< MOIFE (Bit 5)                                         */
#define SPI0_SPPCR_MOIFE_Msk              (0x20UL)                  /*!< MOIFE (Bitfield-Mask: 0x01)                           */
#define SPI0_SPPCR_MOIFV_Pos              (4UL)                     /*!< MOIFV (Bit 4)                                         */
#define SPI0_SPPCR_MOIFV_Msk              (0x10UL)                  /*!< MOIFV (Bitfield-Mask: 0x01)                           */
#define SPI0_SPPCR_SPLP2_Pos              (1UL)                     /*!< SPLP2 (Bit 1)                                         */
#define SPI0_SPPCR_SPLP2_Msk              (0x2UL)                   /*!< SPLP2 (Bitfield-Mask: 0x01)                           */
#define SPI0_SPPCR_SPLP_Pos               (0UL)                     /*!< SPLP (Bit 0)                                          */
#define SPI0_SPPCR_SPLP_Msk               (0x1UL)                   /*!< SPLP (Bitfield-Mask: 0x01)                            */
/* =========================================================  SPSR  ========================================================== */
#define SPI0_SPSR_SPRF_Pos                (7UL)                     /*!< SPRF (Bit 7)                                          */
#define SPI0_SPSR_SPRF_Msk                (0x80UL)                  /*!< SPRF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPSR_SPTEF_Pos               (5UL)                     /*!< SPTEF (Bit 5)                                         */
#define SPI0_SPSR_SPTEF_Msk               (0x20UL)                  /*!< SPTEF (Bitfield-Mask: 0x01)                           */
#define SPI0_SPSR_UDRF_Pos                (4UL)                     /*!< UDRF (Bit 4)                                          */
#define SPI0_SPSR_UDRF_Msk                (0x10UL)                  /*!< UDRF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPSR_PERF_Pos                (3UL)                     /*!< PERF (Bit 3)                                          */
#define SPI0_SPSR_PERF_Msk                (0x8UL)                   /*!< PERF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPSR_MODF_Pos                (2UL)                     /*!< MODF (Bit 2)                                          */
#define SPI0_SPSR_MODF_Msk                (0x4UL)                   /*!< MODF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPSR_IDLNF_Pos               (1UL)                     /*!< IDLNF (Bit 1)                                         */
#define SPI0_SPSR_IDLNF_Msk               (0x2UL)                   /*!< IDLNF (Bitfield-Mask: 0x01)                           */
#define SPI0_SPSR_OVRF_Pos                (0UL)                     /*!< OVRF (Bit 0)                                          */
#define SPI0_SPSR_OVRF_Msk                (0x1UL)                   /*!< OVRF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SPDR  ========================================================== */
#define SPI0_SPDR_SPDR_Pos                (0UL)                     /*!< SPDR (Bit 0)                                          */
#define SPI0_SPDR_SPDR_Msk                (0xffffffffUL)            /*!< SPDR (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  SPDR_HA  ======================================================== */
#define SPI0_SPDR_HA_SPDR_HA_Pos          (0UL)                     /*!< SPDR_HA (Bit 0)                                       */
#define SPI0_SPDR_HA_SPDR_HA_Msk          (0xffffUL)                /*!< SPDR_HA (Bitfield-Mask: 0xffff)                       */
/* ========================================================  SPDR_HH  ======================================================== */
/* =========================================================  SPSCR  ========================================================= */
#define SPI0_SPSCR_SPSLN_Pos              (0UL)                     /*!< SPSLN (Bit 0)                                         */
#define SPI0_SPSCR_SPSLN_Msk              (0x7UL)                   /*!< SPSLN (Bitfield-Mask: 0x07)                           */
/* =========================================================  SPSSR  ========================================================= */
#define SPI0_SPSSR_SPECM_Pos              (4UL)                     /*!< SPECM (Bit 4)                                         */
#define SPI0_SPSSR_SPECM_Msk              (0x70UL)                  /*!< SPECM (Bitfield-Mask: 0x07)                           */
#define SPI0_SPSSR_SPCP_Pos               (0UL)                     /*!< SPCP (Bit 0)                                          */
#define SPI0_SPSSR_SPCP_Msk               (0x7UL)                   /*!< SPCP (Bitfield-Mask: 0x07)                            */
/* =========================================================  SPBR  ========================================================== */
#define SPI0_SPBR_SPBR_Pos                (0UL)                     /*!< SPBR (Bit 0)                                          */
#define SPI0_SPBR_SPBR_Msk                (0xffUL)                  /*!< SPBR (Bitfield-Mask: 0xff)                            */
/* =========================================================  SPDCR  ========================================================= */
#define SPI0_SPDCR_SPBYT_Pos              (6UL)                     /*!< SPBYT (Bit 6)                                         */
#define SPI0_SPDCR_SPBYT_Msk              (0x40UL)                  /*!< SPBYT (Bitfield-Mask: 0x01)                           */
#define SPI0_SPDCR_SPLW_Pos               (5UL)                     /*!< SPLW (Bit 5)                                          */
#define SPI0_SPDCR_SPLW_Msk               (0x20UL)                  /*!< SPLW (Bitfield-Mask: 0x01)                            */
#define SPI0_SPDCR_SPRDTD_Pos             (4UL)                     /*!< SPRDTD (Bit 4)                                        */
#define SPI0_SPDCR_SPRDTD_Msk             (0x10UL)                  /*!< SPRDTD (Bitfield-Mask: 0x01)                          */
#define SPI0_SPDCR_SPFC_Pos               (0UL)                     /*!< SPFC (Bit 0)                                          */
#define SPI0_SPDCR_SPFC_Msk               (0x3UL)                   /*!< SPFC (Bitfield-Mask: 0x03)                            */
/* =========================================================  SPCKD  ========================================================= */
#define SPI0_SPCKD_SCKDL_Pos              (0UL)                     /*!< SCKDL (Bit 0)                                         */
#define SPI0_SPCKD_SCKDL_Msk              (0x7UL)                   /*!< SCKDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SSLND  ========================================================= */
#define SPI0_SSLND_SLNDL_Pos              (0UL)                     /*!< SLNDL (Bit 0)                                         */
#define SPI0_SSLND_SLNDL_Msk              (0x7UL)                   /*!< SLNDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SPND  ========================================================== */
#define SPI0_SPND_SPNDL_Pos               (0UL)                     /*!< SPNDL (Bit 0)                                         */
#define SPI0_SPND_SPNDL_Msk               (0x7UL)                   /*!< SPNDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SPCR2  ========================================================= */
#define SPI0_SPCR2_SCKASE_Pos             (4UL)                     /*!< SCKASE (Bit 4)                                        */
#define SPI0_SPCR2_SCKASE_Msk             (0x10UL)                  /*!< SCKASE (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCR2_PTE_Pos                (3UL)                     /*!< PTE (Bit 3)                                           */
#define SPI0_SPCR2_PTE_Msk                (0x8UL)                   /*!< PTE (Bitfield-Mask: 0x01)                             */
#define SPI0_SPCR2_SPIIE_Pos              (2UL)                     /*!< SPIIE (Bit 2)                                         */
#define SPI0_SPCR2_SPIIE_Msk              (0x4UL)                   /*!< SPIIE (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCR2_SPOE_Pos               (1UL)                     /*!< SPOE (Bit 1)                                          */
#define SPI0_SPCR2_SPOE_Msk               (0x2UL)                   /*!< SPOE (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCR2_SPPE_Pos               (0UL)                     /*!< SPPE (Bit 0)                                          */
#define SPI0_SPCR2_SPPE_Msk               (0x1UL)                   /*!< SPPE (Bitfield-Mask: 0x01)                            */
/* ========================================================  SPCMD0  ========================================================= */
#define SPI0_SPCMD0_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD0_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD0_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD0_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD0_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD0_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD0_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD0_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD0_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD0_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD0_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD0_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD0_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD0_SSLA_Msk              (0x30UL)                  /*!< SSLA (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD0_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD0_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD0_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD0_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD0_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD0_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
/* ========================================================  SPCMD1  ========================================================= */
#define SPI0_SPCMD1_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD1_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD1_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD1_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD1_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD1_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD1_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD1_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD1_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD1_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD1_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD1_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD1_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD1_SSLA_Msk              (0x30UL)                  /*!< SSLA (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD1_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD1_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD1_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD1_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD1_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD1_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
/* ========================================================  SPCMD2  ========================================================= */
#define SPI0_SPCMD2_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD2_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD2_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD2_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD2_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD2_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD2_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD2_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD2_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD2_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD2_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD2_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD2_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD2_SSLA_Msk              (0x30UL)                  /*!< SSLA (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD2_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD2_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD2_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD2_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD2_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD2_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
/* ========================================================  SPCMD3  ========================================================= */
#define SPI0_SPCMD3_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD3_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD3_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD3_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD3_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD3_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD3_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD3_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD3_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD3_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD3_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD3_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD3_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD3_SSLA_Msk              (0x30UL)                  /*!< SSLA (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD3_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD3_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD3_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD3_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD3_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD3_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
/* ========================================================  SPCMD4  ========================================================= */
#define SPI0_SPCMD4_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD4_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD4_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD4_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD4_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD4_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD4_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD4_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD4_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD4_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD4_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD4_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD4_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD4_SSLA_Msk              (0x30UL)                  /*!< SSLA (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD4_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD4_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD4_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD4_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD4_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD4_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
/* ========================================================  SPCMD5  ========================================================= */
#define SPI0_SPCMD5_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD5_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD5_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD5_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD5_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD5_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD5_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD5_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD5_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD5_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD5_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD5_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD5_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD5_SSLA_Msk              (0x30UL)                  /*!< SSLA (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD5_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD5_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD5_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD5_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD5_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD5_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
/* ========================================================  SPCMD6  ========================================================= */
#define SPI0_SPCMD6_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD6_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD6_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD6_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD6_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD6_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD6_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD6_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD6_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD6_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD6_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD6_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD6_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD6_SSLA_Msk              (0x30UL)                  /*!< SSLA (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD6_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD6_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD6_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD6_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD6_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD6_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
/* ========================================================  SPCMD7  ========================================================= */
#define SPI0_SPCMD7_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD7_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD7_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD7_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD7_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD7_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD7_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD7_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD7_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD7_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD7_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD7_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD7_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD7_SSLA_Msk              (0x30UL)                  /*!< SSLA (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD7_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD7_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD7_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD7_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD7_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD7_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           SPI1                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  SPCR  ========================================================== */
#define SPI1_SPCR_SPRIE_Pos               (7UL)                     /*!< SPRIE (Bit 7)                                         */
#define SPI1_SPCR_SPRIE_Msk               (0x80UL)                  /*!< SPRIE (Bitfield-Mask: 0x01)                           */
#define SPI1_SPCR_SPE_Pos                 (6UL)                     /*!< SPE (Bit 6)                                           */
#define SPI1_SPCR_SPE_Msk                 (0x40UL)                  /*!< SPE (Bitfield-Mask: 0x01)                             */
#define SPI1_SPCR_SPTIE_Pos               (5UL)                     /*!< SPTIE (Bit 5)                                         */
#define SPI1_SPCR_SPTIE_Msk               (0x20UL)                  /*!< SPTIE (Bitfield-Mask: 0x01)                           */
#define SPI1_SPCR_SPEIE_Pos               (4UL)                     /*!< SPEIE (Bit 4)                                         */
#define SPI1_SPCR_SPEIE_Msk               (0x10UL)                  /*!< SPEIE (Bitfield-Mask: 0x01)                           */
#define SPI1_SPCR_MSTR_Pos                (3UL)                     /*!< MSTR (Bit 3)                                          */
#define SPI1_SPCR_MSTR_Msk                (0x8UL)                   /*!< MSTR (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCR_MODFEN_Pos              (2UL)                     /*!< MODFEN (Bit 2)                                        */
#define SPI1_SPCR_MODFEN_Msk              (0x4UL)                   /*!< MODFEN (Bitfield-Mask: 0x01)                          */
#define SPI1_SPCR_TXMD_Pos                (1UL)                     /*!< TXMD (Bit 1)                                          */
#define SPI1_SPCR_TXMD_Msk                (0x2UL)                   /*!< TXMD (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCR_SPMS_Pos                (0UL)                     /*!< SPMS (Bit 0)                                          */
#define SPI1_SPCR_SPMS_Msk                (0x1UL)                   /*!< SPMS (Bitfield-Mask: 0x01)                            */
/* =========================================================  SSLP  ========================================================== */
#define SPI1_SSLP_SSL3P_Pos               (3UL)                     /*!< SSL3P (Bit 3)                                         */
#define SPI1_SSLP_SSL3P_Msk               (0x8UL)                   /*!< SSL3P (Bitfield-Mask: 0x01)                           */
#define SPI1_SSLP_SSL2P_Pos               (2UL)                     /*!< SSL2P (Bit 2)                                         */
#define SPI1_SSLP_SSL2P_Msk               (0x4UL)                   /*!< SSL2P (Bitfield-Mask: 0x01)                           */
#define SPI1_SSLP_SSL1P_Pos               (1UL)                     /*!< SSL1P (Bit 1)                                         */
#define SPI1_SSLP_SSL1P_Msk               (0x2UL)                   /*!< SSL1P (Bitfield-Mask: 0x01)                           */
#define SPI1_SSLP_SSL0P_Pos               (0UL)                     /*!< SSL0P (Bit 0)                                         */
#define SPI1_SSLP_SSL0P_Msk               (0x1UL)                   /*!< SSL0P (Bitfield-Mask: 0x01)                           */
/* =========================================================  SPPCR  ========================================================= */
#define SPI1_SPPCR_MOIFE_Pos              (5UL)                     /*!< MOIFE (Bit 5)                                         */
#define SPI1_SPPCR_MOIFE_Msk              (0x20UL)                  /*!< MOIFE (Bitfield-Mask: 0x01)                           */
#define SPI1_SPPCR_MOIFV_Pos              (4UL)                     /*!< MOIFV (Bit 4)                                         */
#define SPI1_SPPCR_MOIFV_Msk              (0x10UL)                  /*!< MOIFV (Bitfield-Mask: 0x01)                           */
#define SPI1_SPPCR_SPLP2_Pos              (1UL)                     /*!< SPLP2 (Bit 1)                                         */
#define SPI1_SPPCR_SPLP2_Msk              (0x2UL)                   /*!< SPLP2 (Bitfield-Mask: 0x01)                           */
#define SPI1_SPPCR_SPLP_Pos               (0UL)                     /*!< SPLP (Bit 0)                                          */
#define SPI1_SPPCR_SPLP_Msk               (0x1UL)                   /*!< SPLP (Bitfield-Mask: 0x01)                            */
/* =========================================================  SPSR  ========================================================== */
#define SPI1_SPSR_SPRF_Pos                (7UL)                     /*!< SPRF (Bit 7)                                          */
#define SPI1_SPSR_SPRF_Msk                (0x80UL)                  /*!< SPRF (Bitfield-Mask: 0x01)                            */
#define SPI1_SPSR_SPTEF_Pos               (5UL)                     /*!< SPTEF (Bit 5)                                         */
#define SPI1_SPSR_SPTEF_Msk               (0x20UL)                  /*!< SPTEF (Bitfield-Mask: 0x01)                           */
#define SPI1_SPSR_UDRF_Pos                (4UL)                     /*!< UDRF (Bit 4)                                          */
#define SPI1_SPSR_UDRF_Msk                (0x10UL)                  /*!< UDRF (Bitfield-Mask: 0x01)                            */
#define SPI1_SPSR_PERF_Pos                (3UL)                     /*!< PERF (Bit 3)                                          */
#define SPI1_SPSR_PERF_Msk                (0x8UL)                   /*!< PERF (Bitfield-Mask: 0x01)                            */
#define SPI1_SPSR_MODF_Pos                (2UL)                     /*!< MODF (Bit 2)                                          */
#define SPI1_SPSR_MODF_Msk                (0x4UL)                   /*!< MODF (Bitfield-Mask: 0x01)                            */
#define SPI1_SPSR_IDLNF_Pos               (1UL)                     /*!< IDLNF (Bit 1)                                         */
#define SPI1_SPSR_IDLNF_Msk               (0x2UL)                   /*!< IDLNF (Bitfield-Mask: 0x01)                           */
#define SPI1_SPSR_OVRF_Pos                (0UL)                     /*!< OVRF (Bit 0)                                          */
#define SPI1_SPSR_OVRF_Msk                (0x1UL)                   /*!< OVRF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SPDR  ========================================================== */
#define SPI1_SPDR_SPDR_Pos                (0UL)                     /*!< SPDR (Bit 0)                                          */
#define SPI1_SPDR_SPDR_Msk                (0xffffffffUL)            /*!< SPDR (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  SPDR_HA  ======================================================== */
#define SPI1_SPDR_HA_SPDR_HA_Pos          (0UL)                     /*!< SPDR_HA (Bit 0)                                       */
#define SPI1_SPDR_HA_SPDR_HA_Msk          (0xffffUL)                /*!< SPDR_HA (Bitfield-Mask: 0xffff)                       */
/* ========================================================  SPDR_HH  ======================================================== */
/* =========================================================  SPBR  ========================================================== */
#define SPI1_SPBR_SPBR_Pos                (0UL)                     /*!< SPBR (Bit 0)                                          */
#define SPI1_SPBR_SPBR_Msk                (0xffUL)                  /*!< SPBR (Bitfield-Mask: 0xff)                            */
/* =========================================================  SPDCR  ========================================================= */
#define SPI1_SPDCR_SPBYT_Pos              (6UL)                     /*!< SPBYT (Bit 6)                                         */
#define SPI1_SPDCR_SPBYT_Msk              (0x40UL)                  /*!< SPBYT (Bitfield-Mask: 0x01)                           */
#define SPI1_SPDCR_SPLW_Pos               (5UL)                     /*!< SPLW (Bit 5)                                          */
#define SPI1_SPDCR_SPLW_Msk               (0x20UL)                  /*!< SPLW (Bitfield-Mask: 0x01)                            */
#define SPI1_SPDCR_SPRDTD_Pos             (4UL)                     /*!< SPRDTD (Bit 4)                                        */
#define SPI1_SPDCR_SPRDTD_Msk             (0x10UL)                  /*!< SPRDTD (Bitfield-Mask: 0x01)                          */
/* =========================================================  SPCKD  ========================================================= */
#define SPI1_SPCKD_SCKDL_Pos              (0UL)                     /*!< SCKDL (Bit 0)                                         */
#define SPI1_SPCKD_SCKDL_Msk              (0x7UL)                   /*!< SCKDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SSLND  ========================================================= */
#define SPI1_SSLND_SLNDL_Pos              (0UL)                     /*!< SLNDL (Bit 0)                                         */
#define SPI1_SSLND_SLNDL_Msk              (0x7UL)                   /*!< SLNDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SPND  ========================================================== */
#define SPI1_SPND_SPNDL_Pos               (0UL)                     /*!< SPNDL (Bit 0)                                         */
#define SPI1_SPND_SPNDL_Msk               (0x7UL)                   /*!< SPNDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SPCR2  ========================================================= */
#define SPI1_SPCR2_SCKASE_Pos             (4UL)                     /*!< SCKASE (Bit 4)                                        */
#define SPI1_SPCR2_SCKASE_Msk             (0x10UL)                  /*!< SCKASE (Bitfield-Mask: 0x01)                          */
#define SPI1_SPCR2_PTE_Pos                (3UL)                     /*!< PTE (Bit 3)                                           */
#define SPI1_SPCR2_PTE_Msk                (0x8UL)                   /*!< PTE (Bitfield-Mask: 0x01)                             */
#define SPI1_SPCR2_SPIIE_Pos              (2UL)                     /*!< SPIIE (Bit 2)                                         */
#define SPI1_SPCR2_SPIIE_Msk              (0x4UL)                   /*!< SPIIE (Bitfield-Mask: 0x01)                           */
#define SPI1_SPCR2_SPOE_Pos               (1UL)                     /*!< SPOE (Bit 1)                                          */
#define SPI1_SPCR2_SPOE_Msk               (0x2UL)                   /*!< SPOE (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCR2_SPPE_Pos               (0UL)                     /*!< SPPE (Bit 0)                                          */
#define SPI1_SPCR2_SPPE_Msk               (0x1UL)                   /*!< SPPE (Bitfield-Mask: 0x01)                            */
/* ========================================================  SPCMD0  ========================================================= */
#define SPI1_SPCMD0_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI1_SPCMD0_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
#define SPI1_SPCMD0_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI1_SPCMD0_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI1_SPCMD0_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI1_SPCMD0_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI1_SPCMD0_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI1_SPCMD0_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCMD0_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI1_SPCMD0_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI1_SPCMD0_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI1_SPCMD0_SSLA_Msk              (0x30UL)                  /*!< SSLA (Bitfield-Mask: 0x03)                            */
#define SPI1_SPCMD0_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI1_SPCMD0_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI1_SPCMD0_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI1_SPCMD0_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCMD0_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI1_SPCMD0_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           SPMON                                           ================ */
/* =========================================================================================================================== */

/* =======================================================  MSPMPUOAD  ======================================================= */
#define SPMON_MSPMPUOAD_KEY_Pos           (8UL)                     /*!< KEY (Bit 8)                                           */
#define SPMON_MSPMPUOAD_KEY_Msk           (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
#define SPMON_MSPMPUOAD_OAD_Pos           (0UL)                     /*!< OAD (Bit 0)                                           */
#define SPMON_MSPMPUOAD_OAD_Msk           (0x1UL)                   /*!< OAD (Bitfield-Mask: 0x01)                             */
/* =======================================================  MSPMPUCTL  ======================================================= */
#define SPMON_MSPMPUCTL_ERROR_Pos         (8UL)                     /*!< ERROR (Bit 8)                                         */
#define SPMON_MSPMPUCTL_ERROR_Msk         (0x100UL)                 /*!< ERROR (Bitfield-Mask: 0x01)                           */
#define SPMON_MSPMPUCTL_ENABLE_Pos        (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define SPMON_MSPMPUCTL_ENABLE_Msk        (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
/* =======================================================  MSPMPUPT  ======================================================== */
#define SPMON_MSPMPUPT_KEY_Pos            (8UL)                     /*!< KEY (Bit 8)                                           */
#define SPMON_MSPMPUPT_KEY_Msk            (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
#define SPMON_MSPMPUPT_PROTECT_Pos        (0UL)                     /*!< PROTECT (Bit 0)                                       */
#define SPMON_MSPMPUPT_PROTECT_Msk        (0x1UL)                   /*!< PROTECT (Bitfield-Mask: 0x01)                         */
/* =======================================================  MSPMPUSA  ======================================================== */
#define SPMON_MSPMPUSA_MSPMPUSA_Pos       (0UL)                     /*!< MSPMPUSA (Bit 0)                                      */
#define SPMON_MSPMPUSA_MSPMPUSA_Msk       (0xffffffffUL)            /*!< MSPMPUSA (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  MSPMPUEA  ======================================================== */
#define SPMON_MSPMPUEA_MSPMPUEA_Pos       (0UL)                     /*!< MSPMPUEA (Bit 0)                                      */
#define SPMON_MSPMPUEA_MSPMPUEA_Msk       (0xffffffffUL)            /*!< MSPMPUEA (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  PSPMPUOAD  ======================================================= */
#define SPMON_PSPMPUOAD_KEY_Pos           (8UL)                     /*!< KEY (Bit 8)                                           */
#define SPMON_PSPMPUOAD_KEY_Msk           (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
#define SPMON_PSPMPUOAD_OAD_Pos           (0UL)                     /*!< OAD (Bit 0)                                           */
#define SPMON_PSPMPUOAD_OAD_Msk           (0x1UL)                   /*!< OAD (Bitfield-Mask: 0x01)                             */
/* =======================================================  PSPMPUCTL  ======================================================= */
#define SPMON_PSPMPUCTL_ERROR_Pos         (8UL)                     /*!< ERROR (Bit 8)                                         */
#define SPMON_PSPMPUCTL_ERROR_Msk         (0x100UL)                 /*!< ERROR (Bitfield-Mask: 0x01)                           */
#define SPMON_PSPMPUCTL_ENABLE_Pos        (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define SPMON_PSPMPUCTL_ENABLE_Msk        (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
/* =======================================================  PSPMPUPT  ======================================================== */
#define SPMON_PSPMPUPT_KEY_Pos            (8UL)                     /*!< KEY (Bit 8)                                           */
#define SPMON_PSPMPUPT_KEY_Msk            (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
#define SPMON_PSPMPUPT_PROTECT_Pos        (0UL)                     /*!< PROTECT (Bit 0)                                       */
#define SPMON_PSPMPUPT_PROTECT_Msk        (0x1UL)                   /*!< PROTECT (Bitfield-Mask: 0x01)                         */
/* =======================================================  PSPMPUSA  ======================================================== */
#define SPMON_PSPMPUSA_PSPMPUSA_Pos       (0UL)                     /*!< PSPMPUSA (Bit 0)                                      */
#define SPMON_PSPMPUSA_PSPMPUSA_Msk       (0xffffffffUL)            /*!< PSPMPUSA (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  PSPMPUEA  ======================================================== */
#define SPMON_PSPMPUEA_PSPMPUEA_Pos       (0UL)                     /*!< PSPMPUEA (Bit 0)                                      */
#define SPMON_PSPMPUEA_PSPMPUEA_Msk       (0xffffffffUL)            /*!< PSPMPUEA (Bitfield-Mask: 0xffffffff)                  */


/* =========================================================================================================================== */
/* ================                                          SYSTEM                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  PRCR  ========================================================== */
#define SYSTEM_PRCR_PRKEY_Pos             (8UL)                     /*!< PRKEY (Bit 8)                                         */
#define SYSTEM_PRCR_PRKEY_Msk             (0xff00UL)                /*!< PRKEY (Bitfield-Mask: 0xff)                           */
#define SYSTEM_PRCR_PRC4_Pos              (4UL)                     /*!< PRC4 (Bit 4)                                          */
#define SYSTEM_PRCR_PRC4_Msk              (0x10UL)                  /*!< PRC4 (Bitfield-Mask: 0x01)                            */
#define SYSTEM_PRCR_PRC3_Pos              (3UL)                     /*!< PRC3 (Bit 3)                                          */
#define SYSTEM_PRCR_PRC3_Msk              (0x8UL)                   /*!< PRC3 (Bitfield-Mask: 0x01)                            */
#define SYSTEM_PRCR_PRC1_Pos              (1UL)                     /*!< PRC1 (Bit 1)                                          */
#define SYSTEM_PRCR_PRC1_Msk              (0x2UL)                   /*!< PRC1 (Bitfield-Mask: 0x01)                            */
#define SYSTEM_PRCR_PRC0_Pos              (0UL)                     /*!< PRC0 (Bit 0)                                          */
#define SYSTEM_PRCR_PRC0_Msk              (0x1UL)                   /*!< PRC0 (Bitfield-Mask: 0x01)                            */
/* ========================================================  RSTSR0  ========================================================= */
#define SYSTEM_RSTSR0_DPSRSTF_Pos         (7UL)                     /*!< DPSRSTF (Bit 7)                                       */
#define SYSTEM_RSTSR0_DPSRSTF_Msk         (0x80UL)                  /*!< DPSRSTF (Bitfield-Mask: 0x01)                         */
#define SYSTEM_RSTSR0_LVD1RF_Pos          (2UL)                     /*!< LVD1RF (Bit 2)                                        */
#define SYSTEM_RSTSR0_LVD1RF_Msk          (0x4UL)                   /*!< LVD1RF (Bitfield-Mask: 0x01)                          */
#define SYSTEM_RSTSR0_LVD0RF_Pos          (1UL)                     /*!< LVD0RF (Bit 1)                                        */
#define SYSTEM_RSTSR0_LVD0RF_Msk          (0x2UL)                   /*!< LVD0RF (Bitfield-Mask: 0x01)                          */
#define SYSTEM_RSTSR0_PORF_Pos            (0UL)                     /*!< PORF (Bit 0)                                          */
#define SYSTEM_RSTSR0_PORF_Msk            (0x1UL)                   /*!< PORF (Bitfield-Mask: 0x01)                            */
/* ========================================================  RSTSR1  ========================================================= */
#define SYSTEM_RSTSR1_SPERF_Pos           (12UL)                    /*!< SPERF (Bit 12)                                        */
#define SYSTEM_RSTSR1_SPERF_Msk           (0x1000UL)                /*!< SPERF (Bitfield-Mask: 0x01)                           */
#define SYSTEM_RSTSR1_BUSMRF_Pos          (11UL)                    /*!< BUSMRF (Bit 11)                                       */
#define SYSTEM_RSTSR1_BUSMRF_Msk          (0x800UL)                 /*!< BUSMRF (Bitfield-Mask: 0x01)                          */
#define SYSTEM_RSTSR1_BUSSRF_Pos          (10UL)                    /*!< BUSSRF (Bit 10)                                       */
#define SYSTEM_RSTSR1_BUSSRF_Msk          (0x400UL)                 /*!< BUSSRF (Bitfield-Mask: 0x01)                          */
#define SYSTEM_RSTSR1_SWRF_Pos            (2UL)                     /*!< SWRF (Bit 2)                                          */
#define SYSTEM_RSTSR1_SWRF_Msk            (0x4UL)                   /*!< SWRF (Bitfield-Mask: 0x01)                            */
#define SYSTEM_RSTSR1_WDTRF_Pos           (1UL)                     /*!< WDTRF (Bit 1)                                         */
#define SYSTEM_RSTSR1_WDTRF_Msk           (0x2UL)                   /*!< WDTRF (Bitfield-Mask: 0x01)                           */
#define SYSTEM_RSTSR1_IWDTRF_Pos          (0UL)                     /*!< IWDTRF (Bit 0)                                        */
#define SYSTEM_RSTSR1_IWDTRF_Msk          (0x1UL)                   /*!< IWDTRF (Bitfield-Mask: 0x01)                          */
/* ========================================================  RSTSR2  ========================================================= */
#define SYSTEM_RSTSR2_CWSF_Pos            (0UL)                     /*!< CWSF (Bit 0)                                          */
#define SYSTEM_RSTSR2_CWSF_Msk            (0x1UL)                   /*!< CWSF (Bitfield-Mask: 0x01)                            */
/* ========================================================  LVD1CR1  ======================================================== */
#define SYSTEM_LVD1CR1_IRQSEL_Pos         (2UL)                     /*!< IRQSEL (Bit 2)                                        */
#define SYSTEM_LVD1CR1_IRQSEL_Msk         (0x4UL)                   /*!< IRQSEL (Bitfield-Mask: 0x01)                          */
#define SYSTEM_LVD1CR1_IDTSEL_Pos         (0UL)                     /*!< IDTSEL (Bit 0)                                        */
#define SYSTEM_LVD1CR1_IDTSEL_Msk         (0x3UL)                   /*!< IDTSEL (Bitfield-Mask: 0x03)                          */
/* ========================================================  LVD1SR  ========================================================= */
#define SYSTEM_LVD1SR_MON_Pos             (1UL)                     /*!< MON (Bit 1)                                           */
#define SYSTEM_LVD1SR_MON_Msk             (0x2UL)                   /*!< MON (Bitfield-Mask: 0x01)                             */
#define SYSTEM_LVD1SR_DET_Pos             (0UL)                     /*!< DET (Bit 0)                                           */
#define SYSTEM_LVD1SR_DET_Msk             (0x1UL)                   /*!< DET (Bitfield-Mask: 0x01)                             */
/* =======================================================  LVDBATCR1  ======================================================= */
#define SYSTEM_LVDBATCR1_IRQSEL_Pos       (2UL)                     /*!< IRQSEL (Bit 2)                                        */
#define SYSTEM_LVDBATCR1_IRQSEL_Msk       (0x4UL)                   /*!< IRQSEL (Bitfield-Mask: 0x01)                          */
#define SYSTEM_LVDBATCR1_IDTSEL_Pos       (0UL)                     /*!< IDTSEL (Bit 0)                                        */
#define SYSTEM_LVDBATCR1_IDTSEL_Msk       (0x3UL)                   /*!< IDTSEL (Bitfield-Mask: 0x03)                          */
/* =======================================================  LVDBATSR  ======================================================== */
#define SYSTEM_LVDBATSR_MON_Pos           (1UL)                     /*!< MON (Bit 1)                                           */
#define SYSTEM_LVDBATSR_MON_Msk           (0x2UL)                   /*!< MON (Bitfield-Mask: 0x01)                             */
#define SYSTEM_LVDBATSR_DET_Pos           (0UL)                     /*!< DET (Bit 0)                                           */
#define SYSTEM_LVDBATSR_DET_Msk           (0x1UL)                   /*!< DET (Bitfield-Mask: 0x01)                             */
/* ========================================================  LVCMPCR  ======================================================== */
#define SYSTEM_LVCMPCR_LVDBATE_Pos        (6UL)                     /*!< LVDBATE (Bit 6)                                       */
#define SYSTEM_LVCMPCR_LVDBATE_Msk        (0x40UL)                  /*!< LVDBATE (Bitfield-Mask: 0x01)                         */
#define SYSTEM_LVCMPCR_LVD1E_Pos          (5UL)                     /*!< LVD1E (Bit 5)                                         */
#define SYSTEM_LVCMPCR_LVD1E_Msk          (0x20UL)                  /*!< LVD1E (Bitfield-Mask: 0x01)                           */
/* ========================================================  LVDLVLR  ======================================================== */
#define SYSTEM_LVDLVLR_LVDBATLVL_Pos      (4UL)                     /*!< LVDBATLVL (Bit 4)                                     */
#define SYSTEM_LVDLVLR_LVDBATLVL_Msk      (0x70UL)                  /*!< LVDBATLVL (Bitfield-Mask: 0x07)                       */
#define SYSTEM_LVDLVLR_LVD1LVL_Pos        (0UL)                     /*!< LVD1LVL (Bit 0)                                       */
#define SYSTEM_LVDLVLR_LVD1LVL_Msk        (0x7UL)                   /*!< LVD1LVL (Bitfield-Mask: 0x07)                         */
/* ========================================================  LVD1CR0  ======================================================== */
#define SYSTEM_LVD1CR0_RN_Pos             (7UL)                     /*!< RN (Bit 7)                                            */
#define SYSTEM_LVD1CR0_RN_Msk             (0x80UL)                  /*!< RN (Bitfield-Mask: 0x01)                              */
#define SYSTEM_LVD1CR0_RI_Pos             (6UL)                     /*!< RI (Bit 6)                                            */
#define SYSTEM_LVD1CR0_RI_Msk             (0x40UL)                  /*!< RI (Bitfield-Mask: 0x01)                              */
#define SYSTEM_LVD1CR0_FSAMP_Pos          (4UL)                     /*!< FSAMP (Bit 4)                                         */
#define SYSTEM_LVD1CR0_FSAMP_Msk          (0x30UL)                  /*!< FSAMP (Bitfield-Mask: 0x03)                           */
#define SYSTEM_LVD1CR0_CMPE_Pos           (2UL)                     /*!< CMPE (Bit 2)                                          */
#define SYSTEM_LVD1CR0_CMPE_Msk           (0x4UL)                   /*!< CMPE (Bitfield-Mask: 0x01)                            */
#define SYSTEM_LVD1CR0_DFDIS_Pos          (1UL)                     /*!< DFDIS (Bit 1)                                         */
#define SYSTEM_LVD1CR0_DFDIS_Msk          (0x2UL)                   /*!< DFDIS (Bitfield-Mask: 0x01)                           */
#define SYSTEM_LVD1CR0_RIE_Pos            (0UL)                     /*!< RIE (Bit 0)                                           */
#define SYSTEM_LVD1CR0_RIE_Msk            (0x1UL)                   /*!< RIE (Bitfield-Mask: 0x01)                             */
/* =======================================================  LVDBATCR0  ======================================================= */
#define SYSTEM_LVDBATCR0_RN_Pos           (7UL)                     /*!< RN (Bit 7)                                            */
#define SYSTEM_LVDBATCR0_RN_Msk           (0x80UL)                  /*!< RN (Bitfield-Mask: 0x01)                              */
#define SYSTEM_LVDBATCR0_RI_Pos           (6UL)                     /*!< RI (Bit 6)                                            */
#define SYSTEM_LVDBATCR0_RI_Msk           (0x40UL)                  /*!< RI (Bitfield-Mask: 0x01)                              */
#define SYSTEM_LVDBATCR0_FSAMP_Pos        (4UL)                     /*!< FSAMP (Bit 4)                                         */
#define SYSTEM_LVDBATCR0_FSAMP_Msk        (0x30UL)                  /*!< FSAMP (Bitfield-Mask: 0x03)                           */
#define SYSTEM_LVDBATCR0_CMPE_Pos         (2UL)                     /*!< CMPE (Bit 2)                                          */
#define SYSTEM_LVDBATCR0_CMPE_Msk         (0x4UL)                   /*!< CMPE (Bitfield-Mask: 0x01)                            */
#define SYSTEM_LVDBATCR0_DFDIS_Pos        (1UL)                     /*!< DFDIS (Bit 1)                                         */
#define SYSTEM_LVDBATCR0_DFDIS_Msk        (0x2UL)                   /*!< DFDIS (Bitfield-Mask: 0x01)                           */
#define SYSTEM_LVDBATCR0_RIE_Pos          (0UL)                     /*!< RIE (Bit 0)                                           */
#define SYSTEM_LVDBATCR0_RIE_Msk          (0x1UL)                   /*!< RIE (Bitfield-Mask: 0x01)                             */
/* ========================================================  MSTPCRA  ======================================================== */
#define SYSTEM_MSTPCRA_MSTPA22_Pos        (22UL)                    /*!< MSTPA22 (Bit 22)                                      */
#define SYSTEM_MSTPCRA_MSTPA22_Msk        (0x400000UL)              /*!< MSTPA22 (Bitfield-Mask: 0x01)                         */
/* ========================================================  FSTPCR  ========================================================= */
#define SYSTEM_FSTPCR_FLFSTP_Pos          (0UL)                     /*!< FLFSTP (Bit 0)                                        */
#define SYSTEM_FSTPCR_FLFSTP_Msk          (0x1UL)                   /*!< FLFSTP (Bitfield-Mask: 0x01)                          */
/* ========================================================  PWSTCR  ========================================================= */
#define SYSTEM_PWSTCR_PWST_Pos            (0UL)                     /*!< PWST (Bit 0)                                          */
#define SYSTEM_PWSTCR_PWST_Msk            (0x7UL)                   /*!< PWST (Bitfield-Mask: 0x07)                            */
/* =========================================================  PWSTF  ========================================================= */
#define SYSTEM_PWSTF_VBBM_Pos             (4UL)                     /*!< VBBM (Bit 4)                                          */
#define SYSTEM_PWSTF_VBBM_Msk             (0x10UL)                  /*!< VBBM (Bitfield-Mask: 0x01)                            */
#define SYSTEM_PWSTF_BOOSTM_Pos           (3UL)                     /*!< BOOSTM (Bit 3)                                        */
#define SYSTEM_PWSTF_BOOSTM_Msk           (0x8UL)                   /*!< BOOSTM (Bitfield-Mask: 0x01)                          */
#define SYSTEM_PWSTF_MINPWONM_Pos         (2UL)                     /*!< MINPWONM (Bit 2)                                      */
#define SYSTEM_PWSTF_MINPWONM_Msk         (0x4UL)                   /*!< MINPWONM (Bitfield-Mask: 0x01)                        */
#define SYSTEM_PWSTF_EXFPWONM_Pos         (1UL)                     /*!< EXFPWONM (Bit 1)                                      */
#define SYSTEM_PWSTF_EXFPWONM_Msk         (0x2UL)                   /*!< EXFPWONM (Bitfield-Mask: 0x01)                        */
#define SYSTEM_PWSTF_ALLPWONM_Pos         (0UL)                     /*!< ALLPWONM (Bit 0)                                      */
#define SYSTEM_PWSTF_ALLPWONM_Msk         (0x1UL)                   /*!< ALLPWONM (Bitfield-Mask: 0x01)                        */
/* =========================================================  OPCCR  ========================================================= */
#define SYSTEM_OPCCR_OPCMTSF_Pos          (4UL)                     /*!< OPCMTSF (Bit 4)                                       */
#define SYSTEM_OPCCR_OPCMTSF_Msk          (0x10UL)                  /*!< OPCMTSF (Bitfield-Mask: 0x01)                         */
#define SYSTEM_OPCCR_OPCM_Pos             (0UL)                     /*!< OPCM (Bit 0)                                          */
#define SYSTEM_OPCCR_OPCM_Msk             (0x3UL)                   /*!< OPCM (Bitfield-Mask: 0x03)                            */
/* ========================================================  SOPCCR  ========================================================= */
#define SYSTEM_SOPCCR_SOPCMTSF_Pos        (4UL)                     /*!< SOPCMTSF (Bit 4)                                      */
#define SYSTEM_SOPCCR_SOPCMTSF_Msk        (0x10UL)                  /*!< SOPCMTSF (Bitfield-Mask: 0x01)                        */
#define SYSTEM_SOPCCR_SOPCM_Pos           (0UL)                     /*!< SOPCM (Bit 0)                                         */
#define SYSTEM_SOPCCR_SOPCM_Msk           (0x1UL)                   /*!< SOPCM (Bitfield-Mask: 0x01)                           */
/* =========================================================  SBYCR  ========================================================= */
#define SYSTEM_SBYCR_SSBY_Pos             (15UL)                    /*!< SSBY (Bit 15)                                         */
#define SYSTEM_SBYCR_SSBY_Msk             (0x8000UL)                /*!< SSBY (Bitfield-Mask: 0x01)                            */
#define SYSTEM_SBYCR_SSBYMP_Pos           (14UL)                    /*!< SSBYMP (Bit 14)                                       */
#define SYSTEM_SBYCR_SSBYMP_Msk           (0x4000UL)                /*!< SSBYMP (Bitfield-Mask: 0x01)                          */
#define SYSTEM_SBYCR_RETPM_Pos            (12UL)                    /*!< RETPM (Bit 12)                                        */
#define SYSTEM_SBYCR_RETPM_Msk            (0x1000UL)                /*!< RETPM (Bitfield-Mask: 0x01)                           */
/* ========================================================  RAMSDCR  ======================================================== */
#define SYSTEM_RAMSDCR_RAMSD7_Pos         (7UL)                     /*!< RAMSD7 (Bit 7)                                        */
#define SYSTEM_RAMSDCR_RAMSD7_Msk         (0x80UL)                  /*!< RAMSD7 (Bitfield-Mask: 0x01)                          */
#define SYSTEM_RAMSDCR_RAMSD6_Pos         (6UL)                     /*!< RAMSD6 (Bit 6)                                        */
#define SYSTEM_RAMSDCR_RAMSD6_Msk         (0x40UL)                  /*!< RAMSD6 (Bitfield-Mask: 0x01)                          */
#define SYSTEM_RAMSDCR_RAMSD5_Pos         (5UL)                     /*!< RAMSD5 (Bit 5)                                        */
#define SYSTEM_RAMSDCR_RAMSD5_Msk         (0x20UL)                  /*!< RAMSD5 (Bitfield-Mask: 0x01)                          */
#define SYSTEM_RAMSDCR_RAMSD4_Pos         (4UL)                     /*!< RAMSD4 (Bit 4)                                        */
#define SYSTEM_RAMSDCR_RAMSD4_Msk         (0x10UL)                  /*!< RAMSD4 (Bitfield-Mask: 0x01)                          */
#define SYSTEM_RAMSDCR_RAMSD3_Pos         (3UL)                     /*!< RAMSD3 (Bit 3)                                        */
#define SYSTEM_RAMSDCR_RAMSD3_Msk         (0x8UL)                   /*!< RAMSD3 (Bitfield-Mask: 0x01)                          */
#define SYSTEM_RAMSDCR_RAMSD2_Pos         (2UL)                     /*!< RAMSD2 (Bit 2)                                        */
#define SYSTEM_RAMSDCR_RAMSD2_Msk         (0x4UL)                   /*!< RAMSD2 (Bitfield-Mask: 0x01)                          */
#define SYSTEM_RAMSDCR_RAMSD1_Pos         (1UL)                     /*!< RAMSD1 (Bit 1)                                        */
#define SYSTEM_RAMSDCR_RAMSD1_Msk         (0x2UL)                   /*!< RAMSD1 (Bitfield-Mask: 0x01)                          */
#define SYSTEM_RAMSDCR_RAMSD0_Pos         (0UL)                     /*!< RAMSD0 (Bit 0)                                        */
#define SYSTEM_RAMSDCR_RAMSD0_Msk         (0x1UL)                   /*!< RAMSD0 (Bitfield-Mask: 0x01)                          */
/* =========================================================  SNZCR  ========================================================= */
#define SYSTEM_SNZCR_SNZE_Pos             (7UL)                     /*!< SNZE (Bit 7)                                          */
#define SYSTEM_SNZCR_SNZE_Msk             (0x80UL)                  /*!< SNZE (Bitfield-Mask: 0x01)                            */
#define SYSTEM_SNZCR_SNZDTCEN_Pos         (1UL)                     /*!< SNZDTCEN (Bit 1)                                      */
#define SYSTEM_SNZCR_SNZDTCEN_Msk         (0x2UL)                   /*!< SNZDTCEN (Bitfield-Mask: 0x01)                        */
#define SYSTEM_SNZCR_RXDREQEN_Pos         (0UL)                     /*!< RXDREQEN (Bit 0)                                      */
#define SYSTEM_SNZCR_RXDREQEN_Msk         (0x1UL)                   /*!< RXDREQEN (Bitfield-Mask: 0x01)                        */
/* ========================================================  SNZEDCR  ======================================================== */
#define SYSTEM_SNZEDCR_SCI0UMTED_Pos      (7UL)                     /*!< SCI0UMTED (Bit 7)                                     */
#define SYSTEM_SNZEDCR_SCI0UMTED_Msk      (0x80UL)                  /*!< SCI0UMTED (Bitfield-Mask: 0x01)                       */
#define SYSTEM_SNZEDCR_AD0UMTED_Pos       (4UL)                     /*!< AD0UMTED (Bit 4)                                      */
#define SYSTEM_SNZEDCR_AD0UMTED_Msk       (0x10UL)                  /*!< AD0UMTED (Bitfield-Mask: 0x01)                        */
#define SYSTEM_SNZEDCR_AD0MATED_Pos       (3UL)                     /*!< AD0MATED (Bit 3)                                      */
#define SYSTEM_SNZEDCR_AD0MATED_Msk       (0x8UL)                   /*!< AD0MATED (Bitfield-Mask: 0x01)                        */
#define SYSTEM_SNZEDCR_DTCNZRED_Pos       (2UL)                     /*!< DTCNZRED (Bit 2)                                      */
#define SYSTEM_SNZEDCR_DTCNZRED_Msk       (0x4UL)                   /*!< DTCNZRED (Bitfield-Mask: 0x01)                        */
#define SYSTEM_SNZEDCR_DTCZRED_Pos        (1UL)                     /*!< DTCZRED (Bit 1)                                       */
#define SYSTEM_SNZEDCR_DTCZRED_Msk        (0x2UL)                   /*!< DTCZRED (Bitfield-Mask: 0x01)                         */
#define SYSTEM_SNZEDCR_AGTUNFED_Pos       (0UL)                     /*!< AGTUNFED (Bit 0)                                      */
#define SYSTEM_SNZEDCR_AGTUNFED_Msk       (0x1UL)                   /*!< AGTUNFED (Bitfield-Mask: 0x01)                        */
/* =======================================================  SNZREQCR  ======================================================== */
#define SYSTEM_SNZREQCR_SNZREQEN30_Pos    (30UL)                    /*!< SNZREQEN30 (Bit 30)                                   */
#define SYSTEM_SNZREQCR_SNZREQEN30_Msk    (0x40000000UL)            /*!< SNZREQEN30 (Bitfield-Mask: 0x01)                      */
#define SYSTEM_SNZREQCR_SNZREQEN29_Pos    (29UL)                    /*!< SNZREQEN29 (Bit 29)                                   */
#define SYSTEM_SNZREQCR_SNZREQEN29_Msk    (0x20000000UL)            /*!< SNZREQEN29 (Bitfield-Mask: 0x01)                      */
#define SYSTEM_SNZREQCR_SNZREQEN28_Pos    (28UL)                    /*!< SNZREQEN28 (Bit 28)                                   */
#define SYSTEM_SNZREQCR_SNZREQEN28_Msk    (0x10000000UL)            /*!< SNZREQEN28 (Bitfield-Mask: 0x01)                      */
#define SYSTEM_SNZREQCR_SNZREQEN25_Pos    (25UL)                    /*!< SNZREQEN25 (Bit 25)                                   */
#define SYSTEM_SNZREQCR_SNZREQEN25_Msk    (0x2000000UL)             /*!< SNZREQEN25 (Bitfield-Mask: 0x01)                      */
#define SYSTEM_SNZREQCR_SNZREQEN24_Pos    (24UL)                    /*!< SNZREQEN24 (Bit 24)                                   */
#define SYSTEM_SNZREQCR_SNZREQEN24_Msk    (0x1000000UL)             /*!< SNZREQEN24 (Bitfield-Mask: 0x01)                      */
#define SYSTEM_SNZREQCR_SNZREQEN23_Pos    (23UL)                    /*!< SNZREQEN23 (Bit 23)                                   */
#define SYSTEM_SNZREQCR_SNZREQEN23_Msk    (0x800000UL)              /*!< SNZREQEN23 (Bitfield-Mask: 0x01)                      */
#define SYSTEM_SNZREQCR_SNZREQEN17_Pos    (17UL)                    /*!< SNZREQEN17 (Bit 17)                                   */
#define SYSTEM_SNZREQCR_SNZREQEN17_Msk    (0x20000UL)               /*!< SNZREQEN17 (Bitfield-Mask: 0x01)                      */
#define SYSTEM_SNZREQCR_SNZREQEN7_Pos     (7UL)                     /*!< SNZREQEN7 (Bit 7)                                     */
#define SYSTEM_SNZREQCR_SNZREQEN7_Msk     (0x80UL)                  /*!< SNZREQEN7 (Bitfield-Mask: 0x01)                       */
#define SYSTEM_SNZREQCR_SNZREQEN6_Pos     (6UL)                     /*!< SNZREQEN6 (Bit 6)                                     */
#define SYSTEM_SNZREQCR_SNZREQEN6_Msk     (0x40UL)                  /*!< SNZREQEN6 (Bitfield-Mask: 0x01)                       */
#define SYSTEM_SNZREQCR_SNZREQEN5_Pos     (5UL)                     /*!< SNZREQEN5 (Bit 5)                                     */
#define SYSTEM_SNZREQCR_SNZREQEN5_Msk     (0x20UL)                  /*!< SNZREQEN5 (Bitfield-Mask: 0x01)                       */
#define SYSTEM_SNZREQCR_SNZREQEN4_Pos     (4UL)                     /*!< SNZREQEN4 (Bit 4)                                     */
#define SYSTEM_SNZREQCR_SNZREQEN4_Msk     (0x10UL)                  /*!< SNZREQEN4 (Bitfield-Mask: 0x01)                       */
#define SYSTEM_SNZREQCR_SNZREQEN3_Pos     (3UL)                     /*!< SNZREQEN3 (Bit 3)                                     */
#define SYSTEM_SNZREQCR_SNZREQEN3_Msk     (0x8UL)                   /*!< SNZREQEN3 (Bitfield-Mask: 0x01)                       */
#define SYSTEM_SNZREQCR_SNZREQEN2_Pos     (2UL)                     /*!< SNZREQEN2 (Bit 2)                                     */
#define SYSTEM_SNZREQCR_SNZREQEN2_Msk     (0x4UL)                   /*!< SNZREQEN2 (Bitfield-Mask: 0x01)                       */
#define SYSTEM_SNZREQCR_SNZREQEN1_Pos     (1UL)                     /*!< SNZREQEN1 (Bit 1)                                     */
#define SYSTEM_SNZREQCR_SNZREQEN1_Msk     (0x2UL)                   /*!< SNZREQEN1 (Bitfield-Mask: 0x01)                       */
#define SYSTEM_SNZREQCR_SNZREQEN0_Pos     (0UL)                     /*!< SNZREQEN0 (Bit 0)                                     */
#define SYSTEM_SNZREQCR_SNZREQEN0_Msk     (0x1UL)                   /*!< SNZREQEN0 (Bitfield-Mask: 0x01)                       */
/* ========================================================  DPSBYCR  ======================================================== */
#define SYSTEM_DPSBYCR_DPSBY_Pos          (7UL)                     /*!< DPSBY (Bit 7)                                         */
#define SYSTEM_DPSBYCR_DPSBY_Msk          (0x80UL)                  /*!< DPSBY (Bitfield-Mask: 0x01)                           */
#define SYSTEM_DPSBYCR_IOKEEP_Pos         (6UL)                     /*!< IOKEEP (Bit 6)                                        */
#define SYSTEM_DPSBYCR_IOKEEP_Msk         (0x40UL)                  /*!< IOKEEP (Bitfield-Mask: 0x01)                          */
/* ========================================================  DPSIER0  ======================================================== */
#define SYSTEM_DPSIER0_DIRQ3E_Pos         (3UL)                     /*!< DIRQ3E (Bit 3)                                        */
#define SYSTEM_DPSIER0_DIRQ3E_Msk         (0x8UL)                   /*!< DIRQ3E (Bitfield-Mask: 0x01)                          */
#define SYSTEM_DPSIER0_DIRQ2E_Pos         (2UL)                     /*!< DIRQ2E (Bit 2)                                        */
#define SYSTEM_DPSIER0_DIRQ2E_Msk         (0x4UL)                   /*!< DIRQ2E (Bitfield-Mask: 0x01)                          */
#define SYSTEM_DPSIER0_DIRQ1E_Pos         (1UL)                     /*!< DIRQ1E (Bit 1)                                        */
#define SYSTEM_DPSIER0_DIRQ1E_Msk         (0x2UL)                   /*!< DIRQ1E (Bitfield-Mask: 0x01)                          */
#define SYSTEM_DPSIER0_DIRQ0E_Pos         (0UL)                     /*!< DIRQ0E (Bit 0)                                        */
#define SYSTEM_DPSIER0_DIRQ0E_Msk         (0x1UL)                   /*!< DIRQ0E (Bitfield-Mask: 0x01)                          */
/* ========================================================  DPSIER1  ======================================================== */
#define SYSTEM_DPSIER1_DCCCIE_Pos         (5UL)                     /*!< DCCCIE (Bit 5)                                        */
#define SYSTEM_DPSIER1_DCCCIE_Msk         (0x20UL)                  /*!< DCCCIE (Bitfield-Mask: 0x01)                          */
#define SYSTEM_DPSIER1_DNMIE_Pos          (4UL)                     /*!< DNMIE (Bit 4)                                         */
#define SYSTEM_DPSIER1_DNMIE_Msk          (0x10UL)                  /*!< DNMIE (Bitfield-Mask: 0x01)                           */
#define SYSTEM_DPSIER1_DLVDBATIE_Pos      (1UL)                     /*!< DLVDBATIE (Bit 1)                                     */
#define SYSTEM_DPSIER1_DLVDBATIE_Msk      (0x2UL)                   /*!< DLVDBATIE (Bitfield-Mask: 0x01)                       */
#define SYSTEM_DPSIER1_DLVD1IE_Pos        (0UL)                     /*!< DLVD1IE (Bit 0)                                       */
#define SYSTEM_DPSIER1_DLVD1IE_Msk        (0x1UL)                   /*!< DLVD1IE (Bitfield-Mask: 0x01)                         */
/* ========================================================  DPSIFR0  ======================================================== */
#define SYSTEM_DPSIFR0_DIRQ3F_Pos         (3UL)                     /*!< DIRQ3F (Bit 3)                                        */
#define SYSTEM_DPSIFR0_DIRQ3F_Msk         (0x8UL)                   /*!< DIRQ3F (Bitfield-Mask: 0x01)                          */
#define SYSTEM_DPSIFR0_DIRQ2F_Pos         (2UL)                     /*!< DIRQ2F (Bit 2)                                        */
#define SYSTEM_DPSIFR0_DIRQ2F_Msk         (0x4UL)                   /*!< DIRQ2F (Bitfield-Mask: 0x01)                          */
#define SYSTEM_DPSIFR0_DIRQ1F_Pos         (1UL)                     /*!< DIRQ1F (Bit 1)                                        */
#define SYSTEM_DPSIFR0_DIRQ1F_Msk         (0x2UL)                   /*!< DIRQ1F (Bitfield-Mask: 0x01)                          */
#define SYSTEM_DPSIFR0_DIRQ0F_Pos         (0UL)                     /*!< DIRQ0F (Bit 0)                                        */
#define SYSTEM_DPSIFR0_DIRQ0F_Msk         (0x1UL)                   /*!< DIRQ0F (Bitfield-Mask: 0x01)                          */
/* ========================================================  DPSIFR1  ======================================================== */
#define SYSTEM_DPSIFR1_DCCCIF_Pos         (5UL)                     /*!< DCCCIF (Bit 5)                                        */
#define SYSTEM_DPSIFR1_DCCCIF_Msk         (0x20UL)                  /*!< DCCCIF (Bitfield-Mask: 0x01)                          */
#define SYSTEM_DPSIFR1_DNMIF_Pos          (4UL)                     /*!< DNMIF (Bit 4)                                         */
#define SYSTEM_DPSIFR1_DNMIF_Msk          (0x10UL)                  /*!< DNMIF (Bitfield-Mask: 0x01)                           */
#define SYSTEM_DPSIFR1_DLVDBATIF_Pos      (1UL)                     /*!< DLVDBATIF (Bit 1)                                     */
#define SYSTEM_DPSIFR1_DLVDBATIF_Msk      (0x2UL)                   /*!< DLVDBATIF (Bitfield-Mask: 0x01)                       */
#define SYSTEM_DPSIFR1_DLVD1IF_Pos        (0UL)                     /*!< DLVD1IF (Bit 0)                                       */
#define SYSTEM_DPSIFR1_DLVD1IF_Msk        (0x1UL)                   /*!< DLVD1IF (Bitfield-Mask: 0x01)                         */
/* =======================================================  DPSIEGR0  ======================================================== */
#define SYSTEM_DPSIEGR0_DIRQ3EG_Pos       (3UL)                     /*!< DIRQ3EG (Bit 3)                                       */
#define SYSTEM_DPSIEGR0_DIRQ3EG_Msk       (0x8UL)                   /*!< DIRQ3EG (Bitfield-Mask: 0x01)                         */
#define SYSTEM_DPSIEGR0_DIRQ2EG_Pos       (2UL)                     /*!< DIRQ2EG (Bit 2)                                       */
#define SYSTEM_DPSIEGR0_DIRQ2EG_Msk       (0x4UL)                   /*!< DIRQ2EG (Bitfield-Mask: 0x01)                         */
#define SYSTEM_DPSIEGR0_DIRQ1EG_Pos       (1UL)                     /*!< DIRQ1EG (Bit 1)                                       */
#define SYSTEM_DPSIEGR0_DIRQ1EG_Msk       (0x2UL)                   /*!< DIRQ1EG (Bitfield-Mask: 0x01)                         */
#define SYSTEM_DPSIEGR0_DIRQ0EG_Pos       (0UL)                     /*!< DIRQ0EG (Bit 0)                                       */
#define SYSTEM_DPSIEGR0_DIRQ0EG_Msk       (0x1UL)                   /*!< DIRQ0EG (Bitfield-Mask: 0x01)                         */
/* =======================================================  DPSIEGR1  ======================================================== */
#define SYSTEM_DPSIEGR1_DNMIEG_Pos        (4UL)                     /*!< DNMIEG (Bit 4)                                        */
#define SYSTEM_DPSIEGR1_DNMIEG_Msk        (0x10UL)                  /*!< DNMIEG (Bitfield-Mask: 0x01)                          */
#define SYSTEM_DPSIEGR1_DLVD1EG_Pos       (0UL)                     /*!< DLVD1EG (Bit 0)                                       */
#define SYSTEM_DPSIEGR1_DLVD1EG_Msk       (0x1UL)                   /*!< DLVD1EG (Bitfield-Mask: 0x01)                         */
/* ========================================================  SYOCDCR  ======================================================== */
#define SYSTEM_SYOCDCR_DBGEN_Pos          (7UL)                     /*!< DBGEN (Bit 7)                                         */
#define SYSTEM_SYOCDCR_DBGEN_Msk          (0x80UL)                  /*!< DBGEN (Bitfield-Mask: 0x01)                           */
#define SYSTEM_SYOCDCR_DOCDF_Pos          (0UL)                     /*!< DOCDF (Bit 0)                                         */
#define SYSTEM_SYOCDCR_DOCDF_Msk          (0x1UL)                   /*!< DOCDF (Bitfield-Mask: 0x01)                           */
/* =========================================================  VOCR  ========================================================== */
#define SYSTEM_VOCR_VPMCTL_Pos            (7UL)                     /*!< VPMCTL (Bit 7)                                        */
#define SYSTEM_VOCR_VPMCTL_Msk            (0x80UL)                  /*!< VPMCTL (Bitfield-Mask: 0x01)                          */
#define SYSTEM_VOCR_UVCTL_Pos             (6UL)                     /*!< UVCTL (Bit 6)                                         */
#define SYSTEM_VOCR_UVCTL_Msk             (0x40UL)                  /*!< UVCTL (Bitfield-Mask: 0x01)                           */
#define SYSTEM_VOCR_IV3CTL_Pos            (5UL)                     /*!< IV3CTL (Bit 5)                                        */
#define SYSTEM_VOCR_IV3CTL_Msk            (0x20UL)                  /*!< IV3CTL (Bitfield-Mask: 0x01)                          */
#define SYSTEM_VOCR_IV2CTL_Pos            (4UL)                     /*!< IV2CTL (Bit 4)                                        */
#define SYSTEM_VOCR_IV2CTL_Msk            (0x10UL)                  /*!< IV2CTL (Bitfield-Mask: 0x01)                          */
#define SYSTEM_VOCR_IV1CTL_Pos            (3UL)                     /*!< IV1CTL (Bit 3)                                        */
#define SYSTEM_VOCR_IV1CTL_Msk            (0x8UL)                   /*!< IV1CTL (Bitfield-Mask: 0x01)                          */
#define SYSTEM_VOCR_IV0CTL_Pos            (2UL)                     /*!< IV0CTL (Bit 2)                                        */
#define SYSTEM_VOCR_IV0CTL_Msk            (0x4UL)                   /*!< IV0CTL (Bitfield-Mask: 0x01)                          */
#define SYSTEM_VOCR_AV1CTL_Pos            (1UL)                     /*!< AV1CTL (Bit 1)                                        */
#define SYSTEM_VOCR_AV1CTL_Msk            (0x2UL)                   /*!< AV1CTL (Bitfield-Mask: 0x01)                          */
#define SYSTEM_VOCR_AV0CTL_Pos            (0UL)                     /*!< AV0CTL (Bit 0)                                        */
#define SYSTEM_VOCR_AV0CTL_Msk            (0x1UL)                   /*!< AV0CTL (Bitfield-Mask: 0x01)                          */
/* =========================================================  LDOCR  ========================================================= */
#define SYSTEM_LDOCR_LDOCUT_Pos           (3UL)                     /*!< LDOCUT (Bit 3)                                        */
#define SYSTEM_LDOCR_LDOCUT_Msk           (0x8UL)                   /*!< LDOCUT (Bitfield-Mask: 0x01)                          */
/* =========================================================  VBBCR  ========================================================= */
#define SYSTEM_VBBCR_VBBEN_Pos            (7UL)                     /*!< VBBEN (Bit 7)                                         */
#define SYSTEM_VBBCR_VBBEN_Msk            (0x80UL)                  /*!< VBBEN (Bitfield-Mask: 0x01)                           */
#define SYSTEM_VBBCR_IVDIS_Pos            (6UL)                     /*!< IVDIS (Bit 6)                                         */
#define SYSTEM_VBBCR_IVDIS_Msk            (0x40UL)                  /*!< IVDIS (Bitfield-Mask: 0x01)                           */
#define SYSTEM_VBBCR_CLKSEL_Pos           (0UL)                     /*!< CLKSEL (Bit 0)                                        */
#define SYSTEM_VBBCR_CLKSEL_Msk           (0x1UL)                   /*!< CLKSEL (Bitfield-Mask: 0x01)                          */
/* =========================================================  VBBST  ========================================================= */
#define SYSTEM_VBBST_VBBSTUP_Pos          (0UL)                     /*!< VBBSTUP (Bit 0)                                       */
#define SYSTEM_VBBST_VBBSTUP_Msk          (0x1UL)                   /*!< VBBSTUP (Bitfield-Mask: 0x01)                         */
/* =======================================================  SCKDIVCR  ======================================================== */
#define SYSTEM_SCKDIVCR_ICK_Pos           (24UL)                    /*!< ICK (Bit 24)                                          */
#define SYSTEM_SCKDIVCR_ICK_Msk           (0x7000000UL)             /*!< ICK (Bitfield-Mask: 0x07)                             */
#define SYSTEM_SCKDIVCR_PCKB_Pos          (8UL)                     /*!< PCKB (Bit 8)                                          */
#define SYSTEM_SCKDIVCR_PCKB_Msk          (0x700UL)                 /*!< PCKB (Bitfield-Mask: 0x07)                            */
/* ========================================================  SCKSCR  ========================================================= */
#define SYSTEM_SCKSCR_CKSEL_Pos           (0UL)                     /*!< CKSEL (Bit 0)                                         */
#define SYSTEM_SCKSCR_CKSEL_Msk           (0x7UL)                   /*!< CKSEL (Bitfield-Mask: 0x07)                           */
/* ========================================================  PLLCCR  ========================================================= */
#define SYSTEM_PLLCCR_FSEL0_Pos           (14UL)                    /*!< FSEL0 (Bit 14)                                        */
#define SYSTEM_PLLCCR_FSEL0_Msk           (0x4000UL)                /*!< FSEL0 (Bitfield-Mask: 0x01)                           */
#define SYSTEM_PLLCCR_PLLMUL_Pos          (8UL)                     /*!< PLLMUL (Bit 8)                                        */
#define SYSTEM_PLLCCR_PLLMUL_Msk          (0x700UL)                 /*!< PLLMUL (Bitfield-Mask: 0x07)                          */
#define SYSTEM_PLLCCR_PLIDIV_Pos          (0UL)                     /*!< PLIDIV (Bit 0)                                        */
#define SYSTEM_PLLCCR_PLIDIV_Msk          (0x3UL)                   /*!< PLIDIV (Bitfield-Mask: 0x03)                          */
/* =========================================================  PLLCR  ========================================================= */
#define SYSTEM_PLLCR_PLLSTP_Pos           (0UL)                     /*!< PLLSTP (Bit 0)                                        */
#define SYSTEM_PLLCR_PLLSTP_Msk           (0x1UL)                   /*!< PLLSTP (Bitfield-Mask: 0x01)                          */
/* ========================================================  MOSCCR  ========================================================= */
#define SYSTEM_MOSCCR_MOSTP_Pos           (0UL)                     /*!< MOSTP (Bit 0)                                         */
#define SYSTEM_MOSCCR_MOSTP_Msk           (0x1UL)                   /*!< MOSTP (Bitfield-Mask: 0x01)                           */
/* ========================================================  SOSCCR  ========================================================= */
#define SYSTEM_SOSCCR_SOSTP_Pos           (0UL)                     /*!< SOSTP (Bit 0)                                         */
#define SYSTEM_SOSCCR_SOSTP_Msk           (0x1UL)                   /*!< SOSTP (Bitfield-Mask: 0x01)                           */
/* ========================================================  LOCOCR  ========================================================= */
#define SYSTEM_LOCOCR_LCSTP_Pos           (0UL)                     /*!< LCSTP (Bit 0)                                         */
#define SYSTEM_LOCOCR_LCSTP_Msk           (0x1UL)                   /*!< LCSTP (Bitfield-Mask: 0x01)                           */
/* ========================================================  HOCOCR  ========================================================= */
#define SYSTEM_HOCOCR_HCSTP_Pos           (0UL)                     /*!< HCSTP (Bit 0)                                         */
#define SYSTEM_HOCOCR_HCSTP_Msk           (0x1UL)                   /*!< HCSTP (Bitfield-Mask: 0x01)                           */
/* ========================================================  HOCOMCR  ======================================================== */
#define SYSTEM_HOCOMCR_HCFRQ_Pos          (0UL)                     /*!< HCFRQ (Bit 0)                                         */
#define SYSTEM_HOCOMCR_HCFRQ_Msk          (0x3UL)                   /*!< HCFRQ (Bitfield-Mask: 0x03)                           */
/* ========================================================  MOCOCR  ========================================================= */
#define SYSTEM_MOCOCR_MCSTP_Pos           (0UL)                     /*!< MCSTP (Bit 0)                                         */
#define SYSTEM_MOCOCR_MCSTP_Msk           (0x1UL)                   /*!< MCSTP (Bitfield-Mask: 0x01)                           */
/* =========================================================  OSCSF  ========================================================= */
#define SYSTEM_OSCSF_PLLSF_Pos            (5UL)                     /*!< PLLSF (Bit 5)                                         */
#define SYSTEM_OSCSF_PLLSF_Msk            (0x20UL)                  /*!< PLLSF (Bitfield-Mask: 0x01)                           */
#define SYSTEM_OSCSF_MOSCSF_Pos           (3UL)                     /*!< MOSCSF (Bit 3)                                        */
#define SYSTEM_OSCSF_MOSCSF_Msk           (0x8UL)                   /*!< MOSCSF (Bitfield-Mask: 0x01)                          */
#define SYSTEM_OSCSF_HOCOSF_Pos           (0UL)                     /*!< HOCOSF (Bit 0)                                        */
#define SYSTEM_OSCSF_HOCOSF_Msk           (0x1UL)                   /*!< HOCOSF (Bitfield-Mask: 0x01)                          */
/* ========================================================  OSTDCR  ========================================================= */
#define SYSTEM_OSTDCR_OSTDE_Pos           (7UL)                     /*!< OSTDE (Bit 7)                                         */
#define SYSTEM_OSTDCR_OSTDE_Msk           (0x80UL)                  /*!< OSTDE (Bitfield-Mask: 0x01)                           */
#define SYSTEM_OSTDCR_OSTDDIVSEL_Pos      (4UL)                     /*!< OSTDDIVSEL (Bit 4)                                    */
#define SYSTEM_OSTDCR_OSTDDIVSEL_Msk      (0x10UL)                  /*!< OSTDDIVSEL (Bitfield-Mask: 0x01)                      */
#define SYSTEM_OSTDCR_OSTDIE_Pos          (0UL)                     /*!< OSTDIE (Bit 0)                                        */
#define SYSTEM_OSTDCR_OSTDIE_Msk          (0x1UL)                   /*!< OSTDIE (Bitfield-Mask: 0x01)                          */
/* ========================================================  OSTDSR  ========================================================= */
#define SYSTEM_OSTDSR_OSTDF_Pos           (0UL)                     /*!< OSTDF (Bit 0)                                         */
#define SYSTEM_OSTDSR_OSTDF_Msk           (0x1UL)                   /*!< OSTDF (Bitfield-Mask: 0x01)                           */
/* =======================================================  MOSCWTCR  ======================================================== */
#define SYSTEM_MOSCWTCR_MSTS_Pos          (0UL)                     /*!< MSTS (Bit 0)                                          */
#define SYSTEM_MOSCWTCR_MSTS_Msk          (0xfUL)                   /*!< MSTS (Bitfield-Mask: 0x0f)                            */
/* =========================================================  MOMCR  ========================================================= */
#define SYSTEM_MOMCR_OSCLPEN_Pos          (7UL)                     /*!< OSCLPEN (Bit 7)                                       */
#define SYSTEM_MOMCR_OSCLPEN_Msk          (0x80UL)                  /*!< OSCLPEN (Bitfield-Mask: 0x01)                         */
#define SYSTEM_MOMCR_MOSEL_Pos            (6UL)                     /*!< MOSEL (Bit 6)                                         */
#define SYSTEM_MOMCR_MOSEL_Msk            (0x40UL)                  /*!< MOSEL (Bitfield-Mask: 0x01)                           */
#define SYSTEM_MOMCR_MODRV_Pos            (3UL)                     /*!< MODRV (Bit 3)                                         */
#define SYSTEM_MOMCR_MODRV_Msk            (0x38UL)                  /*!< MODRV (Bitfield-Mask: 0x07)                           */
/* =========================================================  SOMCR  ========================================================= */
#define SYSTEM_SOMCR_SONFSTP_Pos          (4UL)                     /*!< SONFSTP (Bit 4)                                       */
#define SYSTEM_SOMCR_SONFSTP_Msk          (0x10UL)                  /*!< SONFSTP (Bitfield-Mask: 0x01)                         */
#define SYSTEM_SOMCR_SODRV_Pos            (1UL)                     /*!< SODRV (Bit 1)                                         */
#define SYSTEM_SOMCR_SODRV_Msk            (0x2UL)                   /*!< SODRV (Bitfield-Mask: 0x01)                           */
#define SYSTEM_SOMCR_SODRV0_Pos           (0UL)                     /*!< SODRV0 (Bit 0)                                        */
#define SYSTEM_SOMCR_SODRV0_Msk           (0x1UL)                   /*!< SODRV0 (Bitfield-Mask: 0x01)                          */
/* =========================================================  CKOCR  ========================================================= */
#define SYSTEM_CKOCR_CKOEN_Pos            (7UL)                     /*!< CKOEN (Bit 7)                                         */
#define SYSTEM_CKOCR_CKOEN_Msk            (0x80UL)                  /*!< CKOEN (Bitfield-Mask: 0x01)                           */
#define SYSTEM_CKOCR_CKODIV_Pos           (4UL)                     /*!< CKODIV (Bit 4)                                        */
#define SYSTEM_CKOCR_CKODIV_Msk           (0x70UL)                  /*!< CKODIV (Bitfield-Mask: 0x07)                          */
#define SYSTEM_CKOCR_CKOSEL_Pos           (0UL)                     /*!< CKOSEL (Bit 0)                                        */
#define SYSTEM_CKOCR_CKOSEL_Msk           (0x7UL)                   /*!< CKOSEL (Bitfield-Mask: 0x07)                          */
/* ========================================================  CKO32CR  ======================================================== */
#define SYSTEM_CKO32CR_CKO32EN_Pos        (7UL)                     /*!< CKO32EN (Bit 7)                                       */
#define SYSTEM_CKO32CR_CKO32EN_Msk        (0x80UL)                  /*!< CKO32EN (Bitfield-Mask: 0x01)                         */
/* ========================================================  EHCCR0  ========================================================= */
#define SYSTEM_EHCCR0_ENOUT_Pos           (14UL)                    /*!< ENOUT (Bit 14)                                        */
#define SYSTEM_EHCCR0_ENOUT_Msk           (0x4000UL)                /*!< ENOUT (Bitfield-Mask: 0x01)                           */
#define SYSTEM_EHCCR0_CMPOUT_Pos          (13UL)                    /*!< CMPOUT (Bit 13)                                       */
#define SYSTEM_EHCCR0_CMPOUT_Msk          (0x2000UL)                /*!< CMPOUT (Bitfield-Mask: 0x01)                          */
#define SYSTEM_EHCCR0_FORCEFIX_Pos        (11UL)                    /*!< FORCEFIX (Bit 11)                                     */
#define SYSTEM_EHCCR0_FORCEFIX_Msk        (0x800UL)                 /*!< FORCEFIX (Bitfield-Mask: 0x01)                        */
#define SYSTEM_EHCCR0_SWSELECT_Pos        (10UL)                    /*!< SWSELECT (Bit 10)                                     */
#define SYSTEM_EHCCR0_SWSELECT_Msk        (0x400UL)                 /*!< SWSELECT (Bitfield-Mask: 0x01)                        */
#define SYSTEM_EHCCR0_VBATCTL_Pos         (8UL)                     /*!< VBATCTL (Bit 8)                                       */
#define SYSTEM_EHCCR0_VBATCTL_Msk         (0x300UL)                 /*!< VBATCTL (Bitfield-Mask: 0x03)                         */
#define SYSTEM_EHCCR0_CHGDETEN_Pos        (7UL)                     /*!< CHGDETEN (Bit 7)                                      */
#define SYSTEM_EHCCR0_CHGDETEN_Msk        (0x80UL)                  /*!< CHGDETEN (Bitfield-Mask: 0x01)                        */
#define SYSTEM_EHCCR0_RSEL_Pos            (0UL)                     /*!< RSEL (Bit 0)                                          */
#define SYSTEM_EHCCR0_RSEL_Msk            (0x3fUL)                  /*!< RSEL (Bitfield-Mask: 0x3f)                            */
/* ========================================================  EHCCR1  ========================================================= */
#define SYSTEM_EHCCR1_QUICKMODE_Pos       (0UL)                     /*!< QUICKMODE (Bit 0)                                     */
#define SYSTEM_EHCCR1_QUICKMODE_Msk       (0x1UL)                   /*!< QUICKMODE (Bitfield-Mask: 0x01)                       */


/* =========================================================================================================================== */
/* ================                                           TEMPS                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  TSCR  ========================================================== */
#define TEMPS_TSCR_TSEN_Pos               (7UL)                     /*!< TSEN (Bit 7)                                          */
#define TEMPS_TSCR_TSEN_Msk               (0x80UL)                  /*!< TSEN (Bitfield-Mask: 0x01)                            */
/* =========================================================  TSCDR  ========================================================= */
#define TEMPS_TSCDR_TSCDR_Pos             (0UL)                     /*!< TSCDR (Bit 0)                                         */
#define TEMPS_TSCDR_TSCDR_Msk             (0xffffUL)                /*!< TSCDR (Bitfield-Mask: 0xffff)                         */


/* =========================================================================================================================== */
/* ================                                           TMR0                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  TCNT  ========================================================== */
#define TMR0_TCNT_TCNT_Pos                (0UL)                     /*!< TCNT (Bit 0)                                          */
#define TMR0_TCNT_TCNT_Msk                (0xffUL)                  /*!< TCNT (Bitfield-Mask: 0xff)                            */
/* =========================================================  TCORA  ========================================================= */
#define TMR0_TCORA_TCORA_Pos              (0UL)                     /*!< TCORA (Bit 0)                                         */
#define TMR0_TCORA_TCORA_Msk              (0xffUL)                  /*!< TCORA (Bitfield-Mask: 0xff)                           */
/* =========================================================  TCORB  ========================================================= */
#define TMR0_TCORB_TCORB_Pos              (0UL)                     /*!< TCORB (Bit 0)                                         */
#define TMR0_TCORB_TCORB_Msk              (0xffUL)                  /*!< TCORB (Bitfield-Mask: 0xff)                           */
/* ==========================================================  TCR  ========================================================== */
#define TMR0_TCR_CMIEB_Pos                (7UL)                     /*!< CMIEB (Bit 7)                                         */
#define TMR0_TCR_CMIEB_Msk                (0x80UL)                  /*!< CMIEB (Bitfield-Mask: 0x01)                           */
#define TMR0_TCR_CMIEA_Pos                (6UL)                     /*!< CMIEA (Bit 6)                                         */
#define TMR0_TCR_CMIEA_Msk                (0x40UL)                  /*!< CMIEA (Bitfield-Mask: 0x01)                           */
#define TMR0_TCR_OVIE_Pos                 (5UL)                     /*!< OVIE (Bit 5)                                          */
#define TMR0_TCR_OVIE_Msk                 (0x20UL)                  /*!< OVIE (Bitfield-Mask: 0x01)                            */
#define TMR0_TCR_CCLR_Pos                 (3UL)                     /*!< CCLR (Bit 3)                                          */
#define TMR0_TCR_CCLR_Msk                 (0x18UL)                  /*!< CCLR (Bitfield-Mask: 0x03)                            */
/* =========================================================  TCCR  ========================================================== */
#define TMR0_TCCR_TMRIS_Pos               (7UL)                     /*!< TMRIS (Bit 7)                                         */
#define TMR0_TCCR_TMRIS_Msk               (0x80UL)                  /*!< TMRIS (Bitfield-Mask: 0x01)                           */
#define TMR0_TCCR_CSS_Pos                 (3UL)                     /*!< CSS (Bit 3)                                           */
#define TMR0_TCCR_CSS_Msk                 (0x18UL)                  /*!< CSS (Bitfield-Mask: 0x03)                             */
#define TMR0_TCCR_CKS_Pos                 (0UL)                     /*!< CKS (Bit 0)                                           */
#define TMR0_TCCR_CKS_Msk                 (0x7UL)                   /*!< CKS (Bitfield-Mask: 0x07)                             */
/* =========================================================  TCSR  ========================================================== */
#define TMR0_TCSR_ADTE_Pos                (4UL)                     /*!< ADTE (Bit 4)                                          */
#define TMR0_TCSR_ADTE_Msk                (0x10UL)                  /*!< ADTE (Bitfield-Mask: 0x01)                            */
#define TMR0_TCSR_OSB_Pos                 (2UL)                     /*!< OSB (Bit 2)                                           */
#define TMR0_TCSR_OSB_Msk                 (0xcUL)                   /*!< OSB (Bitfield-Mask: 0x03)                             */
#define TMR0_TCSR_OSA_Pos                 (0UL)                     /*!< OSA (Bit 0)                                           */
#define TMR0_TCSR_OSA_Msk                 (0x3UL)                   /*!< OSA (Bitfield-Mask: 0x03)                             */


/* =========================================================================================================================== */
/* ================                                           TMR01                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  TCNT  ========================================================== */
#define TMR01_TCNT_TCNT_Pos               (0UL)                     /*!< TCNT (Bit 0)                                          */
#define TMR01_TCNT_TCNT_Msk               (0xffffUL)                /*!< TCNT (Bitfield-Mask: 0xffff)                          */
/* =========================================================  TCORA  ========================================================= */
#define TMR01_TCORA_TCORA_Pos             (0UL)                     /*!< TCORA (Bit 0)                                         */
#define TMR01_TCORA_TCORA_Msk             (0xffffUL)                /*!< TCORA (Bitfield-Mask: 0xffff)                         */
/* =========================================================  TCORB  ========================================================= */
#define TMR01_TCORB_TCORB_Pos             (0UL)                     /*!< TCORB (Bit 0)                                         */
#define TMR01_TCORB_TCORB_Msk             (0xffffUL)                /*!< TCORB (Bitfield-Mask: 0xffff)                         */


/* =========================================================================================================================== */
/* ================                                           TMR1                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  TCNT  ========================================================== */
#define TMR1_TCNT_TCNT_Pos                (0UL)                     /*!< TCNT (Bit 0)                                          */
#define TMR1_TCNT_TCNT_Msk                (0xffUL)                  /*!< TCNT (Bitfield-Mask: 0xff)                            */
/* =========================================================  TCORA  ========================================================= */
#define TMR1_TCORA_TCORA_Pos              (0UL)                     /*!< TCORA (Bit 0)                                         */
#define TMR1_TCORA_TCORA_Msk              (0xffUL)                  /*!< TCORA (Bitfield-Mask: 0xff)                           */
/* =========================================================  TCORB  ========================================================= */
#define TMR1_TCORB_TCORB_Pos              (0UL)                     /*!< TCORB (Bit 0)                                         */
#define TMR1_TCORB_TCORB_Msk              (0xffUL)                  /*!< TCORB (Bitfield-Mask: 0xff)                           */
/* ==========================================================  TCR  ========================================================== */
#define TMR1_TCR_CMIEB_Pos                (7UL)                     /*!< CMIEB (Bit 7)                                         */
#define TMR1_TCR_CMIEB_Msk                (0x80UL)                  /*!< CMIEB (Bitfield-Mask: 0x01)                           */
#define TMR1_TCR_CMIEA_Pos                (6UL)                     /*!< CMIEA (Bit 6)                                         */
#define TMR1_TCR_CMIEA_Msk                (0x40UL)                  /*!< CMIEA (Bitfield-Mask: 0x01)                           */
#define TMR1_TCR_OVIE_Pos                 (5UL)                     /*!< OVIE (Bit 5)                                          */
#define TMR1_TCR_OVIE_Msk                 (0x20UL)                  /*!< OVIE (Bitfield-Mask: 0x01)                            */
#define TMR1_TCR_CCLR_Pos                 (3UL)                     /*!< CCLR (Bit 3)                                          */
#define TMR1_TCR_CCLR_Msk                 (0x18UL)                  /*!< CCLR (Bitfield-Mask: 0x03)                            */
/* =========================================================  TCCR  ========================================================== */
#define TMR1_TCCR_TMRIS_Pos               (7UL)                     /*!< TMRIS (Bit 7)                                         */
#define TMR1_TCCR_TMRIS_Msk               (0x80UL)                  /*!< TMRIS (Bitfield-Mask: 0x01)                           */
#define TMR1_TCCR_CSS_Pos                 (3UL)                     /*!< CSS (Bit 3)                                           */
#define TMR1_TCCR_CSS_Msk                 (0x18UL)                  /*!< CSS (Bitfield-Mask: 0x03)                             */
#define TMR1_TCCR_CKS_Pos                 (0UL)                     /*!< CKS (Bit 0)                                           */
#define TMR1_TCCR_CKS_Msk                 (0x7UL)                   /*!< CKS (Bitfield-Mask: 0x07)                             */
/* =========================================================  TCSR  ========================================================== */
#define TMR1_TCSR_ADTE_Pos                (4UL)                     /*!< ADTE (Bit 4)                                          */
#define TMR1_TCSR_ADTE_Msk                (0x10UL)                  /*!< ADTE (Bitfield-Mask: 0x01)                            */
#define TMR1_TCSR_OSB_Pos                 (2UL)                     /*!< OSB (Bit 2)                                           */
#define TMR1_TCSR_OSB_Msk                 (0xcUL)                   /*!< OSB (Bitfield-Mask: 0x03)                             */
#define TMR1_TCSR_OSA_Pos                 (0UL)                     /*!< OSA (Bit 0)                                           */
#define TMR1_TCSR_OSA_Msk                 (0x3UL)                   /*!< OSA (Bitfield-Mask: 0x03)                             */


/* =========================================================================================================================== */
/* ================                                           USBFS                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  SYSCFG  ========================================================= */
#define USBFS_SYSCFG_SCKE_Pos             (10UL)                    /*!< SCKE (Bit 10)                                         */
#define USBFS_SYSCFG_SCKE_Msk             (0x400UL)                 /*!< SCKE (Bitfield-Mask: 0x01)                            */
#define USBFS_SYSCFG_DCFM_Pos             (6UL)                     /*!< DCFM (Bit 6)                                          */
#define USBFS_SYSCFG_DCFM_Msk             (0x40UL)                  /*!< DCFM (Bitfield-Mask: 0x01)                            */
#define USBFS_SYSCFG_DRPD_Pos             (5UL)                     /*!< DRPD (Bit 5)                                          */
#define USBFS_SYSCFG_DRPD_Msk             (0x20UL)                  /*!< DRPD (Bitfield-Mask: 0x01)                            */
#define USBFS_SYSCFG_DPRPU_Pos            (4UL)                     /*!< DPRPU (Bit 4)                                         */
#define USBFS_SYSCFG_DPRPU_Msk            (0x10UL)                  /*!< DPRPU (Bitfield-Mask: 0x01)                           */
#define USBFS_SYSCFG_USBE_Pos             (0UL)                     /*!< USBE (Bit 0)                                          */
#define USBFS_SYSCFG_USBE_Msk             (0x1UL)                   /*!< USBE (Bitfield-Mask: 0x01)                            */
/* ========================================================  SYSSTS0  ======================================================== */
#define USBFS_SYSSTS0_OVCMON_Pos          (14UL)                    /*!< OVCMON (Bit 14)                                       */
#define USBFS_SYSSTS0_OVCMON_Msk          (0xc000UL)                /*!< OVCMON (Bitfield-Mask: 0x03)                          */
#define USBFS_SYSSTS0_HTACT_Pos           (6UL)                     /*!< HTACT (Bit 6)                                         */
#define USBFS_SYSSTS0_HTACT_Msk           (0x40UL)                  /*!< HTACT (Bitfield-Mask: 0x01)                           */
#define USBFS_SYSSTS0_SOFEA_Pos           (5UL)                     /*!< SOFEA (Bit 5)                                         */
#define USBFS_SYSSTS0_SOFEA_Msk           (0x20UL)                  /*!< SOFEA (Bitfield-Mask: 0x01)                           */
#define USBFS_SYSSTS0_IDMON_Pos           (2UL)                     /*!< IDMON (Bit 2)                                         */
#define USBFS_SYSSTS0_IDMON_Msk           (0x4UL)                   /*!< IDMON (Bitfield-Mask: 0x01)                           */
#define USBFS_SYSSTS0_LNST_Pos            (0UL)                     /*!< LNST (Bit 0)                                          */
#define USBFS_SYSSTS0_LNST_Msk            (0x3UL)                   /*!< LNST (Bitfield-Mask: 0x03)                            */
/* =======================================================  DVSTCTR0  ======================================================== */
#define USBFS_DVSTCTR0_HNPBTOA_Pos        (11UL)                    /*!< HNPBTOA (Bit 11)                                      */
#define USBFS_DVSTCTR0_HNPBTOA_Msk        (0x800UL)                 /*!< HNPBTOA (Bitfield-Mask: 0x01)                         */
#define USBFS_DVSTCTR0_EXICEN_Pos         (10UL)                    /*!< EXICEN (Bit 10)                                       */
#define USBFS_DVSTCTR0_EXICEN_Msk         (0x400UL)                 /*!< EXICEN (Bitfield-Mask: 0x01)                          */
#define USBFS_DVSTCTR0_VBUSEN_Pos         (9UL)                     /*!< VBUSEN (Bit 9)                                        */
#define USBFS_DVSTCTR0_VBUSEN_Msk         (0x200UL)                 /*!< VBUSEN (Bitfield-Mask: 0x01)                          */
#define USBFS_DVSTCTR0_WKUP_Pos           (8UL)                     /*!< WKUP (Bit 8)                                          */
#define USBFS_DVSTCTR0_WKUP_Msk           (0x100UL)                 /*!< WKUP (Bitfield-Mask: 0x01)                            */
#define USBFS_DVSTCTR0_RWUPE_Pos          (7UL)                     /*!< RWUPE (Bit 7)                                         */
#define USBFS_DVSTCTR0_RWUPE_Msk          (0x80UL)                  /*!< RWUPE (Bitfield-Mask: 0x01)                           */
#define USBFS_DVSTCTR0_USBRST_Pos         (6UL)                     /*!< USBRST (Bit 6)                                        */
#define USBFS_DVSTCTR0_USBRST_Msk         (0x40UL)                  /*!< USBRST (Bitfield-Mask: 0x01)                          */
#define USBFS_DVSTCTR0_RESUME_Pos         (5UL)                     /*!< RESUME (Bit 5)                                        */
#define USBFS_DVSTCTR0_RESUME_Msk         (0x20UL)                  /*!< RESUME (Bitfield-Mask: 0x01)                          */
#define USBFS_DVSTCTR0_UACT_Pos           (4UL)                     /*!< UACT (Bit 4)                                          */
#define USBFS_DVSTCTR0_UACT_Msk           (0x10UL)                  /*!< UACT (Bitfield-Mask: 0x01)                            */
#define USBFS_DVSTCTR0_RHST_Pos           (0UL)                     /*!< RHST (Bit 0)                                          */
#define USBFS_DVSTCTR0_RHST_Msk           (0x7UL)                   /*!< RHST (Bitfield-Mask: 0x07)                            */
/* =========================================================  CFIFO  ========================================================= */
#define USBFS_CFIFO_FIFOPORT_Pos          (0UL)                     /*!< FIFOPORT (Bit 0)                                      */
#define USBFS_CFIFO_FIFOPORT_Msk          (0xffffUL)                /*!< FIFOPORT (Bitfield-Mask: 0xffff)                      */
/* ========================================================  CFIFOL  ========================================================= */
/* ========================================================  D0FIFO  ========================================================= */
#define USBFS_D0FIFO_FIFOPORT_Pos         (0UL)                     /*!< FIFOPORT (Bit 0)                                      */
#define USBFS_D0FIFO_FIFOPORT_Msk         (0xffffUL)                /*!< FIFOPORT (Bitfield-Mask: 0xffff)                      */
/* ========================================================  D0FIFOL  ======================================================== */
/* ========================================================  D1FIFO  ========================================================= */
#define USBFS_D1FIFO_FIFOPORT_Pos         (0UL)                     /*!< FIFOPORT (Bit 0)                                      */
#define USBFS_D1FIFO_FIFOPORT_Msk         (0xffffUL)                /*!< FIFOPORT (Bitfield-Mask: 0xffff)                      */
/* ========================================================  D1FIFOL  ======================================================== */
/* =======================================================  CFIFOSEL  ======================================================== */
#define USBFS_CFIFOSEL_RCNT_Pos           (15UL)                    /*!< RCNT (Bit 15)                                         */
#define USBFS_CFIFOSEL_RCNT_Msk           (0x8000UL)                /*!< RCNT (Bitfield-Mask: 0x01)                            */
#define USBFS_CFIFOSEL_REW_Pos            (14UL)                    /*!< REW (Bit 14)                                          */
#define USBFS_CFIFOSEL_REW_Msk            (0x4000UL)                /*!< REW (Bitfield-Mask: 0x01)                             */
#define USBFS_CFIFOSEL_MBW_Pos            (10UL)                    /*!< MBW (Bit 10)                                          */
#define USBFS_CFIFOSEL_MBW_Msk            (0x400UL)                 /*!< MBW (Bitfield-Mask: 0x01)                             */
#define USBFS_CFIFOSEL_BIGEND_Pos         (8UL)                     /*!< BIGEND (Bit 8)                                        */
#define USBFS_CFIFOSEL_BIGEND_Msk         (0x100UL)                 /*!< BIGEND (Bitfield-Mask: 0x01)                          */
#define USBFS_CFIFOSEL_ISEL_Pos           (5UL)                     /*!< ISEL (Bit 5)                                          */
#define USBFS_CFIFOSEL_ISEL_Msk           (0x20UL)                  /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define USBFS_CFIFOSEL_CURPIPE_Pos        (0UL)                     /*!< CURPIPE (Bit 0)                                       */
#define USBFS_CFIFOSEL_CURPIPE_Msk        (0xfUL)                   /*!< CURPIPE (Bitfield-Mask: 0x0f)                         */
/* =======================================================  D0FIFOSEL  ======================================================= */
#define USBFS_D0FIFOSEL_RCNT_Pos          (15UL)                    /*!< RCNT (Bit 15)                                         */
#define USBFS_D0FIFOSEL_RCNT_Msk          (0x8000UL)                /*!< RCNT (Bitfield-Mask: 0x01)                            */
#define USBFS_D0FIFOSEL_REW_Pos           (14UL)                    /*!< REW (Bit 14)                                          */
#define USBFS_D0FIFOSEL_REW_Msk           (0x4000UL)                /*!< REW (Bitfield-Mask: 0x01)                             */
#define USBFS_D0FIFOSEL_DCLRM_Pos         (13UL)                    /*!< DCLRM (Bit 13)                                        */
#define USBFS_D0FIFOSEL_DCLRM_Msk         (0x2000UL)                /*!< DCLRM (Bitfield-Mask: 0x01)                           */
#define USBFS_D0FIFOSEL_DREQE_Pos         (12UL)                    /*!< DREQE (Bit 12)                                        */
#define USBFS_D0FIFOSEL_DREQE_Msk         (0x1000UL)                /*!< DREQE (Bitfield-Mask: 0x01)                           */
#define USBFS_D0FIFOSEL_MBW_Pos           (10UL)                    /*!< MBW (Bit 10)                                          */
#define USBFS_D0FIFOSEL_MBW_Msk           (0x400UL)                 /*!< MBW (Bitfield-Mask: 0x01)                             */
#define USBFS_D0FIFOSEL_BIGEND_Pos        (8UL)                     /*!< BIGEND (Bit 8)                                        */
#define USBFS_D0FIFOSEL_BIGEND_Msk        (0x100UL)                 /*!< BIGEND (Bitfield-Mask: 0x01)                          */
#define USBFS_D0FIFOSEL_CURPIPE_Pos       (0UL)                     /*!< CURPIPE (Bit 0)                                       */
#define USBFS_D0FIFOSEL_CURPIPE_Msk       (0xfUL)                   /*!< CURPIPE (Bitfield-Mask: 0x0f)                         */
/* =======================================================  D1FIFOSEL  ======================================================= */
#define USBFS_D1FIFOSEL_RCNT_Pos          (15UL)                    /*!< RCNT (Bit 15)                                         */
#define USBFS_D1FIFOSEL_RCNT_Msk          (0x8000UL)                /*!< RCNT (Bitfield-Mask: 0x01)                            */
#define USBFS_D1FIFOSEL_REW_Pos           (14UL)                    /*!< REW (Bit 14)                                          */
#define USBFS_D1FIFOSEL_REW_Msk           (0x4000UL)                /*!< REW (Bitfield-Mask: 0x01)                             */
#define USBFS_D1FIFOSEL_DCLRM_Pos         (13UL)                    /*!< DCLRM (Bit 13)                                        */
#define USBFS_D1FIFOSEL_DCLRM_Msk         (0x2000UL)                /*!< DCLRM (Bitfield-Mask: 0x01)                           */
#define USBFS_D1FIFOSEL_DREQE_Pos         (12UL)                    /*!< DREQE (Bit 12)                                        */
#define USBFS_D1FIFOSEL_DREQE_Msk         (0x1000UL)                /*!< DREQE (Bitfield-Mask: 0x01)                           */
#define USBFS_D1FIFOSEL_MBW_Pos           (10UL)                    /*!< MBW (Bit 10)                                          */
#define USBFS_D1FIFOSEL_MBW_Msk           (0x400UL)                 /*!< MBW (Bitfield-Mask: 0x01)                             */
#define USBFS_D1FIFOSEL_BIGEND_Pos        (8UL)                     /*!< BIGEND (Bit 8)                                        */
#define USBFS_D1FIFOSEL_BIGEND_Msk        (0x100UL)                 /*!< BIGEND (Bitfield-Mask: 0x01)                          */
#define USBFS_D1FIFOSEL_CURPIPE_Pos       (0UL)                     /*!< CURPIPE (Bit 0)                                       */
#define USBFS_D1FIFOSEL_CURPIPE_Msk       (0xfUL)                   /*!< CURPIPE (Bitfield-Mask: 0x0f)                         */
/* =======================================================  CFIFOCTR  ======================================================== */
#define USBFS_CFIFOCTR_BVAL_Pos           (15UL)                    /*!< BVAL (Bit 15)                                         */
#define USBFS_CFIFOCTR_BVAL_Msk           (0x8000UL)                /*!< BVAL (Bitfield-Mask: 0x01)                            */
#define USBFS_CFIFOCTR_BCLR_Pos           (14UL)                    /*!< BCLR (Bit 14)                                         */
#define USBFS_CFIFOCTR_BCLR_Msk           (0x4000UL)                /*!< BCLR (Bitfield-Mask: 0x01)                            */
#define USBFS_CFIFOCTR_FRDY_Pos           (13UL)                    /*!< FRDY (Bit 13)                                         */
#define USBFS_CFIFOCTR_FRDY_Msk           (0x2000UL)                /*!< FRDY (Bitfield-Mask: 0x01)                            */
#define USBFS_CFIFOCTR_DTLN_Pos           (0UL)                     /*!< DTLN (Bit 0)                                          */
#define USBFS_CFIFOCTR_DTLN_Msk           (0x1ffUL)                 /*!< DTLN (Bitfield-Mask: 0x1ff)                           */
/* =======================================================  D0FIFOCTR  ======================================================= */
#define USBFS_D0FIFOCTR_BVAL_Pos          (15UL)                    /*!< BVAL (Bit 15)                                         */
#define USBFS_D0FIFOCTR_BVAL_Msk          (0x8000UL)                /*!< BVAL (Bitfield-Mask: 0x01)                            */
#define USBFS_D0FIFOCTR_BCLR_Pos          (14UL)                    /*!< BCLR (Bit 14)                                         */
#define USBFS_D0FIFOCTR_BCLR_Msk          (0x4000UL)                /*!< BCLR (Bitfield-Mask: 0x01)                            */
#define USBFS_D0FIFOCTR_FRDY_Pos          (13UL)                    /*!< FRDY (Bit 13)                                         */
#define USBFS_D0FIFOCTR_FRDY_Msk          (0x2000UL)                /*!< FRDY (Bitfield-Mask: 0x01)                            */
#define USBFS_D0FIFOCTR_DTLN_Pos          (0UL)                     /*!< DTLN (Bit 0)                                          */
#define USBFS_D0FIFOCTR_DTLN_Msk          (0x1ffUL)                 /*!< DTLN (Bitfield-Mask: 0x1ff)                           */
/* =======================================================  D1FIFOCTR  ======================================================= */
#define USBFS_D1FIFOCTR_BVAL_Pos          (15UL)                    /*!< BVAL (Bit 15)                                         */
#define USBFS_D1FIFOCTR_BVAL_Msk          (0x8000UL)                /*!< BVAL (Bitfield-Mask: 0x01)                            */
#define USBFS_D1FIFOCTR_BCLR_Pos          (14UL)                    /*!< BCLR (Bit 14)                                         */
#define USBFS_D1FIFOCTR_BCLR_Msk          (0x4000UL)                /*!< BCLR (Bitfield-Mask: 0x01)                            */
#define USBFS_D1FIFOCTR_FRDY_Pos          (13UL)                    /*!< FRDY (Bit 13)                                         */
#define USBFS_D1FIFOCTR_FRDY_Msk          (0x2000UL)                /*!< FRDY (Bitfield-Mask: 0x01)                            */
#define USBFS_D1FIFOCTR_DTLN_Pos          (0UL)                     /*!< DTLN (Bit 0)                                          */
#define USBFS_D1FIFOCTR_DTLN_Msk          (0x1ffUL)                 /*!< DTLN (Bitfield-Mask: 0x1ff)                           */
/* ========================================================  INTENB0  ======================================================== */
#define USBFS_INTENB0_VBSE_Pos            (15UL)                    /*!< VBSE (Bit 15)                                         */
#define USBFS_INTENB0_VBSE_Msk            (0x8000UL)                /*!< VBSE (Bitfield-Mask: 0x01)                            */
#define USBFS_INTENB0_RSME_Pos            (14UL)                    /*!< RSME (Bit 14)                                         */
#define USBFS_INTENB0_RSME_Msk            (0x4000UL)                /*!< RSME (Bitfield-Mask: 0x01)                            */
#define USBFS_INTENB0_SOFE_Pos            (13UL)                    /*!< SOFE (Bit 13)                                         */
#define USBFS_INTENB0_SOFE_Msk            (0x2000UL)                /*!< SOFE (Bitfield-Mask: 0x01)                            */
#define USBFS_INTENB0_DVSE_Pos            (12UL)                    /*!< DVSE (Bit 12)                                         */
#define USBFS_INTENB0_DVSE_Msk            (0x1000UL)                /*!< DVSE (Bitfield-Mask: 0x01)                            */
#define USBFS_INTENB0_CTRE_Pos            (11UL)                    /*!< CTRE (Bit 11)                                         */
#define USBFS_INTENB0_CTRE_Msk            (0x800UL)                 /*!< CTRE (Bitfield-Mask: 0x01)                            */
#define USBFS_INTENB0_BEMPE_Pos           (10UL)                    /*!< BEMPE (Bit 10)                                        */
#define USBFS_INTENB0_BEMPE_Msk           (0x400UL)                 /*!< BEMPE (Bitfield-Mask: 0x01)                           */
#define USBFS_INTENB0_NRDYE_Pos           (9UL)                     /*!< NRDYE (Bit 9)                                         */
#define USBFS_INTENB0_NRDYE_Msk           (0x200UL)                 /*!< NRDYE (Bitfield-Mask: 0x01)                           */
#define USBFS_INTENB0_BRDYE_Pos           (8UL)                     /*!< BRDYE (Bit 8)                                         */
#define USBFS_INTENB0_BRDYE_Msk           (0x100UL)                 /*!< BRDYE (Bitfield-Mask: 0x01)                           */
/* ========================================================  INTENB1  ======================================================== */
#define USBFS_INTENB1_OVRCRE_Pos          (15UL)                    /*!< OVRCRE (Bit 15)                                       */
#define USBFS_INTENB1_OVRCRE_Msk          (0x8000UL)                /*!< OVRCRE (Bitfield-Mask: 0x01)                          */
#define USBFS_INTENB1_BCHGE_Pos           (14UL)                    /*!< BCHGE (Bit 14)                                        */
#define USBFS_INTENB1_BCHGE_Msk           (0x4000UL)                /*!< BCHGE (Bitfield-Mask: 0x01)                           */
#define USBFS_INTENB1_DTCHE_Pos           (12UL)                    /*!< DTCHE (Bit 12)                                        */
#define USBFS_INTENB1_DTCHE_Msk           (0x1000UL)                /*!< DTCHE (Bitfield-Mask: 0x01)                           */
#define USBFS_INTENB1_ATTCHE_Pos          (11UL)                    /*!< ATTCHE (Bit 11)                                       */
#define USBFS_INTENB1_ATTCHE_Msk          (0x800UL)                 /*!< ATTCHE (Bitfield-Mask: 0x01)                          */
#define USBFS_INTENB1_EOFERRE_Pos         (6UL)                     /*!< EOFERRE (Bit 6)                                       */
#define USBFS_INTENB1_EOFERRE_Msk         (0x40UL)                  /*!< EOFERRE (Bitfield-Mask: 0x01)                         */
#define USBFS_INTENB1_SIGNE_Pos           (5UL)                     /*!< SIGNE (Bit 5)                                         */
#define USBFS_INTENB1_SIGNE_Msk           (0x20UL)                  /*!< SIGNE (Bitfield-Mask: 0x01)                           */
#define USBFS_INTENB1_SACKE_Pos           (4UL)                     /*!< SACKE (Bit 4)                                         */
#define USBFS_INTENB1_SACKE_Msk           (0x10UL)                  /*!< SACKE (Bitfield-Mask: 0x01)                           */
/* ========================================================  BRDYENB  ======================================================== */
#define USBFS_BRDYENB_PIPE9BRDYE_Pos      (9UL)                     /*!< PIPE9BRDYE (Bit 9)                                    */
#define USBFS_BRDYENB_PIPE9BRDYE_Msk      (0x200UL)                 /*!< PIPE9BRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_BRDYENB_PIPE8BRDYE_Pos      (8UL)                     /*!< PIPE8BRDYE (Bit 8)                                    */
#define USBFS_BRDYENB_PIPE8BRDYE_Msk      (0x100UL)                 /*!< PIPE8BRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_BRDYENB_PIPE7BRDYE_Pos      (7UL)                     /*!< PIPE7BRDYE (Bit 7)                                    */
#define USBFS_BRDYENB_PIPE7BRDYE_Msk      (0x80UL)                  /*!< PIPE7BRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_BRDYENB_PIPE6BRDYE_Pos      (6UL)                     /*!< PIPE6BRDYE (Bit 6)                                    */
#define USBFS_BRDYENB_PIPE6BRDYE_Msk      (0x40UL)                  /*!< PIPE6BRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_BRDYENB_PIPE5BRDYE_Pos      (5UL)                     /*!< PIPE5BRDYE (Bit 5)                                    */
#define USBFS_BRDYENB_PIPE5BRDYE_Msk      (0x20UL)                  /*!< PIPE5BRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_BRDYENB_PIPE4BRDYE_Pos      (4UL)                     /*!< PIPE4BRDYE (Bit 4)                                    */
#define USBFS_BRDYENB_PIPE4BRDYE_Msk      (0x10UL)                  /*!< PIPE4BRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_BRDYENB_PIPE3BRDYE_Pos      (3UL)                     /*!< PIPE3BRDYE (Bit 3)                                    */
#define USBFS_BRDYENB_PIPE3BRDYE_Msk      (0x8UL)                   /*!< PIPE3BRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_BRDYENB_PIPE2BRDYE_Pos      (2UL)                     /*!< PIPE2BRDYE (Bit 2)                                    */
#define USBFS_BRDYENB_PIPE2BRDYE_Msk      (0x4UL)                   /*!< PIPE2BRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_BRDYENB_PIPE1BRDYE_Pos      (1UL)                     /*!< PIPE1BRDYE (Bit 1)                                    */
#define USBFS_BRDYENB_PIPE1BRDYE_Msk      (0x2UL)                   /*!< PIPE1BRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_BRDYENB_PIPE0BRDYE_Pos      (0UL)                     /*!< PIPE0BRDYE (Bit 0)                                    */
#define USBFS_BRDYENB_PIPE0BRDYE_Msk      (0x1UL)                   /*!< PIPE0BRDYE (Bitfield-Mask: 0x01)                      */
/* ========================================================  NRDYENB  ======================================================== */
#define USBFS_NRDYENB_PIPE9NRDYE_Pos      (9UL)                     /*!< PIPE9NRDYE (Bit 9)                                    */
#define USBFS_NRDYENB_PIPE9NRDYE_Msk      (0x200UL)                 /*!< PIPE9NRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_NRDYENB_PIPE8NRDYE_Pos      (8UL)                     /*!< PIPE8NRDYE (Bit 8)                                    */
#define USBFS_NRDYENB_PIPE8NRDYE_Msk      (0x100UL)                 /*!< PIPE8NRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_NRDYENB_PIPE7NRDYE_Pos      (7UL)                     /*!< PIPE7NRDYE (Bit 7)                                    */
#define USBFS_NRDYENB_PIPE7NRDYE_Msk      (0x80UL)                  /*!< PIPE7NRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_NRDYENB_PIPE6NRDYE_Pos      (6UL)                     /*!< PIPE6NRDYE (Bit 6)                                    */
#define USBFS_NRDYENB_PIPE6NRDYE_Msk      (0x40UL)                  /*!< PIPE6NRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_NRDYENB_PIPE5NRDYE_Pos      (5UL)                     /*!< PIPE5NRDYE (Bit 5)                                    */
#define USBFS_NRDYENB_PIPE5NRDYE_Msk      (0x20UL)                  /*!< PIPE5NRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_NRDYENB_PIPE4NRDYE_Pos      (4UL)                     /*!< PIPE4NRDYE (Bit 4)                                    */
#define USBFS_NRDYENB_PIPE4NRDYE_Msk      (0x10UL)                  /*!< PIPE4NRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_NRDYENB_PIPE3NRDYE_Pos      (3UL)                     /*!< PIPE3NRDYE (Bit 3)                                    */
#define USBFS_NRDYENB_PIPE3NRDYE_Msk      (0x8UL)                   /*!< PIPE3NRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_NRDYENB_PIPE2NRDYE_Pos      (2UL)                     /*!< PIPE2NRDYE (Bit 2)                                    */
#define USBFS_NRDYENB_PIPE2NRDYE_Msk      (0x4UL)                   /*!< PIPE2NRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_NRDYENB_PIPE1NRDYE_Pos      (1UL)                     /*!< PIPE1NRDYE (Bit 1)                                    */
#define USBFS_NRDYENB_PIPE1NRDYE_Msk      (0x2UL)                   /*!< PIPE1NRDYE (Bitfield-Mask: 0x01)                      */
#define USBFS_NRDYENB_PIPE0NRDYE_Pos      (0UL)                     /*!< PIPE0NRDYE (Bit 0)                                    */
#define USBFS_NRDYENB_PIPE0NRDYE_Msk      (0x1UL)                   /*!< PIPE0NRDYE (Bitfield-Mask: 0x01)                      */
/* ========================================================  BEMPENB  ======================================================== */
#define USBFS_BEMPENB_PIPE9BEMPE_Pos      (9UL)                     /*!< PIPE9BEMPE (Bit 9)                                    */
#define USBFS_BEMPENB_PIPE9BEMPE_Msk      (0x200UL)                 /*!< PIPE9BEMPE (Bitfield-Mask: 0x01)                      */
#define USBFS_BEMPENB_PIPE8BEMPE_Pos      (8UL)                     /*!< PIPE8BEMPE (Bit 8)                                    */
#define USBFS_BEMPENB_PIPE8BEMPE_Msk      (0x100UL)                 /*!< PIPE8BEMPE (Bitfield-Mask: 0x01)                      */
#define USBFS_BEMPENB_PIPE7BEMPE_Pos      (7UL)                     /*!< PIPE7BEMPE (Bit 7)                                    */
#define USBFS_BEMPENB_PIPE7BEMPE_Msk      (0x80UL)                  /*!< PIPE7BEMPE (Bitfield-Mask: 0x01)                      */
#define USBFS_BEMPENB_PIPE6BEMPE_Pos      (6UL)                     /*!< PIPE6BEMPE (Bit 6)                                    */
#define USBFS_BEMPENB_PIPE6BEMPE_Msk      (0x40UL)                  /*!< PIPE6BEMPE (Bitfield-Mask: 0x01)                      */
#define USBFS_BEMPENB_PIPE5BEMPE_Pos      (5UL)                     /*!< PIPE5BEMPE (Bit 5)                                    */
#define USBFS_BEMPENB_PIPE5BEMPE_Msk      (0x20UL)                  /*!< PIPE5BEMPE (Bitfield-Mask: 0x01)                      */
#define USBFS_BEMPENB_PIPE4BEMPE_Pos      (4UL)                     /*!< PIPE4BEMPE (Bit 4)                                    */
#define USBFS_BEMPENB_PIPE4BEMPE_Msk      (0x10UL)                  /*!< PIPE4BEMPE (Bitfield-Mask: 0x01)                      */
#define USBFS_BEMPENB_PIPE3BEMPE_Pos      (3UL)                     /*!< PIPE3BEMPE (Bit 3)                                    */
#define USBFS_BEMPENB_PIPE3BEMPE_Msk      (0x8UL)                   /*!< PIPE3BEMPE (Bitfield-Mask: 0x01)                      */
#define USBFS_BEMPENB_PIPE2BEMPE_Pos      (2UL)                     /*!< PIPE2BEMPE (Bit 2)                                    */
#define USBFS_BEMPENB_PIPE2BEMPE_Msk      (0x4UL)                   /*!< PIPE2BEMPE (Bitfield-Mask: 0x01)                      */
#define USBFS_BEMPENB_PIPE1BEMPE_Pos      (1UL)                     /*!< PIPE1BEMPE (Bit 1)                                    */
#define USBFS_BEMPENB_PIPE1BEMPE_Msk      (0x2UL)                   /*!< PIPE1BEMPE (Bitfield-Mask: 0x01)                      */
#define USBFS_BEMPENB_PIPE0BEMPE_Pos      (0UL)                     /*!< PIPE0BEMPE (Bit 0)                                    */
#define USBFS_BEMPENB_PIPE0BEMPE_Msk      (0x1UL)                   /*!< PIPE0BEMPE (Bitfield-Mask: 0x01)                      */
/* ========================================================  SOFCFG  ========================================================= */
#define USBFS_SOFCFG_TRNENSEL_Pos         (8UL)                     /*!< TRNENSEL (Bit 8)                                      */
#define USBFS_SOFCFG_TRNENSEL_Msk         (0x100UL)                 /*!< TRNENSEL (Bitfield-Mask: 0x01)                        */
#define USBFS_SOFCFG_BRDYM_Pos            (6UL)                     /*!< BRDYM (Bit 6)                                         */
#define USBFS_SOFCFG_BRDYM_Msk            (0x40UL)                  /*!< BRDYM (Bitfield-Mask: 0x01)                           */
#define USBFS_SOFCFG_EDGESTS_Pos          (4UL)                     /*!< EDGESTS (Bit 4)                                       */
#define USBFS_SOFCFG_EDGESTS_Msk          (0x10UL)                  /*!< EDGESTS (Bitfield-Mask: 0x01)                         */
/* ========================================================  INTSTS0  ======================================================== */
#define USBFS_INTSTS0_VBINT_Pos           (15UL)                    /*!< VBINT (Bit 15)                                        */
#define USBFS_INTSTS0_VBINT_Msk           (0x8000UL)                /*!< VBINT (Bitfield-Mask: 0x01)                           */
#define USBFS_INTSTS0_RESM_Pos            (14UL)                    /*!< RESM (Bit 14)                                         */
#define USBFS_INTSTS0_RESM_Msk            (0x4000UL)                /*!< RESM (Bitfield-Mask: 0x01)                            */
#define USBFS_INTSTS0_SOFR_Pos            (13UL)                    /*!< SOFR (Bit 13)                                         */
#define USBFS_INTSTS0_SOFR_Msk            (0x2000UL)                /*!< SOFR (Bitfield-Mask: 0x01)                            */
#define USBFS_INTSTS0_DVST_Pos            (12UL)                    /*!< DVST (Bit 12)                                         */
#define USBFS_INTSTS0_DVST_Msk            (0x1000UL)                /*!< DVST (Bitfield-Mask: 0x01)                            */
#define USBFS_INTSTS0_CTRT_Pos            (11UL)                    /*!< CTRT (Bit 11)                                         */
#define USBFS_INTSTS0_CTRT_Msk            (0x800UL)                 /*!< CTRT (Bitfield-Mask: 0x01)                            */
#define USBFS_INTSTS0_BEMP_Pos            (10UL)                    /*!< BEMP (Bit 10)                                         */
#define USBFS_INTSTS0_BEMP_Msk            (0x400UL)                 /*!< BEMP (Bitfield-Mask: 0x01)                            */
#define USBFS_INTSTS0_NRDY_Pos            (9UL)                     /*!< NRDY (Bit 9)                                          */
#define USBFS_INTSTS0_NRDY_Msk            (0x200UL)                 /*!< NRDY (Bitfield-Mask: 0x01)                            */
#define USBFS_INTSTS0_BRDY_Pos            (8UL)                     /*!< BRDY (Bit 8)                                          */
#define USBFS_INTSTS0_BRDY_Msk            (0x100UL)                 /*!< BRDY (Bitfield-Mask: 0x01)                            */
#define USBFS_INTSTS0_VBSTS_Pos           (7UL)                     /*!< VBSTS (Bit 7)                                         */
#define USBFS_INTSTS0_VBSTS_Msk           (0x80UL)                  /*!< VBSTS (Bitfield-Mask: 0x01)                           */
#define USBFS_INTSTS0_DVSQ_Pos            (4UL)                     /*!< DVSQ (Bit 4)                                          */
#define USBFS_INTSTS0_DVSQ_Msk            (0x70UL)                  /*!< DVSQ (Bitfield-Mask: 0x07)                            */
#define USBFS_INTSTS0_VALID_Pos           (3UL)                     /*!< VALID (Bit 3)                                         */
#define USBFS_INTSTS0_VALID_Msk           (0x8UL)                   /*!< VALID (Bitfield-Mask: 0x01)                           */
#define USBFS_INTSTS0_CTSQ_Pos            (0UL)                     /*!< CTSQ (Bit 0)                                          */
#define USBFS_INTSTS0_CTSQ_Msk            (0x7UL)                   /*!< CTSQ (Bitfield-Mask: 0x07)                            */
/* ========================================================  INTSTS1  ======================================================== */
#define USBFS_INTSTS1_OVRCR_Pos           (15UL)                    /*!< OVRCR (Bit 15)                                        */
#define USBFS_INTSTS1_OVRCR_Msk           (0x8000UL)                /*!< OVRCR (Bitfield-Mask: 0x01)                           */
#define USBFS_INTSTS1_BCHG_Pos            (14UL)                    /*!< BCHG (Bit 14)                                         */
#define USBFS_INTSTS1_BCHG_Msk            (0x4000UL)                /*!< BCHG (Bitfield-Mask: 0x01)                            */
#define USBFS_INTSTS1_DTCH_Pos            (12UL)                    /*!< DTCH (Bit 12)                                         */
#define USBFS_INTSTS1_DTCH_Msk            (0x1000UL)                /*!< DTCH (Bitfield-Mask: 0x01)                            */
#define USBFS_INTSTS1_ATTCH_Pos           (11UL)                    /*!< ATTCH (Bit 11)                                        */
#define USBFS_INTSTS1_ATTCH_Msk           (0x800UL)                 /*!< ATTCH (Bitfield-Mask: 0x01)                           */
#define USBFS_INTSTS1_EOFERR_Pos          (6UL)                     /*!< EOFERR (Bit 6)                                        */
#define USBFS_INTSTS1_EOFERR_Msk          (0x40UL)                  /*!< EOFERR (Bitfield-Mask: 0x01)                          */
#define USBFS_INTSTS1_SIGN_Pos            (5UL)                     /*!< SIGN (Bit 5)                                          */
#define USBFS_INTSTS1_SIGN_Msk            (0x20UL)                  /*!< SIGN (Bitfield-Mask: 0x01)                            */
#define USBFS_INTSTS1_SACK_Pos            (4UL)                     /*!< SACK (Bit 4)                                          */
#define USBFS_INTSTS1_SACK_Msk            (0x10UL)                  /*!< SACK (Bitfield-Mask: 0x01)                            */
/* ========================================================  BRDYSTS  ======================================================== */
#define USBFS_BRDYSTS_PIPE9BRDY_Pos       (9UL)                     /*!< PIPE9BRDY (Bit 9)                                     */
#define USBFS_BRDYSTS_PIPE9BRDY_Msk       (0x200UL)                 /*!< PIPE9BRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_BRDYSTS_PIPE8BRDY_Pos       (8UL)                     /*!< PIPE8BRDY (Bit 8)                                     */
#define USBFS_BRDYSTS_PIPE8BRDY_Msk       (0x100UL)                 /*!< PIPE8BRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_BRDYSTS_PIPE7BRDY_Pos       (7UL)                     /*!< PIPE7BRDY (Bit 7)                                     */
#define USBFS_BRDYSTS_PIPE7BRDY_Msk       (0x80UL)                  /*!< PIPE7BRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_BRDYSTS_PIPE6BRDY_Pos       (6UL)                     /*!< PIPE6BRDY (Bit 6)                                     */
#define USBFS_BRDYSTS_PIPE6BRDY_Msk       (0x40UL)                  /*!< PIPE6BRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_BRDYSTS_PIPE5BRDY_Pos       (5UL)                     /*!< PIPE5BRDY (Bit 5)                                     */
#define USBFS_BRDYSTS_PIPE5BRDY_Msk       (0x20UL)                  /*!< PIPE5BRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_BRDYSTS_PIPE4BRDY_Pos       (4UL)                     /*!< PIPE4BRDY (Bit 4)                                     */
#define USBFS_BRDYSTS_PIPE4BRDY_Msk       (0x10UL)                  /*!< PIPE4BRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_BRDYSTS_PIPE3BRDY_Pos       (3UL)                     /*!< PIPE3BRDY (Bit 3)                                     */
#define USBFS_BRDYSTS_PIPE3BRDY_Msk       (0x8UL)                   /*!< PIPE3BRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_BRDYSTS_PIPE2BRDY_Pos       (2UL)                     /*!< PIPE2BRDY (Bit 2)                                     */
#define USBFS_BRDYSTS_PIPE2BRDY_Msk       (0x4UL)                   /*!< PIPE2BRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_BRDYSTS_PIPE1BRDY_Pos       (1UL)                     /*!< PIPE1BRDY (Bit 1)                                     */
#define USBFS_BRDYSTS_PIPE1BRDY_Msk       (0x2UL)                   /*!< PIPE1BRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_BRDYSTS_PIPE0BRDY_Pos       (0UL)                     /*!< PIPE0BRDY (Bit 0)                                     */
#define USBFS_BRDYSTS_PIPE0BRDY_Msk       (0x1UL)                   /*!< PIPE0BRDY (Bitfield-Mask: 0x01)                       */
/* ========================================================  NRDYSTS  ======================================================== */
#define USBFS_NRDYSTS_PIPE9NRDY_Pos       (9UL)                     /*!< PIPE9NRDY (Bit 9)                                     */
#define USBFS_NRDYSTS_PIPE9NRDY_Msk       (0x200UL)                 /*!< PIPE9NRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_NRDYSTS_PIPE8NRDY_Pos       (8UL)                     /*!< PIPE8NRDY (Bit 8)                                     */
#define USBFS_NRDYSTS_PIPE8NRDY_Msk       (0x100UL)                 /*!< PIPE8NRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_NRDYSTS_PIPE7NRDY_Pos       (7UL)                     /*!< PIPE7NRDY (Bit 7)                                     */
#define USBFS_NRDYSTS_PIPE7NRDY_Msk       (0x80UL)                  /*!< PIPE7NRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_NRDYSTS_PIPE6NRDY_Pos       (6UL)                     /*!< PIPE6NRDY (Bit 6)                                     */
#define USBFS_NRDYSTS_PIPE6NRDY_Msk       (0x40UL)                  /*!< PIPE6NRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_NRDYSTS_PIPE5NRDY_Pos       (5UL)                     /*!< PIPE5NRDY (Bit 5)                                     */
#define USBFS_NRDYSTS_PIPE5NRDY_Msk       (0x20UL)                  /*!< PIPE5NRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_NRDYSTS_PIPE4NRDY_Pos       (4UL)                     /*!< PIPE4NRDY (Bit 4)                                     */
#define USBFS_NRDYSTS_PIPE4NRDY_Msk       (0x10UL)                  /*!< PIPE4NRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_NRDYSTS_PIPE3NRDY_Pos       (3UL)                     /*!< PIPE3NRDY (Bit 3)                                     */
#define USBFS_NRDYSTS_PIPE3NRDY_Msk       (0x8UL)                   /*!< PIPE3NRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_NRDYSTS_PIPE2NRDY_Pos       (2UL)                     /*!< PIPE2NRDY (Bit 2)                                     */
#define USBFS_NRDYSTS_PIPE2NRDY_Msk       (0x4UL)                   /*!< PIPE2NRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_NRDYSTS_PIPE1NRDY_Pos       (1UL)                     /*!< PIPE1NRDY (Bit 1)                                     */
#define USBFS_NRDYSTS_PIPE1NRDY_Msk       (0x2UL)                   /*!< PIPE1NRDY (Bitfield-Mask: 0x01)                       */
#define USBFS_NRDYSTS_PIPE0NRDY_Pos       (0UL)                     /*!< PIPE0NRDY (Bit 0)                                     */
#define USBFS_NRDYSTS_PIPE0NRDY_Msk       (0x1UL)                   /*!< PIPE0NRDY (Bitfield-Mask: 0x01)                       */
/* ========================================================  BEMPSTS  ======================================================== */
#define USBFS_BEMPSTS_PIPE9BEMP_Pos       (9UL)                     /*!< PIPE9BEMP (Bit 9)                                     */
#define USBFS_BEMPSTS_PIPE9BEMP_Msk       (0x200UL)                 /*!< PIPE9BEMP (Bitfield-Mask: 0x01)                       */
#define USBFS_BEMPSTS_PIPE8BEMP_Pos       (8UL)                     /*!< PIPE8BEMP (Bit 8)                                     */
#define USBFS_BEMPSTS_PIPE8BEMP_Msk       (0x100UL)                 /*!< PIPE8BEMP (Bitfield-Mask: 0x01)                       */
#define USBFS_BEMPSTS_PIPE7BEMP_Pos       (7UL)                     /*!< PIPE7BEMP (Bit 7)                                     */
#define USBFS_BEMPSTS_PIPE7BEMP_Msk       (0x80UL)                  /*!< PIPE7BEMP (Bitfield-Mask: 0x01)                       */
#define USBFS_BEMPSTS_PIPE6BEMP_Pos       (6UL)                     /*!< PIPE6BEMP (Bit 6)                                     */
#define USBFS_BEMPSTS_PIPE6BEMP_Msk       (0x40UL)                  /*!< PIPE6BEMP (Bitfield-Mask: 0x01)                       */
#define USBFS_BEMPSTS_PIPE5BEMP_Pos       (5UL)                     /*!< PIPE5BEMP (Bit 5)                                     */
#define USBFS_BEMPSTS_PIPE5BEMP_Msk       (0x20UL)                  /*!< PIPE5BEMP (Bitfield-Mask: 0x01)                       */
#define USBFS_BEMPSTS_PIPE4BEMP_Pos       (4UL)                     /*!< PIPE4BEMP (Bit 4)                                     */
#define USBFS_BEMPSTS_PIPE4BEMP_Msk       (0x10UL)                  /*!< PIPE4BEMP (Bitfield-Mask: 0x01)                       */
#define USBFS_BEMPSTS_PIPE3BEMP_Pos       (3UL)                     /*!< PIPE3BEMP (Bit 3)                                     */
#define USBFS_BEMPSTS_PIPE3BEMP_Msk       (0x8UL)                   /*!< PIPE3BEMP (Bitfield-Mask: 0x01)                       */
#define USBFS_BEMPSTS_PIPE2BEMP_Pos       (2UL)                     /*!< PIPE2BEMP (Bit 2)                                     */
#define USBFS_BEMPSTS_PIPE2BEMP_Msk       (0x4UL)                   /*!< PIPE2BEMP (Bitfield-Mask: 0x01)                       */
#define USBFS_BEMPSTS_PIPE1BEMP_Pos       (1UL)                     /*!< PIPE1BEMP (Bit 1)                                     */
#define USBFS_BEMPSTS_PIPE1BEMP_Msk       (0x2UL)                   /*!< PIPE1BEMP (Bitfield-Mask: 0x01)                       */
#define USBFS_BEMPSTS_PIPE0BEMP_Pos       (0UL)                     /*!< PIPE0BEMP (Bit 0)                                     */
#define USBFS_BEMPSTS_PIPE0BEMP_Msk       (0x1UL)                   /*!< PIPE0BEMP (Bitfield-Mask: 0x01)                       */
/* ========================================================  FRMNUM  ========================================================= */
#define USBFS_FRMNUM_OVRN_Pos             (15UL)                    /*!< OVRN (Bit 15)                                         */
#define USBFS_FRMNUM_OVRN_Msk             (0x8000UL)                /*!< OVRN (Bitfield-Mask: 0x01)                            */
#define USBFS_FRMNUM_CRCE_Pos             (14UL)                    /*!< CRCE (Bit 14)                                         */
#define USBFS_FRMNUM_CRCE_Msk             (0x4000UL)                /*!< CRCE (Bitfield-Mask: 0x01)                            */
#define USBFS_FRMNUM_FRNM_Pos             (0UL)                     /*!< FRNM (Bit 0)                                          */
#define USBFS_FRMNUM_FRNM_Msk             (0x7ffUL)                 /*!< FRNM (Bitfield-Mask: 0x7ff)                           */
/* ========================================================  USBREQ  ========================================================= */
#define USBFS_USBREQ_BREQUEST_Pos         (8UL)                     /*!< BREQUEST (Bit 8)                                      */
#define USBFS_USBREQ_BREQUEST_Msk         (0xff00UL)                /*!< BREQUEST (Bitfield-Mask: 0xff)                        */
#define USBFS_USBREQ_BMREQUESTTYPE_Pos    (0UL)                     /*!< BMREQUESTTYPE (Bit 0)                                 */
#define USBFS_USBREQ_BMREQUESTTYPE_Msk    (0xffUL)                  /*!< BMREQUESTTYPE (Bitfield-Mask: 0xff)                   */
/* ========================================================  USBVAL  ========================================================= */
#define USBFS_USBVAL_WVALUE_Pos           (0UL)                     /*!< WVALUE (Bit 0)                                        */
#define USBFS_USBVAL_WVALUE_Msk           (0xffffUL)                /*!< WVALUE (Bitfield-Mask: 0xffff)                        */
/* ========================================================  USBINDX  ======================================================== */
#define USBFS_USBINDX_WINDEX_Pos          (0UL)                     /*!< WINDEX (Bit 0)                                        */
#define USBFS_USBINDX_WINDEX_Msk          (0xffffUL)                /*!< WINDEX (Bitfield-Mask: 0xffff)                        */
/* ========================================================  USBLENG  ======================================================== */
#define USBFS_USBLENG_WLENGTH_Pos         (0UL)                     /*!< WLENGTH (Bit 0)                                       */
#define USBFS_USBLENG_WLENGTH_Msk         (0xffffUL)                /*!< WLENGTH (Bitfield-Mask: 0xffff)                       */
/* ========================================================  DCPCFG  ========================================================= */
#define USBFS_DCPCFG_SHTNAK_Pos           (7UL)                     /*!< SHTNAK (Bit 7)                                        */
#define USBFS_DCPCFG_SHTNAK_Msk           (0x80UL)                  /*!< SHTNAK (Bitfield-Mask: 0x01)                          */
#define USBFS_DCPCFG_DIR_Pos              (4UL)                     /*!< DIR (Bit 4)                                           */
#define USBFS_DCPCFG_DIR_Msk              (0x10UL)                  /*!< DIR (Bitfield-Mask: 0x01)                             */
/* ========================================================  DCPMAXP  ======================================================== */
#define USBFS_DCPMAXP_DEVSEL_Pos          (12UL)                    /*!< DEVSEL (Bit 12)                                       */
#define USBFS_DCPMAXP_DEVSEL_Msk          (0xf000UL)                /*!< DEVSEL (Bitfield-Mask: 0x0f)                          */
#define USBFS_DCPMAXP_MXPS_Pos            (0UL)                     /*!< MXPS (Bit 0)                                          */
#define USBFS_DCPMAXP_MXPS_Msk            (0x7fUL)                  /*!< MXPS (Bitfield-Mask: 0x7f)                            */
/* ========================================================  DCPCTR  ========================================================= */
#define USBFS_DCPCTR_BSTS_Pos             (15UL)                    /*!< BSTS (Bit 15)                                         */
#define USBFS_DCPCTR_BSTS_Msk             (0x8000UL)                /*!< BSTS (Bitfield-Mask: 0x01)                            */
#define USBFS_DCPCTR_SUREQ_Pos            (14UL)                    /*!< SUREQ (Bit 14)                                        */
#define USBFS_DCPCTR_SUREQ_Msk            (0x4000UL)                /*!< SUREQ (Bitfield-Mask: 0x01)                           */
#define USBFS_DCPCTR_SUREQCLR_Pos         (11UL)                    /*!< SUREQCLR (Bit 11)                                     */
#define USBFS_DCPCTR_SUREQCLR_Msk         (0x800UL)                 /*!< SUREQCLR (Bitfield-Mask: 0x01)                        */
#define USBFS_DCPCTR_SQCLR_Pos            (8UL)                     /*!< SQCLR (Bit 8)                                         */
#define USBFS_DCPCTR_SQCLR_Msk            (0x100UL)                 /*!< SQCLR (Bitfield-Mask: 0x01)                           */
#define USBFS_DCPCTR_SQSET_Pos            (7UL)                     /*!< SQSET (Bit 7)                                         */
#define USBFS_DCPCTR_SQSET_Msk            (0x80UL)                  /*!< SQSET (Bitfield-Mask: 0x01)                           */
#define USBFS_DCPCTR_SQMON_Pos            (6UL)                     /*!< SQMON (Bit 6)                                         */
#define USBFS_DCPCTR_SQMON_Msk            (0x40UL)                  /*!< SQMON (Bitfield-Mask: 0x01)                           */
#define USBFS_DCPCTR_PBUSY_Pos            (5UL)                     /*!< PBUSY (Bit 5)                                         */
#define USBFS_DCPCTR_PBUSY_Msk            (0x20UL)                  /*!< PBUSY (Bitfield-Mask: 0x01)                           */
#define USBFS_DCPCTR_CCPL_Pos             (2UL)                     /*!< CCPL (Bit 2)                                          */
#define USBFS_DCPCTR_CCPL_Msk             (0x4UL)                   /*!< CCPL (Bitfield-Mask: 0x01)                            */
#define USBFS_DCPCTR_PID_Pos              (0UL)                     /*!< PID (Bit 0)                                           */
#define USBFS_DCPCTR_PID_Msk              (0x3UL)                   /*!< PID (Bitfield-Mask: 0x03)                             */
/* ========================================================  PIPESEL  ======================================================== */
#define USBFS_PIPESEL_PIPESEL_Pos         (0UL)                     /*!< PIPESEL (Bit 0)                                       */
#define USBFS_PIPESEL_PIPESEL_Msk         (0xfUL)                   /*!< PIPESEL (Bitfield-Mask: 0x0f)                         */
/* ========================================================  PIPECFG  ======================================================== */
#define USBFS_PIPECFG_TYPE_Pos            (14UL)                    /*!< TYPE (Bit 14)                                         */
#define USBFS_PIPECFG_TYPE_Msk            (0xc000UL)                /*!< TYPE (Bitfield-Mask: 0x03)                            */
#define USBFS_PIPECFG_BFRE_Pos            (10UL)                    /*!< BFRE (Bit 10)                                         */
#define USBFS_PIPECFG_BFRE_Msk            (0x400UL)                 /*!< BFRE (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPECFG_DBLB_Pos            (9UL)                     /*!< DBLB (Bit 9)                                          */
#define USBFS_PIPECFG_DBLB_Msk            (0x200UL)                 /*!< DBLB (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPECFG_SHTNAK_Pos          (7UL)                     /*!< SHTNAK (Bit 7)                                        */
#define USBFS_PIPECFG_SHTNAK_Msk          (0x80UL)                  /*!< SHTNAK (Bitfield-Mask: 0x01)                          */
#define USBFS_PIPECFG_DIR_Pos             (4UL)                     /*!< DIR (Bit 4)                                           */
#define USBFS_PIPECFG_DIR_Msk             (0x10UL)                  /*!< DIR (Bitfield-Mask: 0x01)                             */
#define USBFS_PIPECFG_EPNUM_Pos           (0UL)                     /*!< EPNUM (Bit 0)                                         */
#define USBFS_PIPECFG_EPNUM_Msk           (0xfUL)                   /*!< EPNUM (Bitfield-Mask: 0x0f)                           */
/* =======================================================  PIPEMAXP  ======================================================== */
#define USBFS_PIPEMAXP_DEVSEL_Pos         (12UL)                    /*!< DEVSEL (Bit 12)                                       */
#define USBFS_PIPEMAXP_DEVSEL_Msk         (0xf000UL)                /*!< DEVSEL (Bitfield-Mask: 0x0f)                          */
#define USBFS_PIPEMAXP_MXPS_Pos           (0UL)                     /*!< MXPS (Bit 0)                                          */
#define USBFS_PIPEMAXP_MXPS_Msk           (0x1ffUL)                 /*!< MXPS (Bitfield-Mask: 0x1ff)                           */
/* =======================================================  PIPEPERI  ======================================================== */
#define USBFS_PIPEPERI_IFIS_Pos           (12UL)                    /*!< IFIS (Bit 12)                                         */
#define USBFS_PIPEPERI_IFIS_Msk           (0x1000UL)                /*!< IFIS (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPEPERI_IITV_Pos           (0UL)                     /*!< IITV (Bit 0)                                          */
#define USBFS_PIPEPERI_IITV_Msk           (0x7UL)                   /*!< IITV (Bitfield-Mask: 0x07)                            */
/* =======================================================  PIPE1CTR  ======================================================== */
#define USBFS_PIPE1CTR_BSTS_Pos           (15UL)                    /*!< BSTS (Bit 15)                                         */
#define USBFS_PIPE1CTR_BSTS_Msk           (0x8000UL)                /*!< BSTS (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPE1CTR_INBUFM_Pos         (14UL)                    /*!< INBUFM (Bit 14)                                       */
#define USBFS_PIPE1CTR_INBUFM_Msk         (0x4000UL)                /*!< INBUFM (Bitfield-Mask: 0x01)                          */
#define USBFS_PIPE1CTR_ATREPM_Pos         (10UL)                    /*!< ATREPM (Bit 10)                                       */
#define USBFS_PIPE1CTR_ATREPM_Msk         (0x400UL)                 /*!< ATREPM (Bitfield-Mask: 0x01)                          */
#define USBFS_PIPE1CTR_ACLRM_Pos          (9UL)                     /*!< ACLRM (Bit 9)                                         */
#define USBFS_PIPE1CTR_ACLRM_Msk          (0x200UL)                 /*!< ACLRM (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE1CTR_SQCLR_Pos          (8UL)                     /*!< SQCLR (Bit 8)                                         */
#define USBFS_PIPE1CTR_SQCLR_Msk          (0x100UL)                 /*!< SQCLR (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE1CTR_SQSET_Pos          (7UL)                     /*!< SQSET (Bit 7)                                         */
#define USBFS_PIPE1CTR_SQSET_Msk          (0x80UL)                  /*!< SQSET (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE1CTR_SQMON_Pos          (6UL)                     /*!< SQMON (Bit 6)                                         */
#define USBFS_PIPE1CTR_SQMON_Msk          (0x40UL)                  /*!< SQMON (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE1CTR_PBUSY_Pos          (5UL)                     /*!< PBUSY (Bit 5)                                         */
#define USBFS_PIPE1CTR_PBUSY_Msk          (0x20UL)                  /*!< PBUSY (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE1CTR_PID_Pos            (0UL)                     /*!< PID (Bit 0)                                           */
#define USBFS_PIPE1CTR_PID_Msk            (0x3UL)                   /*!< PID (Bitfield-Mask: 0x03)                             */
/* =======================================================  PIPE2CTR  ======================================================== */
#define USBFS_PIPE2CTR_BSTS_Pos           (15UL)                    /*!< BSTS (Bit 15)                                         */
#define USBFS_PIPE2CTR_BSTS_Msk           (0x8000UL)                /*!< BSTS (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPE2CTR_INBUFM_Pos         (14UL)                    /*!< INBUFM (Bit 14)                                       */
#define USBFS_PIPE2CTR_INBUFM_Msk         (0x4000UL)                /*!< INBUFM (Bitfield-Mask: 0x01)                          */
#define USBFS_PIPE2CTR_ATREPM_Pos         (10UL)                    /*!< ATREPM (Bit 10)                                       */
#define USBFS_PIPE2CTR_ATREPM_Msk         (0x400UL)                 /*!< ATREPM (Bitfield-Mask: 0x01)                          */
#define USBFS_PIPE2CTR_ACLRM_Pos          (9UL)                     /*!< ACLRM (Bit 9)                                         */
#define USBFS_PIPE2CTR_ACLRM_Msk          (0x200UL)                 /*!< ACLRM (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE2CTR_SQCLR_Pos          (8UL)                     /*!< SQCLR (Bit 8)                                         */
#define USBFS_PIPE2CTR_SQCLR_Msk          (0x100UL)                 /*!< SQCLR (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE2CTR_SQSET_Pos          (7UL)                     /*!< SQSET (Bit 7)                                         */
#define USBFS_PIPE2CTR_SQSET_Msk          (0x80UL)                  /*!< SQSET (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE2CTR_SQMON_Pos          (6UL)                     /*!< SQMON (Bit 6)                                         */
#define USBFS_PIPE2CTR_SQMON_Msk          (0x40UL)                  /*!< SQMON (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE2CTR_PBUSY_Pos          (5UL)                     /*!< PBUSY (Bit 5)                                         */
#define USBFS_PIPE2CTR_PBUSY_Msk          (0x20UL)                  /*!< PBUSY (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE2CTR_PID_Pos            (0UL)                     /*!< PID (Bit 0)                                           */
#define USBFS_PIPE2CTR_PID_Msk            (0x3UL)                   /*!< PID (Bitfield-Mask: 0x03)                             */
/* =======================================================  PIPE3CTR  ======================================================== */
#define USBFS_PIPE3CTR_BSTS_Pos           (15UL)                    /*!< BSTS (Bit 15)                                         */
#define USBFS_PIPE3CTR_BSTS_Msk           (0x8000UL)                /*!< BSTS (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPE3CTR_INBUFM_Pos         (14UL)                    /*!< INBUFM (Bit 14)                                       */
#define USBFS_PIPE3CTR_INBUFM_Msk         (0x4000UL)                /*!< INBUFM (Bitfield-Mask: 0x01)                          */
#define USBFS_PIPE3CTR_ATREPM_Pos         (10UL)                    /*!< ATREPM (Bit 10)                                       */
#define USBFS_PIPE3CTR_ATREPM_Msk         (0x400UL)                 /*!< ATREPM (Bitfield-Mask: 0x01)                          */
#define USBFS_PIPE3CTR_ACLRM_Pos          (9UL)                     /*!< ACLRM (Bit 9)                                         */
#define USBFS_PIPE3CTR_ACLRM_Msk          (0x200UL)                 /*!< ACLRM (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE3CTR_SQCLR_Pos          (8UL)                     /*!< SQCLR (Bit 8)                                         */
#define USBFS_PIPE3CTR_SQCLR_Msk          (0x100UL)                 /*!< SQCLR (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE3CTR_SQSET_Pos          (7UL)                     /*!< SQSET (Bit 7)                                         */
#define USBFS_PIPE3CTR_SQSET_Msk          (0x80UL)                  /*!< SQSET (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE3CTR_SQMON_Pos          (6UL)                     /*!< SQMON (Bit 6)                                         */
#define USBFS_PIPE3CTR_SQMON_Msk          (0x40UL)                  /*!< SQMON (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE3CTR_PBUSY_Pos          (5UL)                     /*!< PBUSY (Bit 5)                                         */
#define USBFS_PIPE3CTR_PBUSY_Msk          (0x20UL)                  /*!< PBUSY (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE3CTR_PID_Pos            (0UL)                     /*!< PID (Bit 0)                                           */
#define USBFS_PIPE3CTR_PID_Msk            (0x3UL)                   /*!< PID (Bitfield-Mask: 0x03)                             */
/* =======================================================  PIPE4CTR  ======================================================== */
#define USBFS_PIPE4CTR_BSTS_Pos           (15UL)                    /*!< BSTS (Bit 15)                                         */
#define USBFS_PIPE4CTR_BSTS_Msk           (0x8000UL)                /*!< BSTS (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPE4CTR_INBUFM_Pos         (14UL)                    /*!< INBUFM (Bit 14)                                       */
#define USBFS_PIPE4CTR_INBUFM_Msk         (0x4000UL)                /*!< INBUFM (Bitfield-Mask: 0x01)                          */
#define USBFS_PIPE4CTR_ATREPM_Pos         (10UL)                    /*!< ATREPM (Bit 10)                                       */
#define USBFS_PIPE4CTR_ATREPM_Msk         (0x400UL)                 /*!< ATREPM (Bitfield-Mask: 0x01)                          */
#define USBFS_PIPE4CTR_ACLRM_Pos          (9UL)                     /*!< ACLRM (Bit 9)                                         */
#define USBFS_PIPE4CTR_ACLRM_Msk          (0x200UL)                 /*!< ACLRM (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE4CTR_SQCLR_Pos          (8UL)                     /*!< SQCLR (Bit 8)                                         */
#define USBFS_PIPE4CTR_SQCLR_Msk          (0x100UL)                 /*!< SQCLR (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE4CTR_SQSET_Pos          (7UL)                     /*!< SQSET (Bit 7)                                         */
#define USBFS_PIPE4CTR_SQSET_Msk          (0x80UL)                  /*!< SQSET (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE4CTR_SQMON_Pos          (6UL)                     /*!< SQMON (Bit 6)                                         */
#define USBFS_PIPE4CTR_SQMON_Msk          (0x40UL)                  /*!< SQMON (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE4CTR_PBUSY_Pos          (5UL)                     /*!< PBUSY (Bit 5)                                         */
#define USBFS_PIPE4CTR_PBUSY_Msk          (0x20UL)                  /*!< PBUSY (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE4CTR_PID_Pos            (0UL)                     /*!< PID (Bit 0)                                           */
#define USBFS_PIPE4CTR_PID_Msk            (0x3UL)                   /*!< PID (Bitfield-Mask: 0x03)                             */
/* =======================================================  PIPE5CTR  ======================================================== */
#define USBFS_PIPE5CTR_BSTS_Pos           (15UL)                    /*!< BSTS (Bit 15)                                         */
#define USBFS_PIPE5CTR_BSTS_Msk           (0x8000UL)                /*!< BSTS (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPE5CTR_INBUFM_Pos         (14UL)                    /*!< INBUFM (Bit 14)                                       */
#define USBFS_PIPE5CTR_INBUFM_Msk         (0x4000UL)                /*!< INBUFM (Bitfield-Mask: 0x01)                          */
#define USBFS_PIPE5CTR_ATREPM_Pos         (10UL)                    /*!< ATREPM (Bit 10)                                       */
#define USBFS_PIPE5CTR_ATREPM_Msk         (0x400UL)                 /*!< ATREPM (Bitfield-Mask: 0x01)                          */
#define USBFS_PIPE5CTR_ACLRM_Pos          (9UL)                     /*!< ACLRM (Bit 9)                                         */
#define USBFS_PIPE5CTR_ACLRM_Msk          (0x200UL)                 /*!< ACLRM (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE5CTR_SQCLR_Pos          (8UL)                     /*!< SQCLR (Bit 8)                                         */
#define USBFS_PIPE5CTR_SQCLR_Msk          (0x100UL)                 /*!< SQCLR (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE5CTR_SQSET_Pos          (7UL)                     /*!< SQSET (Bit 7)                                         */
#define USBFS_PIPE5CTR_SQSET_Msk          (0x80UL)                  /*!< SQSET (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE5CTR_SQMON_Pos          (6UL)                     /*!< SQMON (Bit 6)                                         */
#define USBFS_PIPE5CTR_SQMON_Msk          (0x40UL)                  /*!< SQMON (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE5CTR_PBUSY_Pos          (5UL)                     /*!< PBUSY (Bit 5)                                         */
#define USBFS_PIPE5CTR_PBUSY_Msk          (0x20UL)                  /*!< PBUSY (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE5CTR_PID_Pos            (0UL)                     /*!< PID (Bit 0)                                           */
#define USBFS_PIPE5CTR_PID_Msk            (0x3UL)                   /*!< PID (Bitfield-Mask: 0x03)                             */
/* =======================================================  PIPE6CTR  ======================================================== */
#define USBFS_PIPE6CTR_BSTS_Pos           (15UL)                    /*!< BSTS (Bit 15)                                         */
#define USBFS_PIPE6CTR_BSTS_Msk           (0x8000UL)                /*!< BSTS (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPE6CTR_ACLRM_Pos          (9UL)                     /*!< ACLRM (Bit 9)                                         */
#define USBFS_PIPE6CTR_ACLRM_Msk          (0x200UL)                 /*!< ACLRM (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE6CTR_SQCLR_Pos          (8UL)                     /*!< SQCLR (Bit 8)                                         */
#define USBFS_PIPE6CTR_SQCLR_Msk          (0x100UL)                 /*!< SQCLR (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE6CTR_SQSET_Pos          (7UL)                     /*!< SQSET (Bit 7)                                         */
#define USBFS_PIPE6CTR_SQSET_Msk          (0x80UL)                  /*!< SQSET (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE6CTR_SQMON_Pos          (6UL)                     /*!< SQMON (Bit 6)                                         */
#define USBFS_PIPE6CTR_SQMON_Msk          (0x40UL)                  /*!< SQMON (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE6CTR_PBUSY_Pos          (5UL)                     /*!< PBUSY (Bit 5)                                         */
#define USBFS_PIPE6CTR_PBUSY_Msk          (0x20UL)                  /*!< PBUSY (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE6CTR_PID_Pos            (0UL)                     /*!< PID (Bit 0)                                           */
#define USBFS_PIPE6CTR_PID_Msk            (0x3UL)                   /*!< PID (Bitfield-Mask: 0x03)                             */
/* =======================================================  PIPE7CTR  ======================================================== */
#define USBFS_PIPE7CTR_BSTS_Pos           (15UL)                    /*!< BSTS (Bit 15)                                         */
#define USBFS_PIPE7CTR_BSTS_Msk           (0x8000UL)                /*!< BSTS (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPE7CTR_ACLRM_Pos          (9UL)                     /*!< ACLRM (Bit 9)                                         */
#define USBFS_PIPE7CTR_ACLRM_Msk          (0x200UL)                 /*!< ACLRM (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE7CTR_SQCLR_Pos          (8UL)                     /*!< SQCLR (Bit 8)                                         */
#define USBFS_PIPE7CTR_SQCLR_Msk          (0x100UL)                 /*!< SQCLR (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE7CTR_SQSET_Pos          (7UL)                     /*!< SQSET (Bit 7)                                         */
#define USBFS_PIPE7CTR_SQSET_Msk          (0x80UL)                  /*!< SQSET (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE7CTR_SQMON_Pos          (6UL)                     /*!< SQMON (Bit 6)                                         */
#define USBFS_PIPE7CTR_SQMON_Msk          (0x40UL)                  /*!< SQMON (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE7CTR_PBUSY_Pos          (5UL)                     /*!< PBUSY (Bit 5)                                         */
#define USBFS_PIPE7CTR_PBUSY_Msk          (0x20UL)                  /*!< PBUSY (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE7CTR_PID_Pos            (0UL)                     /*!< PID (Bit 0)                                           */
#define USBFS_PIPE7CTR_PID_Msk            (0x3UL)                   /*!< PID (Bitfield-Mask: 0x03)                             */
/* =======================================================  PIPE8CTR  ======================================================== */
#define USBFS_PIPE8CTR_BSTS_Pos           (15UL)                    /*!< BSTS (Bit 15)                                         */
#define USBFS_PIPE8CTR_BSTS_Msk           (0x8000UL)                /*!< BSTS (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPE8CTR_ACLRM_Pos          (9UL)                     /*!< ACLRM (Bit 9)                                         */
#define USBFS_PIPE8CTR_ACLRM_Msk          (0x200UL)                 /*!< ACLRM (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE8CTR_SQCLR_Pos          (8UL)                     /*!< SQCLR (Bit 8)                                         */
#define USBFS_PIPE8CTR_SQCLR_Msk          (0x100UL)                 /*!< SQCLR (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE8CTR_SQSET_Pos          (7UL)                     /*!< SQSET (Bit 7)                                         */
#define USBFS_PIPE8CTR_SQSET_Msk          (0x80UL)                  /*!< SQSET (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE8CTR_SQMON_Pos          (6UL)                     /*!< SQMON (Bit 6)                                         */
#define USBFS_PIPE8CTR_SQMON_Msk          (0x40UL)                  /*!< SQMON (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE8CTR_PBUSY_Pos          (5UL)                     /*!< PBUSY (Bit 5)                                         */
#define USBFS_PIPE8CTR_PBUSY_Msk          (0x20UL)                  /*!< PBUSY (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE8CTR_PID_Pos            (0UL)                     /*!< PID (Bit 0)                                           */
#define USBFS_PIPE8CTR_PID_Msk            (0x3UL)                   /*!< PID (Bitfield-Mask: 0x03)                             */
/* =======================================================  PIPE9CTR  ======================================================== */
#define USBFS_PIPE9CTR_BSTS_Pos           (15UL)                    /*!< BSTS (Bit 15)                                         */
#define USBFS_PIPE9CTR_BSTS_Msk           (0x8000UL)                /*!< BSTS (Bitfield-Mask: 0x01)                            */
#define USBFS_PIPE9CTR_ACLRM_Pos          (9UL)                     /*!< ACLRM (Bit 9)                                         */
#define USBFS_PIPE9CTR_ACLRM_Msk          (0x200UL)                 /*!< ACLRM (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE9CTR_SQCLR_Pos          (8UL)                     /*!< SQCLR (Bit 8)                                         */
#define USBFS_PIPE9CTR_SQCLR_Msk          (0x100UL)                 /*!< SQCLR (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE9CTR_SQSET_Pos          (7UL)                     /*!< SQSET (Bit 7)                                         */
#define USBFS_PIPE9CTR_SQSET_Msk          (0x80UL)                  /*!< SQSET (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE9CTR_SQMON_Pos          (6UL)                     /*!< SQMON (Bit 6)                                         */
#define USBFS_PIPE9CTR_SQMON_Msk          (0x40UL)                  /*!< SQMON (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE9CTR_PBUSY_Pos          (5UL)                     /*!< PBUSY (Bit 5)                                         */
#define USBFS_PIPE9CTR_PBUSY_Msk          (0x20UL)                  /*!< PBUSY (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE9CTR_PID_Pos            (0UL)                     /*!< PID (Bit 0)                                           */
#define USBFS_PIPE9CTR_PID_Msk            (0x3UL)                   /*!< PID (Bitfield-Mask: 0x03)                             */
/* =======================================================  PIPE1TRE  ======================================================== */
#define USBFS_PIPE1TRE_TRENB_Pos          (9UL)                     /*!< TRENB (Bit 9)                                         */
#define USBFS_PIPE1TRE_TRENB_Msk          (0x200UL)                 /*!< TRENB (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE1TRE_TRCLR_Pos          (8UL)                     /*!< TRCLR (Bit 8)                                         */
#define USBFS_PIPE1TRE_TRCLR_Msk          (0x100UL)                 /*!< TRCLR (Bitfield-Mask: 0x01)                           */
/* =======================================================  PIPE2TRE  ======================================================== */
#define USBFS_PIPE2TRE_TRENB_Pos          (9UL)                     /*!< TRENB (Bit 9)                                         */
#define USBFS_PIPE2TRE_TRENB_Msk          (0x200UL)                 /*!< TRENB (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE2TRE_TRCLR_Pos          (8UL)                     /*!< TRCLR (Bit 8)                                         */
#define USBFS_PIPE2TRE_TRCLR_Msk          (0x100UL)                 /*!< TRCLR (Bitfield-Mask: 0x01)                           */
/* =======================================================  PIPE3TRE  ======================================================== */
#define USBFS_PIPE3TRE_TRENB_Pos          (9UL)                     /*!< TRENB (Bit 9)                                         */
#define USBFS_PIPE3TRE_TRENB_Msk          (0x200UL)                 /*!< TRENB (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE3TRE_TRCLR_Pos          (8UL)                     /*!< TRCLR (Bit 8)                                         */
#define USBFS_PIPE3TRE_TRCLR_Msk          (0x100UL)                 /*!< TRCLR (Bitfield-Mask: 0x01)                           */
/* =======================================================  PIPE4TRE  ======================================================== */
#define USBFS_PIPE4TRE_TRENB_Pos          (9UL)                     /*!< TRENB (Bit 9)                                         */
#define USBFS_PIPE4TRE_TRENB_Msk          (0x200UL)                 /*!< TRENB (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE4TRE_TRCLR_Pos          (8UL)                     /*!< TRCLR (Bit 8)                                         */
#define USBFS_PIPE4TRE_TRCLR_Msk          (0x100UL)                 /*!< TRCLR (Bitfield-Mask: 0x01)                           */
/* =======================================================  PIPE5TRE  ======================================================== */
#define USBFS_PIPE5TRE_TRENB_Pos          (9UL)                     /*!< TRENB (Bit 9)                                         */
#define USBFS_PIPE5TRE_TRENB_Msk          (0x200UL)                 /*!< TRENB (Bitfield-Mask: 0x01)                           */
#define USBFS_PIPE5TRE_TRCLR_Pos          (8UL)                     /*!< TRCLR (Bit 8)                                         */
#define USBFS_PIPE5TRE_TRCLR_Msk          (0x100UL)                 /*!< TRCLR (Bitfield-Mask: 0x01)                           */
/* =======================================================  PIPE1TRN  ======================================================== */
#define USBFS_PIPE1TRN_TRNCNT_Pos         (0UL)                     /*!< TRNCNT (Bit 0)                                        */
#define USBFS_PIPE1TRN_TRNCNT_Msk         (0xffffUL)                /*!< TRNCNT (Bitfield-Mask: 0xffff)                        */
/* =======================================================  PIPE2TRN  ======================================================== */
#define USBFS_PIPE2TRN_TRNCNT_Pos         (0UL)                     /*!< TRNCNT (Bit 0)                                        */
#define USBFS_PIPE2TRN_TRNCNT_Msk         (0xffffUL)                /*!< TRNCNT (Bitfield-Mask: 0xffff)                        */
/* =======================================================  PIPE3TRN  ======================================================== */
#define USBFS_PIPE3TRN_TRNCNT_Pos         (0UL)                     /*!< TRNCNT (Bit 0)                                        */
#define USBFS_PIPE3TRN_TRNCNT_Msk         (0xffffUL)                /*!< TRNCNT (Bitfield-Mask: 0xffff)                        */
/* =======================================================  PIPE4TRN  ======================================================== */
#define USBFS_PIPE4TRN_TRNCNT_Pos         (0UL)                     /*!< TRNCNT (Bit 0)                                        */
#define USBFS_PIPE4TRN_TRNCNT_Msk         (0xffffUL)                /*!< TRNCNT (Bitfield-Mask: 0xffff)                        */
/* =======================================================  PIPE5TRN  ======================================================== */
#define USBFS_PIPE5TRN_TRNCNT_Pos         (0UL)                     /*!< TRNCNT (Bit 0)                                        */
#define USBFS_PIPE5TRN_TRNCNT_Msk         (0xffffUL)                /*!< TRNCNT (Bitfield-Mask: 0xffff)                        */
/* ========================================================  DEVADD0  ======================================================== */
#define USBFS_DEVADD0_USBSPD_Pos          (6UL)                     /*!< USBSPD (Bit 6)                                        */
#define USBFS_DEVADD0_USBSPD_Msk          (0xc0UL)                  /*!< USBSPD (Bitfield-Mask: 0x03)                          */
/* ========================================================  DEVADD1  ======================================================== */
#define USBFS_DEVADD1_USBSPD_Pos          (6UL)                     /*!< USBSPD (Bit 6)                                        */
#define USBFS_DEVADD1_USBSPD_Msk          (0xc0UL)                  /*!< USBSPD (Bitfield-Mask: 0x03)                          */
/* ========================================================  DEVADD2  ======================================================== */
#define USBFS_DEVADD2_USBSPD_Pos          (6UL)                     /*!< USBSPD (Bit 6)                                        */
#define USBFS_DEVADD2_USBSPD_Msk          (0xc0UL)                  /*!< USBSPD (Bitfield-Mask: 0x03)                          */
/* ========================================================  DEVADD3  ======================================================== */
#define USBFS_DEVADD3_USBSPD_Pos          (6UL)                     /*!< USBSPD (Bit 6)                                        */
#define USBFS_DEVADD3_USBSPD_Msk          (0xc0UL)                  /*!< USBSPD (Bitfield-Mask: 0x03)                          */
/* ========================================================  DEVADD4  ======================================================== */
#define USBFS_DEVADD4_USBSPD_Pos          (6UL)                     /*!< USBSPD (Bit 6)                                        */
#define USBFS_DEVADD4_USBSPD_Msk          (0xc0UL)                  /*!< USBSPD (Bitfield-Mask: 0x03)                          */
/* ========================================================  DEVADD5  ======================================================== */
#define USBFS_DEVADD5_USBSPD_Pos          (6UL)                     /*!< USBSPD (Bit 6)                                        */
#define USBFS_DEVADD5_USBSPD_Msk          (0xc0UL)                  /*!< USBSPD (Bitfield-Mask: 0x03)                          */
/* ========================================================  PHYSLEW  ======================================================== */
#define USBFS_PHYSLEW_SLEWF01_Pos         (3UL)                     /*!< SLEWF01 (Bit 3)                                       */
#define USBFS_PHYSLEW_SLEWF01_Msk         (0x8UL)                   /*!< SLEWF01 (Bitfield-Mask: 0x01)                         */
#define USBFS_PHYSLEW_SLEWF00_Pos         (2UL)                     /*!< SLEWF00 (Bit 2)                                       */
#define USBFS_PHYSLEW_SLEWF00_Msk         (0x4UL)                   /*!< SLEWF00 (Bitfield-Mask: 0x01)                         */
#define USBFS_PHYSLEW_SLEWR01_Pos         (1UL)                     /*!< SLEWR01 (Bit 1)                                       */
#define USBFS_PHYSLEW_SLEWR01_Msk         (0x2UL)                   /*!< SLEWR01 (Bitfield-Mask: 0x01)                         */
#define USBFS_PHYSLEW_SLEWR00_Pos         (0UL)                     /*!< SLEWR00 (Bit 0)                                       */
#define USBFS_PHYSLEW_SLEWR00_Msk         (0x1UL)                   /*!< SLEWR00 (Bitfield-Mask: 0x01)                         */


/* =========================================================================================================================== */
/* ================                                           VREF                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  AVCR  ========================================================== */
#define VREF_AVCR_STDMD_Pos               (18UL)                    /*!< STDMD (Bit 18)                                        */
#define VREF_AVCR_STDMD_Msk               (0x40000UL)               /*!< STDMD (Bitfield-Mask: 0x01)                           */
#define VREF_AVCR_LPMD_Pos                (16UL)                    /*!< LPMD (Bit 16)                                         */
#define VREF_AVCR_LPMD_Msk                (0x10000UL)               /*!< LPMD (Bitfield-Mask: 0x01)                            */
#define VREF_AVCR_AVSEL_Pos               (8UL)                     /*!< AVSEL (Bit 8)                                         */
#define VREF_AVCR_AVSEL_Msk               (0x100UL)                 /*!< AVSEL (Bitfield-Mask: 0x01)                           */
#define VREF_AVCR_VREFEN_Pos              (4UL)                     /*!< VREFEN (Bit 4)                                        */
#define VREF_AVCR_VREFEN_Msk              (0x10UL)                  /*!< VREFEN (Bitfield-Mask: 0x01)                          */
#define VREF_AVCR_IBIASEN_Pos             (0UL)                     /*!< IBIASEN (Bit 0)                                       */
#define VREF_AVCR_IBIASEN_Msk             (0x1UL)                   /*!< IBIASEN (Bitfield-Mask: 0x01)                         */


/* =========================================================================================================================== */
/* ================                                            WDT                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  WDTRR  ========================================================= */
#define WDT_WDTRR_WDTRR_Pos               (0UL)                     /*!< WDTRR (Bit 0)                                         */
#define WDT_WDTRR_WDTRR_Msk               (0xffUL)                  /*!< WDTRR (Bitfield-Mask: 0xff)                           */
/* =========================================================  WDTCR  ========================================================= */
#define WDT_WDTCR_RPSS_Pos                (12UL)                    /*!< RPSS (Bit 12)                                         */
#define WDT_WDTCR_RPSS_Msk                (0x3000UL)                /*!< RPSS (Bitfield-Mask: 0x03)                            */
#define WDT_WDTCR_RPES_Pos                (8UL)                     /*!< RPES (Bit 8)                                          */
#define WDT_WDTCR_RPES_Msk                (0x300UL)                 /*!< RPES (Bitfield-Mask: 0x03)                            */
#define WDT_WDTCR_CKS_Pos                 (4UL)                     /*!< CKS (Bit 4)                                           */
#define WDT_WDTCR_CKS_Msk                 (0xf0UL)                  /*!< CKS (Bitfield-Mask: 0x0f)                             */
#define WDT_WDTCR_TOPS_Pos                (0UL)                     /*!< TOPS (Bit 0)                                          */
#define WDT_WDTCR_TOPS_Msk                (0x3UL)                   /*!< TOPS (Bitfield-Mask: 0x03)                            */
/* =========================================================  WDTSR  ========================================================= */
#define WDT_WDTSR_REFEF_Pos               (15UL)                    /*!< REFEF (Bit 15)                                        */
#define WDT_WDTSR_REFEF_Msk               (0x8000UL)                /*!< REFEF (Bitfield-Mask: 0x01)                           */
#define WDT_WDTSR_UNDFF_Pos               (14UL)                    /*!< UNDFF (Bit 14)                                        */
#define WDT_WDTSR_UNDFF_Msk               (0x4000UL)                /*!< UNDFF (Bitfield-Mask: 0x01)                           */
#define WDT_WDTSR_CNTVAL_Pos              (0UL)                     /*!< CNTVAL (Bit 0)                                        */
#define WDT_WDTSR_CNTVAL_Msk              (0x3fffUL)                /*!< CNTVAL (Bitfield-Mask: 0x3fff)                        */
/* ========================================================  WDTRCR  ========================================================= */
#define WDT_WDTRCR_RSTIRQS_Pos            (7UL)                     /*!< RSTIRQS (Bit 7)                                       */
#define WDT_WDTRCR_RSTIRQS_Msk            (0x80UL)                  /*!< RSTIRQS (Bitfield-Mask: 0x01)                         */
/* =======================================================  WDTCSTPR  ======================================================== */
#define WDT_WDTCSTPR_SLCSTP_Pos           (7UL)                     /*!< SLCSTP (Bit 7)                                        */
#define WDT_WDTCSTPR_SLCSTP_Msk           (0x80UL)                  /*!< SLCSTP (Bitfield-Mask: 0x01)                          */

/** @} */ /* End of group PosMask_peripherals */


#ifdef __cplusplus
}
#endif

#endif /* RE01_1500KB_H */


/** @} */ /* End of group RE01_1500KB */

/** @} */ /* End of group Renesas Electronics Corporation */
