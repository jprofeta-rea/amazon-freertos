/*
 * This software is supplied by Renesas Electronics Corporation and is only intended for 
 * use with Renesas products. No other uses are authorized. This software is owned by 
 * Renesas Electronics Corporation and is protected under all applicable laws, including 
 * copyright laws. 
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING 
 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. 
 * ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM EXTENT PERMITTED NOT 
 * PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED 
 * COMPANIES SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL 
 * DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE 
 * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 
 * 
 * Renesas reserves the right, without notice, to make changes to this software and to 
 * discontinue the availability of this software. By using this software, you agree to 
 * the additional terms and conditions found by accessing the following link: 
 * http://www.renesas.com/disclaimer 
 * 
 *
 * @file     RE01_256KB.h
 * @brief    CMSIS HeaderFile
 * @version  1.00.01
 * @date     29. May 2020
 * @note     Generated by SVDConv V3.3.35 on Friday, 29.05.2020 13:22:17
 *           from File 'RE01_256KB.svd',
 *           last modified on Friday, 29.05.2020 02:27:56
 */



/** @addtogroup Renesas Electronics Corporation
  * @{
  */


/** @addtogroup RE01_256KB
  * @{
  */


#ifndef RE01_256KB_H
#define RE01_256KB_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup Configuration_of_CMSIS
  * @{
  */



/* =========================================================================================================================== */
/* ================                                Interrupt Number Definition                                ================ */
/* =========================================================================================================================== */

typedef enum {
/* =======================================  ARM Cortex-M0+ Specific Interrupt Numbers  ======================================= */
  Reset_IRQn                = -15,              /*!< -15  Reset Vector, invoked on Power up and warm reset                     */
  NonMaskableInt_IRQn       = -14,              /*!< -14  Non maskable Interrupt, cannot be stopped or preempted               */
  HardFault_IRQn            = -13,              /*!< -13  Hard Fault, all classes of Fault                                     */
  SVCall_IRQn               =  -5,              /*!< -5 System Service Call via SVC instruction                                */
  PendSV_IRQn               =  -2,              /*!< -2 Pendable request for system service                                    */
  SysTick_IRQn              =  -1,              /*!< -1 System Tick Timer                                                      */
/* =========================================  RE01_256KB Specific Interrupt Numbers  ========================================= */
  IEL0_IRQn                 =   0,              /*!< 0  ICU Interrupt 0                                                        */
  IEL1_IRQn                 =   1,              /*!< 1  ICU Interrupt 1                                                        */
  IEL2_IRQn                 =   2,              /*!< 2  ICU Interrupt 2                                                        */
  IEL3_IRQn                 =   3,              /*!< 3  ICU Interrupt 3                                                        */
  IEL4_IRQn                 =   4,              /*!< 4  ICU Interrupt 4                                                        */
  IEL5_IRQn                 =   5,              /*!< 5  ICU Interrupt 5                                                        */
  IEL6_IRQn                 =   6,              /*!< 6  ICU Interrupt 6                                                        */
  IEL7_IRQn                 =   7,              /*!< 7  ICU Interrupt 7                                                        */
  IEL8_IRQn                 =   8,              /*!< 8  ICU Interrupt 8                                                        */
  IEL9_IRQn                 =   9,              /*!< 9  ICU Interrupt 9                                                        */
  IEL10_IRQn                =  10,              /*!< 10 ICU Interrupt 10                                                       */
  IEL11_IRQn                =  11,              /*!< 11 ICU Interrupt 11                                                       */
  IEL12_IRQn                =  12,              /*!< 12 ICU Interrupt 12                                                       */
  IEL13_IRQn                =  13,              /*!< 13 ICU Interrupt 13                                                       */
  IEL14_IRQn                =  14,              /*!< 14 ICU Interrupt 14                                                       */
  IEL15_IRQn                =  15,              /*!< 15 ICU Interrupt 15                                                       */
  IEL16_IRQn                =  16,              /*!< 16 ICU Interrupt 16                                                       */
  IEL17_IRQn                =  17,              /*!< 17 ICU Interrupt 17                                                       */
  IEL18_IRQn                =  18,              /*!< 18 ICU Interrupt 18                                                       */
  IEL19_IRQn                =  19,              /*!< 19 ICU Interrupt 19                                                       */
  IEL20_IRQn                =  20,              /*!< 20 ICU Interrupt 20                                                       */
  IEL21_IRQn                =  21,              /*!< 21 ICU Interrupt 21                                                       */
  IEL22_IRQn                =  22,              /*!< 22 ICU Interrupt 22                                                       */
  IEL23_IRQn                =  23,              /*!< 23 ICU Interrupt 23                                                       */
  IEL24_IRQn                =  24,              /*!< 24 ICU Interrupt 24                                                       */
  IEL25_IRQn                =  25,              /*!< 25 ICU Interrupt 25                                                       */
  IEL26_IRQn                =  26,              /*!< 26 ICU Interrupt 26                                                       */
  IEL27_IRQn                =  27,              /*!< 27 ICU Interrupt 27                                                       */
  IEL28_IRQn                =  28,              /*!< 28 ICU Interrupt 28                                                       */
  IEL29_IRQn                =  29,              /*!< 29 ICU Interrupt 29                                                       */
  IEL30_IRQn                =  30,              /*!< 30 ICU Interrupt 30                                                       */
  IEL31_IRQn                =  31               /*!< 31 ICU Interrupt 31                                                       */
} IRQn_Type;



/* =========================================================================================================================== */
/* ================                           Processor and Core Peripheral Section                           ================ */
/* =========================================================================================================================== */

/* ==========================  Configuration of the ARM Cortex-M0+ Processor and Core Peripherals  =========================== */
#define __CM0PLUS_REV                 0x0001U   /*!< CM0PLUS Core Revision                                                     */
#define __NVIC_PRIO_BITS               2        /*!< Number of Bits used for Priority Levels                                   */
#define __Vendor_SysTickConfig         0        /*!< Set to 1 if different SysTick Config is used                              */
#define __VTOR_PRESENT                 1        /*!< Set to 1 if CPU supports Vector Table Offset Register                     */
#define __MPU_PRESENT                  1        /*!< MPU present                                                               */
#define __FPU_PRESENT                  0        /*!< FPU present                                                               */


/** @} */ /* End of group Configuration_of_CMSIS */

#include "core_cm0plus.h"                       /*!< ARM Cortex-M0+ processor and core peripherals                             */
#include "system_RE01_256KB.h"                  /*!< RE01_256KB System                                                         */

#ifndef __IM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __IM   __I
#endif
#ifndef __OM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __OM   __O
#endif
#ifndef __IOM                                   /*!< Fallback for older CMSIS versions                                         */
  #define __IOM  __IO
#endif


/* ========================================  Start of section using anonymous unions  ======================================== */
#if defined (__CC_ARM)
  #pragma push
  #pragma anon_unions
#elif defined (__ICCARM__)
  #pragma language=extended
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wc11-extensions"
  #pragma clang diagnostic ignored "-Wreserved-id-macro"
  #pragma clang diagnostic ignored "-Wgnu-anonymous-struct"
  #pragma clang diagnostic ignored "-Wnested-anon-types"
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning 586
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#else
  #warning Not supported compiler type
#endif


/* =========================================================================================================================== */
/* ================                            Device Specific Peripheral Section                             ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                           RMPU                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Renesas Memory Protection Unit (RMPU)
  */

typedef struct {                                /*!< (@ 0x40000000) RMPU Structure                                             */
  
  union {
    __IOM uint16_t MMPUCTLA;                    /*!< (@ 0x00000000) Bus Master MPU Control Register                            */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Master Group Enable                                                */
      __IOM uint16_t OAD        : 1;            /*!< [1..1] Operation After Detection                                          */
            uint16_t            : 6;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } MMPUCTLA_b;
  } ;
  __IM  uint16_t  RESERVED;
  __IM  uint32_t  RESERVED1[63];
  __IM  uint16_t  RESERVED2;
  
  union {
    __IOM uint16_t MMPUPTA;                     /*!< (@ 0x00000102) Group A Protection of Register                             */
    
    struct {
      __IOM uint16_t PROTECT    : 1;            /*!< [0..0] Protection of Register                                             */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } MMPUPTA_b;
  } ;
  __IM  uint32_t  RESERVED3[63];
  
  union {
    __IOM uint16_t MMPUACA0;                    /*!< (@ 0x00000200) Group A Region 0 access control register                   */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Region Enable                                                      */
      __IOM uint16_t RP         : 1;            /*!< [1..1] Read Protection                                                    */
      __IOM uint16_t WP         : 1;            /*!< [2..2] Write Protection                                                   */
            uint16_t            : 13;
    } MMPUACA0_b;
  } ;
  __IM  uint16_t  RESERVED4;
  
  union {
    __IOM uint32_t MMPUSA0;                     /*!< (@ 0x00000204) Group A Region 0 Start Address Register                    */
    
    struct {
      __IOM uint32_t MMPUSA     : 32;           /*!< [31..0] Region Start Address                                              */
    } MMPUSA0_b;
  } ;
  
  union {
    __IOM uint32_t MMPUEA0;                     /*!< (@ 0x00000208) Group A Region 0 End Address Register                      */
    
    struct {
      __IOM uint32_t MMPUEA     : 32;           /*!< [31..0] Region End Address                                                */
    } MMPUEA0_b;
  } ;
  __IM  uint32_t  RESERVED5;
  
  union {
    __IOM uint16_t MMPUACA1;                    /*!< (@ 0x00000210) Group A Region 1 access control register                   */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Region Enable                                                      */
      __IOM uint16_t RP         : 1;            /*!< [1..1] Read Protection                                                    */
      __IOM uint16_t WP         : 1;            /*!< [2..2] Write Protection                                                   */
            uint16_t            : 13;
    } MMPUACA1_b;
  } ;
  __IM  uint16_t  RESERVED6;
  
  union {
    __IOM uint32_t MMPUSA1;                     /*!< (@ 0x00000214) Group A Region 1 Start Address Register                    */
    
    struct {
      __IOM uint32_t MMPUSA     : 32;           /*!< [31..0] Region Start Address                                              */
    } MMPUSA1_b;
  } ;
  
  union {
    __IOM uint32_t MMPUEA1;                     /*!< (@ 0x00000218) Group A Region 1 End Address Register                      */
    
    struct {
      __IOM uint32_t MMPUEA     : 32;           /*!< [31..0] Region End Address                                                */
    } MMPUEA1_b;
  } ;
  __IM  uint32_t  RESERVED7;
  
  union {
    __IOM uint16_t MMPUACA2;                    /*!< (@ 0x00000220) Group A Region 2 access control register                   */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Region Enable                                                      */
      __IOM uint16_t RP         : 1;            /*!< [1..1] Read Protection                                                    */
      __IOM uint16_t WP         : 1;            /*!< [2..2] Write Protection                                                   */
            uint16_t            : 13;
    } MMPUACA2_b;
  } ;
  __IM  uint16_t  RESERVED8;
  
  union {
    __IOM uint32_t MMPUSA2;                     /*!< (@ 0x00000224) Group A Region 2 Start Address Register                    */
    
    struct {
      __IOM uint32_t MMPUSA     : 32;           /*!< [31..0] Region Start Address                                              */
    } MMPUSA2_b;
  } ;
  
  union {
    __IOM uint32_t MMPUEA2;                     /*!< (@ 0x00000228) Group A Region 2 End Address Register                      */
    
    struct {
      __IOM uint32_t MMPUEA     : 32;           /*!< [31..0] Region End Address                                                */
    } MMPUEA2_b;
  } ;
  __IM  uint32_t  RESERVED9;
  
  union {
    __IOM uint16_t MMPUACA3;                    /*!< (@ 0x00000230) Group A Region 3 access control register                   */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Region Enable                                                      */
      __IOM uint16_t RP         : 1;            /*!< [1..1] Read Protection                                                    */
      __IOM uint16_t WP         : 1;            /*!< [2..2] Write Protection                                                   */
            uint16_t            : 13;
    } MMPUACA3_b;
  } ;
  __IM  uint16_t  RESERVED10;
  
  union {
    __IOM uint32_t MMPUSA3;                     /*!< (@ 0x00000234) Group A Region 3 Start Address Register                    */
    
    struct {
      __IOM uint32_t MMPUSA     : 32;           /*!< [31..0] Region Start Address                                              */
    } MMPUSA3_b;
  } ;
  
  union {
    __IOM uint32_t MMPUEA3;                     /*!< (@ 0x00000238) Group A Region 3 End Address Register                      */
    
    struct {
      __IOM uint32_t MMPUEA     : 32;           /*!< [31..0] Region End Address                                                */
    } MMPUEA3_b;
  } ;
  __IM  uint32_t  RESERVED11[625];
  
  union {
    __IOM uint16_t SMPUCTL;                     /*!< (@ 0x00000C00) Slave MPU Control Register                                 */
    
    struct {
      __IOM uint16_t OAD        : 1;            /*!< [0..0] Operation After Detection                                          */
      __IOM uint16_t PROTECT    : 1;            /*!< [1..1] Protection of Register                                             */
            uint16_t            : 6;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } SMPUCTL_b;
  } ;
  __IM  uint16_t  RESERVED12;
  __IM  uint32_t  RESERVED13[3];
  
  union {
    __IOM uint16_t SMPUMBIU;                    /*!< (@ 0x00000C10) Access Control Register for Memory Bus 1                   */
    
    struct {
            uint16_t            : 2;
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master MPU Group A Read Protection                                 */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master MPU Group A Write Protection                                */
            uint16_t            : 12;
    } SMPUMBIU_b;
  } ;
  __IM  uint16_t  RESERVED14;
  
  union {
    __IOM uint16_t SMPUFBIU;                    /*!< (@ 0x00000C14) Access Control Register for Internal Peripheral
                                                                    Bus 9                                                      */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read Protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write Protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master MPU Group A Read Protection                                 */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master MPU Group A Write Protection                                */
            uint16_t            : 12;
    } SMPUFBIU_b;
  } ;
  __IM  uint16_t  RESERVED15;
  
  union {
    __IOM uint16_t SMPUSRAM0;                   /*!< (@ 0x00000C18) Access Control Register for Memory Bus 2                   */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read Protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write Protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master MPU Group A Read Protection                                 */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master MPU Group A Write Protection                                */
            uint16_t            : 12;
    } SMPUSRAM0_b;
  } ;
  __IM  uint16_t  RESERVED16;
  
  union {
    __IOM uint16_t SMPUSRAM1;                   /*!< (@ 0x00000C1C) Access Control Register for Memory Bus 3                   */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read Protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write Protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master MPU Group A Read Protection                                 */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master MPU Group A Write Protection                                */
            uint16_t            : 12;
    } SMPUSRAM1_b;
  } ;
  __IM  uint16_t  RESERVED17;
  
  union {
    __IOM uint16_t SMPUP0BIU;                   /*!< (@ 0x00000C20) Access Control Register for Internal Peripheral
                                                                    Bus 1                                                      */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read Protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write Protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master MPU Group A Read Protection                                 */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master MPU Group A Write Protection                                */
            uint16_t            : 12;
    } SMPUP0BIU_b;
  } ;
  __IM  uint16_t  RESERVED18;
  
  union {
    __IOM uint16_t SMPUP2BIU;                   /*!< (@ 0x00000C24) Access Control Register for Internal Peripheral
                                                                    Bus 3 to 5                                                 */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read Protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write Protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master MPU Group A Read Protection                                 */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master MPU Group A Write Protection                                */
            uint16_t            : 12;
    } SMPUP2BIU_b;
  } ;
  __IM  uint16_t  RESERVED19;
  __IM  uint32_t  RESERVED20[3];
  
  union {
    __IOM uint16_t SMPUEXBIU2;                  /*!< (@ 0x00000C34) Access Control Register for QSPI Area                      */
    
    struct {
      __IOM uint16_t RPCPU      : 1;            /*!< [0..0] CPU Read Protection                                                */
      __IOM uint16_t WPCPU      : 1;            /*!< [1..1] CPU Write Protection                                               */
      __IOM uint16_t RPGRPA     : 1;            /*!< [2..2] Master MPU Group A Read Protection                                 */
      __IOM uint16_t WPGRPA     : 1;            /*!< [3..3] Master MPU Group A Write Protection                                */
            uint16_t            : 12;
    } SMPUEXBIU2_b;
  } ;
  __IM  uint16_t  RESERVED21;
  __IM  uint32_t  RESERVED22[50];
  
  union {
    __IOM uint16_t MSPMPUOAD;                   /*!< (@ 0x00000D00) Stack Pointer Monitor Operation After Detection
                                                                    Register                                                   */
    
    struct {
      __IOM uint16_t OAD        : 1;            /*!< [0..0] Operation after Detection                                          */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } MSPMPUOAD_b;
  } ;
  __IM  uint16_t  RESERVED23;
  
  union {
    __IOM uint16_t MSPMPUCTL;                   /*!< (@ 0x00000D04) Stack Pointer Monitor Access Control Register              */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Stack Pointer Monitor Enable                                       */
            uint16_t            : 7;
      __IOM uint16_t ERROR      : 1;            /*!< [8..8] Stack Pointer Monitor Error Flag                                   */
            uint16_t            : 7;
    } MSPMPUCTL_b;
  } ;
  
  union {
    __IOM uint16_t MSPMPUPT;                    /*!< (@ 0x00000D06) Stack Pointer Monitor Protection Register                  */
    
    struct {
      __IOM uint16_t PROTECT    : 1;            /*!< [0..0] Protection of Register                                             */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } MSPMPUPT_b;
  } ;
  
  union {
    __IOM uint32_t MSPMPUSA;                    /*!< (@ 0x00000D08) Main Stack Pointer (MSP) Monitor Start Address
                                                                    Register                                                   */
    
    struct {
      __IOM uint32_t MSPMPUSA   : 32;           /*!< [31..0] Region Start Address                                              */
    } MSPMPUSA_b;
  } ;
  
  union {
    __IOM uint32_t MSPMPUEA;                    /*!< (@ 0x00000D0C) Main Stack Pointer (MSP) Monitor End Address
                                                                    Register                                                   */
    
    struct {
      __IOM uint32_t MSPMPUEA   : 32;           /*!< [31..0] Region End Address                                                */
    } MSPMPUEA_b;
  } ;
  
  union {
    __IOM uint16_t PSPMPUOAD;                   /*!< (@ 0x00000D10) Stack Pointer Monitor Operation After Detection
                                                                    Register                                                   */
    
    struct {
      __IOM uint16_t OAD        : 1;            /*!< [0..0] Operation after Detection                                          */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } PSPMPUOAD_b;
  } ;
  __IM  uint16_t  RESERVED24;
  
  union {
    __IOM uint16_t PSPMPUCTL;                   /*!< (@ 0x00000D14) Stack Pointer Monitor Access Control Register              */
    
    struct {
      __IOM uint16_t ENABLE     : 1;            /*!< [0..0] Stack Pointer Monitor Enable                                       */
            uint16_t            : 7;
      __IOM uint16_t ERROR      : 1;            /*!< [8..8] Stack Pointer Monitor Error Flag                                   */
            uint16_t            : 7;
    } PSPMPUCTL_b;
  } ;
  
  union {
    __IOM uint16_t PSPMPUPT;                    /*!< (@ 0x00000D16) Stack Pointer Monitor Protection Register                  */
    
    struct {
      __IOM uint16_t PROTECT    : 1;            /*!< [0..0] Protection of Register                                             */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } PSPMPUPT_b;
  } ;
  
  union {
    __IOM uint32_t PSPMPUSA;                    /*!< (@ 0x00000D18) Process Stack Pointer (PSP) Monitor Start Address
                                                                    Register                                                   */
    
    struct {
      __IOM uint32_t PSPMPUSA   : 32;           /*!< [31..0] Region Start Address                                              */
    } PSPMPUSA_b;
  } ;
  
  union {
    __IOM uint32_t PSPMPUEA;                    /*!< (@ 0x00000D1C) Process Stack Pointer (PSP) Monitor End Address
                                                                    Register                                                   */
    
    struct {
      __IOM uint32_t PSPMPUEA   : 32;           /*!< [31..0] Region End Address                                                */
    } PSPMPUEA_b;
  } ;
} RMPU_Type;                                    /*!< Size = 3360 (0xd20)                                                       */



/* =========================================================================================================================== */
/* ================                                            MMF                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Memory Mirror Function (MMF)
  */

typedef struct {                                /*!< (@ 0x40001000) MMF Structure                                              */
  
  union {
    __IOM uint32_t MMSFR;                       /*!< (@ 0x00000000) MemMirror Special Function Register                        */
    
    struct {
            uint32_t            : 7;
      __IOM uint32_t MEMMIRADDR : 16;           /*!< [22..7] Memory Mirror Address                                             */
            uint32_t            : 1;
      __OM  uint32_t KEY        : 8;            /*!< [31..24] MMSFR Key Code                                                   */
    } MMSFR_b;
  } ;
  
  union {
    __IOM uint32_t MMEN;                        /*!< (@ 0x00000004) MemMirror Enable Register                                  */
    
    struct {
      __IOM uint32_t EN         : 1;            /*!< [0..0] Memory Mirror Function Enable                                      */
            uint32_t            : 23;
      __OM  uint32_t KEY        : 8;            /*!< [31..24] MMEN Key Code                                                    */
    } MMEN_b;
  } ;
} MMF_Type;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                            BUS                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief BUS Control (BUS)
  */

typedef struct {                                /*!< (@ 0x40003000) BUS Structure                                              */
  __IM  uint32_t  RESERVED[1026];
  
  union {
    __IOM uint16_t BUSMCNTSYS;                  /*!< (@ 0x00001008) Bus Master Control Register SYS                            */
    
    struct {
            uint16_t            : 15;
      __IOM uint16_t IERES      : 1;            /*!< [15..15] Ignore Error Responses                                           */
    } BUSMCNTSYS_b;
  } ;
  __IM  uint16_t  RESERVED1;
  
  union {
    __IOM uint16_t BUSMCNTDMA;                  /*!< (@ 0x0000100C) Bus Master Control Register DMA                            */
    
    struct {
            uint16_t            : 15;
      __IOM uint16_t IERES      : 1;            /*!< [15..15] Ignore Error Responses                                           */
    } BUSMCNTDMA_b;
  } ;
  __IM  uint16_t  RESERVED2;
  __IM  uint32_t  RESERVED3[516];
  
  union {
    __IM  uint32_t BUS3ERRADD;                  /*!< (@ 0x00001820) Bus Error Address Register 3                               */
    
    struct {
      __IM  uint32_t BERAD      : 32;           /*!< [31..0] Bus Error Address                                                 */
    } BUS3ERRADD_b;
  } ;
  
  union {
    __IM  uint8_t BUS3ERRSTAT;                  /*!< (@ 0x00001824) BUS Error Status Register 3                                */
    
    struct {
      __IM  uint8_t ACCSTAT     : 1;            /*!< [0..0] Error Access Status                                                */
            uint8_t             : 6;
      __IM  uint8_t ERRSTAT     : 1;            /*!< [7..7] Bus Error Status                                                   */
    } BUS3ERRSTAT_b;
  } ;
  __IM  uint8_t   RESERVED4;
  __IM  uint16_t  RESERVED5;
  __IM  uint32_t  RESERVED6[2];
  
  union {
    __IM  uint32_t BUS4ERRADD;                  /*!< (@ 0x00001830) Bus Error Address Register 4                               */
    
    struct {
      __IM  uint32_t BERAD      : 32;           /*!< [31..0] Bus Error Address                                                 */
    } BUS4ERRADD_b;
  } ;
  
  union {
    __IM  uint8_t BUS4ERRSTAT;                  /*!< (@ 0x00001834) BUS Error Status Register 4                                */
    
    struct {
      __IM  uint8_t ACCSTAT     : 1;            /*!< [0..0] Error Access Status                                                */
            uint8_t             : 6;
      __IM  uint8_t ERRSTAT     : 1;            /*!< [7..7] Bus Error Status                                                   */
    } BUS4ERRSTAT_b;
  } ;
  __IM  uint8_t   RESERVED7;
  __IM  uint16_t  RESERVED8;
} BUS_Type;                                     /*!< Size = 6200 (0x1838)                                                      */



/* =========================================================================================================================== */
/* ================                                           DMAC0                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Direct memory access controller 0 (DMAC0)
  */

typedef struct {                                /*!< (@ 0x40005000) DMAC0 Structure                                            */
  __IOM uint32_t  DMSAR;                        /*!< (@ 0x00000000) DMA Source Address Register                                */
  __IOM uint32_t  DMDAR;                        /*!< (@ 0x00000004) DMA Destination Address Register                           */
  
  union {
    __IOM uint32_t DMCRA;                       /*!< (@ 0x00000008) DMA Transfer Count Register                                */
    
    struct {
      __IOM uint32_t DMCRAL     : 16;           /*!< [15..0] Lower bits of transfer count                                      */
      __IOM uint32_t DMCRAH     : 10;           /*!< [25..16] Upper bits of transfer count                                     */
            uint32_t            : 6;
    } DMCRA_b;
  } ;
  __IOM uint16_t  DMCRB;                        /*!< (@ 0x0000000C) DMA Block Transfer Count Register                          */
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint16_t DMTMD;                       /*!< (@ 0x00000010) DMA Transfer Mode Register                                 */
    
    struct {
      __IOM uint16_t DCTG       : 2;            /*!< [1..0] Transfer Request Source Select                                     */
            uint16_t            : 6;
      __IOM uint16_t SZ         : 2;            /*!< [9..8] Transfer Data Size Select                                          */
            uint16_t            : 2;
      __IOM uint16_t DTS        : 2;            /*!< [13..12] Repeat Area Select                                               */
      __IOM uint16_t MD         : 2;            /*!< [15..14] Transfer Mode Select                                             */
    } DMTMD_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t DMINT;                        /*!< (@ 0x00000013) DMA Interrupt Setting Register                             */
    
    struct {
      __IOM uint8_t DARIE       : 1;            /*!< [0..0] Destination Address Extended Repeat Area Overflow Interrupt
                                                     Enable                                                                    */
      __IOM uint8_t SARIE       : 1;            /*!< [1..1] Source Address Extended Repeat Area Overflow Interrupt
                                                     Enable                                                                    */
      __IOM uint8_t RPTIE       : 1;            /*!< [2..2] Repeat Size End Interrupt Enable                                   */
      __IOM uint8_t ESIE        : 1;            /*!< [3..3] Transfer Escape End Interrupt Enable                               */
      __IOM uint8_t DTIE        : 1;            /*!< [4..4] Transfer End Interrupt Enable                                      */
            uint8_t             : 3;
    } DMINT_b;
  } ;
  
  union {
    __IOM uint16_t DMAMD;                       /*!< (@ 0x00000014) DMA Address Mode Register                                  */
    
    struct {
      __IOM uint16_t DARA       : 5;            /*!< [4..0] Destination Address Extended Repeat Area                           */
            uint16_t            : 1;
      __IOM uint16_t DM         : 2;            /*!< [7..6] Destination Address Update Mode                                    */
      __IOM uint16_t SARA       : 5;            /*!< [12..8] Source Address Extended Repeat Area                               */
            uint16_t            : 1;
      __IOM uint16_t SM         : 2;            /*!< [15..14] Source Address Update Mode                                       */
    } DMAMD_b;
  } ;
  __IM  uint16_t  RESERVED2;
  __IOM uint32_t  DMOFR;                        /*!< (@ 0x00000018) DMA Offset Register                                        */
  
  union {
    __IOM uint8_t DMCNT;                        /*!< (@ 0x0000001C) DMA Transfer Enable Register                               */
    
    struct {
      __IOM uint8_t DTE         : 1;            /*!< [0..0] DMA Transfer Enable                                                */
            uint8_t             : 7;
    } DMCNT_b;
  } ;
  
  union {
    __IOM uint8_t DMREQ;                        /*!< (@ 0x0000001D) DMA Software Start Register                                */
    
    struct {
      __IOM uint8_t SWREQ       : 1;            /*!< [0..0] DMA Software Start                                                 */
            uint8_t             : 3;
      __IOM uint8_t CLRS        : 1;            /*!< [4..4] DMA Software Start Bit Auto Clear Select                           */
            uint8_t             : 3;
    } DMREQ_b;
  } ;
  
  union {
    __IOM uint8_t DMSTS;                        /*!< (@ 0x0000001E) DMA Status Register                                        */
    
    struct {
      __IOM uint8_t ESIF        : 1;            /*!< [0..0] Transfer Escape End Interrupt Flag                                 */
            uint8_t             : 3;
      __IOM uint8_t DTIF        : 1;            /*!< [4..4] Transfer End Interrupt Flag                                        */
            uint8_t             : 2;
      __IM  uint8_t ACT         : 1;            /*!< [7..7] DMAC Active Flag                                                   */
    } DMSTS_b;
  } ;
  __IM  uint8_t   RESERVED3;
} DMAC0_Type;                                   /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                            DMA                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief DMAC Module Activation (DMA)
  */

typedef struct {                                /*!< (@ 0x40005200) DMA Structure                                              */
  
  union {
    __IOM uint8_t DMAST;                        /*!< (@ 0x00000000) DMA Module Activation Register                             */
    
    struct {
      __IOM uint8_t DMST        : 1;            /*!< [0..0] DMAC Operation Enable                                              */
            uint8_t             : 7;
    } DMAST_b;
  } ;
} DMA_Type;                                     /*!< Size = 1 (0x1)                                                            */



/* =========================================================================================================================== */
/* ================                                            DTC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Data Transfer Controller (DTC)
  */

typedef struct {                                /*!< (@ 0x40005400) DTC Structure                                              */
  
  union {
    __IOM uint8_t DTCCR;                        /*!< (@ 0x00000000) DTC Control Register                                       */
    
    struct {
            uint8_t             : 4;
      __IOM uint8_t RRS         : 1;            /*!< [4..4] DTC Transfer Information Read Skip Enable                          */
            uint8_t             : 3;
    } DTCCR_b;
  } ;
  __IM  uint8_t   RESERVED;
  __IM  uint16_t  RESERVED1;
  __IOM uint32_t  DTCVBR;                       /*!< (@ 0x00000004) DTC Vector Base Register                                   */
  __IM  uint32_t  RESERVED2;
  
  union {
    __IOM uint8_t DTCST;                        /*!< (@ 0x0000000C) DTC Module Start Register                                  */
    
    struct {
      __IOM uint8_t DTCST       : 1;            /*!< [0..0] DTC Module Start                                                   */
            uint8_t             : 7;
    } DTCST_b;
  } ;
  __IM  uint8_t   RESERVED3;
  
  union {
    __IM  uint16_t DTCSTS;                      /*!< (@ 0x0000000E) DTC Status Register                                        */
    
    struct {
      __IM  uint16_t VECN       : 8;            /*!< [7..0] DTC-Activating Vector Number Monitoring                            */
            uint16_t            : 7;
      __IM  uint16_t ACT        : 1;            /*!< [15..15] DTC Active Flag                                                  */
    } DTCSTS_b;
  } ;
} DTC_Type;                                     /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                            ICU                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Interrupt Controller (ICU)
  */

typedef struct {                                /*!< (@ 0x40006000) ICU Structure                                              */
  
  union {
    __IOM uint8_t IRQCR0;                       /*!< (@ 0x00000000) IRQ Control Register                                       */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQi Detection Sense Select                                        */
            uint8_t             : 6;
    } IRQCR0_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR1;                       /*!< (@ 0x00000001) IRQ Control Register                                       */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQi Detection Sense Select                                        */
            uint8_t             : 6;
    } IRQCR1_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR2;                       /*!< (@ 0x00000002) IRQ Control Register                                       */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQi Detection Sense Select                                        */
            uint8_t             : 6;
    } IRQCR2_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR3;                       /*!< (@ 0x00000003) IRQ Control Register                                       */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQi Detection Sense Select                                        */
            uint8_t             : 6;
    } IRQCR3_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR4;                       /*!< (@ 0x00000004) IRQ Control Register                                       */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQi Detection Sense Select                                        */
            uint8_t             : 6;
    } IRQCR4_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR5;                       /*!< (@ 0x00000005) IRQ Control Register                                       */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQi Detection Sense Select                                        */
            uint8_t             : 6;
    } IRQCR5_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR6;                       /*!< (@ 0x00000006) IRQ Control Register                                       */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQi Detection Sense Select                                        */
            uint8_t             : 6;
    } IRQCR6_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR7;                       /*!< (@ 0x00000007) IRQ Control Register                                       */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQi Detection Sense Select                                        */
            uint8_t             : 6;
    } IRQCR7_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR8;                       /*!< (@ 0x00000008) IRQ Control Register                                       */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQi Detection Sense Select                                        */
            uint8_t             : 6;
    } IRQCR8_b;
  } ;
  
  union {
    __IOM uint8_t IRQCR9;                       /*!< (@ 0x00000009) IRQ Control Register                                       */
    
    struct {
      __IOM uint8_t IRQMD       : 2;            /*!< [1..0] IRQi Detection Sense Select                                        */
            uint8_t             : 6;
    } IRQCR9_b;
  } ;
  __IM  uint16_t  RESERVED;
  __IM  uint32_t  RESERVED1[61];
  
  union {
    __IOM uint8_t NMICR;                        /*!< (@ 0x00000100) NMI Pin Interrupt Control Register                         */
    
    struct {
      __IOM uint8_t NMIMD       : 1;            /*!< [0..0] NMI Detection Set                                                  */
            uint8_t             : 7;
    } NMICR_b;
  } ;
  __IM  uint8_t   RESERVED2;
  __IM  uint16_t  RESERVED3;
  __IM  uint32_t  RESERVED4[7];
  
  union {
    __IOM uint16_t NMIER;                       /*!< (@ 0x00000120) Non-Maskable Interrupt Enable Register                     */
    
    struct {
      __IOM uint16_t IWDTEN     : 1;            /*!< [0..0] IWDT Underflow/Refresh Error Interrupt Enable                      */
      __IOM uint16_t WDTEN      : 1;            /*!< [1..1] WDT Underflow/Refresh Error Interrupt Enable                       */
      __IOM uint16_t LVD1EN     : 1;            /*!< [2..2] Voltage monitor 1 Interrupt Enable                                 */
      __IOM uint16_t LVDBATEN   : 1;            /*!< [3..3] Voltage monitor BAT Interrupt Enable                               */
            uint16_t            : 2;
      __IOM uint16_t OSTEN      : 1;            /*!< [6..6] Oscillation Stop Detection Interrupt Enable                        */
      __IOM uint16_t NMIEN      : 1;            /*!< [7..7] NMI Pin Interrupt Enable                                           */
            uint16_t            : 2;
      __IOM uint16_t BUSSEN     : 1;            /*!< [10..10] MPU Bus Slave Error Interrupt Enable                             */
      __IOM uint16_t BUSMEN     : 1;            /*!< [11..11] MPU Bus Master Error Interrupt Enable                            */
      __IOM uint16_t SPEEN      : 1;            /*!< [12..12] CPU Stack Pointer Monitor Interrupt Enable                       */
            uint16_t            : 3;
    } NMIER_b;
  } ;
  __IM  uint16_t  RESERVED5;
  __IM  uint32_t  RESERVED6[3];
  
  union {
    __IOM uint16_t NMICLR;                      /*!< (@ 0x00000130) Non-Maskable Interrupt Status Clear Register               */
    
    struct {
      __IOM uint16_t IWDTCLR    : 1;            /*!< [0..0] IWDT Clear                                                         */
      __IOM uint16_t WDTCLR     : 1;            /*!< [1..1] WDT Clear                                                          */
      __IOM uint16_t LVD1CLR    : 1;            /*!< [2..2] LVD1 Clear                                                         */
      __IOM uint16_t LVDBATCLR  : 1;            /*!< [3..3] LVDBAT Clear                                                       */
            uint16_t            : 2;
      __IOM uint16_t OSTCLR     : 1;            /*!< [6..6] OST Clear                                                          */
      __IOM uint16_t NMICLR     : 1;            /*!< [7..7] NMI Clear                                                          */
            uint16_t            : 2;
      __IOM uint16_t BUSSCLR    : 1;            /*!< [10..10] Bus Slave Error Clear                                            */
      __IOM uint16_t BUSMCLR    : 1;            /*!< [11..11] Bus Master Error Clear                                           */
      __IOM uint16_t SPECLR     : 1;            /*!< [12..12] CPU Stack Pointer Monitor Interrupt Clear                        */
            uint16_t            : 3;
    } NMICLR_b;
  } ;
  __IM  uint16_t  RESERVED7;
  __IM  uint32_t  RESERVED8[3];
  
  union {
    __IM  uint16_t NMISR;                       /*!< (@ 0x00000140) Non-Maskable Interrupt Status Register                     */
    
    struct {
      __IM  uint16_t IWDTST     : 1;            /*!< [0..0] IWDT Underflow/Refresh Error Status Flag                           */
      __IM  uint16_t WDTST      : 1;            /*!< [1..1] WDT Underflow/Refresh Error Status Flag                            */
      __IM  uint16_t LVD1ST     : 1;            /*!< [2..2] Voltage Monitor 1 Interrupt Status Flag                            */
      __IM  uint16_t LVDBATST   : 1;            /*!< [3..3] Voltage Monitor BAT Interrupt Status Flag                          */
            uint16_t            : 2;
      __IM  uint16_t OSTST      : 1;            /*!< [6..6] Oscillation Stop Detection Interrupt Status Flag                   */
      __IM  uint16_t NMIST      : 1;            /*!< [7..7] NMI Status Flag                                                    */
            uint16_t            : 2;
      __IM  uint16_t BUSSST     : 1;            /*!< [10..10] MPU Bus Slave Error Interrupt Status Flag                        */
      __IM  uint16_t BUSMST     : 1;            /*!< [11..11] MPU Bus Master Error Interrupt Status Flag                       */
      __IM  uint16_t SPEST      : 1;            /*!< [12..12] CPU Stack Pointer Monitor Interrupt Status Flag                  */
            uint16_t            : 3;
    } NMISR_b;
  } ;
  __IM  uint16_t  RESERVED9;
  __IM  uint32_t  RESERVED10[23];
  
  union {
    __IOM uint32_t WUPEN;                       /*!< (@ 0x000001A0) Wake Up Interrupt Enable Register                          */
    
    struct {
      __IOM uint32_t IRQWUPEN0  : 1;            /*!< [0..0] PORT_IRQ0 Interrupt Software Standby Returns Enable                */
      __IOM uint32_t IRQWUPEN1  : 1;            /*!< [1..1] PORT_IRQ1 Interrupt Software Standby Returns Enable                */
      __IOM uint32_t IRQWUPEN2  : 1;            /*!< [2..2] PORT_IRQ2 Interrupt Software Standby Returns Enable                */
      __IOM uint32_t IRQWUPEN3  : 1;            /*!< [3..3] PORT_IRQ3 Interrupt Software Standby Returns Enable                */
      __IOM uint32_t IRQWUPEN4  : 1;            /*!< [4..4] PORT_IRQ4 Interrupt Software Standby Returns Enable                */
      __IOM uint32_t IRQWUPEN5  : 1;            /*!< [5..5] PORT_IRQ5 Interrupt Software Standby Returns Enable                */
      __IOM uint32_t IRQWUPEN6  : 1;            /*!< [6..6] PORT_IRQ6 Interrupt Software Standby Returns Enable                */
      __IOM uint32_t IRQWUPEN7  : 1;            /*!< [7..7] PORT_IRQ7 Interrupt Software Standby Returns Enable                */
      __IOM uint32_t IRQWUPEN8  : 1;            /*!< [8..8] PORT_IRQ8 Interrupt Software Standby Returns Enable                */
      __IOM uint32_t IRQWUPEN9  : 1;            /*!< [9..9] PORT_IRQ9 Interrupt Software Standby Returns Enable                */
            uint32_t            : 6;
      __IOM uint32_t IWDTWUPEN  : 1;            /*!< [16..16] IWDT_NMIUNDF Interrupt Software Standby Returns Enable           */
      __IOM uint32_t KEYWUPEN   : 1;            /*!< [17..17] KEY_INTKR Interrupt Software Standby Returns Enable              */
      __IOM uint32_t LVD1WUPEN  : 1;            /*!< [18..18] LVD_LVD1 Interrupt Software Standby Returns Enable               */
      __IOM uint32_t LVDBATWUPEN : 1;           /*!< [19..19] LVD_LVDBAT Interrupt Software Standby Returns Enable             */
            uint32_t            : 2;
      __IOM uint32_t SOLDHWUPEN : 1;            /*!< [22..22] SOL_DH Interrupt Software Standby Returns Enable                 */
      __IOM uint32_t AGTW0CAWUPEN : 1;          /*!< [23..23] AGTW0_AGTCMAI Interrupt Software Standby Returns Enable          */
      __IOM uint32_t RTCALMWUPEN : 1;           /*!< [24..24] RTC_ALM Interrupt Software Standby Returns Enable                */
      __IOM uint32_t RTCPRDWUPEN : 1;           /*!< [25..25] RTC_PRD Interrupt Software Standby Returns Enable                */
      __IOM uint32_t CCCPRDWUPEN : 1;           /*!< [26..26] CCC_PRD Interrupt Software Standby Returns Enable                */
      __IOM uint32_t AGTW1CAWUPEN : 1;          /*!< [27..27] AGTW1_AGTCMAI Interrupt Software Standby Returns Enable          */
      __IOM uint32_t AGT1UDWUPEN : 1;           /*!< [28..28] AGT1_AGTI Interrupt Software Standby Returns Enable              */
      __IOM uint32_t AGT1CAWUPEN : 1;           /*!< [29..29] AGT1_AGTCMAI Interrupt Software Standby Returns Enable           */
      __IOM uint32_t AGT0CAWUPEN : 1;           /*!< [30..30] AGT0_AGTCMAI Interrupt Software Standby Returns Enable           */
      __IOM uint32_t SOLDLWUPEN : 1;            /*!< [31..31] SOL_DL Interrupt Software Standby Returns Enable                 */
    } WUPEN_b;
  } ;
  __IM  uint32_t  RESERVED11[23];
  __IOM uint16_t  SELSR0;                       /*!< (@ 0x00000200) SYS Event Link Setting Register                            */
  __IM  uint16_t  RESERVED12;
  __IM  uint32_t  RESERVED13[31];
  
  union {
    __IOM uint32_t DELSR0;                      /*!< (@ 0x00000280) DMAC Event Link Setting Register 0                         */
    
    struct {
      __IOM uint32_t DELS       : 8;            /*!< [7..0] DMAC Event Link Select                                             */
            uint32_t            : 8;
      __IOM uint32_t IR         : 1;            /*!< [16..16] DMAC Activation Request Status flag                              */
            uint32_t            : 15;
    } DELSR0_b;
  } ;
  
  union {
    __IOM uint32_t DELSR1;                      /*!< (@ 0x00000284) DMAC Event Link Setting Register 1                         */
    
    struct {
      __IOM uint32_t DELS       : 8;            /*!< [7..0] DMAC Event Link Select                                             */
            uint32_t            : 8;
      __IOM uint32_t IR         : 1;            /*!< [16..16] DMAC Activation Request Status flag                              */
            uint32_t            : 15;
    } DELSR1_b;
  } ;
  
  union {
    __IOM uint32_t DELSR2;                      /*!< (@ 0x00000288) DMAC Event Link Setting Register 2                         */
    
    struct {
      __IOM uint32_t DELS       : 8;            /*!< [7..0] DMAC Event Link Select                                             */
            uint32_t            : 8;
      __IOM uint32_t IR         : 1;            /*!< [16..16] DMAC Activation Request Status flag                              */
            uint32_t            : 15;
    } DELSR2_b;
  } ;
  
  union {
    __IOM uint32_t DELSR3;                      /*!< (@ 0x0000028C) DMAC Event Link Setting Register 3                         */
    
    struct {
      __IOM uint32_t DELS       : 8;            /*!< [7..0] DMAC Event Link Select                                             */
            uint32_t            : 8;
      __IOM uint32_t IR         : 1;            /*!< [16..16] DMAC Activation Request Status flag                              */
            uint32_t            : 15;
    } DELSR3_b;
  } ;
  __IM  uint32_t  RESERVED14[28];
  
  union {
    __IOM uint32_t IELSR0;                      /*!< (@ 0x00000300) ICU Event Link Setting Register 0                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR0_b;
  } ;
  
  union {
    __IOM uint32_t IELSR1;                      /*!< (@ 0x00000304) ICU Event Link Setting Register 1                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR1_b;
  } ;
  
  union {
    __IOM uint32_t IELSR2;                      /*!< (@ 0x00000308) ICU Event Link Setting Register 2                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR2_b;
  } ;
  
  union {
    __IOM uint32_t IELSR3;                      /*!< (@ 0x0000030C) ICU Event Link Setting Register 3                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR3_b;
  } ;
  
  union {
    __IOM uint32_t IELSR4;                      /*!< (@ 0x00000310) ICU Event Link Setting Register 4                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR4_b;
  } ;
  
  union {
    __IOM uint32_t IELSR5;                      /*!< (@ 0x00000314) ICU Event Link Setting Register 5                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR5_b;
  } ;
  
  union {
    __IOM uint32_t IELSR6;                      /*!< (@ 0x00000318) ICU Event Link Setting Register 6                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR6_b;
  } ;
  
  union {
    __IOM uint32_t IELSR7;                      /*!< (@ 0x0000031C) ICU Event Link Setting Register 7                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR7_b;
  } ;
  
  union {
    __IOM uint32_t IELSR8;                      /*!< (@ 0x00000320) ICU Event Link Setting Register 8                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR8_b;
  } ;
  
  union {
    __IOM uint32_t IELSR9;                      /*!< (@ 0x00000324) ICU Event Link Setting Register 9                          */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR9_b;
  } ;
  
  union {
    __IOM uint32_t IELSR10;                     /*!< (@ 0x00000328) ICU Event Link Setting Register 10                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR10_b;
  } ;
  
  union {
    __IOM uint32_t IELSR11;                     /*!< (@ 0x0000032C) ICU Event Link Setting Register 11                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR11_b;
  } ;
  
  union {
    __IOM uint32_t IELSR12;                     /*!< (@ 0x00000330) ICU Event Link Setting Register 12                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR12_b;
  } ;
  
  union {
    __IOM uint32_t IELSR13;                     /*!< (@ 0x00000334) ICU Event Link Setting Register 13                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR13_b;
  } ;
  
  union {
    __IOM uint32_t IELSR14;                     /*!< (@ 0x00000338) ICU Event Link Setting Register 14                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR14_b;
  } ;
  
  union {
    __IOM uint32_t IELSR15;                     /*!< (@ 0x0000033C) ICU Event Link Setting Register 15                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR15_b;
  } ;
  
  union {
    __IOM uint32_t IELSR16;                     /*!< (@ 0x00000340) ICU Event Link Setting Register 16                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR16_b;
  } ;
  
  union {
    __IOM uint32_t IELSR17;                     /*!< (@ 0x00000344) ICU Event Link Setting Register 17                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR17_b;
  } ;
  
  union {
    __IOM uint32_t IELSR18;                     /*!< (@ 0x00000348) ICU Event Link Setting Register 18                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR18_b;
  } ;
  
  union {
    __IOM uint32_t IELSR19;                     /*!< (@ 0x0000034C) ICU Event Link Setting Register 19                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR19_b;
  } ;
  
  union {
    __IOM uint32_t IELSR20;                     /*!< (@ 0x00000350) ICU Event Link Setting Register 20                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR20_b;
  } ;
  
  union {
    __IOM uint32_t IELSR21;                     /*!< (@ 0x00000354) ICU Event Link Setting Register 21                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR21_b;
  } ;
  
  union {
    __IOM uint32_t IELSR22;                     /*!< (@ 0x00000358) ICU Event Link Setting Register 22                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR22_b;
  } ;
  
  union {
    __IOM uint32_t IELSR23;                     /*!< (@ 0x0000035C) ICU Event Link Setting Register 23                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR23_b;
  } ;
  
  union {
    __IOM uint32_t IELSR24;                     /*!< (@ 0x00000360) ICU Event Link Setting Register 24                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR24_b;
  } ;
  
  union {
    __IOM uint32_t IELSR25;                     /*!< (@ 0x00000364) ICU Event Link Setting Register 25                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR25_b;
  } ;
  
  union {
    __IOM uint32_t IELSR26;                     /*!< (@ 0x00000368) ICU Event Link Setting Register 26                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR26_b;
  } ;
  
  union {
    __IOM uint32_t IELSR27;                     /*!< (@ 0x0000036C) ICU Event Link Setting Register 27                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR27_b;
  } ;
  
  union {
    __IOM uint32_t IELSR28;                     /*!< (@ 0x00000370) ICU Event Link Setting Register 28                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR28_b;
  } ;
  
  union {
    __IOM uint32_t IELSR29;                     /*!< (@ 0x00000374) ICU Event Link Setting Register 29                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR29_b;
  } ;
  
  union {
    __IOM uint32_t IELSR30;                     /*!< (@ 0x00000378) ICU Event Link Setting Register 30                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR30_b;
  } ;
  
  union {
    __IOM uint32_t IELSR31;                     /*!< (@ 0x0000037C) ICU Event Link Setting Register 31                         */
    
    struct {
      __IOM uint32_t IELS       : 5;            /*!< [4..0] ICU Event Link Select                                              */
            uint32_t            : 11;
      __IOM uint32_t IR         : 1;            /*!< [16..16] Interrupt Status Flag                                            */
            uint32_t            : 7;
      __IOM uint32_t DTCE       : 1;            /*!< [24..24] DTC Activation Enable                                            */
            uint32_t            : 7;
    } IELSR31_b;
  } ;
} ICU_Type;                                     /*!< Size = 896 (0x380)                                                        */



/* =========================================================================================================================== */
/* ================                                            DBG                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Debug Function (DBG)
  */

typedef struct {                                /*!< (@ 0x4001B000) DBG Structure                                              */
  
  union {
    __IM  uint32_t DBGSTR;                      /*!< (@ 0x00000000) Debug Status Register                                      */
    
    struct {
            uint32_t            : 28;
      __IM  uint32_t CDBGPWRUPREQ : 1;          /*!< [28..28] Debug power-up request                                           */
      __IM  uint32_t CDBGPWRUPACK : 1;          /*!< [29..29] Debug power-up acknowledge                                       */
            uint32_t            : 2;
    } DBGSTR_b;
  } ;
  __IM  uint32_t  RESERVED[3];
  
  union {
    __IOM uint32_t DBGSTOPCR;                   /*!< (@ 0x00000010) Debug Stop Control Register                                */
    
    struct {
      __IOM uint32_t DBGSTOP_IWDT : 1;          /*!< [0..0] Mask bit for IWDT reset/interrupt                                  */
      __IOM uint32_t DBGSTOP_WDT : 1;           /*!< [1..1] Mask bit for WDT reset/interrupt                                   */
            uint32_t            : 14;
      __IOM uint32_t DBGSTOP_LVD0 : 1;          /*!< [16..16] Mask bit for LVD0 reset                                          */
      __IOM uint32_t DBGSTOP_LVD1 : 1;          /*!< [17..17] Mask bit for LVD1 reset/interrupt                                */
      __IOM uint32_t DBGSTOP_LVDBAT : 1;        /*!< [18..18] Mask bit for LVDBAT reset/interrupt                              */
            uint32_t            : 13;
    } DBGSTOPCR_b;
  } ;
} DBG_Type;                                     /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                           SYSF                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief System /Flash Control (SYSF)
  */

typedef struct {                                /*!< (@ 0x4001C000) SYSF Structure                                             */
  __IM  uint8_t   RESERVED[284];
  
  union {
    __IOM uint8_t FLWT;                         /*!< (@ 0x0000011C) Flash Wait Cycle Register                                  */
    
    struct {
      __IOM uint8_t FLWT        : 3;            /*!< [2..0] Flash Wait Cycle                                                   */
            uint8_t             : 5;
    } FLWT_b;
  } ;
} SYSF_Type;                                    /*!< Size = 285 (0x11d)                                                        */



/* =========================================================================================================================== */
/* ================                                           SYSC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief System Control (SYSC)
  */

typedef struct {                                /*!< (@ 0x4001E000) SYSC Structure                                             */
  __IM  uint32_t  RESERVED[3];
  
  union {
    __IOM uint16_t SBYCR;                       /*!< (@ 0x0000000C) Standby Control Register                                   */
    
    struct {
            uint16_t            : 15;
      __IOM uint16_t SSBY       : 1;            /*!< [15..15] Software Standby Mode Select                                     */
    } SBYCR_b;
  } ;
  
  union {
    __IOM uint8_t RAMSDCR;                      /*!< (@ 0x0000000E) RAM Cutoff Control Register                                */
    
    struct {
      __IOM uint8_t RAMSD0      : 1;            /*!< [0..0] SRAM Cutoff in Software Standby Mode                               */
      __IOM uint8_t RAMSD1      : 1;            /*!< [1..1] SRAM Cutoff in Software Standby Mode                               */
      __IOM uint8_t RAMSD2      : 1;            /*!< [2..2] SRAM Cutoff in Software Standby Mode                               */
      __IOM uint8_t RAMSD3      : 1;            /*!< [3..3] SRAM Cutoff in Software Standby Mode                               */
            uint8_t             : 4;
    } RAMSDCR_b;
  } ;
  __IM  uint8_t   RESERVED1;
  __IM  uint32_t  RESERVED2[3];
  
  union {
    __IOM uint32_t MSTPCRA;                     /*!< (@ 0x0000001C) Module Stop Control Register A                             */
    
    struct {
            uint32_t            : 22;
      __IOM uint32_t MSTPA22    : 1;            /*!< [22..22] DMAC and DTC Module Stop                                         */
            uint32_t            : 9;
    } MSTPCRA_b;
  } ;
  
  union {
    __IOM uint32_t SCKDIVCR;                    /*!< (@ 0x00000020) System Clock Division Control Register                     */
    
    struct {
            uint32_t            : 8;
      __IOM uint32_t PCKB       : 3;            /*!< [10..8] Peripheral Module Clock B (PCLKB) Select                          */
            uint32_t            : 13;
      __IOM uint32_t ICK        : 3;            /*!< [26..24] System Clock (ICLK) Select/Peripheral Module Clock
                                                     (PCLKA) Select                                                            */
            uint32_t            : 5;
    } SCKDIVCR_b;
  } ;
  __IM  uint16_t  RESERVED3;
  
  union {
    __IOM uint8_t SCKSCR;                       /*!< (@ 0x00000026) System Clock Source Control Register                       */
    
    struct {
      __IOM uint8_t CKSEL       : 3;            /*!< [2..0] Clock Source Select                                                */
            uint8_t             : 5;
    } SCKSCR_b;
  } ;
  __IM  uint8_t   RESERVED4;
  __IM  uint32_t  RESERVED5[2];
  __IM  uint16_t  RESERVED6;
  
  union {
    __IOM uint8_t MOSCCR;                       /*!< (@ 0x00000032) Main Clock Oscillator Control Register                     */
    
    struct {
      __IOM uint8_t MOSTP       : 1;            /*!< [0..0] Main Clock Oscillator Stop                                         */
            uint8_t             : 7;
    } MOSCCR_b;
  } ;
  __IM  uint8_t   RESERVED7;
  __IM  uint16_t  RESERVED8;
  
  union {
    __IOM uint8_t HOCOCR;                       /*!< (@ 0x00000036) High-Speed On-Chip Oscillator Control Register             */
    
    struct {
      __IOM uint8_t HCSTP       : 1;            /*!< [0..0] HOCO Stop                                                          */
            uint8_t             : 7;
    } HOCOCR_b;
  } ;
  
  union {
    __IOM uint8_t HOCOMCR;                      /*!< (@ 0x00000037) High-Speed On-Chip Oscillator Mode Control Register        */
    
    struct {
      __IOM uint8_t HCFRQ       : 2;            /*!< [1..0] HOCO Oscillation Frequency Setting                                 */
            uint8_t             : 6;
    } HOCOMCR_b;
  } ;
  
  union {
    __IOM uint8_t MOCOCR;                       /*!< (@ 0x00000038) Middle-Speed On-Chip Oscillator Control Register           */
    
    struct {
      __IOM uint8_t MCSTP       : 1;            /*!< [0..0] MOCO Stop                                                          */
            uint8_t             : 7;
    } MOCOCR_b;
  } ;
  
  union {
    __IOM uint8_t FLLCR1;                       /*!< (@ 0x00000039) FLL Control Register1                                      */
    
    struct {
      __IOM uint8_t FLLEN       : 1;            /*!< [0..0] FLL Enable                                                         */
            uint8_t             : 7;
    } FLLCR1_b;
  } ;
  __IM  uint16_t  RESERVED9;
  
  union {
    __IM  uint8_t OSCSF;                        /*!< (@ 0x0000003C) Oscillation Stabilization Flag Register                    */
    
    struct {
      __IM  uint8_t HOCOSF      : 1;            /*!< [0..0] HOCO Clock Oscillation Stabilization Flag                          */
            uint8_t             : 2;
      __IM  uint8_t MOSCSF      : 1;            /*!< [3..3] Main Clock Oscillation Stabilization Flag                          */
            uint8_t             : 4;
    } OSCSF_b;
  } ;
  
  union {
    __IOM uint8_t CKO32CR;                      /*!< (@ 0x0000003D) Clock Output 32-kHz Control Register                       */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t CKO32EN     : 1;            /*!< [7..7] Clock Output 32-kHz Enable                                         */
    } CKO32CR_b;
  } ;
  
  union {
    __IOM uint8_t CKOCR;                        /*!< (@ 0x0000003E) Clock Out Control Register                                 */
    
    struct {
      __IOM uint8_t CKOSEL      : 3;            /*!< [2..0] Clock Out Source Select                                            */
            uint8_t             : 1;
      __IOM uint8_t CKODIV      : 3;            /*!< [6..4] Clock Output Frequency Division Ratio                              */
      __IOM uint8_t CKOEN       : 1;            /*!< [7..7] Clock Out Enable                                                   */
    } CKOCR_b;
  } ;
  __IM  uint8_t   RESERVED10;
  
  union {
    __IOM uint8_t OSTDCR;                       /*!< (@ 0x00000040) Oscillation Stop Detection Control Register                */
    
    struct {
      __IOM uint8_t OSTDIE      : 1;            /*!< [0..0] Oscillation Stop Detection Interrupt Enable                        */
            uint8_t             : 3;
      __IOM uint8_t OSTDDIVSEL  : 1;            /*!< [4..4] Oscillation Stop Detection Main Clock Frequency Select             */
            uint8_t             : 2;
      __IOM uint8_t OSTDE       : 1;            /*!< [7..7] Oscillation Stop Detection Function Enable                         */
    } OSTDCR_b;
  } ;
  
  union {
    __IOM uint8_t OSTDSR;                       /*!< (@ 0x00000041) Oscillation Stop Detection Status Register                 */
    
    struct {
      __IOM uint8_t OSTDF       : 1;            /*!< [0..0] Oscillation Stop Detection Flag                                    */
            uint8_t             : 7;
    } OSTDSR_b;
  } ;
  __IM  uint16_t  RESERVED11;
  __IM  uint32_t  RESERVED12[19];
  __IM  uint16_t  RESERVED13;
  
  union {
    __IOM uint8_t SNZCR;                        /*!< (@ 0x00000092) Snooze Control Register                                    */
    
    struct {
      __IOM uint8_t RXDREQEN    : 1;            /*!< [0..0] RXD0 Snooze Request Enable                                         */
      __IOM uint8_t SNZDTCEN    : 1;            /*!< [1..1] DTC Enable in Snooze mode                                          */
            uint8_t             : 5;
      __IOM uint8_t SNZE        : 1;            /*!< [7..7] Snooze mode Enable                                                 */
    } SNZCR_b;
  } ;
  __IM  uint8_t   RESERVED14;
  
  union {
    __IOM uint8_t SNZEDCR0;                     /*!< (@ 0x00000094) Snooze End Control Register 0                              */
    
    struct {
      __IOM uint8_t AGTUNFED    : 1;            /*!< [0..0] AGT1 Underflow Snooze End Enable                                   */
      __IOM uint8_t DTCZRED     : 1;            /*!< [1..1] Last DTC Transmission Completion Snooze End Enable                 */
      __IOM uint8_t DTCNZRED    : 1;            /*!< [2..2] Not Last DTC Transmission Completion Snooze End Enable             */
      __IOM uint8_t AD0MATED    : 1;            /*!< [3..3] AD Compare Match Snooze End Enable                                 */
      __IOM uint8_t AD0UMTED    : 1;            /*!< [4..4] AD Compare Mismatch Snooze End Enable                              */
            uint8_t             : 2;
      __IOM uint8_t SCI0UMTED   : 1;            /*!< [7..7] SCI0 Address Mismatch Snooze End Enable                            */
    } SNZEDCR0_b;
  } ;
  __IM  uint8_t   RESERVED15;
  __IM  uint16_t  RESERVED16;
  
  union {
    __IOM uint32_t SNZREQCR0;                   /*!< (@ 0x00000098) Snooze Request Control Register 0                          */
    
    struct {
      __IOM uint32_t SNZREQEN0  : 1;            /*!< [0..0] Enable IRQ0 pin snooze request                                     */
      __IOM uint32_t SNZREQEN1  : 1;            /*!< [1..1] Enable IRQ1 pin snooze request                                     */
      __IOM uint32_t SNZREQEN2  : 1;            /*!< [2..2] Enable IRQ2 pin snooze request                                     */
      __IOM uint32_t SNZREQEN3  : 1;            /*!< [3..3] Enable IRQ3 pin snooze request                                     */
      __IOM uint32_t SNZREQEN4  : 1;            /*!< [4..4] Enable IRQ4 pin snooze request                                     */
      __IOM uint32_t SNZREQEN5  : 1;            /*!< [5..5] Enable IRQ5 pin snooze request                                     */
      __IOM uint32_t SNZREQEN6  : 1;            /*!< [6..6] Enable IRQ6 pin snooze request                                     */
      __IOM uint32_t SNZREQEN7  : 1;            /*!< [7..7] Enable IRQ7 pin snooze request                                     */
            uint32_t            : 9;
      __IOM uint32_t SNZREQEN17 : 1;            /*!< [17..17] Enable KINT snooze request                                       */
            uint32_t            : 5;
      __IOM uint32_t SNZREQEN23 : 1;            /*!< [23..23] AGTW0 compare match A snooze request                             */
      __IOM uint32_t SNZREQEN24 : 1;            /*!< [24..24] Enable RTC alarm snooze request                                  */
      __IOM uint32_t SNZREQEN25 : 1;            /*!< [25..25] Enable RTC period snooze request                                 */
            uint32_t            : 2;
      __IOM uint32_t SNZREQEN28 : 1;            /*!< [28..28] Enable AGT1 underflow snooze request                             */
      __IOM uint32_t SNZREQEN29 : 1;            /*!< [29..29] Enable AGT1 compare match A snooze request                       */
      __IOM uint32_t SNZREQEN30 : 1;            /*!< [30..30] Enable AGT0 compare match A snooze request                       */
            uint32_t            : 1;
    } SNZREQCR0_b;
  } ;
  __IM  uint32_t  RESERVED17;
  
  union {
    __IOM uint8_t OPCCR;                        /*!< (@ 0x000000A0) Operating Power Control Register                           */
    
    struct {
      __IOM uint8_t OPCM        : 2;            /*!< [1..0] Operating power control mode selection                             */
            uint8_t             : 2;
      __IM  uint8_t OPCMTSF     : 1;            /*!< [4..4] Operating power control mode (High-Speed / Low-Speed
                                                     mode) transition state flag                                               */
            uint8_t             : 3;
    } OPCCR_b;
  } ;
  __IM  uint8_t   RESERVED18;
  
  union {
    __IOM uint8_t MOSCWTCR;                     /*!< (@ 0x000000A2) Main Clock Oscillator Wait Control Register                */
    
    struct {
      __IOM uint8_t MSTS        : 4;            /*!< [3..0] Main Clock Oscillator Wait Time Setting                            */
            uint8_t             : 4;
    } MOSCWTCR_b;
  } ;
  __IM  uint8_t   RESERVED19;
  __IM  uint32_t  RESERVED20[7];
  
  union {
    __IOM uint16_t RSTSR1;                      /*!< (@ 0x000000C0) Reset Status Register 1                                    */
    
    struct {
      __IOM uint16_t IWDTRF     : 1;            /*!< [0..0] Independent Watchdog Timer Reset Detect Flag                       */
      __IOM uint16_t WDTRF      : 1;            /*!< [1..1] Watchdog Timer Reset Detect Flag                                   */
      __IOM uint16_t SWRF       : 1;            /*!< [2..2] Software Reset Detect Flag                                         */
            uint16_t            : 7;
      __IOM uint16_t BUSSRF     : 1;            /*!< [10..10] Bus Slave MPU Error Reset Detect Flag                            */
      __IOM uint16_t BUSMRF     : 1;            /*!< [11..11] Bus Master MPU Error Reset Detect Flag                           */
      __IOM uint16_t SPERF      : 1;            /*!< [12..12] CPU Stack Pointer Error Reset Detect Flag                        */
            uint16_t            : 3;
    } RSTSR1_b;
  } ;
  __IM  uint16_t  RESERVED21;
  __IM  uint32_t  RESERVED22[7];
  
  union {
    __IOM uint8_t LVD1CR1;                      /*!< (@ 0x000000E0) Voltage Monitor 1 Circuit Control Register                 */
    
    struct {
      __IOM uint8_t IDTSEL      : 2;            /*!< [1..0] Voltage Monitor 1 Interrupt Generation Condition Select            */
      __IOM uint8_t IRQSEL      : 1;            /*!< [2..2] Voltage Monitor 1 Interrupt Type Select                            */
            uint8_t             : 5;
    } LVD1CR1_b;
  } ;
  
  union {
    __IOM uint8_t LVD1SR;                       /*!< (@ 0x000000E1) Voltage Monitor 1 Circuit Status Register                  */
    
    struct {
      __IOM uint8_t DET         : 1;            /*!< [0..0] Voltage Monitor 1 Voltage Variation Detection Flag                 */
      __IM  uint8_t MON         : 1;            /*!< [1..1] Voltage Monitor 1 Signal Monitor Flag                              */
            uint8_t             : 6;
    } LVD1SR_b;
  } ;
  
  union {
    __IOM uint8_t LVDBATCR1;                    /*!< (@ 0x000000E2) Voltage Monitor BAT Circuit Control Register
                                                                    1                                                          */
    
    struct {
      __IOM uint8_t IDTSEL      : 2;            /*!< [1..0] Voltage Monitor BAT Interrupt Generation Condition Select          */
      __IOM uint8_t IRQSEL      : 1;            /*!< [2..2] Voltage Monitor BAT Interrupt Type Select                          */
            uint8_t             : 5;
    } LVDBATCR1_b;
  } ;
  
  union {
    __IOM uint8_t LVDBATSR;                     /*!< (@ 0x000000E3) Voltage Monitor BAT Circuit Status Register                */
    
    struct {
      __IOM uint8_t DET         : 1;            /*!< [0..0] Voltage Monitor BAT Voltage Variation Detection Flag               */
      __IM  uint8_t MON         : 1;            /*!< [1..1] Voltage Monitor BAT Signal Monitor Flag                            */
            uint8_t             : 6;
    } LVDBATSR_b;
  } ;
  __IM  uint32_t  RESERVED23[23];
  
  union {
    __IOM uint8_t FSTPCR;                       /*!< (@ 0x00000140) Function Stop Control Register                             */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t DBGSTP      : 1;            /*!< [7..7] Debug function stop                                                */
    } FSTPCR_b;
  } ;
  __IM  uint8_t   RESERVED24;
  __IM  uint16_t  RESERVED25;
  __IM  uint32_t  RESERVED26[174];
  __IM  uint16_t  RESERVED27;
  
  union {
    __IOM uint16_t PRCR;                        /*!< (@ 0x000003FE) Protect Register                                           */
    
    struct {
      __IOM uint16_t PRC0       : 1;            /*!< [0..0] Enable writing to the registers related to the clock
                                                     generation circuit                                                        */
      __IOM uint16_t PRC1       : 1;            /*!< [1..1] Enable writing to the registers related to the functions
                                                     for reducing power consumption                                            */
            uint16_t            : 1;
      __IOM uint16_t PRC3       : 1;            /*!< [3..3] Enable writing to the registers related to the LVD                 */
      __IOM uint16_t PRC4       : 1;            /*!< [4..4] PRC4                                                               */
            uint16_t            : 3;
      __OM  uint16_t PRKEY      : 8;            /*!< [15..8] PRC Key Code                                                      */
    } PRCR_b;
  } ;
  
  union {
    __IOM uint8_t DPSBYCR;                      /*!< (@ 0x00000400) Deep Software Standby Control Register                     */
    
    struct {
            uint8_t             : 6;
      __IOM uint8_t IOKEEP      : 1;            /*!< [6..6] I/O Port Rentention                                                */
      __IOM uint8_t DPSBY       : 1;            /*!< [7..7] Deep Software Standby Mode Selection                               */
    } DPSBYCR_b;
  } ;
  __IM  uint8_t   RESERVED28;
  
  union {
    __IOM uint8_t DPSIER0;                      /*!< (@ 0x00000402) Deep Software Standby Interrupt Enable Register
                                                                    0                                                          */
    
    struct {
      __IOM uint8_t DIRQ0E      : 1;            /*!< [0..0] IRQ0_DS Pin Enable                                                 */
      __IOM uint8_t DIRQ1E      : 1;            /*!< [1..1] IRQ1_DS Pin Enable                                                 */
      __IOM uint8_t DIRQ2E      : 1;            /*!< [2..2] IRQ2_DS Pin Enable                                                 */
      __IOM uint8_t DIRQ3E      : 1;            /*!< [3..3] IRQ3_DS Pin Enable                                                 */
            uint8_t             : 4;
    } DPSIER0_b;
  } ;
  __IM  uint8_t   RESERVED29;
  
  union {
    __IOM uint8_t DPSIER1;                      /*!< (@ 0x00000404) Deep Software Standby Interrupt Enable Register
                                                                    1                                                          */
    
    struct {
      __IOM uint8_t DLVD1IE     : 1;            /*!< [0..0] LVD1 Interrupt Enable                                              */
      __IOM uint8_t DLVDBATIE   : 1;            /*!< [1..1] LVDBAT Interrupt Enable                                            */
      __IOM uint8_t DRTCIIE     : 1;            /*!< [2..2] RTC Cycle Interrupt Enable                                         */
      __IOM uint8_t DRTCAIE     : 1;            /*!< [3..3] RTC Alarm Interrupt Enable                                         */
      __IOM uint8_t DNMIE       : 1;            /*!< [4..4] NMI Pin Enable                                                     */
      __IOM uint8_t DCCCIE      : 1;            /*!< [5..5] CCC Periodic Interrupt and WUPT Enable                             */
            uint8_t             : 2;
    } DPSIER1_b;
  } ;
  __IM  uint8_t   RESERVED30;
  
  union {
    __IOM uint8_t DPSIFR0;                      /*!< (@ 0x00000406) Deep Software Standby Interrupt Flag Register
                                                                    0                                                          */
    
    struct {
      __IOM uint8_t DIRQ0E      : 1;            /*!< [0..0] IRQ0_DS Pin Deep Software Standby Cancel Flag                      */
      __IOM uint8_t DIRQ1E      : 1;            /*!< [1..1] IRQ1_DS Pin Deep Software Standby Cancel Flag                      */
      __IOM uint8_t DIRQ2E      : 1;            /*!< [2..2] IRQ2_DS Pin Deep Software Standby Cancel Flag                      */
      __IOM uint8_t DIRQ3E      : 1;            /*!< [3..3] IRQ3_DS Pin Deep Software Standby Cancel Flag                      */
            uint8_t             : 4;
    } DPSIFR0_b;
  } ;
  __IM  uint8_t   RESERVED31;
  
  union {
    __IOM uint8_t DPSIFR1;                      /*!< (@ 0x00000408) Deep Software Standby Interrupt Flag Register
                                                                    1                                                          */
    
    struct {
      __IOM uint8_t DLVD1IF     : 1;            /*!< [0..0] LVD1 Deep Software Standby Cancel Flag                             */
      __IOM uint8_t DLVDBATIF   : 1;            /*!< [1..1] LVDBAT Deep Software Standby Cancel Flag                           */
      __IOM uint8_t DRTCIIF     : 1;            /*!< [2..2] RTC Deep Software Standby Cancel Flag                              */
      __IOM uint8_t DRTCAIF     : 1;            /*!< [3..3] RTC Alarm Interrupt Deep Software Standby Cancel Flag              */
      __IOM uint8_t DNMIF       : 1;            /*!< [4..4] NMI Pin Deep Software Standby Cancel Flag                          */
      __IOM uint8_t DCCCIF      : 1;            /*!< [5..5] CCC Periodic Interrupt Deep Software Standby Cancel Flag           */
            uint8_t             : 2;
    } DPSIFR1_b;
  } ;
  __IM  uint8_t   RESERVED32;
  
  union {
    __IOM uint8_t DPSIEGR0;                     /*!< (@ 0x0000040A) Deep Software Standby Interrupt Edge Register
                                                                    0                                                          */
    
    struct {
      __IOM uint8_t DIRQ0EG     : 1;            /*!< [0..0] IRQ0_DS Pin Edge Select                                            */
      __IOM uint8_t DIRQ1EG     : 1;            /*!< [1..1] IRQ1_DS Pin Edge Select                                            */
      __IOM uint8_t DIRQ2EG     : 1;            /*!< [2..2] IRQ2_DS Pin Edge Select                                            */
      __IOM uint8_t DIRQ3EG     : 1;            /*!< [3..3] IRQ3_DS Pin Edge Select                                            */
            uint8_t             : 4;
    } DPSIEGR0_b;
  } ;
  __IM  uint8_t   RESERVED33;
  
  union {
    __IOM uint8_t DPSIEGR1;                     /*!< (@ 0x0000040C) Deep Software Standby Interrupt Edge Register
                                                                    1                                                          */
    
    struct {
      __IOM uint8_t DLVD1EG     : 1;            /*!< [0..0] LVD1 Edge Select                                                   */
      __IOM uint8_t DLVDBATEG   : 1;            /*!< [1..1] LVDBAT Edge Select                                                 */
            uint8_t             : 2;
      __IOM uint8_t DNMIEG      : 1;            /*!< [4..4] NMI Pin Edge Select                                                */
            uint8_t             : 3;
    } DPSIEGR1_b;
  } ;
  __IM  uint8_t   RESERVED34;
  
  union {
    __IOM uint8_t SYOCDCR;                      /*!< (@ 0x0000040E) System Control OCD Control Register                        */
    
    struct {
      __IOM uint8_t DOCDF       : 1;            /*!< [0..0] Deep Software Standby OCD flag                                     */
            uint8_t             : 6;
      __IOM uint8_t DBGEN       : 1;            /*!< [7..7] Debugger Enable bit                                                */
    } SYOCDCR_b;
  } ;
  __IM  uint8_t   RESERVED35;
  
  union {
    __IOM uint8_t RSTSR0;                       /*!< (@ 0x00000410) Reset Status Register 0                                    */
    
    struct {
      __IOM uint8_t PORF        : 1;            /*!< [0..0] Power-On Reset Detect Flag                                         */
      __IOM uint8_t LVD0RF      : 1;            /*!< [1..1] Voltage Monitor 0 Reset Detect Flag                                */
      __IOM uint8_t LVD1RF      : 1;            /*!< [2..2] Voltage Monitor 1 Reset Detect Flag                                */
      __IOM uint8_t LVDBATRF    : 1;            /*!< [3..3] Voltage Monitor BAT Reset Detect Flag                              */
            uint8_t             : 3;
      __IOM uint8_t DPSRSTF     : 1;            /*!< [7..7] Deep Software Standby Reset Flag                                   */
    } RSTSR0_b;
  } ;
  
  union {
    __IOM uint8_t RSTSR2;                       /*!< (@ 0x00000411) Reset Status Register 2                                    */
    
    struct {
      __IOM uint8_t CWSF        : 1;            /*!< [0..0] Cold/Warm Start Determination Flag                                 */
            uint8_t             : 7;
    } RSTSR2_b;
  } ;
  __IM  uint8_t   RESERVED36;
  
  union {
    __IOM uint8_t MOMCR;                        /*!< (@ 0x00000413) Main Clock Oscillator Mode Oscillation Control
                                                                    Register                                                   */
    
    struct {
            uint8_t             : 3;
      __IOM uint8_t MODRV       : 3;            /*!< [5..3] Main Clock Oscillator Drive Capability Switching                   */
      __IOM uint8_t MOSEL       : 1;            /*!< [6..6] Main Clock Oscillator Switching                                    */
      __IOM uint8_t OSCLPEN     : 1;            /*!< [7..7] Main Clock Oscillator Low Consumption Oscillation Function
                                                     Enable                                                                    */
    } MOMCR_b;
  } ;
  __IM  uint16_t  RESERVED37;
  
  union {
    __IOM uint8_t FWEPROR;                      /*!< (@ 0x00000416) Flash Write Erase Protect Register                         */
    
    struct {
      __IOM uint8_t FLWE        : 2;            /*!< [1..0] Flash Write Erase Enable                                           */
            uint8_t             : 6;
    } FWEPROR_b;
  } ;
  
  union {
    __IOM uint8_t LVCMPCR;                      /*!< (@ 0x00000417) Voltage Monitor Circuit Control Register                   */
    
    struct {
            uint8_t             : 5;
      __IOM uint8_t LVD1E       : 1;            /*!< [5..5] Voltage Detection 1 Enable                                         */
      __IOM uint8_t LVDBATE     : 1;            /*!< [6..6] Voltage Detection BAT Enable                                       */
            uint8_t             : 1;
    } LVCMPCR_b;
  } ;
  
  union {
    __IOM uint8_t LVDLVLR;                      /*!< (@ 0x00000418) Voltage Detection Level Select Register                    */
    
    struct {
      __IOM uint8_t LVD1LVL     : 3;            /*!< [2..0] Voltage Detection 1 Level Select                                   */
            uint8_t             : 1;
      __IOM uint8_t LVDBATLVL   : 3;            /*!< [6..4] Voltage Detection BAT Level Select                                 */
            uint8_t             : 1;
    } LVDLVLR_b;
  } ;
  __IM  uint8_t   RESERVED38;
  
  union {
    __IOM uint8_t LVD1CR0;                      /*!< (@ 0x0000041A) Voltage Monitor 1 Circuit Control Register 0               */
    
    struct {
      __IOM uint8_t RIE         : 1;            /*!< [0..0] Voltage Monitor 1 Interrupt/Reset Enable                           */
      __IOM uint8_t DFDIS       : 1;            /*!< [1..1] Voltage monitor 1 Digital Filter Disabled Mode Select              */
      __IOM uint8_t CMPE        : 1;            /*!< [2..2] Voltage Monitor 1 Circuit Comparison Result Output Enable          */
            uint8_t             : 1;
      __IOM uint8_t FSAMP       : 2;            /*!< [5..4] Sampling Clock Select                                              */
      __IOM uint8_t RI          : 1;            /*!< [6..6] Voltage Monitor 1 Circuit Mode Select                              */
      __IOM uint8_t RN          : 1;            /*!< [7..7] Voltage Monitor 1 Reset Negate Select                              */
    } LVD1CR0_b;
  } ;
  
  union {
    __IOM uint8_t LVDBATCR0;                    /*!< (@ 0x0000041B) Voltage Monitor BAT Circuit Control Register
                                                                    0                                                          */
    
    struct {
      __IOM uint8_t RIE         : 1;            /*!< [0..0] Voltage Monitor BAT Interrupt/Reset Enable                         */
      __IOM uint8_t DFDIS       : 1;            /*!< [1..1] Voltage monitor BAT Digital Filter Disabled Mode Select            */
      __IOM uint8_t CMPE        : 1;            /*!< [2..2] Voltage Monitor BAT Circuit Comparison Result Output
                                                     Enable                                                                    */
            uint8_t             : 1;
      __IOM uint8_t FSAMP       : 2;            /*!< [5..4] Sampling Clock Select                                              */
      __IOM uint8_t RI          : 1;            /*!< [6..6] Voltage Monitor BAT Circuit Mode Select                            */
      __IOM uint8_t RN          : 1;            /*!< [7..7] Voltage Monitor BAT Reset Negate Select                            */
    } LVDBATCR0_b;
  } ;
  __IM  uint32_t  RESERVED39;
  
  union {
    __IOM uint8_t PWSTCR;                       /*!< (@ 0x00000420) Power Supply State Control Register                        */
    
    struct {
      __IOM uint8_t PWST        : 3;            /*!< [2..0] Power Supply State Select                                          */
            uint8_t             : 1;
      __IOM uint8_t SSBYPWG     : 1;            /*!< [4..4] Select voltage cut-off area in software standby mode               */
      __IOM uint8_t SSBYVBB     : 1;            /*!< [5..5] Back bias voltage control selection in software standby
                                                     mode                                                                      */
      __IOM uint8_t SSBYACC     : 1;            /*!< [6..6] Fast transition / return select in software standby mode           */
            uint8_t             : 1;
    } PWSTCR_b;
  } ;
  
  union {
    __IM  uint8_t PWSTF;                        /*!< (@ 0x00000421) Power Supply State Flag Register                           */
    
    struct {
      __IM  uint8_t ALLPWONM    : 1;            /*!< [0..0] All Power Supply Mode Flag                                         */
      __IM  uint8_t EXFPWONM    : 1;            /*!< [1..1] Exclude-flash Power Supply mode Flag                               */
      __IM  uint8_t MINPWONM    : 1;            /*!< [2..2] Minimum Power Supply Mode Flag                                     */
      __IM  uint8_t BOOSTM      : 1;            /*!< [3..3] Boost Mode Flag                                                    */
      __IM  uint8_t VBBM        : 1;            /*!< [4..4] Low Leakage Current Mode Flag                                      */
            uint8_t             : 3;
    } PWSTF_b;
  } ;
  __IM  uint16_t  RESERVED40;
  __IM  uint32_t  RESERVED41;
  
  union {
    __IOM uint8_t LDOCR;                        /*!< (@ 0x00000428) Regulator Control Register                                 */
    
    struct {
            uint8_t             : 3;
      __IOM uint8_t LDOCUT      : 1;            /*!< [3..3] Regulator (LDO) stop                                               */
            uint8_t             : 4;
    } LDOCR_b;
  } ;
  __IM  uint8_t   RESERVED42;
  __IM  uint16_t  RESERVED43;
  __IM  uint32_t  RESERVED44[5];
  
  union {
    __IOM uint8_t VOCR;                         /*!< (@ 0x00000440) Power Supply Open Control Register                         */
    
    struct {
      __IOM uint8_t AV0CTL      : 1;            /*!< [0..0] AVCC0 Supply Control                                               */
            uint8_t             : 1;
      __IOM uint8_t IV0CTL      : 1;            /*!< [2..2] IOVCC0 Supply Control                                              */
      __IOM uint8_t IV1CTL      : 1;            /*!< [3..3] IOVCC1 Supply Control                                              */
            uint8_t             : 4;
    } VOCR_b;
  } ;
  __IM  uint8_t   RESERVED45;
  __IM  uint16_t  RESERVED46;
  __IM  uint32_t  RESERVED47[15];
  
  union {
    __IOM uint8_t SOSCCR;                       /*!< (@ 0x00000480) Sub-Clock Oscillator Control Register                      */
    
    struct {
      __IOM uint8_t SOSTP       : 1;            /*!< [0..0] Sub Clock Oscillator Stop                                          */
            uint8_t             : 7;
    } SOSCCR_b;
  } ;
  
  union {
    __IOM uint8_t SOMCR;                        /*!< (@ 0x00000481) Sub-Clock Oscillator Mode Control Register                 */
    
    struct {
      __IOM uint8_t SODRV0      : 1;            /*!< [0..0] Sub-Clock Oscillator Drive Capability Switching                    */
      __IOM uint8_t SODRV       : 1;            /*!< [1..1] Sub-Clock Oscillator Drive Capability Switching                    */
            uint8_t             : 2;
      __IOM uint8_t SONFSTP     : 1;            /*!< [4..4] Sub-Clock Oscillator Noise Filter Disable                          */
            uint8_t             : 3;
    } SOMCR_b;
  } ;
  __IM  uint16_t  RESERVED48;
  __IM  uint32_t  RESERVED49[3];
  
  union {
    __IOM uint8_t LOCOCR;                       /*!< (@ 0x00000490) Low-Speed On-Chip Oscillator Control Register              */
    
    struct {
      __IOM uint8_t LCSTP       : 1;            /*!< [0..0] LOCO Stop                                                          */
            uint8_t             : 7;
    } LOCOCR_b;
  } ;
  __IM  uint8_t   RESERVED50;
  __IM  uint16_t  RESERVED51;
  __IM  uint32_t  RESERVED52[19];
  
  union {
    __IOM uint8_t VBBCR;                        /*!< (@ 0x000004E0) Back Bias Voltage Control Register                         */
    
    struct {
      __IOM uint8_t CLKSEL      : 1;            /*!< [0..0] Back Bias Voltage Control (VBBC) Clock Select                      */
            uint8_t             : 5;
      __IOM uint8_t IVDIS       : 1;            /*!< [6..6] Internal Voltage Discharge                                         */
      __IOM uint8_t VBBEN       : 1;            /*!< [7..7] Back Bias Voltage Control (VBBC) Enable                            */
    } VBBCR_b;
  } ;
  
  union {
    __IM  uint8_t VBBST;                        /*!< (@ 0x000004E1) Back Bias Voltage Status Register                          */
    
    struct {
      __IM  uint8_t VBBSTUP     : 1;            /*!< [0..0] Back Bias Voltage Control (VBBC) Initial Setup Complete
                                                     Flag                                                                      */
            uint8_t             : 7;
    } VBBST_b;
  } ;
  __IM  uint16_t  RESERVED53;
} SYSC_Type;                                    /*!< Size = 1252 (0x4e4)                                                       */



/* =========================================================================================================================== */
/* ================                                            EHC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Energy Harvesting Controller (EHC)
  */

typedef struct {                                /*!< (@ 0x4001E180) EHC Structure                                              */
  
  union {
    __IOM uint16_t EHCCR0;                      /*!< (@ 0x00000000) EHC Control Register 0                                     */
    
    struct {
            uint16_t            : 13;
      __IM  uint16_t CMPOUT     : 1;            /*!< [13..13] Charging Target Monitoring Flag                                  */
      __IM  uint16_t ENOUT      : 1;            /*!< [14..14] Power Generating Element Status Flag                             */
            uint16_t            : 1;
    } EHCCR0_b;
  } ;
  
  union {
    __IOM uint8_t EHCCR1;                       /*!< (@ 0x00000002) EHC Control Register 1                                     */
    
    struct {
      __IOM uint8_t QUICKMODE   : 1;            /*!< [0..0] Steady Operation Setting                                           */
            uint8_t             : 7;
    } EHCCR1_b;
  } ;
  __IM  uint8_t   RESERVED;
  __IM  uint16_t  RESERVED1;
} EHC_Type;                                     /*!< Size = 6 (0x6)                                                            */



/* =========================================================================================================================== */
/* ================                                           PORT0                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Port 0 Control Registers (PORT0)
  */

typedef struct {                                /*!< (@ 0x40040000) PORT0 Structure                                            */
  
  union {
    union {
      __IOM uint32_t PCNTR1;                    /*!< (@ 0x00000000) Port Control Register 1                                    */
      
      struct {
        __IOM uint32_t PDR00    : 1;            /*!< [0..0] Pmn Direction Control                                              */
        __IOM uint32_t PDR01    : 1;            /*!< [1..1] Pmn Direction Control                                              */
        __IOM uint32_t PDR02    : 1;            /*!< [2..2] Pmn Direction Control                                              */
        __IOM uint32_t PDR03    : 1;            /*!< [3..3] Pmn Direction Control                                              */
        __IOM uint32_t PDR04    : 1;            /*!< [4..4] Pmn Direction Control                                              */
        __IOM uint32_t PDR05    : 1;            /*!< [5..5] Pmn Direction Control                                              */
        __IOM uint32_t PDR06    : 1;            /*!< [6..6] Pmn Direction Control                                              */
        __IOM uint32_t PDR07    : 1;            /*!< [7..7] Pmn Direction Control                                              */
        __IOM uint32_t PDR08    : 1;            /*!< [8..8] Pmn Direction Control                                              */
        __IOM uint32_t PDR09    : 1;            /*!< [9..9] Pmn Direction Control                                              */
        __IOM uint32_t PDR10    : 1;            /*!< [10..10] Pmn Direction Control                                            */
        __IOM uint32_t PDR11    : 1;            /*!< [11..11] Pmn Direction Control                                            */
        __IOM uint32_t PDR12    : 1;            /*!< [12..12] Pmn Direction Control                                            */
        __IOM uint32_t PDR13    : 1;            /*!< [13..13] Pmn Direction Control                                            */
        __IOM uint32_t PDR14    : 1;            /*!< [14..14] Pmn Direction Control                                            */
        __IOM uint32_t PDR15    : 1;            /*!< [15..15] Pmn Direction Control                                            */
        __IOM uint32_t PODR00   : 1;            /*!< [16..16] Pmn Output Data Store                                            */
        __IOM uint32_t PODR01   : 1;            /*!< [17..17] Pmn Output Data Store                                            */
        __IOM uint32_t PODR02   : 1;            /*!< [18..18] Pmn Output Data Store                                            */
        __IOM uint32_t PODR03   : 1;            /*!< [19..19] Pmn Output Data Store                                            */
        __IOM uint32_t PODR04   : 1;            /*!< [20..20] Pmn Output Data Store                                            */
        __IOM uint32_t PODR05   : 1;            /*!< [21..21] Pmn Output Data Store                                            */
        __IOM uint32_t PODR06   : 1;            /*!< [22..22] Pmn Output Data Store                                            */
        __IOM uint32_t PODR07   : 1;            /*!< [23..23] Pmn Output Data Store                                            */
        __IOM uint32_t PODR08   : 1;            /*!< [24..24] Pmn Output Data Store                                            */
        __IOM uint32_t PODR09   : 1;            /*!< [25..25] Pmn Output Data Store                                            */
        __IOM uint32_t PODR10   : 1;            /*!< [26..26] Pmn Output Data Store                                            */
        __IOM uint32_t PODR11   : 1;            /*!< [27..27] Pmn Output Data Store                                            */
        __IOM uint32_t PODR12   : 1;            /*!< [28..28] Pmn Output Data Store                                            */
        __IOM uint32_t PODR13   : 1;            /*!< [29..29] Pmn Output Data Store                                            */
        __IOM uint32_t PODR14   : 1;            /*!< [30..30] Pmn Output Data Store                                            */
        __IOM uint32_t PODR15   : 1;            /*!< [31..31] Pmn Output Data Store                                            */
      } PCNTR1_b;
    } ;
    
    struct {
      union {
        __IOM uint16_t PODR;                    /*!< (@ 0x00000000) Port Control Register 1                                    */
        
        struct {
          __IOM uint16_t PODR00 : 1;            /*!< [0..0] Pmn Output Data Store                                              */
          __IOM uint16_t PODR01 : 1;            /*!< [1..1] Pmn Output Data Store                                              */
          __IOM uint16_t PODR02 : 1;            /*!< [2..2] Pmn Output Data Store                                              */
          __IOM uint16_t PODR03 : 1;            /*!< [3..3] Pmn Output Data Store                                              */
          __IOM uint16_t PODR04 : 1;            /*!< [4..4] Pmn Output Data Store                                              */
          __IOM uint16_t PODR05 : 1;            /*!< [5..5] Pmn Output Data Store                                              */
          __IOM uint16_t PODR06 : 1;            /*!< [6..6] Pmn Output Data Store                                              */
          __IOM uint16_t PODR07 : 1;            /*!< [7..7] Pmn Output Data Store                                              */
          __IOM uint16_t PODR08 : 1;            /*!< [8..8] Pmn Output Data Store                                              */
          __IOM uint16_t PODR09 : 1;            /*!< [9..9] Pmn Output Data Store                                              */
          __IOM uint16_t PODR10 : 1;            /*!< [10..10] Pmn Output Data Store                                            */
          __IOM uint16_t PODR11 : 1;            /*!< [11..11] Pmn Output Data Store                                            */
          __IOM uint16_t PODR12 : 1;            /*!< [12..12] Pmn Output Data Store                                            */
          __IOM uint16_t PODR13 : 1;            /*!< [13..13] Pmn Output Data Store                                            */
          __IOM uint16_t PODR14 : 1;            /*!< [14..14] Pmn Output Data Store                                            */
          __IOM uint16_t PODR15 : 1;            /*!< [15..15] Pmn Output Data Store                                            */
        } PODR_b;
      } ;
      
      union {
        __IOM uint16_t PDR;                     /*!< (@ 0x00000002) Port Control Register 1                                    */
        
        struct {
          __IOM uint16_t PDR00  : 1;            /*!< [0..0] Pmn Direction Control                                              */
          __IOM uint16_t PDR01  : 1;            /*!< [1..1] Pmn Direction Control                                              */
          __IOM uint16_t PDR02  : 1;            /*!< [2..2] Pmn Direction Control                                              */
          __IOM uint16_t PDR03  : 1;            /*!< [3..3] Pmn Direction Control                                              */
          __IOM uint16_t PDR04  : 1;            /*!< [4..4] Pmn Direction Control                                              */
          __IOM uint16_t PDR05  : 1;            /*!< [5..5] Pmn Direction Control                                              */
          __IOM uint16_t PDR06  : 1;            /*!< [6..6] Pmn Direction Control                                              */
          __IOM uint16_t PDR07  : 1;            /*!< [7..7] Pmn Direction Control                                              */
          __IOM uint16_t PDR08  : 1;            /*!< [8..8] Pmn Direction Control                                              */
          __IOM uint16_t PDR09  : 1;            /*!< [9..9] Pmn Direction Control                                              */
          __IOM uint16_t PDR10  : 1;            /*!< [10..10] Pmn Direction Control                                            */
          __IOM uint16_t PDR11  : 1;            /*!< [11..11] Pmn Direction Control                                            */
          __IOM uint16_t PDR12  : 1;            /*!< [12..12] Pmn Direction Control                                            */
          __IOM uint16_t PDR13  : 1;            /*!< [13..13] Pmn Direction Control                                            */
          __IOM uint16_t PDR14  : 1;            /*!< [14..14] Pmn Direction Control                                            */
          __IOM uint16_t PDR15  : 1;            /*!< [15..15] Pmn Direction Control                                            */
        } PDR_b;
      } ;
    };
  };
  
  union {
    union {
      __IM  uint32_t PCNTR2;                    /*!< (@ 0x00000004) Port Control Register 2                                    */
      
      struct {
        __IM  uint32_t PIDR00   : 1;            /*!< [0..0] Pmn Input Data                                                     */
        __IM  uint32_t PIDR01   : 1;            /*!< [1..1] Pmn Input Data                                                     */
        __IM  uint32_t PIDR02   : 1;            /*!< [2..2] Pmn Input Data                                                     */
        __IM  uint32_t PIDR03   : 1;            /*!< [3..3] Pmn Input Data                                                     */
        __IM  uint32_t PIDR04   : 1;            /*!< [4..4] Pmn Input Data                                                     */
        __IM  uint32_t PIDR05   : 1;            /*!< [5..5] Pmn Input Data                                                     */
        __IM  uint32_t PIDR06   : 1;            /*!< [6..6] Pmn Input Data                                                     */
        __IM  uint32_t PIDR07   : 1;            /*!< [7..7] Pmn Input Data                                                     */
        __IM  uint32_t PIDR08   : 1;            /*!< [8..8] Pmn Input Data                                                     */
        __IM  uint32_t PIDR09   : 1;            /*!< [9..9] Pmn Input Data                                                     */
        __IM  uint32_t PIDR10   : 1;            /*!< [10..10] Pmn Input Data                                                   */
        __IM  uint32_t PIDR11   : 1;            /*!< [11..11] Pmn Input Data                                                   */
        __IM  uint32_t PIDR12   : 1;            /*!< [12..12] Pmn Input Data                                                   */
        __IM  uint32_t PIDR13   : 1;            /*!< [13..13] Pmn Input Data                                                   */
        __IM  uint32_t PIDR14   : 1;            /*!< [14..14] Pmn Input Data                                                   */
        __IM  uint32_t PIDR15   : 1;            /*!< [15..15] Pmn Input Data                                                   */
              uint32_t          : 16;
      } PCNTR2_b;
    } ;
    
    struct {
      __IM  uint16_t RESERVED;
      
      union {
        __IM  uint16_t PIDR;                    /*!< (@ 0x00000006) Port Control Register 2                                    */
        
        struct {
          __IM  uint16_t PIDR00 : 1;            /*!< [0..0] Pmn Input Data                                                     */
          __IM  uint16_t PIDR01 : 1;            /*!< [1..1] Pmn Input Data                                                     */
          __IM  uint16_t PIDR02 : 1;            /*!< [2..2] Pmn Input Data                                                     */
          __IM  uint16_t PIDR03 : 1;            /*!< [3..3] Pmn Input Data                                                     */
          __IM  uint16_t PIDR04 : 1;            /*!< [4..4] Pmn Input Data                                                     */
          __IM  uint16_t PIDR05 : 1;            /*!< [5..5] Pmn Input Data                                                     */
          __IM  uint16_t PIDR06 : 1;            /*!< [6..6] Pmn Input Data                                                     */
          __IM  uint16_t PIDR07 : 1;            /*!< [7..7] Pmn Input Data                                                     */
          __IM  uint16_t PIDR08 : 1;            /*!< [8..8] Pmn Input Data                                                     */
          __IM  uint16_t PIDR09 : 1;            /*!< [9..9] Pmn Input Data                                                     */
          __IM  uint16_t PIDR10 : 1;            /*!< [10..10] Pmn Input Data                                                   */
          __IM  uint16_t PIDR11 : 1;            /*!< [11..11] Pmn Input Data                                                   */
          __IM  uint16_t PIDR12 : 1;            /*!< [12..12] Pmn Input Data                                                   */
          __IM  uint16_t PIDR13 : 1;            /*!< [13..13] Pmn Input Data                                                   */
          __IM  uint16_t PIDR14 : 1;            /*!< [14..14] Pmn Input Data                                                   */
          __IM  uint16_t PIDR15 : 1;            /*!< [15..15] Pmn Input Data                                                   */
        } PIDR_b;
      } ;
    };
  };
  
  union {
    union {
      __OM  uint32_t PCNTR3;                    /*!< (@ 0x00000008) Port Control Register 3                                    */
      
      struct {
        __OM  uint32_t POSR00   : 1;            /*!< [0..0] Pmn Output High Set                                                */
        __OM  uint32_t POSR01   : 1;            /*!< [1..1] Pmn Output High Set                                                */
        __OM  uint32_t POSR02   : 1;            /*!< [2..2] Pmn Output High Set                                                */
        __OM  uint32_t POSR03   : 1;            /*!< [3..3] Pmn Output High Set                                                */
        __OM  uint32_t POSR04   : 1;            /*!< [4..4] Pmn Output High Set                                                */
        __OM  uint32_t POSR05   : 1;            /*!< [5..5] Pmn Output High Set                                                */
        __OM  uint32_t POSR06   : 1;            /*!< [6..6] Pmn Output High Set                                                */
        __OM  uint32_t POSR07   : 1;            /*!< [7..7] Pmn Output High Set                                                */
        __OM  uint32_t POSR08   : 1;            /*!< [8..8] Pmn Output High Set                                                */
        __OM  uint32_t POSR09   : 1;            /*!< [9..9] Pmn Output High Set                                                */
        __OM  uint32_t POSR10   : 1;            /*!< [10..10] Pmn Output High Set                                              */
        __OM  uint32_t POSR11   : 1;            /*!< [11..11] Pmn Output High Set                                              */
        __OM  uint32_t POSR12   : 1;            /*!< [12..12] Pmn Output High Set                                              */
        __OM  uint32_t POSR13   : 1;            /*!< [13..13] Pmn Output High Set                                              */
        __OM  uint32_t POSR14   : 1;            /*!< [14..14] Pmn Output High Set                                              */
        __OM  uint32_t POSR15   : 1;            /*!< [15..15] Pmn Output High Set                                              */
        __OM  uint32_t PORR00   : 1;            /*!< [16..16] Pmn Output Low Set                                               */
        __OM  uint32_t PORR01   : 1;            /*!< [17..17] Pmn Output Low Set                                               */
        __OM  uint32_t PORR02   : 1;            /*!< [18..18] Pmn Output Low Set                                               */
        __OM  uint32_t PORR03   : 1;            /*!< [19..19] Pmn Output Low Set                                               */
        __OM  uint32_t PORR04   : 1;            /*!< [20..20] Pmn Output Low Set                                               */
        __OM  uint32_t PORR05   : 1;            /*!< [21..21] Pmn Output Low Set                                               */
        __OM  uint32_t PORR06   : 1;            /*!< [22..22] Pmn Output Low Set                                               */
        __OM  uint32_t PORR07   : 1;            /*!< [23..23] Pmn Output Low Set                                               */
        __OM  uint32_t PORR08   : 1;            /*!< [24..24] Pmn Output Low Set                                               */
        __OM  uint32_t PORR09   : 1;            /*!< [25..25] Pmn Output Low Set                                               */
        __OM  uint32_t PORR10   : 1;            /*!< [26..26] Pmn Output Low Set                                               */
        __OM  uint32_t PORR11   : 1;            /*!< [27..27] Pmn Output Low Set                                               */
        __OM  uint32_t PORR12   : 1;            /*!< [28..28] Pmn Output Low Set                                               */
        __OM  uint32_t PORR13   : 1;            /*!< [29..29] Pmn Output Low Set                                               */
        __OM  uint32_t PORR14   : 1;            /*!< [30..30] Pmn Output Low Set                                               */
        __OM  uint32_t PORR15   : 1;            /*!< [31..31] Pmn Output Low Set                                               */
      } PCNTR3_b;
    } ;
    
    struct {
      union {
        __OM  uint16_t PORR;                    /*!< (@ 0x00000008) Port Control Register 3                                    */
        
        struct {
          __OM  uint16_t PORR00 : 1;            /*!< [0..0] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR01 : 1;            /*!< [1..1] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR02 : 1;            /*!< [2..2] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR03 : 1;            /*!< [3..3] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR04 : 1;            /*!< [4..4] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR05 : 1;            /*!< [5..5] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR06 : 1;            /*!< [6..6] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR07 : 1;            /*!< [7..7] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR08 : 1;            /*!< [8..8] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR09 : 1;            /*!< [9..9] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR10 : 1;            /*!< [10..10] Pmn Output Low Set                                               */
          __OM  uint16_t PORR11 : 1;            /*!< [11..11] Pmn Output Low Set                                               */
          __OM  uint16_t PORR12 : 1;            /*!< [12..12] Pmn Output Low Set                                               */
          __OM  uint16_t PORR13 : 1;            /*!< [13..13] Pmn Output Low Set                                               */
          __OM  uint16_t PORR14 : 1;            /*!< [14..14] Pmn Output Low Set                                               */
          __OM  uint16_t PORR15 : 1;            /*!< [15..15] Pmn Output Low Set                                               */
        } PORR_b;
      } ;
      
      union {
        __OM  uint16_t POSR;                    /*!< (@ 0x0000000A) Port Control Register 3                                    */
        
        struct {
          __OM  uint16_t POSR00 : 1;            /*!< [0..0] Pmn Output High Set                                                */
          __OM  uint16_t POSR01 : 1;            /*!< [1..1] Pmn Output High Set                                                */
          __OM  uint16_t POSR02 : 1;            /*!< [2..2] Pmn Output High Set                                                */
          __OM  uint16_t POSR03 : 1;            /*!< [3..3] Pmn Output High Set                                                */
          __OM  uint16_t POSR04 : 1;            /*!< [4..4] Pmn Output High Set                                                */
          __OM  uint16_t POSR05 : 1;            /*!< [5..5] Pmn Output High Set                                                */
          __OM  uint16_t POSR06 : 1;            /*!< [6..6] Pmn Output High Set                                                */
          __OM  uint16_t POSR07 : 1;            /*!< [7..7] Pmn Output High Set                                                */
          __OM  uint16_t POSR08 : 1;            /*!< [8..8] Pmn Output High Set                                                */
          __OM  uint16_t POSR09 : 1;            /*!< [9..9] Pmn Output High Set                                                */
          __OM  uint16_t POSR10 : 1;            /*!< [10..10] Pmn Output High Set                                              */
          __OM  uint16_t POSR11 : 1;            /*!< [11..11] Pmn Output High Set                                              */
          __OM  uint16_t POSR12 : 1;            /*!< [12..12] Pmn Output High Set                                              */
          __OM  uint16_t POSR13 : 1;            /*!< [13..13] Pmn Output High Set                                              */
          __OM  uint16_t POSR14 : 1;            /*!< [14..14] Pmn Output High Set                                              */
          __OM  uint16_t POSR15 : 1;            /*!< [15..15] Pmn Output High Set                                              */
        } POSR_b;
      } ;
    };
  };
} PORT0_Type;                                   /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                           PORT2                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Port 2 Control Registers (PORT2)
  */

typedef struct {                                /*!< (@ 0x40040040) PORT2 Structure                                            */
  
  union {
    union {
      __IOM uint32_t PCNTR1;                    /*!< (@ 0x00000000) Port Control Register 1                                    */
      
      struct {
        __IOM uint32_t PDR00    : 1;            /*!< [0..0] Pmn Direction Control                                              */
        __IOM uint32_t PDR01    : 1;            /*!< [1..1] Pmn Direction Control                                              */
        __IOM uint32_t PDR02    : 1;            /*!< [2..2] Pmn Direction Control                                              */
        __IOM uint32_t PDR03    : 1;            /*!< [3..3] Pmn Direction Control                                              */
        __IOM uint32_t PDR04    : 1;            /*!< [4..4] Pmn Direction Control                                              */
        __IOM uint32_t PDR05    : 1;            /*!< [5..5] Pmn Direction Control                                              */
        __IOM uint32_t PDR06    : 1;            /*!< [6..6] Pmn Direction Control                                              */
        __IOM uint32_t PDR07    : 1;            /*!< [7..7] Pmn Direction Control                                              */
        __IOM uint32_t PDR08    : 1;            /*!< [8..8] Pmn Direction Control                                              */
        __IOM uint32_t PDR09    : 1;            /*!< [9..9] Pmn Direction Control                                              */
        __IOM uint32_t PDR10    : 1;            /*!< [10..10] Pmn Direction Control                                            */
        __IOM uint32_t PDR11    : 1;            /*!< [11..11] Pmn Direction Control                                            */
        __IOM uint32_t PDR12    : 1;            /*!< [12..12] Pmn Direction Control                                            */
        __IOM uint32_t PDR13    : 1;            /*!< [13..13] Pmn Direction Control                                            */
        __IOM uint32_t PDR14    : 1;            /*!< [14..14] Pmn Direction Control                                            */
        __IOM uint32_t PDR15    : 1;            /*!< [15..15] Pmn Direction Control                                            */
        __IOM uint32_t PODR00   : 1;            /*!< [16..16] Pmn Output Data Store                                            */
        __IOM uint32_t PODR01   : 1;            /*!< [17..17] Pmn Output Data Store                                            */
        __IOM uint32_t PODR02   : 1;            /*!< [18..18] Pmn Output Data Store                                            */
        __IOM uint32_t PODR03   : 1;            /*!< [19..19] Pmn Output Data Store                                            */
        __IOM uint32_t PODR04   : 1;            /*!< [20..20] Pmn Output Data Store                                            */
        __IOM uint32_t PODR05   : 1;            /*!< [21..21] Pmn Output Data Store                                            */
        __IOM uint32_t PODR06   : 1;            /*!< [22..22] Pmn Output Data Store                                            */
        __IOM uint32_t PODR07   : 1;            /*!< [23..23] Pmn Output Data Store                                            */
        __IOM uint32_t PODR08   : 1;            /*!< [24..24] Pmn Output Data Store                                            */
        __IOM uint32_t PODR09   : 1;            /*!< [25..25] Pmn Output Data Store                                            */
        __IOM uint32_t PODR10   : 1;            /*!< [26..26] Pmn Output Data Store                                            */
        __IOM uint32_t PODR11   : 1;            /*!< [27..27] Pmn Output Data Store                                            */
        __IOM uint32_t PODR12   : 1;            /*!< [28..28] Pmn Output Data Store                                            */
        __IOM uint32_t PODR13   : 1;            /*!< [29..29] Pmn Output Data Store                                            */
        __IOM uint32_t PODR14   : 1;            /*!< [30..30] Pmn Output Data Store                                            */
        __IOM uint32_t PODR15   : 1;            /*!< [31..31] Pmn Output Data Store                                            */
      } PCNTR1_b;
    } ;
    
    struct {
      union {
        __IOM uint16_t PODR;                    /*!< (@ 0x00000000) Port Control Register 1                                    */
        
        struct {
          __IOM uint16_t PODR00 : 1;            /*!< [0..0] Pmn Output Data Store                                              */
          __IOM uint16_t PODR01 : 1;            /*!< [1..1] Pmn Output Data Store                                              */
          __IOM uint16_t PODR02 : 1;            /*!< [2..2] Pmn Output Data Store                                              */
          __IOM uint16_t PODR03 : 1;            /*!< [3..3] Pmn Output Data Store                                              */
          __IOM uint16_t PODR04 : 1;            /*!< [4..4] Pmn Output Data Store                                              */
          __IOM uint16_t PODR05 : 1;            /*!< [5..5] Pmn Output Data Store                                              */
          __IOM uint16_t PODR06 : 1;            /*!< [6..6] Pmn Output Data Store                                              */
          __IOM uint16_t PODR07 : 1;            /*!< [7..7] Pmn Output Data Store                                              */
          __IOM uint16_t PODR08 : 1;            /*!< [8..8] Pmn Output Data Store                                              */
          __IOM uint16_t PODR09 : 1;            /*!< [9..9] Pmn Output Data Store                                              */
          __IOM uint16_t PODR10 : 1;            /*!< [10..10] Pmn Output Data Store                                            */
          __IOM uint16_t PODR11 : 1;            /*!< [11..11] Pmn Output Data Store                                            */
          __IOM uint16_t PODR12 : 1;            /*!< [12..12] Pmn Output Data Store                                            */
          __IOM uint16_t PODR13 : 1;            /*!< [13..13] Pmn Output Data Store                                            */
          __IOM uint16_t PODR14 : 1;            /*!< [14..14] Pmn Output Data Store                                            */
          __IOM uint16_t PODR15 : 1;            /*!< [15..15] Pmn Output Data Store                                            */
        } PODR_b;
      } ;
      
      union {
        __IOM uint16_t PDR;                     /*!< (@ 0x00000002) Port Control Register 1                                    */
        
        struct {
          __IOM uint16_t PDR00  : 1;            /*!< [0..0] Pmn Direction Control                                              */
          __IOM uint16_t PDR01  : 1;            /*!< [1..1] Pmn Direction Control                                              */
          __IOM uint16_t PDR02  : 1;            /*!< [2..2] Pmn Direction Control                                              */
          __IOM uint16_t PDR03  : 1;            /*!< [3..3] Pmn Direction Control                                              */
          __IOM uint16_t PDR04  : 1;            /*!< [4..4] Pmn Direction Control                                              */
          __IOM uint16_t PDR05  : 1;            /*!< [5..5] Pmn Direction Control                                              */
          __IOM uint16_t PDR06  : 1;            /*!< [6..6] Pmn Direction Control                                              */
          __IOM uint16_t PDR07  : 1;            /*!< [7..7] Pmn Direction Control                                              */
          __IOM uint16_t PDR08  : 1;            /*!< [8..8] Pmn Direction Control                                              */
          __IOM uint16_t PDR09  : 1;            /*!< [9..9] Pmn Direction Control                                              */
          __IOM uint16_t PDR10  : 1;            /*!< [10..10] Pmn Direction Control                                            */
          __IOM uint16_t PDR11  : 1;            /*!< [11..11] Pmn Direction Control                                            */
          __IOM uint16_t PDR12  : 1;            /*!< [12..12] Pmn Direction Control                                            */
          __IOM uint16_t PDR13  : 1;            /*!< [13..13] Pmn Direction Control                                            */
          __IOM uint16_t PDR14  : 1;            /*!< [14..14] Pmn Direction Control                                            */
          __IOM uint16_t PDR15  : 1;            /*!< [15..15] Pmn Direction Control                                            */
        } PDR_b;
      } ;
    };
  };
  
  union {
    union {
      __IM  uint32_t PCNTR2;                    /*!< (@ 0x00000004) Port Control Register 2                                    */
      
      struct {
        __IM  uint32_t PIDR00   : 1;            /*!< [0..0] Pmn Input Data                                                     */
        __IM  uint32_t PIDR01   : 1;            /*!< [1..1] Pmn Input Data                                                     */
        __IM  uint32_t PIDR02   : 1;            /*!< [2..2] Pmn Input Data                                                     */
        __IM  uint32_t PIDR03   : 1;            /*!< [3..3] Pmn Input Data                                                     */
        __IM  uint32_t PIDR04   : 1;            /*!< [4..4] Pmn Input Data                                                     */
        __IM  uint32_t PIDR05   : 1;            /*!< [5..5] Pmn Input Data                                                     */
        __IM  uint32_t PIDR06   : 1;            /*!< [6..6] Pmn Input Data                                                     */
        __IM  uint32_t PIDR07   : 1;            /*!< [7..7] Pmn Input Data                                                     */
        __IM  uint32_t PIDR08   : 1;            /*!< [8..8] Pmn Input Data                                                     */
        __IM  uint32_t PIDR09   : 1;            /*!< [9..9] Pmn Input Data                                                     */
        __IM  uint32_t PIDR10   : 1;            /*!< [10..10] Pmn Input Data                                                   */
        __IM  uint32_t PIDR11   : 1;            /*!< [11..11] Pmn Input Data                                                   */
        __IM  uint32_t PIDR12   : 1;            /*!< [12..12] Pmn Input Data                                                   */
        __IM  uint32_t PIDR13   : 1;            /*!< [13..13] Pmn Input Data                                                   */
        __IM  uint32_t PIDR14   : 1;            /*!< [14..14] Pmn Input Data                                                   */
        __IM  uint32_t PIDR15   : 1;            /*!< [15..15] Pmn Input Data                                                   */
        __IM  uint32_t EIDR00   : 1;            /*!< [16..16] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR01   : 1;            /*!< [17..17] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR02   : 1;            /*!< [18..18] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR03   : 1;            /*!< [19..19] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR04   : 1;            /*!< [20..20] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR05   : 1;            /*!< [21..21] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR06   : 1;            /*!< [22..22] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR07   : 1;            /*!< [23..23] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR08   : 1;            /*!< [24..24] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR09   : 1;            /*!< [25..25] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR10   : 1;            /*!< [26..26] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR11   : 1;            /*!< [27..27] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR12   : 1;            /*!< [28..28] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR13   : 1;            /*!< [29..29] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR14   : 1;            /*!< [30..30] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR15   : 1;            /*!< [31..31] Pmn Event Input Data                                             */
      } PCNTR2_b;
    } ;
    
    struct {
      union {
        __IM  uint16_t EIDR;                    /*!< (@ 0x00000004) Port Control Register 2                                    */
        
        struct {
          __IM  uint16_t EIDR00 : 1;            /*!< [0..0] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR01 : 1;            /*!< [1..1] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR02 : 1;            /*!< [2..2] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR03 : 1;            /*!< [3..3] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR04 : 1;            /*!< [4..4] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR05 : 1;            /*!< [5..5] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR06 : 1;            /*!< [6..6] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR07 : 1;            /*!< [7..7] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR08 : 1;            /*!< [8..8] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR09 : 1;            /*!< [9..9] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR10 : 1;            /*!< [10..10] Pmn Event Input Data                                             */
          __IM  uint16_t EIDR11 : 1;            /*!< [11..11] Pmn Event Input Data                                             */
          __IM  uint16_t EIDR12 : 1;            /*!< [12..12] Pmn Event Input Data                                             */
          __IM  uint16_t EIDR13 : 1;            /*!< [13..13] Pmn Event Input Data                                             */
          __IM  uint16_t EIDR14 : 1;            /*!< [14..14] Pmn Event Input Data                                             */
          __IM  uint16_t EIDR15 : 1;            /*!< [15..15] Pmn Event Input Data                                             */
        } EIDR_b;
      } ;
      
      union {
        __IM  uint16_t PIDR;                    /*!< (@ 0x00000006) Port Control Register 2                                    */
        
        struct {
          __IM  uint16_t PIDR00 : 1;            /*!< [0..0] Pmn Input Data                                                     */
          __IM  uint16_t PIDR01 : 1;            /*!< [1..1] Pmn Input Data                                                     */
          __IM  uint16_t PIDR02 : 1;            /*!< [2..2] Pmn Input Data                                                     */
          __IM  uint16_t PIDR03 : 1;            /*!< [3..3] Pmn Input Data                                                     */
          __IM  uint16_t PIDR04 : 1;            /*!< [4..4] Pmn Input Data                                                     */
          __IM  uint16_t PIDR05 : 1;            /*!< [5..5] Pmn Input Data                                                     */
          __IM  uint16_t PIDR06 : 1;            /*!< [6..6] Pmn Input Data                                                     */
          __IM  uint16_t PIDR07 : 1;            /*!< [7..7] Pmn Input Data                                                     */
          __IM  uint16_t PIDR08 : 1;            /*!< [8..8] Pmn Input Data                                                     */
          __IM  uint16_t PIDR09 : 1;            /*!< [9..9] Pmn Input Data                                                     */
          __IM  uint16_t PIDR10 : 1;            /*!< [10..10] Pmn Input Data                                                   */
          __IM  uint16_t PIDR11 : 1;            /*!< [11..11] Pmn Input Data                                                   */
          __IM  uint16_t PIDR12 : 1;            /*!< [12..12] Pmn Input Data                                                   */
          __IM  uint16_t PIDR13 : 1;            /*!< [13..13] Pmn Input Data                                                   */
          __IM  uint16_t PIDR14 : 1;            /*!< [14..14] Pmn Input Data                                                   */
          __IM  uint16_t PIDR15 : 1;            /*!< [15..15] Pmn Input Data                                                   */
        } PIDR_b;
      } ;
    };
  };
  
  union {
    union {
      __OM  uint32_t PCNTR3;                    /*!< (@ 0x00000008) Port Control Register 3                                    */
      
      struct {
        __OM  uint32_t POSR00   : 1;            /*!< [0..0] Pmn Output High Set                                                */
        __OM  uint32_t POSR01   : 1;            /*!< [1..1] Pmn Output High Set                                                */
        __OM  uint32_t POSR02   : 1;            /*!< [2..2] Pmn Output High Set                                                */
        __OM  uint32_t POSR03   : 1;            /*!< [3..3] Pmn Output High Set                                                */
        __OM  uint32_t POSR04   : 1;            /*!< [4..4] Pmn Output High Set                                                */
        __OM  uint32_t POSR05   : 1;            /*!< [5..5] Pmn Output High Set                                                */
        __OM  uint32_t POSR06   : 1;            /*!< [6..6] Pmn Output High Set                                                */
        __OM  uint32_t POSR07   : 1;            /*!< [7..7] Pmn Output High Set                                                */
        __OM  uint32_t POSR08   : 1;            /*!< [8..8] Pmn Output High Set                                                */
        __OM  uint32_t POSR09   : 1;            /*!< [9..9] Pmn Output High Set                                                */
        __OM  uint32_t POSR10   : 1;            /*!< [10..10] Pmn Output High Set                                              */
        __OM  uint32_t POSR11   : 1;            /*!< [11..11] Pmn Output High Set                                              */
        __OM  uint32_t POSR12   : 1;            /*!< [12..12] Pmn Output High Set                                              */
        __OM  uint32_t POSR13   : 1;            /*!< [13..13] Pmn Output High Set                                              */
        __OM  uint32_t POSR14   : 1;            /*!< [14..14] Pmn Output High Set                                              */
        __OM  uint32_t POSR15   : 1;            /*!< [15..15] Pmn Output High Set                                              */
        __OM  uint32_t PORR00   : 1;            /*!< [16..16] Pmn Output Low Set                                               */
        __OM  uint32_t PORR01   : 1;            /*!< [17..17] Pmn Output Low Set                                               */
        __OM  uint32_t PORR02   : 1;            /*!< [18..18] Pmn Output Low Set                                               */
        __OM  uint32_t PORR03   : 1;            /*!< [19..19] Pmn Output Low Set                                               */
        __OM  uint32_t PORR04   : 1;            /*!< [20..20] Pmn Output Low Set                                               */
        __OM  uint32_t PORR05   : 1;            /*!< [21..21] Pmn Output Low Set                                               */
        __OM  uint32_t PORR06   : 1;            /*!< [22..22] Pmn Output Low Set                                               */
        __OM  uint32_t PORR07   : 1;            /*!< [23..23] Pmn Output Low Set                                               */
        __OM  uint32_t PORR08   : 1;            /*!< [24..24] Pmn Output Low Set                                               */
        __OM  uint32_t PORR09   : 1;            /*!< [25..25] Pmn Output Low Set                                               */
        __OM  uint32_t PORR10   : 1;            /*!< [26..26] Pmn Output Low Set                                               */
        __OM  uint32_t PORR11   : 1;            /*!< [27..27] Pmn Output Low Set                                               */
        __OM  uint32_t PORR12   : 1;            /*!< [28..28] Pmn Output Low Set                                               */
        __OM  uint32_t PORR13   : 1;            /*!< [29..29] Pmn Output Low Set                                               */
        __OM  uint32_t PORR14   : 1;            /*!< [30..30] Pmn Output Low Set                                               */
        __OM  uint32_t PORR15   : 1;            /*!< [31..31] Pmn Output Low Set                                               */
      } PCNTR3_b;
    } ;
    
    struct {
      union {
        __OM  uint16_t PORR;                    /*!< (@ 0x00000008) Port Control Register 3                                    */
        
        struct {
          __OM  uint16_t PORR00 : 1;            /*!< [0..0] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR01 : 1;            /*!< [1..1] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR02 : 1;            /*!< [2..2] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR03 : 1;            /*!< [3..3] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR04 : 1;            /*!< [4..4] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR05 : 1;            /*!< [5..5] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR06 : 1;            /*!< [6..6] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR07 : 1;            /*!< [7..7] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR08 : 1;            /*!< [8..8] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR09 : 1;            /*!< [9..9] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR10 : 1;            /*!< [10..10] Pmn Output Low Set                                               */
          __OM  uint16_t PORR11 : 1;            /*!< [11..11] Pmn Output Low Set                                               */
          __OM  uint16_t PORR12 : 1;            /*!< [12..12] Pmn Output Low Set                                               */
          __OM  uint16_t PORR13 : 1;            /*!< [13..13] Pmn Output Low Set                                               */
          __OM  uint16_t PORR14 : 1;            /*!< [14..14] Pmn Output Low Set                                               */
          __OM  uint16_t PORR15 : 1;            /*!< [15..15] Pmn Output Low Set                                               */
        } PORR_b;
      } ;
      
      union {
        __OM  uint16_t POSR;                    /*!< (@ 0x0000000A) Port Control Register 3                                    */
        
        struct {
          __OM  uint16_t POSR00 : 1;            /*!< [0..0] Pmn Output High Set                                                */
          __OM  uint16_t POSR01 : 1;            /*!< [1..1] Pmn Output High Set                                                */
          __OM  uint16_t POSR02 : 1;            /*!< [2..2] Pmn Output High Set                                                */
          __OM  uint16_t POSR03 : 1;            /*!< [3..3] Pmn Output High Set                                                */
          __OM  uint16_t POSR04 : 1;            /*!< [4..4] Pmn Output High Set                                                */
          __OM  uint16_t POSR05 : 1;            /*!< [5..5] Pmn Output High Set                                                */
          __OM  uint16_t POSR06 : 1;            /*!< [6..6] Pmn Output High Set                                                */
          __OM  uint16_t POSR07 : 1;            /*!< [7..7] Pmn Output High Set                                                */
          __OM  uint16_t POSR08 : 1;            /*!< [8..8] Pmn Output High Set                                                */
          __OM  uint16_t POSR09 : 1;            /*!< [9..9] Pmn Output High Set                                                */
          __OM  uint16_t POSR10 : 1;            /*!< [10..10] Pmn Output High Set                                              */
          __OM  uint16_t POSR11 : 1;            /*!< [11..11] Pmn Output High Set                                              */
          __OM  uint16_t POSR12 : 1;            /*!< [12..12] Pmn Output High Set                                              */
          __OM  uint16_t POSR13 : 1;            /*!< [13..13] Pmn Output High Set                                              */
          __OM  uint16_t POSR14 : 1;            /*!< [14..14] Pmn Output High Set                                              */
          __OM  uint16_t POSR15 : 1;            /*!< [15..15] Pmn Output High Set                                              */
        } POSR_b;
      } ;
    };
  };
  
  union {
    union {
      __IOM uint32_t PCNTR4;                    /*!< (@ 0x0000000C) Port Control Register 4                                    */
      
      struct {
        __IOM uint32_t EOSR00   : 1;            /*!< [0..0] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR01   : 1;            /*!< [1..1] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR02   : 1;            /*!< [2..2] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR03   : 1;            /*!< [3..3] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR04   : 1;            /*!< [4..4] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR05   : 1;            /*!< [5..5] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR06   : 1;            /*!< [6..6] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR07   : 1;            /*!< [7..7] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR08   : 1;            /*!< [8..8] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR09   : 1;            /*!< [9..9] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR10   : 1;            /*!< [10..10] Pmn Event High Output Set                                        */
        __IOM uint32_t EOSR11   : 1;            /*!< [11..11] Pmn Event High Output Set                                        */
        __IOM uint32_t EOSR12   : 1;            /*!< [12..12] Pmn Event High Output Set                                        */
        __IOM uint32_t EOSR13   : 1;            /*!< [13..13] Pmn Event High Output Set                                        */
        __IOM uint32_t EOSR14   : 1;            /*!< [14..14] Pmn Event High Output Set                                        */
        __IOM uint32_t EOSR15   : 1;            /*!< [15..15] Pmn Event High Output Set                                        */
        __IOM uint32_t EORR00   : 1;            /*!< [16..16] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR01   : 1;            /*!< [17..17] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR02   : 1;            /*!< [18..18] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR03   : 1;            /*!< [19..19] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR04   : 1;            /*!< [20..20] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR05   : 1;            /*!< [21..21] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR06   : 1;            /*!< [22..22] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR07   : 1;            /*!< [23..23] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR08   : 1;            /*!< [24..24] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR09   : 1;            /*!< [25..25] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR10   : 1;            /*!< [26..26] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR11   : 1;            /*!< [27..27] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR12   : 1;            /*!< [28..28] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR13   : 1;            /*!< [29..29] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR14   : 1;            /*!< [30..30] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR15   : 1;            /*!< [31..31] Pmn Event Low Output Set                                         */
      } PCNTR4_b;
    } ;
    
    struct {
      union {
        __IOM uint16_t EORR;                    /*!< (@ 0x0000000C) Port Control Register 4                                    */
        
        struct {
          __IOM uint16_t EORR00 : 1;            /*!< [0..0] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR01 : 1;            /*!< [1..1] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR02 : 1;            /*!< [2..2] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR03 : 1;            /*!< [3..3] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR04 : 1;            /*!< [4..4] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR05 : 1;            /*!< [5..5] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR06 : 1;            /*!< [6..6] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR07 : 1;            /*!< [7..7] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR08 : 1;            /*!< [8..8] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR09 : 1;            /*!< [9..9] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR10 : 1;            /*!< [10..10] Pmn Event Low Output Set                                         */
          __IOM uint16_t EORR11 : 1;            /*!< [11..11] Pmn Event Low Output Set                                         */
          __IOM uint16_t EORR12 : 1;            /*!< [12..12] Pmn Event Low Output Set                                         */
          __IOM uint16_t EORR13 : 1;            /*!< [13..13] Pmn Event Low Output Set                                         */
          __IOM uint16_t EORR14 : 1;            /*!< [14..14] Pmn Event Low Output Set                                         */
          __IOM uint16_t EORR15 : 1;            /*!< [15..15] Pmn Event Low Output Set                                         */
        } EORR_b;
      } ;
      
      union {
        __IOM uint16_t EOSR;                    /*!< (@ 0x0000000E) Port Control Register 4                                    */
        
        struct {
          __IOM uint16_t EOSR00 : 1;            /*!< [0..0] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR01 : 1;            /*!< [1..1] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR02 : 1;            /*!< [2..2] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR03 : 1;            /*!< [3..3] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR04 : 1;            /*!< [4..4] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR05 : 1;            /*!< [5..5] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR06 : 1;            /*!< [6..6] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR07 : 1;            /*!< [7..7] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR08 : 1;            /*!< [8..8] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR09 : 1;            /*!< [9..9] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR10 : 1;            /*!< [10..10] Pmn Event High Output Set                                        */
          __IOM uint16_t EOSR11 : 1;            /*!< [11..11] Pmn Event High Output Set                                        */
          __IOM uint16_t EOSR12 : 1;            /*!< [12..12] Pmn Event High Output Set                                        */
          __IOM uint16_t EOSR13 : 1;            /*!< [13..13] Pmn Event High Output Set                                        */
          __IOM uint16_t EOSR14 : 1;            /*!< [14..14] Pmn Event High Output Set                                        */
          __IOM uint16_t EOSR15 : 1;            /*!< [15..15] Pmn Event High Output Set                                        */
        } EOSR_b;
      } ;
    };
  };
} PORT2_Type;                                   /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                           PORT3                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Port 3 Control Registers (PORT3)
  */

typedef struct {                                /*!< (@ 0x40040060) PORT3 Structure                                            */
  
  union {
    union {
      __IOM uint32_t PCNTR1;                    /*!< (@ 0x00000000) Port Control Register 1                                    */
      
      struct {
        __IOM uint32_t PDR00    : 1;            /*!< [0..0] Pmn Direction Control                                              */
        __IOM uint32_t PDR01    : 1;            /*!< [1..1] Pmn Direction Control                                              */
        __IOM uint32_t PDR02    : 1;            /*!< [2..2] Pmn Direction Control                                              */
        __IOM uint32_t PDR03    : 1;            /*!< [3..3] Pmn Direction Control                                              */
        __IOM uint32_t PDR04    : 1;            /*!< [4..4] Pmn Direction Control                                              */
        __IOM uint32_t PDR05    : 1;            /*!< [5..5] Pmn Direction Control                                              */
        __IOM uint32_t PDR06    : 1;            /*!< [6..6] Pmn Direction Control                                              */
        __IOM uint32_t PDR07    : 1;            /*!< [7..7] Pmn Direction Control                                              */
        __IOM uint32_t PDR08    : 1;            /*!< [8..8] Pmn Direction Control                                              */
        __IOM uint32_t PDR09    : 1;            /*!< [9..9] Pmn Direction Control                                              */
        __IOM uint32_t PDR10    : 1;            /*!< [10..10] Pmn Direction Control                                            */
        __IOM uint32_t PDR11    : 1;            /*!< [11..11] Pmn Direction Control                                            */
        __IOM uint32_t PDR12    : 1;            /*!< [12..12] Pmn Direction Control                                            */
        __IOM uint32_t PDR13    : 1;            /*!< [13..13] Pmn Direction Control                                            */
        __IOM uint32_t PDR14    : 1;            /*!< [14..14] Pmn Direction Control                                            */
        __IOM uint32_t PDR15    : 1;            /*!< [15..15] Pmn Direction Control                                            */
        __IOM uint32_t PODR00   : 1;            /*!< [16..16] Pmn Output Data Store                                            */
        __IOM uint32_t PODR01   : 1;            /*!< [17..17] Pmn Output Data Store                                            */
        __IOM uint32_t PODR02   : 1;            /*!< [18..18] Pmn Output Data Store                                            */
        __IOM uint32_t PODR03   : 1;            /*!< [19..19] Pmn Output Data Store                                            */
        __IOM uint32_t PODR04   : 1;            /*!< [20..20] Pmn Output Data Store                                            */
        __IOM uint32_t PODR05   : 1;            /*!< [21..21] Pmn Output Data Store                                            */
        __IOM uint32_t PODR06   : 1;            /*!< [22..22] Pmn Output Data Store                                            */
        __IOM uint32_t PODR07   : 1;            /*!< [23..23] Pmn Output Data Store                                            */
        __IOM uint32_t PODR08   : 1;            /*!< [24..24] Pmn Output Data Store                                            */
        __IOM uint32_t PODR09   : 1;            /*!< [25..25] Pmn Output Data Store                                            */
        __IOM uint32_t PODR10   : 1;            /*!< [26..26] Pmn Output Data Store                                            */
        __IOM uint32_t PODR11   : 1;            /*!< [27..27] Pmn Output Data Store                                            */
        __IOM uint32_t PODR12   : 1;            /*!< [28..28] Pmn Output Data Store                                            */
        __IOM uint32_t PODR13   : 1;            /*!< [29..29] Pmn Output Data Store                                            */
        __IOM uint32_t PODR14   : 1;            /*!< [30..30] Pmn Output Data Store                                            */
        __IOM uint32_t PODR15   : 1;            /*!< [31..31] Pmn Output Data Store                                            */
      } PCNTR1_b;
    } ;
    
    struct {
      union {
        __IOM uint16_t PODR;                    /*!< (@ 0x00000000) Port Control Register 1                                    */
        
        struct {
          __IOM uint16_t PODR00 : 1;            /*!< [0..0] Pmn Output Data Store                                              */
          __IOM uint16_t PODR01 : 1;            /*!< [1..1] Pmn Output Data Store                                              */
          __IOM uint16_t PODR02 : 1;            /*!< [2..2] Pmn Output Data Store                                              */
          __IOM uint16_t PODR03 : 1;            /*!< [3..3] Pmn Output Data Store                                              */
          __IOM uint16_t PODR04 : 1;            /*!< [4..4] Pmn Output Data Store                                              */
          __IOM uint16_t PODR05 : 1;            /*!< [5..5] Pmn Output Data Store                                              */
          __IOM uint16_t PODR06 : 1;            /*!< [6..6] Pmn Output Data Store                                              */
          __IOM uint16_t PODR07 : 1;            /*!< [7..7] Pmn Output Data Store                                              */
          __IOM uint16_t PODR08 : 1;            /*!< [8..8] Pmn Output Data Store                                              */
          __IOM uint16_t PODR09 : 1;            /*!< [9..9] Pmn Output Data Store                                              */
          __IOM uint16_t PODR10 : 1;            /*!< [10..10] Pmn Output Data Store                                            */
          __IOM uint16_t PODR11 : 1;            /*!< [11..11] Pmn Output Data Store                                            */
          __IOM uint16_t PODR12 : 1;            /*!< [12..12] Pmn Output Data Store                                            */
          __IOM uint16_t PODR13 : 1;            /*!< [13..13] Pmn Output Data Store                                            */
          __IOM uint16_t PODR14 : 1;            /*!< [14..14] Pmn Output Data Store                                            */
          __IOM uint16_t PODR15 : 1;            /*!< [15..15] Pmn Output Data Store                                            */
        } PODR_b;
      } ;
      
      union {
        __IOM uint16_t PDR;                     /*!< (@ 0x00000002) Port Control Register 1                                    */
        
        struct {
          __IOM uint16_t PDR00  : 1;            /*!< [0..0] Pmn Direction Control                                              */
          __IOM uint16_t PDR01  : 1;            /*!< [1..1] Pmn Direction Control                                              */
          __IOM uint16_t PDR02  : 1;            /*!< [2..2] Pmn Direction Control                                              */
          __IOM uint16_t PDR03  : 1;            /*!< [3..3] Pmn Direction Control                                              */
          __IOM uint16_t PDR04  : 1;            /*!< [4..4] Pmn Direction Control                                              */
          __IOM uint16_t PDR05  : 1;            /*!< [5..5] Pmn Direction Control                                              */
          __IOM uint16_t PDR06  : 1;            /*!< [6..6] Pmn Direction Control                                              */
          __IOM uint16_t PDR07  : 1;            /*!< [7..7] Pmn Direction Control                                              */
          __IOM uint16_t PDR08  : 1;            /*!< [8..8] Pmn Direction Control                                              */
          __IOM uint16_t PDR09  : 1;            /*!< [9..9] Pmn Direction Control                                              */
          __IOM uint16_t PDR10  : 1;            /*!< [10..10] Pmn Direction Control                                            */
          __IOM uint16_t PDR11  : 1;            /*!< [11..11] Pmn Direction Control                                            */
          __IOM uint16_t PDR12  : 1;            /*!< [12..12] Pmn Direction Control                                            */
          __IOM uint16_t PDR13  : 1;            /*!< [13..13] Pmn Direction Control                                            */
          __IOM uint16_t PDR14  : 1;            /*!< [14..14] Pmn Direction Control                                            */
          __IOM uint16_t PDR15  : 1;            /*!< [15..15] Pmn Direction Control                                            */
        } PDR_b;
      } ;
    };
  };
  
  union {
    union {
      __IM  uint32_t PCNTR2;                    /*!< (@ 0x00000004) Port Control Register 2                                    */
      
      struct {
        __IM  uint32_t PIDR00   : 1;            /*!< [0..0] Pmn Input Data                                                     */
        __IM  uint32_t PIDR01   : 1;            /*!< [1..1] Pmn Input Data                                                     */
        __IM  uint32_t PIDR02   : 1;            /*!< [2..2] Pmn Input Data                                                     */
        __IM  uint32_t PIDR03   : 1;            /*!< [3..3] Pmn Input Data                                                     */
        __IM  uint32_t PIDR04   : 1;            /*!< [4..4] Pmn Input Data                                                     */
        __IM  uint32_t PIDR05   : 1;            /*!< [5..5] Pmn Input Data                                                     */
        __IM  uint32_t PIDR06   : 1;            /*!< [6..6] Pmn Input Data                                                     */
        __IM  uint32_t PIDR07   : 1;            /*!< [7..7] Pmn Input Data                                                     */
        __IM  uint32_t PIDR08   : 1;            /*!< [8..8] Pmn Input Data                                                     */
        __IM  uint32_t PIDR09   : 1;            /*!< [9..9] Pmn Input Data                                                     */
        __IM  uint32_t PIDR10   : 1;            /*!< [10..10] Pmn Input Data                                                   */
        __IM  uint32_t PIDR11   : 1;            /*!< [11..11] Pmn Input Data                                                   */
        __IM  uint32_t PIDR12   : 1;            /*!< [12..12] Pmn Input Data                                                   */
        __IM  uint32_t PIDR13   : 1;            /*!< [13..13] Pmn Input Data                                                   */
        __IM  uint32_t PIDR14   : 1;            /*!< [14..14] Pmn Input Data                                                   */
        __IM  uint32_t PIDR15   : 1;            /*!< [15..15] Pmn Input Data                                                   */
        __IM  uint32_t EIDR00   : 1;            /*!< [16..16] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR01   : 1;            /*!< [17..17] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR02   : 1;            /*!< [18..18] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR03   : 1;            /*!< [19..19] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR04   : 1;            /*!< [20..20] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR05   : 1;            /*!< [21..21] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR06   : 1;            /*!< [22..22] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR07   : 1;            /*!< [23..23] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR08   : 1;            /*!< [24..24] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR09   : 1;            /*!< [25..25] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR10   : 1;            /*!< [26..26] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR11   : 1;            /*!< [27..27] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR12   : 1;            /*!< [28..28] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR13   : 1;            /*!< [29..29] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR14   : 1;            /*!< [30..30] Pmn Event Input Data                                             */
        __IM  uint32_t EIDR15   : 1;            /*!< [31..31] Pmn Event Input Data                                             */
      } PCNTR2_b;
    } ;
    
    struct {
      union {
        __IM  uint16_t EIDR;                    /*!< (@ 0x00000004) Port Control Register 2                                    */
        
        struct {
          __IM  uint16_t EIDR00 : 1;            /*!< [0..0] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR01 : 1;            /*!< [1..1] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR02 : 1;            /*!< [2..2] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR03 : 1;            /*!< [3..3] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR04 : 1;            /*!< [4..4] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR05 : 1;            /*!< [5..5] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR06 : 1;            /*!< [6..6] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR07 : 1;            /*!< [7..7] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR08 : 1;            /*!< [8..8] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR09 : 1;            /*!< [9..9] Pmn Event Input Data                                               */
          __IM  uint16_t EIDR10 : 1;            /*!< [10..10] Pmn Event Input Data                                             */
          __IM  uint16_t EIDR11 : 1;            /*!< [11..11] Pmn Event Input Data                                             */
          __IM  uint16_t EIDR12 : 1;            /*!< [12..12] Pmn Event Input Data                                             */
          __IM  uint16_t EIDR13 : 1;            /*!< [13..13] Pmn Event Input Data                                             */
          __IM  uint16_t EIDR14 : 1;            /*!< [14..14] Pmn Event Input Data                                             */
          __IM  uint16_t EIDR15 : 1;            /*!< [15..15] Pmn Event Input Data                                             */
        } EIDR_b;
      } ;
      
      union {
        __IM  uint16_t PIDR;                    /*!< (@ 0x00000006) Port Control Register 2                                    */
        
        struct {
          __IM  uint16_t PIDR00 : 1;            /*!< [0..0] Pmn Input Data                                                     */
          __IM  uint16_t PIDR01 : 1;            /*!< [1..1] Pmn Input Data                                                     */
          __IM  uint16_t PIDR02 : 1;            /*!< [2..2] Pmn Input Data                                                     */
          __IM  uint16_t PIDR03 : 1;            /*!< [3..3] Pmn Input Data                                                     */
          __IM  uint16_t PIDR04 : 1;            /*!< [4..4] Pmn Input Data                                                     */
          __IM  uint16_t PIDR05 : 1;            /*!< [5..5] Pmn Input Data                                                     */
          __IM  uint16_t PIDR06 : 1;            /*!< [6..6] Pmn Input Data                                                     */
          __IM  uint16_t PIDR07 : 1;            /*!< [7..7] Pmn Input Data                                                     */
          __IM  uint16_t PIDR08 : 1;            /*!< [8..8] Pmn Input Data                                                     */
          __IM  uint16_t PIDR09 : 1;            /*!< [9..9] Pmn Input Data                                                     */
          __IM  uint16_t PIDR10 : 1;            /*!< [10..10] Pmn Input Data                                                   */
          __IM  uint16_t PIDR11 : 1;            /*!< [11..11] Pmn Input Data                                                   */
          __IM  uint16_t PIDR12 : 1;            /*!< [12..12] Pmn Input Data                                                   */
          __IM  uint16_t PIDR13 : 1;            /*!< [13..13] Pmn Input Data                                                   */
          __IM  uint16_t PIDR14 : 1;            /*!< [14..14] Pmn Input Data                                                   */
          __IM  uint16_t PIDR15 : 1;            /*!< [15..15] Pmn Input Data                                                   */
        } PIDR_b;
      } ;
    };
  };
  
  union {
    union {
      __OM  uint32_t PCNTR3;                    /*!< (@ 0x00000008) Port Control Register 3                                    */
      
      struct {
        __OM  uint32_t POSR00   : 1;            /*!< [0..0] Pmn Output High Set                                                */
        __OM  uint32_t POSR01   : 1;            /*!< [1..1] Pmn Output High Set                                                */
        __OM  uint32_t POSR02   : 1;            /*!< [2..2] Pmn Output High Set                                                */
        __OM  uint32_t POSR03   : 1;            /*!< [3..3] Pmn Output High Set                                                */
        __OM  uint32_t POSR04   : 1;            /*!< [4..4] Pmn Output High Set                                                */
        __OM  uint32_t POSR05   : 1;            /*!< [5..5] Pmn Output High Set                                                */
        __OM  uint32_t POSR06   : 1;            /*!< [6..6] Pmn Output High Set                                                */
        __OM  uint32_t POSR07   : 1;            /*!< [7..7] Pmn Output High Set                                                */
        __OM  uint32_t POSR08   : 1;            /*!< [8..8] Pmn Output High Set                                                */
        __OM  uint32_t POSR09   : 1;            /*!< [9..9] Pmn Output High Set                                                */
        __OM  uint32_t POSR10   : 1;            /*!< [10..10] Pmn Output High Set                                              */
        __OM  uint32_t POSR11   : 1;            /*!< [11..11] Pmn Output High Set                                              */
        __OM  uint32_t POSR12   : 1;            /*!< [12..12] Pmn Output High Set                                              */
        __OM  uint32_t POSR13   : 1;            /*!< [13..13] Pmn Output High Set                                              */
        __OM  uint32_t POSR14   : 1;            /*!< [14..14] Pmn Output High Set                                              */
        __OM  uint32_t POSR15   : 1;            /*!< [15..15] Pmn Output High Set                                              */
        __OM  uint32_t PORR00   : 1;            /*!< [16..16] Pmn Output Low Set                                               */
        __OM  uint32_t PORR01   : 1;            /*!< [17..17] Pmn Output Low Set                                               */
        __OM  uint32_t PORR02   : 1;            /*!< [18..18] Pmn Output Low Set                                               */
        __OM  uint32_t PORR03   : 1;            /*!< [19..19] Pmn Output Low Set                                               */
        __OM  uint32_t PORR04   : 1;            /*!< [20..20] Pmn Output Low Set                                               */
        __OM  uint32_t PORR05   : 1;            /*!< [21..21] Pmn Output Low Set                                               */
        __OM  uint32_t PORR06   : 1;            /*!< [22..22] Pmn Output Low Set                                               */
        __OM  uint32_t PORR07   : 1;            /*!< [23..23] Pmn Output Low Set                                               */
        __OM  uint32_t PORR08   : 1;            /*!< [24..24] Pmn Output Low Set                                               */
        __OM  uint32_t PORR09   : 1;            /*!< [25..25] Pmn Output Low Set                                               */
        __OM  uint32_t PORR10   : 1;            /*!< [26..26] Pmn Output Low Set                                               */
        __OM  uint32_t PORR11   : 1;            /*!< [27..27] Pmn Output Low Set                                               */
        __OM  uint32_t PORR12   : 1;            /*!< [28..28] Pmn Output Low Set                                               */
        __OM  uint32_t PORR13   : 1;            /*!< [29..29] Pmn Output Low Set                                               */
        __OM  uint32_t PORR14   : 1;            /*!< [30..30] Pmn Output Low Set                                               */
        __OM  uint32_t PORR15   : 1;            /*!< [31..31] Pmn Output Low Set                                               */
      } PCNTR3_b;
    } ;
    
    struct {
      union {
        __OM  uint16_t PORR;                    /*!< (@ 0x00000008) Port Control Register 3                                    */
        
        struct {
          __OM  uint16_t PORR00 : 1;            /*!< [0..0] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR01 : 1;            /*!< [1..1] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR02 : 1;            /*!< [2..2] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR03 : 1;            /*!< [3..3] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR04 : 1;            /*!< [4..4] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR05 : 1;            /*!< [5..5] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR06 : 1;            /*!< [6..6] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR07 : 1;            /*!< [7..7] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR08 : 1;            /*!< [8..8] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR09 : 1;            /*!< [9..9] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR10 : 1;            /*!< [10..10] Pmn Output Low Set                                               */
          __OM  uint16_t PORR11 : 1;            /*!< [11..11] Pmn Output Low Set                                               */
          __OM  uint16_t PORR12 : 1;            /*!< [12..12] Pmn Output Low Set                                               */
          __OM  uint16_t PORR13 : 1;            /*!< [13..13] Pmn Output Low Set                                               */
          __OM  uint16_t PORR14 : 1;            /*!< [14..14] Pmn Output Low Set                                               */
          __OM  uint16_t PORR15 : 1;            /*!< [15..15] Pmn Output Low Set                                               */
        } PORR_b;
      } ;
      
      union {
        __OM  uint16_t POSR;                    /*!< (@ 0x0000000A) Port Control Register 3                                    */
        
        struct {
          __OM  uint16_t POSR00 : 1;            /*!< [0..0] Pmn Output High Set                                                */
          __OM  uint16_t POSR01 : 1;            /*!< [1..1] Pmn Output High Set                                                */
          __OM  uint16_t POSR02 : 1;            /*!< [2..2] Pmn Output High Set                                                */
          __OM  uint16_t POSR03 : 1;            /*!< [3..3] Pmn Output High Set                                                */
          __OM  uint16_t POSR04 : 1;            /*!< [4..4] Pmn Output High Set                                                */
          __OM  uint16_t POSR05 : 1;            /*!< [5..5] Pmn Output High Set                                                */
          __OM  uint16_t POSR06 : 1;            /*!< [6..6] Pmn Output High Set                                                */
          __OM  uint16_t POSR07 : 1;            /*!< [7..7] Pmn Output High Set                                                */
          __OM  uint16_t POSR08 : 1;            /*!< [8..8] Pmn Output High Set                                                */
          __OM  uint16_t POSR09 : 1;            /*!< [9..9] Pmn Output High Set                                                */
          __OM  uint16_t POSR10 : 1;            /*!< [10..10] Pmn Output High Set                                              */
          __OM  uint16_t POSR11 : 1;            /*!< [11..11] Pmn Output High Set                                              */
          __OM  uint16_t POSR12 : 1;            /*!< [12..12] Pmn Output High Set                                              */
          __OM  uint16_t POSR13 : 1;            /*!< [13..13] Pmn Output High Set                                              */
          __OM  uint16_t POSR14 : 1;            /*!< [14..14] Pmn Output High Set                                              */
          __OM  uint16_t POSR15 : 1;            /*!< [15..15] Pmn Output High Set                                              */
        } POSR_b;
      } ;
    };
  };
  
  union {
    union {
      __IOM uint32_t PCNTR4;                    /*!< (@ 0x0000000C) Port Control Register 4                                    */
      
      struct {
        __IOM uint32_t EOSR00   : 1;            /*!< [0..0] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR01   : 1;            /*!< [1..1] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR02   : 1;            /*!< [2..2] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR03   : 1;            /*!< [3..3] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR04   : 1;            /*!< [4..4] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR05   : 1;            /*!< [5..5] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR06   : 1;            /*!< [6..6] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR07   : 1;            /*!< [7..7] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR08   : 1;            /*!< [8..8] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR09   : 1;            /*!< [9..9] Pmn Event High Output Set                                          */
        __IOM uint32_t EOSR10   : 1;            /*!< [10..10] Pmn Event High Output Set                                        */
        __IOM uint32_t EOSR11   : 1;            /*!< [11..11] Pmn Event High Output Set                                        */
        __IOM uint32_t EOSR12   : 1;            /*!< [12..12] Pmn Event High Output Set                                        */
        __IOM uint32_t EOSR13   : 1;            /*!< [13..13] Pmn Event High Output Set                                        */
        __IOM uint32_t EOSR14   : 1;            /*!< [14..14] Pmn Event High Output Set                                        */
        __IOM uint32_t EOSR15   : 1;            /*!< [15..15] Pmn Event High Output Set                                        */
        __IOM uint32_t EORR00   : 1;            /*!< [16..16] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR01   : 1;            /*!< [17..17] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR02   : 1;            /*!< [18..18] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR03   : 1;            /*!< [19..19] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR04   : 1;            /*!< [20..20] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR05   : 1;            /*!< [21..21] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR06   : 1;            /*!< [22..22] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR07   : 1;            /*!< [23..23] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR08   : 1;            /*!< [24..24] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR09   : 1;            /*!< [25..25] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR10   : 1;            /*!< [26..26] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR11   : 1;            /*!< [27..27] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR12   : 1;            /*!< [28..28] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR13   : 1;            /*!< [29..29] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR14   : 1;            /*!< [30..30] Pmn Event Low Output Set                                         */
        __IOM uint32_t EORR15   : 1;            /*!< [31..31] Pmn Event Low Output Set                                         */
      } PCNTR4_b;
    } ;
    
    struct {
      union {
        __IOM uint16_t EORR;                    /*!< (@ 0x0000000C) Port Control Register 4                                    */
        
        struct {
          __IOM uint16_t EORR00 : 1;            /*!< [0..0] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR01 : 1;            /*!< [1..1] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR02 : 1;            /*!< [2..2] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR03 : 1;            /*!< [3..3] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR04 : 1;            /*!< [4..4] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR05 : 1;            /*!< [5..5] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR06 : 1;            /*!< [6..6] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR07 : 1;            /*!< [7..7] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR08 : 1;            /*!< [8..8] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR09 : 1;            /*!< [9..9] Pmn Event Low Output Set                                           */
          __IOM uint16_t EORR10 : 1;            /*!< [10..10] Pmn Event Low Output Set                                         */
          __IOM uint16_t EORR11 : 1;            /*!< [11..11] Pmn Event Low Output Set                                         */
          __IOM uint16_t EORR12 : 1;            /*!< [12..12] Pmn Event Low Output Set                                         */
          __IOM uint16_t EORR13 : 1;            /*!< [13..13] Pmn Event Low Output Set                                         */
          __IOM uint16_t EORR14 : 1;            /*!< [14..14] Pmn Event Low Output Set                                         */
          __IOM uint16_t EORR15 : 1;            /*!< [15..15] Pmn Event Low Output Set                                         */
        } EORR_b;
      } ;
      
      union {
        __IOM uint16_t EOSR;                    /*!< (@ 0x0000000E) Port Control Register 4                                    */
        
        struct {
          __IOM uint16_t EOSR00 : 1;            /*!< [0..0] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR01 : 1;            /*!< [1..1] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR02 : 1;            /*!< [2..2] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR03 : 1;            /*!< [3..3] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR04 : 1;            /*!< [4..4] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR05 : 1;            /*!< [5..5] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR06 : 1;            /*!< [6..6] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR07 : 1;            /*!< [7..7] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR08 : 1;            /*!< [8..8] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR09 : 1;            /*!< [9..9] Pmn Event High Output Set                                          */
          __IOM uint16_t EOSR10 : 1;            /*!< [10..10] Pmn Event High Output Set                                        */
          __IOM uint16_t EOSR11 : 1;            /*!< [11..11] Pmn Event High Output Set                                        */
          __IOM uint16_t EOSR12 : 1;            /*!< [12..12] Pmn Event High Output Set                                        */
          __IOM uint16_t EOSR13 : 1;            /*!< [13..13] Pmn Event High Output Set                                        */
          __IOM uint16_t EOSR14 : 1;            /*!< [14..14] Pmn Event High Output Set                                        */
          __IOM uint16_t EOSR15 : 1;            /*!< [15..15] Pmn Event High Output Set                                        */
        } EOSR_b;
      } ;
    };
  };
} PORT3_Type;                                   /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                           PORT4                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Port 4 Control Registers (PORT4)
  */

typedef struct {                                /*!< (@ 0x40040080) PORT4 Structure                                            */
  
  union {
    union {
      __IOM uint32_t PCNTR1;                    /*!< (@ 0x00000000) Port Control Register 1                                    */
      
      struct {
        __IOM uint32_t PDR00    : 1;            /*!< [0..0] Pmn Direction Control                                              */
        __IOM uint32_t PDR01    : 1;            /*!< [1..1] Pmn Direction Control                                              */
        __IOM uint32_t PDR02    : 1;            /*!< [2..2] Pmn Direction Control                                              */
        __IOM uint32_t PDR03    : 1;            /*!< [3..3] Pmn Direction Control                                              */
        __IOM uint32_t PDR04    : 1;            /*!< [4..4] Pmn Direction Control                                              */
        __IOM uint32_t PDR05    : 1;            /*!< [5..5] Pmn Direction Control                                              */
        __IOM uint32_t PDR06    : 1;            /*!< [6..6] Pmn Direction Control                                              */
        __IOM uint32_t PDR07    : 1;            /*!< [7..7] Pmn Direction Control                                              */
        __IOM uint32_t PDR08    : 1;            /*!< [8..8] Pmn Direction Control                                              */
        __IOM uint32_t PDR09    : 1;            /*!< [9..9] Pmn Direction Control                                              */
        __IOM uint32_t PDR10    : 1;            /*!< [10..10] Pmn Direction Control                                            */
        __IOM uint32_t PDR11    : 1;            /*!< [11..11] Pmn Direction Control                                            */
        __IOM uint32_t PDR12    : 1;            /*!< [12..12] Pmn Direction Control                                            */
        __IOM uint32_t PDR13    : 1;            /*!< [13..13] Pmn Direction Control                                            */
        __IOM uint32_t PDR14    : 1;            /*!< [14..14] Pmn Direction Control                                            */
        __IOM uint32_t PDR15    : 1;            /*!< [15..15] Pmn Direction Control                                            */
        __IOM uint32_t PODR00   : 1;            /*!< [16..16] Pmn Output Data Store                                            */
        __IOM uint32_t PODR01   : 1;            /*!< [17..17] Pmn Output Data Store                                            */
        __IOM uint32_t PODR02   : 1;            /*!< [18..18] Pmn Output Data Store                                            */
        __IOM uint32_t PODR03   : 1;            /*!< [19..19] Pmn Output Data Store                                            */
        __IOM uint32_t PODR04   : 1;            /*!< [20..20] Pmn Output Data Store                                            */
        __IOM uint32_t PODR05   : 1;            /*!< [21..21] Pmn Output Data Store                                            */
        __IOM uint32_t PODR06   : 1;            /*!< [22..22] Pmn Output Data Store                                            */
        __IOM uint32_t PODR07   : 1;            /*!< [23..23] Pmn Output Data Store                                            */
        __IOM uint32_t PODR08   : 1;            /*!< [24..24] Pmn Output Data Store                                            */
        __IOM uint32_t PODR09   : 1;            /*!< [25..25] Pmn Output Data Store                                            */
        __IOM uint32_t PODR10   : 1;            /*!< [26..26] Pmn Output Data Store                                            */
        __IOM uint32_t PODR11   : 1;            /*!< [27..27] Pmn Output Data Store                                            */
        __IOM uint32_t PODR12   : 1;            /*!< [28..28] Pmn Output Data Store                                            */
        __IOM uint32_t PODR13   : 1;            /*!< [29..29] Pmn Output Data Store                                            */
        __IOM uint32_t PODR14   : 1;            /*!< [30..30] Pmn Output Data Store                                            */
        __IOM uint32_t PODR15   : 1;            /*!< [31..31] Pmn Output Data Store                                            */
      } PCNTR1_b;
    } ;
    
    struct {
      union {
        __IOM uint16_t PODR;                    /*!< (@ 0x00000000) Port Control Register 1                                    */
        
        struct {
          __IOM uint16_t PODR00 : 1;            /*!< [0..0] Pmn Output Data Store                                              */
          __IOM uint16_t PODR01 : 1;            /*!< [1..1] Pmn Output Data Store                                              */
          __IOM uint16_t PODR02 : 1;            /*!< [2..2] Pmn Output Data Store                                              */
          __IOM uint16_t PODR03 : 1;            /*!< [3..3] Pmn Output Data Store                                              */
          __IOM uint16_t PODR04 : 1;            /*!< [4..4] Pmn Output Data Store                                              */
          __IOM uint16_t PODR05 : 1;            /*!< [5..5] Pmn Output Data Store                                              */
          __IOM uint16_t PODR06 : 1;            /*!< [6..6] Pmn Output Data Store                                              */
          __IOM uint16_t PODR07 : 1;            /*!< [7..7] Pmn Output Data Store                                              */
          __IOM uint16_t PODR08 : 1;            /*!< [8..8] Pmn Output Data Store                                              */
          __IOM uint16_t PODR09 : 1;            /*!< [9..9] Pmn Output Data Store                                              */
          __IOM uint16_t PODR10 : 1;            /*!< [10..10] Pmn Output Data Store                                            */
          __IOM uint16_t PODR11 : 1;            /*!< [11..11] Pmn Output Data Store                                            */
          __IOM uint16_t PODR12 : 1;            /*!< [12..12] Pmn Output Data Store                                            */
          __IOM uint16_t PODR13 : 1;            /*!< [13..13] Pmn Output Data Store                                            */
          __IOM uint16_t PODR14 : 1;            /*!< [14..14] Pmn Output Data Store                                            */
          __IOM uint16_t PODR15 : 1;            /*!< [15..15] Pmn Output Data Store                                            */
        } PODR_b;
      } ;
      
      union {
        __IOM uint16_t PDR;                     /*!< (@ 0x00000002) Port Control Register 1                                    */
        
        struct {
          __IOM uint16_t PDR00  : 1;            /*!< [0..0] Pmn Direction Control                                              */
          __IOM uint16_t PDR01  : 1;            /*!< [1..1] Pmn Direction Control                                              */
          __IOM uint16_t PDR02  : 1;            /*!< [2..2] Pmn Direction Control                                              */
          __IOM uint16_t PDR03  : 1;            /*!< [3..3] Pmn Direction Control                                              */
          __IOM uint16_t PDR04  : 1;            /*!< [4..4] Pmn Direction Control                                              */
          __IOM uint16_t PDR05  : 1;            /*!< [5..5] Pmn Direction Control                                              */
          __IOM uint16_t PDR06  : 1;            /*!< [6..6] Pmn Direction Control                                              */
          __IOM uint16_t PDR07  : 1;            /*!< [7..7] Pmn Direction Control                                              */
          __IOM uint16_t PDR08  : 1;            /*!< [8..8] Pmn Direction Control                                              */
          __IOM uint16_t PDR09  : 1;            /*!< [9..9] Pmn Direction Control                                              */
          __IOM uint16_t PDR10  : 1;            /*!< [10..10] Pmn Direction Control                                            */
          __IOM uint16_t PDR11  : 1;            /*!< [11..11] Pmn Direction Control                                            */
          __IOM uint16_t PDR12  : 1;            /*!< [12..12] Pmn Direction Control                                            */
          __IOM uint16_t PDR13  : 1;            /*!< [13..13] Pmn Direction Control                                            */
          __IOM uint16_t PDR14  : 1;            /*!< [14..14] Pmn Direction Control                                            */
          __IOM uint16_t PDR15  : 1;            /*!< [15..15] Pmn Direction Control                                            */
        } PDR_b;
      } ;
    };
  };
  
  union {
    union {
      __IM  uint32_t PCNTR2;                    /*!< (@ 0x00000004) Port Control Register 2                                    */
      
      struct {
        __IM  uint32_t PIDR00   : 1;            /*!< [0..0] Pmn Input Data                                                     */
        __IM  uint32_t PIDR01   : 1;            /*!< [1..1] Pmn Input Data                                                     */
        __IM  uint32_t PIDR02   : 1;            /*!< [2..2] Pmn Input Data                                                     */
        __IM  uint32_t PIDR03   : 1;            /*!< [3..3] Pmn Input Data                                                     */
        __IM  uint32_t PIDR04   : 1;            /*!< [4..4] Pmn Input Data                                                     */
        __IM  uint32_t PIDR05   : 1;            /*!< [5..5] Pmn Input Data                                                     */
        __IM  uint32_t PIDR06   : 1;            /*!< [6..6] Pmn Input Data                                                     */
        __IM  uint32_t PIDR07   : 1;            /*!< [7..7] Pmn Input Data                                                     */
        __IM  uint32_t PIDR08   : 1;            /*!< [8..8] Pmn Input Data                                                     */
        __IM  uint32_t PIDR09   : 1;            /*!< [9..9] Pmn Input Data                                                     */
        __IM  uint32_t PIDR10   : 1;            /*!< [10..10] Pmn Input Data                                                   */
        __IM  uint32_t PIDR11   : 1;            /*!< [11..11] Pmn Input Data                                                   */
        __IM  uint32_t PIDR12   : 1;            /*!< [12..12] Pmn Input Data                                                   */
        __IM  uint32_t PIDR13   : 1;            /*!< [13..13] Pmn Input Data                                                   */
        __IM  uint32_t PIDR14   : 1;            /*!< [14..14] Pmn Input Data                                                   */
        __IM  uint32_t PIDR15   : 1;            /*!< [15..15] Pmn Input Data                                                   */
              uint32_t          : 16;
      } PCNTR2_b;
    } ;
    
    struct {
      __IM  uint16_t RESERVED;
      
      union {
        __IM  uint16_t PIDR;                    /*!< (@ 0x00000006) Port Control Register 2                                    */
        
        struct {
          __IM  uint16_t PIDR00 : 1;            /*!< [0..0] Pmn Input Data                                                     */
          __IM  uint16_t PIDR01 : 1;            /*!< [1..1] Pmn Input Data                                                     */
          __IM  uint16_t PIDR02 : 1;            /*!< [2..2] Pmn Input Data                                                     */
          __IM  uint16_t PIDR03 : 1;            /*!< [3..3] Pmn Input Data                                                     */
          __IM  uint16_t PIDR04 : 1;            /*!< [4..4] Pmn Input Data                                                     */
          __IM  uint16_t PIDR05 : 1;            /*!< [5..5] Pmn Input Data                                                     */
          __IM  uint16_t PIDR06 : 1;            /*!< [6..6] Pmn Input Data                                                     */
          __IM  uint16_t PIDR07 : 1;            /*!< [7..7] Pmn Input Data                                                     */
          __IM  uint16_t PIDR08 : 1;            /*!< [8..8] Pmn Input Data                                                     */
          __IM  uint16_t PIDR09 : 1;            /*!< [9..9] Pmn Input Data                                                     */
          __IM  uint16_t PIDR10 : 1;            /*!< [10..10] Pmn Input Data                                                   */
          __IM  uint16_t PIDR11 : 1;            /*!< [11..11] Pmn Input Data                                                   */
          __IM  uint16_t PIDR12 : 1;            /*!< [12..12] Pmn Input Data                                                   */
          __IM  uint16_t PIDR13 : 1;            /*!< [13..13] Pmn Input Data                                                   */
          __IM  uint16_t PIDR14 : 1;            /*!< [14..14] Pmn Input Data                                                   */
          __IM  uint16_t PIDR15 : 1;            /*!< [15..15] Pmn Input Data                                                   */
        } PIDR_b;
      } ;
    };
  };
  
  union {
    union {
      __OM  uint32_t PCNTR3;                    /*!< (@ 0x00000008) Port Control Register 3                                    */
      
      struct {
        __OM  uint32_t POSR00   : 1;            /*!< [0..0] Pmn Output High Set                                                */
        __OM  uint32_t POSR01   : 1;            /*!< [1..1] Pmn Output High Set                                                */
        __OM  uint32_t POSR02   : 1;            /*!< [2..2] Pmn Output High Set                                                */
        __OM  uint32_t POSR03   : 1;            /*!< [3..3] Pmn Output High Set                                                */
        __OM  uint32_t POSR04   : 1;            /*!< [4..4] Pmn Output High Set                                                */
        __OM  uint32_t POSR05   : 1;            /*!< [5..5] Pmn Output High Set                                                */
        __OM  uint32_t POSR06   : 1;            /*!< [6..6] Pmn Output High Set                                                */
        __OM  uint32_t POSR07   : 1;            /*!< [7..7] Pmn Output High Set                                                */
        __OM  uint32_t POSR08   : 1;            /*!< [8..8] Pmn Output High Set                                                */
        __OM  uint32_t POSR09   : 1;            /*!< [9..9] Pmn Output High Set                                                */
        __OM  uint32_t POSR10   : 1;            /*!< [10..10] Pmn Output High Set                                              */
        __OM  uint32_t POSR11   : 1;            /*!< [11..11] Pmn Output High Set                                              */
        __OM  uint32_t POSR12   : 1;            /*!< [12..12] Pmn Output High Set                                              */
        __OM  uint32_t POSR13   : 1;            /*!< [13..13] Pmn Output High Set                                              */
        __OM  uint32_t POSR14   : 1;            /*!< [14..14] Pmn Output High Set                                              */
        __OM  uint32_t POSR15   : 1;            /*!< [15..15] Pmn Output High Set                                              */
        __OM  uint32_t PORR00   : 1;            /*!< [16..16] Pmn Output Low Set                                               */
        __OM  uint32_t PORR01   : 1;            /*!< [17..17] Pmn Output Low Set                                               */
        __OM  uint32_t PORR02   : 1;            /*!< [18..18] Pmn Output Low Set                                               */
        __OM  uint32_t PORR03   : 1;            /*!< [19..19] Pmn Output Low Set                                               */
        __OM  uint32_t PORR04   : 1;            /*!< [20..20] Pmn Output Low Set                                               */
        __OM  uint32_t PORR05   : 1;            /*!< [21..21] Pmn Output Low Set                                               */
        __OM  uint32_t PORR06   : 1;            /*!< [22..22] Pmn Output Low Set                                               */
        __OM  uint32_t PORR07   : 1;            /*!< [23..23] Pmn Output Low Set                                               */
        __OM  uint32_t PORR08   : 1;            /*!< [24..24] Pmn Output Low Set                                               */
        __OM  uint32_t PORR09   : 1;            /*!< [25..25] Pmn Output Low Set                                               */
        __OM  uint32_t PORR10   : 1;            /*!< [26..26] Pmn Output Low Set                                               */
        __OM  uint32_t PORR11   : 1;            /*!< [27..27] Pmn Output Low Set                                               */
        __OM  uint32_t PORR12   : 1;            /*!< [28..28] Pmn Output Low Set                                               */
        __OM  uint32_t PORR13   : 1;            /*!< [29..29] Pmn Output Low Set                                               */
        __OM  uint32_t PORR14   : 1;            /*!< [30..30] Pmn Output Low Set                                               */
        __OM  uint32_t PORR15   : 1;            /*!< [31..31] Pmn Output Low Set                                               */
      } PCNTR3_b;
    } ;
    
    struct {
      union {
        __OM  uint16_t PORR;                    /*!< (@ 0x00000008) Port Control Register 3                                    */
        
        struct {
          __OM  uint16_t PORR00 : 1;            /*!< [0..0] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR01 : 1;            /*!< [1..1] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR02 : 1;            /*!< [2..2] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR03 : 1;            /*!< [3..3] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR04 : 1;            /*!< [4..4] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR05 : 1;            /*!< [5..5] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR06 : 1;            /*!< [6..6] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR07 : 1;            /*!< [7..7] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR08 : 1;            /*!< [8..8] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR09 : 1;            /*!< [9..9] Pmn Output Low Set                                                 */
          __OM  uint16_t PORR10 : 1;            /*!< [10..10] Pmn Output Low Set                                               */
          __OM  uint16_t PORR11 : 1;            /*!< [11..11] Pmn Output Low Set                                               */
          __OM  uint16_t PORR12 : 1;            /*!< [12..12] Pmn Output Low Set                                               */
          __OM  uint16_t PORR13 : 1;            /*!< [13..13] Pmn Output Low Set                                               */
          __OM  uint16_t PORR14 : 1;            /*!< [14..14] Pmn Output Low Set                                               */
          __OM  uint16_t PORR15 : 1;            /*!< [15..15] Pmn Output Low Set                                               */
        } PORR_b;
      } ;
      
      union {
        __OM  uint16_t POSR;                    /*!< (@ 0x0000000A) Port Control Register 3                                    */
        
        struct {
          __OM  uint16_t POSR00 : 1;            /*!< [0..0] Pmn Output High Set                                                */
          __OM  uint16_t POSR01 : 1;            /*!< [1..1] Pmn Output High Set                                                */
          __OM  uint16_t POSR02 : 1;            /*!< [2..2] Pmn Output High Set                                                */
          __OM  uint16_t POSR03 : 1;            /*!< [3..3] Pmn Output High Set                                                */
          __OM  uint16_t POSR04 : 1;            /*!< [4..4] Pmn Output High Set                                                */
          __OM  uint16_t POSR05 : 1;            /*!< [5..5] Pmn Output High Set                                                */
          __OM  uint16_t POSR06 : 1;            /*!< [6..6] Pmn Output High Set                                                */
          __OM  uint16_t POSR07 : 1;            /*!< [7..7] Pmn Output High Set                                                */
          __OM  uint16_t POSR08 : 1;            /*!< [8..8] Pmn Output High Set                                                */
          __OM  uint16_t POSR09 : 1;            /*!< [9..9] Pmn Output High Set                                                */
          __OM  uint16_t POSR10 : 1;            /*!< [10..10] Pmn Output High Set                                              */
          __OM  uint16_t POSR11 : 1;            /*!< [11..11] Pmn Output High Set                                              */
          __OM  uint16_t POSR12 : 1;            /*!< [12..12] Pmn Output High Set                                              */
          __OM  uint16_t POSR13 : 1;            /*!< [13..13] Pmn Output High Set                                              */
          __OM  uint16_t POSR14 : 1;            /*!< [14..14] Pmn Output High Set                                              */
          __OM  uint16_t POSR15 : 1;            /*!< [15..15] Pmn Output High Set                                              */
        } POSR_b;
      } ;
    };
  };
} PORT4_Type;                                   /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                            PFS                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Pmn Pin Function Control Register (PFS)
  */

typedef struct {                                /*!< (@ 0x40040800) PFS Structure                                              */
  
  union {
    __IOM uint32_t P000PFS;                     /*!< (@ 0x00000000) Port 000 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P000PFS_b;
  } ;
  
  union {
    __IOM uint32_t P001PFS;                     /*!< (@ 0x00000004) Port 001 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P001PFS_b;
  } ;
  
  union {
    __IOM uint32_t P002PFS;                     /*!< (@ 0x00000008) Port 002 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P002PFS_b;
  } ;
  
  union {
    __IOM uint32_t P003PFS;                     /*!< (@ 0x0000000C) Port 003 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P003PFS_b;
  } ;
  
  union {
    __IOM uint32_t P004PFS;                     /*!< (@ 0x00000010) Port 004 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P004PFS_b;
  } ;
  
  union {
    __IOM uint32_t P005PFS;                     /*!< (@ 0x00000014) Port 005 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P005PFS_b;
  } ;
  
  union {
    __IOM uint32_t P006PFS;                     /*!< (@ 0x00000018) Port 006 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P006PFS_b;
  } ;
  
  union {
    __IOM uint32_t P007PFS;                     /*!< (@ 0x0000001C) Port 007 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P007PFS_b;
  } ;
  __IM  uint32_t  RESERVED[2];
  
  union {
    __IOM uint32_t P010PFS;                     /*!< (@ 0x00000028) Port 010 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P010PFS_b;
  } ;
  
  union {
    __IOM uint32_t P011PFS;                     /*!< (@ 0x0000002C) Port 011 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P011PFS_b;
  } ;
  
  union {
    __IOM uint32_t P012PFS;                     /*!< (@ 0x00000030) Port 012 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P012PFS_b;
  } ;
  
  union {
    __IOM uint32_t P013PFS;                     /*!< (@ 0x00000034) Port 013 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P013PFS_b;
  } ;
  
  union {
    __IOM uint32_t P014PFS;                     /*!< (@ 0x00000038) Port 014 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P014PFS_b;
  } ;
  
  union {
    __IOM uint32_t P015PFS;                     /*!< (@ 0x0000003C) Port 015 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P015PFS_b;
  } ;
  
  union {
    __IOM uint32_t P100PFS;                     /*!< (@ 0x00000040) Port 100 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P100PFS_b;
  } ;
  
  union {
    __IOM uint32_t P101PFS;                     /*!< (@ 0x00000044) Port 101 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P101PFS_b;
  } ;
  
  union {
    __IOM uint32_t P102PFS;                     /*!< (@ 0x00000048) Port 102 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P102PFS_b;
  } ;
  
  union {
    __IOM uint32_t P103PFS;                     /*!< (@ 0x0000004C) Port 103 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P103PFS_b;
  } ;
  
  union {
    __IOM uint32_t P104PFS;                     /*!< (@ 0x00000050) Port 104 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P104PFS_b;
  } ;
  
  union {
    __IOM uint32_t P105PFS;                     /*!< (@ 0x00000054) Port 105 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P105PFS_b;
  } ;
  
  union {
    __IOM uint32_t P106PFS;                     /*!< (@ 0x00000058) Port 106 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P106PFS_b;
  } ;
  
  union {
    __IOM uint32_t P107PFS;                     /*!< (@ 0x0000005C) Port 107 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P107PFS_b;
  } ;
  
  union {
    __IOM uint32_t P108PFS;                     /*!< (@ 0x00000060) Port 108 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P108PFS_b;
  } ;
  
  union {
    __IOM uint32_t P109PFS;                     /*!< (@ 0x00000064) Port 109 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P109PFS_b;
  } ;
  
  union {
    __IOM uint32_t P110PFS;                     /*!< (@ 0x00000068) Port 110 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P110PFS_b;
  } ;
  
  union {
    __IOM uint32_t P111PFS;                     /*!< (@ 0x0000006C) Port 111 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P111PFS_b;
  } ;
  
  union {
    __IOM uint32_t P112PFS;                     /*!< (@ 0x00000070) Port 112 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P112PFS_b;
  } ;
  
  union {
    __IOM uint32_t P113PFS;                     /*!< (@ 0x00000074) Port 113 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P113PFS_b;
  } ;
  __IM  uint32_t  RESERVED1[2];
  
  union {
    __IOM uint32_t P200PFS;                     /*!< (@ 0x00000080) Port 200 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P200PFS_b;
  } ;
  
  union {
    __IOM uint32_t P201PFS;                     /*!< (@ 0x00000084) Port 201 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P201PFS_b;
  } ;
  
  union {
    __IOM uint32_t P202PFS;                     /*!< (@ 0x00000088) Port 202 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P202PFS_b;
  } ;
  
  union {
    __IOM uint32_t P203PFS;                     /*!< (@ 0x0000008C) Port 203 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P203PFS_b;
  } ;
  
  union {
    __IOM uint32_t P204PFS;                     /*!< (@ 0x00000090) Port 204 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P204PFS_b;
  } ;
  
  union {
    __IOM uint32_t P205PFS;                     /*!< (@ 0x00000094) Port 205 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P205PFS_b;
  } ;
  __IM  uint32_t  RESERVED2;
  
  union {
    __IOM uint32_t P207PFS;                     /*!< (@ 0x0000009C) Port 207 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P207PFS_b;
  } ;
  
  union {
    __IOM uint32_t P208PFS;                     /*!< (@ 0x000000A0) Port 208 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P208PFS_b;
  } ;
  
  union {
    __IOM uint32_t P209PFS;                     /*!< (@ 0x000000A4) Port 209 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P209PFS_b;
  } ;
  
  union {
    __IOM uint32_t P210PFS;                     /*!< (@ 0x000000A8) Port 210 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P210PFS_b;
  } ;
  __IM  uint32_t  RESERVED3[5];
  
  union {
    __IOM uint32_t P300PFS;                     /*!< (@ 0x000000C0) Port 300 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P300PFS_b;
  } ;
  
  union {
    __IOM uint32_t P301PFS;                     /*!< (@ 0x000000C4) Port 301 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P301PFS_b;
  } ;
  
  union {
    __IOM uint32_t P302PFS;                     /*!< (@ 0x000000C8) Port 302 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P302PFS_b;
  } ;
  __IM  uint32_t  RESERVED4[11];
  
  union {
    __IOM uint32_t P314PFS;                     /*!< (@ 0x000000F8) Port 314 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P314PFS_b;
  } ;
  
  union {
    __IOM uint32_t P315PFS;                     /*!< (@ 0x000000FC) Port 315 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 1;
      __IOM uint32_t EOFR       : 2;            /*!< [13..12] Edge detection                                                   */
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P315PFS_b;
  } ;
  __IM  uint32_t  RESERVED5[9];
  
  union {
    __IOM uint32_t P409PFS;                     /*!< (@ 0x00000124) Port 409 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P409PFS_b;
  } ;
  
  union {
    __IOM uint32_t P410PFS;                     /*!< (@ 0x00000128) Port 410 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P410PFS_b;
  } ;
  
  union {
    __IOM uint32_t P411PFS;                     /*!< (@ 0x0000012C) Port 411 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P411PFS_b;
  } ;
  
  union {
    __IOM uint32_t P412PFS;                     /*!< (@ 0x00000130) Port 412 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P412PFS_b;
  } ;
  
  union {
    __IOM uint32_t P413PFS;                     /*!< (@ 0x00000134) Port 413 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P413PFS_b;
  } ;
  __IM  uint32_t  RESERVED6[2];
  
  union {
    __IOM uint32_t P500PFS;                     /*!< (@ 0x00000140) Port 500Pin Function Select Register                       */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P500PFS_b;
  } ;
  
  union {
    __IOM uint32_t P501PFS;                     /*!< (@ 0x00000144) Port 501Pin Function Select Register                       */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P501PFS_b;
  } ;
  __IM  uint32_t  RESERVED7[6];
  
  union {
    __IOM uint32_t P508PFS;                     /*!< (@ 0x00000160) Port 508Pin Function Select Register                       */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P508PFS_b;
  } ;
  
  union {
    __IOM uint32_t P509PFS;                     /*!< (@ 0x00000164) Port 509Pin Function Select Register                       */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P509PFS_b;
  } ;
  
  union {
    __IOM uint32_t P510PFS;                     /*!< (@ 0x00000168) Port 510Pin Function Select Register                       */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P510PFS_b;
  } ;
  
  union {
    __IOM uint32_t P511PFS;                     /*!< (@ 0x0000016C) Port 511Pin Function Select Register                       */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P511PFS_b;
  } ;
  __IM  uint32_t  RESERVED8[4];
  
  union {
    __IOM uint32_t P600PFS;                     /*!< (@ 0x00000180) Port 600 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P600PFS_b;
  } ;
  
  union {
    __IOM uint32_t P601PFS;                     /*!< (@ 0x00000184) Port 601 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P601PFS_b;
  } ;
  
  union {
    __IOM uint32_t P602PFS;                     /*!< (@ 0x00000188) Port 602 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P602PFS_b;
  } ;
  
  union {
    __IOM uint32_t P603PFS;                     /*!< (@ 0x0000018C) Port 603 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P603PFS_b;
  } ;
  
  union {
    __IOM uint32_t P604PFS;                     /*!< (@ 0x00000190) Port 604 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P604PFS_b;
  } ;
  __IM  uint32_t  RESERVED9[11];
  
  union {
    __IOM uint32_t P700PFS;                     /*!< (@ 0x000001C0) Port 700 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P700PFS_b;
  } ;
  
  union {
    __IOM uint32_t P701PFS;                     /*!< (@ 0x000001C4) Port 701 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P701PFS_b;
  } ;
  
  union {
    __IOM uint32_t P702PFS;                     /*!< (@ 0x000001C8) Port 702 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P702PFS_b;
  } ;
  
  union {
    __IOM uint32_t P703PFS;                     /*!< (@ 0x000001CC) Port 703 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P703PFS_b;
  } ;
  
  union {
    __IOM uint32_t P704PFS;                     /*!< (@ 0x000001D0) Port 704 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P704PFS_b;
  } ;
  __IM  uint32_t  RESERVED10[17];
  
  union {
    __IOM uint32_t P806PFS;                     /*!< (@ 0x00000218) Port 806 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P806PFS_b;
  } ;
  
  union {
    __IOM uint32_t P807PFS;                     /*!< (@ 0x0000021C) Port 807 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P807PFS_b;
  } ;
  
  union {
    __IOM uint32_t P808PFS;                     /*!< (@ 0x00000220) Port 808 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P808PFS_b;
  } ;
  
  union {
    __IOM uint32_t P809PFS;                     /*!< (@ 0x00000224) Port 809 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P809PFS_b;
  } ;
  
  union {
    __IOM uint32_t P810PFS;                     /*!< (@ 0x00000228) Port 810 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P810PFS_b;
  } ;
  
  union {
    __IOM uint32_t P811PFS;                     /*!< (@ 0x0000022C) Port 811 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P811PFS_b;
  } ;
  
  union {
    __IOM uint32_t P812PFS;                     /*!< (@ 0x00000230) Port 812 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P812PFS_b;
  } ;
  
  union {
    __IOM uint32_t P813PFS;                     /*!< (@ 0x00000234) Port 813 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P813PFS_b;
  } ;
  
  union {
    __IOM uint32_t P814PFS;                     /*!< (@ 0x00000238) Port 814 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P814PFS_b;
  } ;
  
  union {
    __IOM uint32_t P815PFS;                     /*!< (@ 0x0000023C) Port 815 Pin Function Select Register                      */
    
    struct {
      __IOM uint32_t PODR       : 1;            /*!< [0..0] Port Output Data                                                   */
      __IM  uint32_t PIDR       : 1;            /*!< [1..1] Port Input Data                                                    */
      __IOM uint32_t PDR        : 1;            /*!< [2..2] Port Direction                                                     */
            uint32_t            : 1;
      __IOM uint32_t PUCR       : 1;            /*!< [4..4] Pull-Up Control                                                    */
            uint32_t            : 1;
      __IOM uint32_t NCODR      : 1;            /*!< [6..6] N-Channel Open-Drain Control                                       */
            uint32_t            : 3;
      __IOM uint32_t DSCR       : 1;            /*!< [10..10] Port Drive Capability                                            */
            uint32_t            : 3;
      __IOM uint32_t ISEL       : 1;            /*!< [14..14] IRQ Input Enable                                                 */
      __IOM uint32_t ASEL       : 1;            /*!< [15..15] Analog Input Enable                                              */
      __IOM uint32_t PMR        : 1;            /*!< [16..16] Port Mode Control                                                */
            uint32_t            : 7;
      __IOM uint32_t PSEL       : 5;            /*!< [28..24] Peripheral Function Select                                       */
            uint32_t            : 3;
    } P815PFS_b;
  } ;
  __IM  uint32_t  RESERVED11[176];
  __IM  uint16_t  RESERVED12;
  __IM  uint8_t   RESERVED13;
  
  union {
    __IOM uint8_t PWPR;                         /*!< (@ 0x00000503) Write-Protect Register                                     */
    
    struct {
            uint8_t             : 6;
      __IOM uint8_t PFSWE       : 1;            /*!< [6..6] PmnPFS Register Write Enable                                       */
      __IOM uint8_t B0WI        : 1;            /*!< [7..7] PFSWE Bit Write Disable                                            */
    } PWPR_b;
  } ;
} PFS_Type;                                     /*!< Size = 1284 (0x504)                                                       */



/* =========================================================================================================================== */
/* ================                                            ELC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Event Link Controller (ELC)
  */

typedef struct {                                /*!< (@ 0x40041000) ELC Structure                                              */
  
  union {
    __IOM uint8_t ELCR;                         /*!< (@ 0x00000000) Event Link Control Registers                               */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t ELCON       : 1;            /*!< [7..7] All Event Link Enable                                              */
    } ELCR_b;
  } ;
  __IM  uint8_t   RESERVED;
  
  union {
    __IOM uint8_t ELSEGR0;                      /*!< (@ 0x00000002) Event Link Software Event Generation Register
                                                                    0                                                          */
    
    struct {
      __OM  uint8_t SEG         : 1;            /*!< [0..0] Software Event Generation                                          */
            uint8_t             : 5;
      __IOM uint8_t WE          : 1;            /*!< [6..6] SEG Bit Write Enable                                               */
      __OM  uint8_t WI          : 1;            /*!< [7..7] ELSEGRn Register Write Disable                                     */
    } ELSEGR0_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t ELSEGR1;                      /*!< (@ 0x00000004) Event Link Software Event Generation Register
                                                                    1                                                          */
    
    struct {
      __OM  uint8_t SEG         : 1;            /*!< [0..0] Software Event Generation                                          */
            uint8_t             : 5;
      __IOM uint8_t WE          : 1;            /*!< [6..6] SEG Bit Write Enable                                               */
      __OM  uint8_t WI          : 1;            /*!< [7..7] ELSEGRn Register Write Disable                                     */
    } ELSEGR1_b;
  } ;
  __IM  uint8_t   RESERVED2;
  
  union {
    __IOM uint8_t ELOPA;                        /*!< (@ 0x00000006) Event Link Option Setting Register A                       */
    
    struct {
      __IOM uint8_t TMR0MD      : 2;            /*!< [1..0] TMR0 Operation Select Bit                                          */
      __IOM uint8_t TMR1MD      : 2;            /*!< [3..2] TMR1 Operation Select Bit                                          */
            uint8_t             : 4;
    } ELOPA_b;
  } ;
  __IM  uint8_t   RESERVED3;
  __IM  uint16_t  RESERVED4[4];
  
  union {
    __IOM uint16_t ELSR0;                       /*!< (@ 0x00000010) Event Link Setting Register 0                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR0_b;
  } ;
  __IM  uint16_t  RESERVED5;
  
  union {
    __IOM uint16_t ELSR1;                       /*!< (@ 0x00000014) Event Link Setting Register 1                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR1_b;
  } ;
  __IM  uint16_t  RESERVED6;
  
  union {
    __IOM uint16_t ELSR2;                       /*!< (@ 0x00000018) Event Link Setting Register 2                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR2_b;
  } ;
  __IM  uint16_t  RESERVED7;
  
  union {
    __IOM uint16_t ELSR3;                       /*!< (@ 0x0000001C) Event Link Setting Register 3                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR3_b;
  } ;
  __IM  uint16_t  RESERVED8[5];
  
  union {
    __IOM uint16_t ELSR6;                       /*!< (@ 0x00000028) Event Link Setting Register 6                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR6_b;
  } ;
  __IM  uint16_t  RESERVED9;
  
  union {
    __IOM uint16_t ELSR7;                       /*!< (@ 0x0000002C) Event Link Setting Register 7                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR7_b;
  } ;
  __IM  uint16_t  RESERVED10;
  
  union {
    __IOM uint16_t ELSR8;                       /*!< (@ 0x00000030) Event Link Setting Register 8                              */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR8_b;
  } ;
  __IM  uint16_t  RESERVED11[11];
  
  union {
    __IOM uint16_t ELSR14;                      /*!< (@ 0x00000048) Event Link Setting Register 14                             */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR14_b;
  } ;
  __IM  uint16_t  RESERVED12;
  
  union {
    __IOM uint16_t ELSR15;                      /*!< (@ 0x0000004C) Event Link Setting Register 15                             */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR15_b;
  } ;
  __IM  uint16_t  RESERVED13[5];
  
  union {
    __IOM uint16_t ELSR18;                      /*!< (@ 0x00000058) Event Link Setting Register 18                             */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR18_b;
  } ;
  __IM  uint16_t  RESERVED14;
  
  union {
    __IOM uint16_t ELSR19;                      /*!< (@ 0x0000005C) Event Link Setting Register 19                             */
    
    struct {
      __IOM uint16_t ELS        : 8;            /*!< [7..0] Event Link Select                                                  */
            uint16_t            : 8;
    } ELSR19_b;
  } ;
} ELC_Type;                                     /*!< Size = 94 (0x5e)                                                          */



/* =========================================================================================================================== */
/* ================                                           SCI2                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Communication Interface 2 (SCI2)
  */

typedef struct {                                /*!< (@ 0x40041240) SCI2 Structure                                             */
  
  union {
    union {
      __IOM uint8_t SMR;                        /*!< (@ 0x00000000) Serial Mode Register for Non-Smart Card Interface
                                                                    Mode (SCMR.SMIF = 0)                                       */
      
      struct {
        __IOM uint8_t CKS       : 2;            /*!< [1..0] Clock Select                                                       */
        __IOM uint8_t MP        : 1;            /*!< [2..2] Multi-Processor Mode                                               */
        __IOM uint8_t STOP      : 1;            /*!< [3..3] Stop Bit Length                                                    */
        __IOM uint8_t PM        : 1;            /*!< [4..4] Parity Mode                                                        */
        __IOM uint8_t PE        : 1;            /*!< [5..5] Parity Enable                                                      */
        __IOM uint8_t CHR       : 1;            /*!< [6..6] Character Length                                                   */
        __IOM uint8_t CM        : 1;            /*!< [7..7] Communication Mode                                                 */
      } SMR_b;
    } ;
    
    union {
      __IOM uint8_t SMR_SMCI;                   /*!< (@ 0x00000000) Serial Mode Register for Smart Card Interface
                                                                    Mode (SCMR.SMIF = 1)                                       */
      
      struct {
        __IOM uint8_t CKS       : 2;            /*!< [1..0] Clock Select                                                       */
        __IOM uint8_t BCP       : 2;            /*!< [3..2] Base Clock Pulse                                                   */
        __IOM uint8_t PM        : 1;            /*!< [4..4] Parity Mode                                                        */
        __IOM uint8_t PE        : 1;            /*!< [5..5] Parity Enable                                                      */
        __IOM uint8_t BLK       : 1;            /*!< [6..6] Block Transfer Mode                                                */
        __IOM uint8_t GM        : 1;            /*!< [7..7] GSM Mode                                                           */
      } SMR_SMCI_b;
    } ;
  };
  __IOM uint8_t   BRR;                          /*!< (@ 0x00000001) Bit Rate Register                                          */
  
  union {
    union {
      __IOM uint8_t SCR;                        /*!< (@ 0x00000002) Serial Control Register for Non-Smart Card Interface
                                                                    Mode (SCMR.SMIF = 0)                                       */
      
      struct {
        __IOM uint8_t CKE       : 2;            /*!< [1..0] Clock Enable                                                       */
        __IOM uint8_t TEIE      : 1;            /*!< [2..2] Transmit End Interrupt Enable                                      */
        __IOM uint8_t MPIE      : 1;            /*!< [3..3] Multi-Processor Interrupt Enable                                   */
        __IOM uint8_t RE        : 1;            /*!< [4..4] Receive Enable                                                     */
        __IOM uint8_t TE        : 1;            /*!< [5..5] Transmit Enable                                                    */
        __IOM uint8_t RIE       : 1;            /*!< [6..6] Receive Interrupt Enable                                           */
        __IOM uint8_t TIE       : 1;            /*!< [7..7] Transmit Interrupt Enable                                          */
      } SCR_b;
    } ;
    
    union {
      __IOM uint8_t SCR_SMCI;                   /*!< (@ 0x00000002) Serial Control Register for Smart Card Interface
                                                                    Mode (SCMR.SMIF = 1)                                       */
      
      struct {
        __IOM uint8_t CKE       : 2;            /*!< [1..0] Clock Enable                                                       */
        __IOM uint8_t TEIE      : 1;            /*!< [2..2] Transmit End Interrupt Enable                                      */
        __IOM uint8_t MPIE      : 1;            /*!< [3..3] Multi-Processor Interrupt Enable                                   */
        __IOM uint8_t RE        : 1;            /*!< [4..4] Receive Enable                                                     */
        __IOM uint8_t TE        : 1;            /*!< [5..5] Transmit Enable                                                    */
        __IOM uint8_t RIE       : 1;            /*!< [6..6] Receive Interrupt Enable                                           */
        __IOM uint8_t TIE       : 1;            /*!< [7..7] Transmit Interrupt Enable                                          */
      } SCR_SMCI_b;
    } ;
  };
  __IOM uint8_t   TDR;                          /*!< (@ 0x00000003) Transmit Data Register                                     */
  
  union {
    union {
      __IOM uint8_t SSR;                        /*!< (@ 0x00000004) Serial Status Register for Non-Smart Card Interface
                                                                    and Non-FIFO Mode (SCMR.SMIF = 0, FCR.FM
                                                                    = 0)                                                       */
      
      struct {
        __IOM uint8_t MPBT      : 1;            /*!< [0..0] Multi-Processor Bit Transfer                                       */
        __IM  uint8_t MPB       : 1;            /*!< [1..1] Multi-Processor                                                    */
        __IM  uint8_t TEND      : 1;            /*!< [2..2] Transmit End Flag                                                  */
        __IOM uint8_t PER       : 1;            /*!< [3..3] Parity Error Flag                                                  */
        __IOM uint8_t FER       : 1;            /*!< [4..4] Framing Error Flag                                                 */
        __IOM uint8_t ORER      : 1;            /*!< [5..5] Overrun Error Flag                                                 */
        __IOM uint8_t RDRF      : 1;            /*!< [6..6] Receive Data Full Flag                                             */
        __IOM uint8_t TDRE      : 1;            /*!< [7..7] Transmit Data Empty Flag                                           */
      } SSR_b;
    } ;
    
    union {
      __IOM uint8_t SSR_SMCI;                   /*!< (@ 0x00000004) Serial Status Register for Smart Card Interface
                                                                    Mode (SCMR.SMIF = 1)                                       */
      
      struct {
        __IOM uint8_t MPBT      : 1;            /*!< [0..0] Multi-Processor Bit Transfer                                       */
        __IM  uint8_t MPB       : 1;            /*!< [1..1] Multi-Processor                                                    */
        __IM  uint8_t TEND      : 1;            /*!< [2..2] Transmit End Flag                                                  */
        __IOM uint8_t PER       : 1;            /*!< [3..3] Parity Error Flag                                                  */
        __IOM uint8_t ERS       : 1;            /*!< [4..4] Error Signal Status Flag                                           */
        __IOM uint8_t ORER      : 1;            /*!< [5..5] Overrun Error Flag                                                 */
        __IOM uint8_t RDRF      : 1;            /*!< [6..6] Receive Data Full Flag                                             */
        __IOM uint8_t TDRE      : 1;            /*!< [7..7] Transmit Data Empty Flag                                           */
      } SSR_SMCI_b;
    } ;
  };
  __IM  uint8_t   RDR;                          /*!< (@ 0x00000005) Receive Data Register                                      */
  
  union {
    __IOM uint8_t SCMR;                         /*!< (@ 0x00000006) Smart Card Mode Register                                   */
    
    struct {
      __IOM uint8_t SMIF        : 1;            /*!< [0..0] Smart Card Interface Mode Select                                   */
            uint8_t             : 1;
      __IOM uint8_t SINV        : 1;            /*!< [2..2] Transmitted/Received Data Invert                                   */
      __IOM uint8_t SDIR        : 1;            /*!< [3..3] Transmitted/Received Data Transfer Direction                       */
      __IOM uint8_t CHR1        : 1;            /*!< [4..4] Character Length 1                                                 */
            uint8_t             : 2;
      __IOM uint8_t BCP2        : 1;            /*!< [7..7] Base Clock Pulse 2                                                 */
    } SCMR_b;
  } ;
  
  union {
    __IOM uint8_t SEMR;                         /*!< (@ 0x00000007) Serial Extended Mode Register                              */
    
    struct {
            uint8_t             : 2;
      __IOM uint8_t BRME        : 1;            /*!< [2..2] Bit Rate Modulation Enable                                         */
      __IOM uint8_t ABCSE       : 1;            /*!< [3..3] Asynchronous Mode Extended Base Clock Select 1                     */
      __IOM uint8_t ABCS        : 1;            /*!< [4..4] Basic Clock Selection                                              */
      __IOM uint8_t NFEN        : 1;            /*!< [5..5] Digital Noise Filter Function Enable                               */
      __IOM uint8_t BGDM        : 1;            /*!< [6..6] Baud Rate Generator Double-Speed Mode Select                       */
      __IOM uint8_t RXDESEL     : 1;            /*!< [7..7] Asynchronous Start Bit Edge Detection Select                       */
    } SEMR_b;
  } ;
  
  union {
    __IOM uint8_t SNFR;                         /*!< (@ 0x00000008) Noise Filter Setting Register                              */
    
    struct {
      __IOM uint8_t NFCS        : 3;            /*!< [2..0] Noise Filter Clock Select                                          */
            uint8_t             : 5;
    } SNFR_b;
  } ;
  
  union {
    __IOM uint8_t SIMR1;                        /*!< (@ 0x00000009) IIC Mode Register 1                                        */
    
    struct {
      __IOM uint8_t IICM        : 1;            /*!< [0..0] Simple IIC Mode Select                                             */
            uint8_t             : 2;
      __IOM uint8_t IICDL       : 5;            /*!< [7..3] SSDAn Delay Output Select                                          */
    } SIMR1_b;
  } ;
  
  union {
    __IOM uint8_t SIMR2;                        /*!< (@ 0x0000000A) IIC Mode Register 2                                        */
    
    struct {
      __IOM uint8_t IICINTM     : 1;            /*!< [0..0] IIC Interrupt Mode Select                                          */
      __IOM uint8_t IICCSC      : 1;            /*!< [1..1] Clock Synchronization                                              */
            uint8_t             : 3;
      __IOM uint8_t IICACKT     : 1;            /*!< [5..5] ACK Transmission Data                                              */
            uint8_t             : 2;
    } SIMR2_b;
  } ;
  
  union {
    __IOM uint8_t SIMR3;                        /*!< (@ 0x0000000B) IIC Mode Register 3                                        */
    
    struct {
      __IOM uint8_t IICSTAREQ   : 1;            /*!< [0..0] Start Condition Generation                                         */
      __IOM uint8_t IICRSTAREQ  : 1;            /*!< [1..1] Restart Condition Generation                                       */
      __IOM uint8_t IICSTPREQ   : 1;            /*!< [2..2] Stop Condition Generation                                          */
      __IOM uint8_t IICSTIF     : 1;            /*!< [3..3] Issuing of Start, Restart, or Stop Condition Completed
                                                     Flag                                                                      */
      __IOM uint8_t IICSDAS     : 2;            /*!< [5..4] SSDAn Output Select                                                */
      __IOM uint8_t IICSCLS     : 2;            /*!< [7..6] SSCLn Output Select                                                */
    } SIMR3_b;
  } ;
  
  union {
    __IM  uint8_t SISR;                         /*!< (@ 0x0000000C) IIC Status Register                                        */
    
    struct {
      __IM  uint8_t IICACKR     : 1;            /*!< [0..0] ACK Reception Data Flag                                            */
            uint8_t             : 7;
    } SISR_b;
  } ;
  
  union {
    __IOM uint8_t SPMR;                         /*!< (@ 0x0000000D) SPI Mode Register                                          */
    
    struct {
      __IOM uint8_t SSE         : 1;            /*!< [0..0] SSn Pin Function Enable                                            */
      __IOM uint8_t CTSE        : 1;            /*!< [1..1] CTS Enable                                                         */
      __IOM uint8_t MSS         : 1;            /*!< [2..2] Master Slave Select                                                */
            uint8_t             : 1;
      __IOM uint8_t MFF         : 1;            /*!< [4..4] Mode Fault Flag                                                    */
            uint8_t             : 1;
      __IOM uint8_t CKPOL       : 1;            /*!< [6..6] Clock Polarity Select                                              */
      __IOM uint8_t CKPH        : 1;            /*!< [7..7] Clock Phase Select                                                 */
    } SPMR_b;
  } ;
  
  union {
    __IOM uint16_t TDRHL;                       /*!< (@ 0x0000000E) Transmit Data Register                                     */
    
    struct {
      __IOM uint16_t TDAT       : 9;            /*!< [8..0] Serial Transmit Data                                               */
            uint16_t            : 7;
    } TDRHL_b;
  } ;
  
  union {
    __IM  uint16_t RDRHL;                       /*!< (@ 0x00000010) Receive Data Register                                      */
    
    struct {
      __IM  uint16_t RDAT       : 9;            /*!< [8..0] Serial Receive Data                                                */
            uint16_t            : 7;
    } RDRHL_b;
  } ;
  __IOM uint8_t   MDDR;                         /*!< (@ 0x00000012) Modulation Duty Register                                   */
  
  union {
    __IOM uint8_t DCCR;                         /*!< (@ 0x00000013) Data Compare Match Control Register                        */
    
    struct {
      __IOM uint8_t DCMF        : 1;            /*!< [0..0] Data Compare Match Flag                                            */
            uint8_t             : 2;
      __IOM uint8_t DPER        : 1;            /*!< [3..3] Data Compare Match Parity Error Flag                               */
      __IOM uint8_t DFER        : 1;            /*!< [4..4] Data Compare Match Framing Error Flag                              */
            uint8_t             : 1;
      __IOM uint8_t IDSEL       : 1;            /*!< [6..6] ID Frame Select                                                    */
      __IOM uint8_t DCME        : 1;            /*!< [7..7] Data Compare Match Enable                                          */
    } DCCR_b;
  } ;
  __IM  uint16_t  RESERVED[3];
  
  union {
    __IOM uint16_t CDR;                         /*!< (@ 0x0000001A) Compare Match Data Register                                */
    
    struct {
      __IOM uint16_t CMPD       : 9;            /*!< [8..0] Compare Match Data                                                 */
            uint16_t            : 7;
    } CDR_b;
  } ;
  
  union {
    __IOM uint8_t SPTR;                         /*!< (@ 0x0000001C) Serial Port Register                                       */
    
    struct {
      __IM  uint8_t RXDMON      : 1;            /*!< [0..0] Serial Input Data Monitor                                          */
      __IOM uint8_t SPB2DT      : 1;            /*!< [1..1] Serial Port Break Data Select                                      */
      __IOM uint8_t SPB2IO      : 1;            /*!< [2..2] Serial Port Break I/O                                              */
            uint8_t             : 5;
    } SPTR_b;
  } ;
  __IM  uint8_t   RESERVED1;
  __IM  uint16_t  RESERVED2;
} SCI2_Type;                                    /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                            POE                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Port Output Enable Module for GPT (POE)
  */

typedef struct {                                /*!< (@ 0x40042000) POE Structure                                              */
  
  union {
    __IOM uint32_t POEGGA;                      /*!< (@ 0x00000000) POE Group A Setting Register                               */
    
    struct {
      __IOM uint32_t PIDF       : 1;            /*!< [0..0] Port Input Detection Flag                                          */
      __IOM uint32_t IOCF       : 1;            /*!< [1..1] Detection Flag for GPT Output-Disable Request                      */
      __IOM uint32_t OSTPF      : 1;            /*!< [2..2] Oscillation Stop Detection Flag                                    */
      __IOM uint32_t SSF        : 1;            /*!< [3..3] Software Stop Flag                                                 */
      __IOM uint32_t PIDE       : 1;            /*!< [4..4] Port Input Detection Enable                                        */
      __IOM uint32_t IOCE       : 1;            /*!< [5..5] Enable for GPT Output-Disable Request                              */
      __IOM uint32_t OSTPE      : 1;            /*!< [6..6] Oscillation Stop Detection Enable                                  */
            uint32_t            : 9;
      __IM  uint32_t ST         : 1;            /*!< [16..16] GTETRGn Input Status Flag                                        */
            uint32_t            : 11;
      __IOM uint32_t INV        : 1;            /*!< [28..28] GTETRGn Input Reverse                                            */
      __IOM uint32_t NFEN       : 1;            /*!< [29..29] Noise Filter Enable                                              */
      __IOM uint32_t NFCS       : 2;            /*!< [31..30] Noise Filter Clock Select                                        */
    } POEGGA_b;
  } ;
  __IM  uint32_t  RESERVED[63];
  
  union {
    __IOM uint32_t POEGGB;                      /*!< (@ 0x00000100) POE Group B Setting Register                               */
    
    struct {
      __IOM uint32_t PIDF       : 1;            /*!< [0..0] Port Input Detection Flag                                          */
      __IOM uint32_t IOCF       : 1;            /*!< [1..1] Detection Flag for GPT Output-Disable Request                      */
      __IOM uint32_t OSTPF      : 1;            /*!< [2..2] Oscillation Stop Detection Flag                                    */
      __IOM uint32_t SSF        : 1;            /*!< [3..3] Software Stop Flag                                                 */
      __IOM uint32_t PIDE       : 1;            /*!< [4..4] Port Input Detection Enable                                        */
      __IOM uint32_t IOCE       : 1;            /*!< [5..5] Enable for GPT Output-Disable Request                              */
      __IOM uint32_t OSTPE      : 1;            /*!< [6..6] Oscillation Stop Detection Enable                                  */
            uint32_t            : 9;
      __IM  uint32_t ST         : 1;            /*!< [16..16] GTETRGn Input Status Flag                                        */
            uint32_t            : 11;
      __IOM uint32_t INV        : 1;            /*!< [28..28] GTETRGn Input Reverse                                            */
      __IOM uint32_t NFEN       : 1;            /*!< [29..29] Noise Filter Enable                                              */
      __IOM uint32_t NFCS       : 2;            /*!< [31..30] Noise Filter Clock Select                                        */
    } POEGGB_b;
  } ;
} POE_Type;                                     /*!< Size = 260 (0x104)                                                        */



/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Realtime Clock (RTC)
  */

typedef struct {                                /*!< (@ 0x40044000) RTC Structure                                              */
  
  union {
    __IM  uint8_t R64CNT;                       /*!< (@ 0x00000000) 64-Hz Counter                                              */
    
    struct {
      __IM  uint8_t F64HZ       : 1;            /*!< [0..0] 64-Hz Flag                                                         */
      __IM  uint8_t F32HZ       : 1;            /*!< [1..1] 32-Hz Flag                                                         */
      __IM  uint8_t F16HZ       : 1;            /*!< [2..2] 16-Hz Flag                                                         */
      __IM  uint8_t F8HZ        : 1;            /*!< [3..3] 8-Hz Flag                                                          */
      __IM  uint8_t F4HZ        : 1;            /*!< [4..4] 4-Hz Flag                                                          */
      __IM  uint8_t F2HZ        : 1;            /*!< [5..5] 2-Hz Flag                                                          */
      __IM  uint8_t F1HZ        : 1;            /*!< [6..6] 1-Hz Flag                                                          */
            uint8_t             : 1;
    } R64CNT_b;
  } ;
  __IM  uint8_t   RESERVED;
  
  union {
    union {
      __IOM uint8_t BCNT0;                      /*!< (@ 0x00000002) Binary Counter 0                                           */
      
      struct {
        __IOM uint8_t BCNT      : 8;            /*!< [7..0] Binary Counter                                                     */
      } BCNT0_b;
    } ;
    
    union {
      __IOM uint8_t RSECCNT;                    /*!< (@ 0x00000002) Second Counter (in Calendar Count Mode)                    */
      
      struct {
        __IOM uint8_t SEC1      : 4;            /*!< [3..0] 1-Second Count                                                     */
        __IOM uint8_t SEC10     : 3;            /*!< [6..4] 10-Second Count                                                    */
              uint8_t           : 1;
      } RSECCNT_b;
    } ;
  };
  __IM  uint8_t   RESERVED1;
  
  union {
    union {
      __IOM uint8_t BCNT1;                      /*!< (@ 0x00000004) Binary Counter 1                                           */
      
      struct {
        __IOM uint8_t BCNT      : 8;            /*!< [7..0] Binary Counter                                                     */
      } BCNT1_b;
    } ;
    
    union {
      __IOM uint8_t RMINCNT;                    /*!< (@ 0x00000004) Minute Counter (in Calendar Count Mode)                    */
      
      struct {
        __IOM uint8_t MIN1      : 4;            /*!< [3..0] 1-Minute Count                                                     */
        __IOM uint8_t MIN10     : 3;            /*!< [6..4] 10-Minute Count                                                    */
              uint8_t           : 1;
      } RMINCNT_b;
    } ;
  };
  __IM  uint8_t   RESERVED2;
  
  union {
    union {
      __IOM uint8_t BCNT2;                      /*!< (@ 0x00000006) Binary Counter 2                                           */
      
      struct {
        __IOM uint8_t BCNT      : 8;            /*!< [7..0] Binary Counter                                                     */
      } BCNT2_b;
    } ;
    
    union {
      __IOM uint8_t RHRCNT;                     /*!< (@ 0x00000006) Hour Counter (in Calendar Count Mode)                      */
      
      struct {
        __IOM uint8_t HR1       : 4;            /*!< [3..0] 1-Hour Count                                                       */
        __IOM uint8_t HR10      : 2;            /*!< [5..4] 10-Hour Count                                                      */
        __IOM uint8_t PM        : 1;            /*!< [6..6] AM/PM select for time counter setting.                             */
              uint8_t           : 1;
      } RHRCNT_b;
    } ;
  };
  __IM  uint8_t   RESERVED3;
  
  union {
    union {
      __IOM uint8_t BCNT3;                      /*!< (@ 0x00000008) Binary Counter 3                                           */
      
      struct {
        __IOM uint8_t BCNT      : 8;            /*!< [7..0] Binary Counter                                                     */
      } BCNT3_b;
    } ;
    
    union {
      __IOM uint8_t RWKCNT;                     /*!< (@ 0x00000008) Day-of-Week Counter (in Calendar Count Mode)               */
      
      struct {
        __IOM uint8_t DAYW      : 3;            /*!< [2..0] Day-of-Week Counting                                               */
              uint8_t           : 5;
      } RWKCNT_b;
    } ;
  };
  __IM  uint8_t   RESERVED4;
  
  union {
    __IOM uint8_t RDAYCNT;                      /*!< (@ 0x0000000A) Day Counter                                                */
    
    struct {
      __IOM uint8_t DATE1       : 4;            /*!< [3..0] 1-Day Count                                                        */
      __IOM uint8_t DATE10      : 2;            /*!< [5..4] 10-Day Count                                                       */
            uint8_t             : 2;
    } RDAYCNT_b;
  } ;
  __IM  uint8_t   RESERVED5;
  
  union {
    __IOM uint8_t RMONCNT;                      /*!< (@ 0x0000000C) Month Counter                                              */
    
    struct {
      __IOM uint8_t MON1        : 4;            /*!< [3..0] 1-Month Count                                                      */
      __IOM uint8_t MON10       : 1;            /*!< [4..4] 10-Month Count                                                     */
            uint8_t             : 3;
    } RMONCNT_b;
  } ;
  __IM  uint8_t   RESERVED6;
  
  union {
    __IOM uint16_t RYRCNT;                      /*!< (@ 0x0000000E) Year Counter                                               */
    
    struct {
      __IOM uint16_t YR1        : 4;            /*!< [3..0] 1-Year Count                                                       */
      __IOM uint16_t YR10       : 4;            /*!< [7..4] 10-Year Count                                                      */
            uint16_t            : 8;
    } RYRCNT_b;
  } ;
  
  union {
    union {
      __IOM uint8_t BCNT0AR;                    /*!< (@ 0x00000010) Binary Counter 0 Alarm Register                            */
      
      struct {
        __IOM uint8_t BCNTAR    : 8;            /*!< [7..0] Alarm register associated with the 32-bit binary counter           */
      } BCNT0AR_b;
    } ;
    
    union {
      __IOM uint8_t RSECAR;                     /*!< (@ 0x00000010) Second Alarm Register (in Calendar Count Mode)             */
      
      struct {
        __IOM uint8_t SEC1      : 4;            /*!< [3..0] 1 Second                                                           */
        __IOM uint8_t SEC10     : 3;            /*!< [6..4] 10 Seconds                                                         */
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RSECAR_b;
    } ;
  };
  __IM  uint8_t   RESERVED7;
  
  union {
    union {
      __IOM uint8_t BCNT1AR;                    /*!< (@ 0x00000012) Binary Counter 1 Alarm Register                            */
      
      struct {
        __IOM uint8_t BCNTAR    : 8;            /*!< [7..0] Alarm register associated with the 32-bit binary counter           */
      } BCNT1AR_b;
    } ;
    
    union {
      __IOM uint8_t RMINAR;                     /*!< (@ 0x00000012) Minute Alarm Register (in Calendar Count Mode)             */
      
      struct {
        __IOM uint8_t MIN1      : 4;            /*!< [3..0] 1 Minute                                                           */
        __IOM uint8_t MIN10     : 3;            /*!< [6..4] 10 Minutes                                                         */
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RMINAR_b;
    } ;
  };
  __IM  uint8_t   RESERVED8;
  
  union {
    union {
      __IOM uint8_t BCNT2AR;                    /*!< (@ 0x00000014) Binary Counter 2 Alarm Register                            */
      
      struct {
        __IOM uint8_t BCNTAR    : 8;            /*!< [7..0] Alarm register associated with the 32-bit binary counter           */
      } BCNT2AR_b;
    } ;
    
    union {
      __IOM uint8_t RHRAR;                      /*!< (@ 0x00000014) Hour Alarm Register (in Calendar Count Mode)               */
      
      struct {
        __IOM uint8_t HR1       : 4;            /*!< [3..0] 1 Hour                                                             */
        __IOM uint8_t HR10      : 2;            /*!< [5..4] 10 Hours                                                           */
        __IOM uint8_t PM        : 1;            /*!< [6..6] AM/PM select for alarm setting.                                    */
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RHRAR_b;
    } ;
  };
  __IM  uint8_t   RESERVED9;
  
  union {
    union {
      __IOM uint8_t BCNT3AR;                    /*!< (@ 0x00000016) Binary Counter 3 Alarm Register                            */
      
      struct {
        __IOM uint8_t BCNTAR    : 8;            /*!< [7..0] Alarm register associated with the 32-bit binary counter           */
      } BCNT3AR_b;
    } ;
    
    union {
      __IOM uint8_t RWKAR;                      /*!< (@ 0x00000016) Day-of-Week Alarm Register (in Calendar Count
                                                                    Mode)                                                      */
      
      struct {
        __IOM uint8_t DAYW      : 3;            /*!< [2..0] Day-of-Week Setting                                                */
              uint8_t           : 4;
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RWKAR_b;
    } ;
  };
  __IM  uint8_t   RESERVED10;
  
  union {
    union {
      __IOM uint8_t BCNT0AER;                   /*!< (@ 0x00000018) Binary Counter 0 Alarm Enable Register                     */
      
      struct {
        __IOM uint8_t ENB       : 8;            /*!< [7..0] Setting the alarm enable associated with the 32-bit binary
                                                     counter                                                                   */
      } BCNT0AER_b;
    } ;
    
    union {
      __IOM uint8_t RDAYAR;                     /*!< (@ 0x00000018) Date Alarm Register (in Calendar Count Mode)               */
      
      struct {
        __IOM uint8_t DATE1     : 4;            /*!< [3..0] 1 Day                                                              */
        __IOM uint8_t DATE10    : 2;            /*!< [5..4] 10 Days                                                            */
              uint8_t           : 1;
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RDAYAR_b;
    } ;
  };
  __IM  uint8_t   RESERVED11;
  
  union {
    union {
      __IOM uint8_t BCNT1AER;                   /*!< (@ 0x0000001A) Binary Counter 1 Alarm Enable Register                     */
      
      struct {
        __IOM uint8_t ENB       : 8;            /*!< [7..0] Setting the alarm enable associated with the 32-bit binary
                                                     counter                                                                   */
      } BCNT1AER_b;
    } ;
    
    union {
      __IOM uint8_t RMONAR;                     /*!< (@ 0x0000001A) Month Alarm Register (in Calendar Count Mode)              */
      
      struct {
        __IOM uint8_t MON1      : 4;            /*!< [3..0] 1 Month                                                            */
        __IOM uint8_t MON10     : 1;            /*!< [4..4] 10 Months                                                          */
              uint8_t           : 2;
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RMONAR_b;
    } ;
  };
  __IM  uint8_t   RESERVED12;
  
  union {
    union {
      __IOM uint16_t BCNT2AER;                  /*!< (@ 0x0000001C) Binary Counter 2 Alarm Enable Register                     */
      
      struct {
        __IOM uint16_t ENB      : 8;            /*!< [7..0] Setting the alarm enable associated with the 32-bit binary
                                                     counter                                                                   */
              uint16_t          : 8;
      } BCNT2AER_b;
    } ;
    
    union {
      __IOM uint16_t RYRAR;                     /*!< (@ 0x0000001C) Year Alarm Register (in Calendar Count Mode)               */
      
      struct {
        __IOM uint16_t YR1      : 4;            /*!< [3..0] 1 Year                                                             */
        __IOM uint16_t YR10     : 4;            /*!< [7..4] 10 Years                                                           */
              uint16_t          : 8;
      } RYRAR_b;
    } ;
  };
  
  union {
    union {
      __IOM uint8_t BCNT3AER;                   /*!< (@ 0x0000001E) Binary Counter 3 Alarm Enable Register                     */
      
      struct {
        __IOM uint8_t ENB       : 8;            /*!< [7..0] Setting the alarm enable associated with the 32-bit binary
                                                     counter                                                                   */
      } BCNT3AER_b;
    } ;
    
    union {
      __IOM uint8_t RYRAREN;                    /*!< (@ 0x0000001E) Year Alarm Enable Register (in Calendar Count
                                                                    Mode)                                                      */
      
      struct {
              uint8_t           : 7;
        __IOM uint8_t ENB       : 1;            /*!< [7..7] ENB                                                                */
      } RYRAREN_b;
    } ;
  };
  __IM  uint8_t   RESERVED13;
  __IM  uint16_t  RESERVED14;
  
  union {
    __IOM uint8_t RCR1;                         /*!< (@ 0x00000022) RTC Control Register 1                                     */
    
    struct {
      __IOM uint8_t AIE         : 1;            /*!< [0..0] Alarm Interrupt Enable                                             */
      __IOM uint8_t CIE         : 1;            /*!< [1..1] Carry Interrupt Enable                                             */
      __IOM uint8_t PIE         : 1;            /*!< [2..2] Periodic Interrupt Enable                                          */
      __IOM uint8_t RTCOS       : 1;            /*!< [3..3] RTCOUT Output Select                                               */
      __IOM uint8_t PES         : 4;            /*!< [7..4] Periodic Interrupt Select                                          */
    } RCR1_b;
  } ;
  __IM  uint8_t   RESERVED15;
  
  union {
    union {
      __IOM uint8_t RCR2;                       /*!< (@ 0x00000024) RTC Control Register 2 (in Calendar Count Mode)            */
      
      struct {
        __IOM uint8_t START     : 1;            /*!< [0..0] Start                                                              */
        __IOM uint8_t RESET     : 1;            /*!< [1..1] RTC Software Reset                                                 */
        __IOM uint8_t ADJ30     : 1;            /*!< [2..2] 30-Second Adjustment                                               */
        __IOM uint8_t RTCOE     : 1;            /*!< [3..3] RTCOUT Output Enable                                               */
        __IOM uint8_t AADJE     : 1;            /*!< [4..4] Automatic Adjustment Enable                                        */
        __IOM uint8_t AADJP     : 1;            /*!< [5..5] Automatic Adjustment Period Select                                 */
        __IOM uint8_t HR24      : 1;            /*!< [6..6] Hours Mode                                                         */
        __IOM uint8_t CNTMD     : 1;            /*!< [7..7] Count Mode Select                                                  */
      } RCR2_b;
    } ;
    
    union {
      __IOM uint8_t RCR2_BCNT;                  /*!< (@ 0x00000024) RTC Control Register 2 (in Binary Count Mode
                                                                    and 32-kHz Count Mode)                                     */
      
      struct {
        __IOM uint8_t START     : 1;            /*!< [0..0] Start                                                              */
        __IOM uint8_t RESET     : 1;            /*!< [1..1] RTC Software Reset                                                 */
              uint8_t           : 1;
        __IOM uint8_t RTCOE     : 1;            /*!< [3..3] RTCOUT Output Enable                                               */
        __IOM uint8_t AADJE     : 1;            /*!< [4..4] Automatic Adjustment Enable                                        */
        __IOM uint8_t AADJP     : 1;            /*!< [5..5] Automatic Adjustment Period Select                                 */
              uint8_t           : 1;
        __IOM uint8_t CNTMD     : 1;            /*!< [7..7] Count Mode Select                                                  */
      } RCR2_BCNT_b;
    } ;
  };
  __IM  uint8_t   RESERVED16;
  
  union {
    __IOM uint8_t RCPE;                         /*!< (@ 0x00000026) RTC Time Capture Enable Register                           */
    
    struct {
      __IOM uint8_t RTCEN       : 1;            /*!< [0..0] Time Capture Event Input Enable                                    */
            uint8_t             : 7;
    } RCPE_b;
  } ;
  __IM  uint8_t   RESERVED17;
  
  union {
    __IOM uint8_t RCR4;                         /*!< (@ 0x00000028) RTC Control Register 4                                     */
    
    struct {
            uint8_t             : 1;
      __IOM uint8_t RSKSTP      : 1;            /*!< [1..1] SOSC clock supply setting                                          */
            uint8_t             : 5;
      __IOM uint8_t R32KMD      : 1;            /*!< [7..7] 32-kHz Count Mode Enable                                           */
    } RCR4_b;
  } ;
  __IM  uint8_t   RESERVED18;
  __IM  uint16_t  RESERVED19[2];
  
  union {
    __IOM uint8_t RADJ;                         /*!< (@ 0x0000002E) Time Error Adjustment Register                             */
    
    struct {
      __IOM uint8_t ADJ         : 6;            /*!< [5..0] Adjustment Value                                                   */
      __IOM uint8_t PMADJ       : 2;            /*!< [7..6] Plus-Minus                                                         */
    } RADJ_b;
  } ;
  __IM  uint8_t   RESERVED20;
  __IM  uint16_t  RESERVED21[8];
  
  union {
    __IOM uint8_t RTCCR0;                       /*!< (@ 0x00000040) Time Capture Control Register 0                            */
    
    struct {
      __IOM uint8_t TCCT        : 2;            /*!< [1..0] Time Capture Control                                               */
      __IOM uint8_t TCST        : 1;            /*!< [2..2] Time Capture Status                                                */
            uint8_t             : 1;
      __IOM uint8_t TCNF        : 2;            /*!< [5..4] Time Capture Noise Filter Control                                  */
      __IOM uint8_t TCPSEL      : 1;            /*!< [6..6] RTCICn input pin select                                            */
      __IOM uint8_t TCEN        : 1;            /*!< [7..7] Time Capture Event Input Pin Enable                                */
    } RTCCR0_b;
  } ;
  __IM  uint8_t   RESERVED22;
  
  union {
    __IOM uint8_t RTCCR1;                       /*!< (@ 0x00000042) Time Capture Control Register 1                            */
    
    struct {
      __IOM uint8_t TCCT        : 2;            /*!< [1..0] Time Capture Control                                               */
      __IOM uint8_t TCST        : 1;            /*!< [2..2] Time Capture Status                                                */
            uint8_t             : 1;
      __IOM uint8_t TCNF        : 2;            /*!< [5..4] Time Capture Noise Filter Control                                  */
      __IOM uint8_t TCPSEL      : 1;            /*!< [6..6] RTCICn input pin select                                            */
      __IOM uint8_t TCEN        : 1;            /*!< [7..7] Time Capture Event Input Pin Enable                                */
    } RTCCR1_b;
  } ;
  __IM  uint8_t   RESERVED23;
  
  union {
    __IOM uint8_t RTCCR2;                       /*!< (@ 0x00000044) Time Capture Control Register 2                            */
    
    struct {
      __IOM uint8_t TCCT        : 2;            /*!< [1..0] Time Capture Control                                               */
      __IOM uint8_t TCST        : 1;            /*!< [2..2] Time Capture Status                                                */
            uint8_t             : 1;
      __IOM uint8_t TCNF        : 2;            /*!< [5..4] Time Capture Noise Filter Control                                  */
      __IOM uint8_t TCPSEL      : 1;            /*!< [6..6] RTCICn input pin select                                            */
      __IOM uint8_t TCEN        : 1;            /*!< [7..7] Time Capture Event Input Pin Enable                                */
    } RTCCR2_b;
  } ;
  __IM  uint8_t   RESERVED24;
  __IM  uint16_t  RESERVED25[6];
  
  union {
    __IM  uint8_t BCNT0CP0;                     /*!< (@ 0x00000052) BCNT0 Capture Register 0                                   */
    
    union {
      __IM  uint8_t RSECCP0;                    /*!< (@ 0x00000052) Second Capture Register 0                                  */
      
      struct {
        __IM  uint8_t SEC1      : 4;            /*!< [3..0] 1-Second Capture                                                   */
        __IM  uint8_t SEC10     : 3;            /*!< [6..4] 10-Second Capture                                                  */
              uint8_t           : 1;
      } RSECCP0_b;
    } ;
  };
  __IM  uint8_t   RESERVED26;
  
  union {
    __IM  uint8_t BCNT1CP0;                     /*!< (@ 0x00000054) BCNT1 Capture Register 0                                   */
    
    union {
      __IM  uint8_t RMINCP0;                    /*!< (@ 0x00000054) Minute Capture Register 0                                  */
      
      struct {
        __IM  uint8_t MIN1      : 4;            /*!< [3..0] 1-Minute Capture                                                   */
        __IM  uint8_t MIN10     : 3;            /*!< [6..4] 10-Minute Capture                                                  */
              uint8_t           : 1;
      } RMINCP0_b;
    } ;
  };
  __IM  uint8_t   RESERVED27;
  
  union {
    __IM  uint8_t BCNT2CP0;                     /*!< (@ 0x00000056) BCNT2 Capture Register 0                                   */
    
    union {
      __IM  uint8_t RHRCP0;                     /*!< (@ 0x00000056) Hour Capture Register 0                                    */
      
      struct {
        __IM  uint8_t HR1       : 4;            /*!< [3..0] 1-Hour Capture                                                     */
        __IM  uint8_t HR10      : 2;            /*!< [5..4] 10-Hour Capture                                                    */
        __IM  uint8_t PM        : 1;            /*!< [6..6] PM                                                                 */
              uint8_t           : 1;
      } RHRCP0_b;
    } ;
  };
  __IM  uint8_t   RESERVED28;
  __IM  uint16_t  RESERVED29;
  
  union {
    __IM  uint8_t BCNT3CP0;                     /*!< (@ 0x0000005A) BCNT3 Capture Register 0                                   */
    
    union {
      __IM  uint8_t RDAYCP0;                    /*!< (@ 0x0000005A) Date Capture Register 0                                    */
      
      struct {
        __IM  uint8_t DATE1     : 4;            /*!< [3..0] 1-Day Capture                                                      */
        __IM  uint8_t DATE10    : 2;            /*!< [5..4] 10-Day Capture                                                     */
              uint8_t           : 2;
      } RDAYCP0_b;
    } ;
  };
  __IM  uint8_t   RESERVED30;
  
  union {
    __IM  uint8_t RMONCP0;                      /*!< (@ 0x0000005C) Month Capture Register 0                                   */
    
    struct {
      __IM  uint8_t MON1        : 4;            /*!< [3..0] 1-Month Capture                                                    */
      __IM  uint8_t MON10       : 1;            /*!< [4..4] 10-Month Capture                                                   */
            uint8_t             : 3;
    } RMONCP0_b;
  } ;
  __IM  uint8_t   RESERVED31;
  __IM  uint16_t  RESERVED32[2];
  
  union {
    __IM  uint8_t BCNT0CP1;                     /*!< (@ 0x00000062) BCNT0 Capture Register 1                                   */
    
    union {
      __IM  uint8_t RSECCP1;                    /*!< (@ 0x00000062) Second Capture Register 1                                  */
      
      struct {
        __IM  uint8_t SEC1      : 4;            /*!< [3..0] 1-Second Capture                                                   */
        __IM  uint8_t SEC10     : 3;            /*!< [6..4] 10-Second Capture                                                  */
              uint8_t           : 1;
      } RSECCP1_b;
    } ;
  };
  __IM  uint8_t   RESERVED33;
  
  union {
    __IM  uint8_t BCNT1CP1;                     /*!< (@ 0x00000064) BCNT1 Capture Register 1                                   */
    
    union {
      __IM  uint8_t RMINCP1;                    /*!< (@ 0x00000064) Minute Capture Register 1                                  */
      
      struct {
        __IM  uint8_t MIN1      : 4;            /*!< [3..0] 1-Minute Capture                                                   */
        __IM  uint8_t MIN10     : 3;            /*!< [6..4] 10-Minute Capture                                                  */
              uint8_t           : 1;
      } RMINCP1_b;
    } ;
  };
  __IM  uint8_t   RESERVED34;
  
  union {
    __IM  uint8_t BCNT2CP1;                     /*!< (@ 0x00000066) BCNT2 Capture Register 1                                   */
    
    union {
      __IM  uint8_t RHRCP1;                     /*!< (@ 0x00000066) Hour Capture Register 1                                    */
      
      struct {
        __IM  uint8_t HR1       : 4;            /*!< [3..0] 1-Hour Capture                                                     */
        __IM  uint8_t HR10      : 2;            /*!< [5..4] 10-Hour Capture                                                    */
        __IM  uint8_t PM        : 1;            /*!< [6..6] PM                                                                 */
              uint8_t           : 1;
      } RHRCP1_b;
    } ;
  };
  __IM  uint8_t   RESERVED35;
  __IM  uint16_t  RESERVED36;
  
  union {
    __IM  uint8_t BCNT3CP1;                     /*!< (@ 0x0000006A) BCNT3 Capture Register 1                                   */
    
    union {
      __IM  uint8_t RDAYCP1;                    /*!< (@ 0x0000006A) Date Capture Register 1                                    */
      
      struct {
        __IM  uint8_t DATE1     : 4;            /*!< [3..0] 1-Day Capture                                                      */
        __IM  uint8_t DATE10    : 2;            /*!< [5..4] 10-Day Capture                                                     */
              uint8_t           : 2;
      } RDAYCP1_b;
    } ;
  };
  __IM  uint8_t   RESERVED37;
  
  union {
    __IM  uint8_t RMONCP1;                      /*!< (@ 0x0000006C) Month Capture Register 1                                   */
    
    struct {
      __IM  uint8_t MON1        : 4;            /*!< [3..0] 1-Month Capture                                                    */
      __IM  uint8_t MON10       : 1;            /*!< [4..4] 10-Month Capture                                                   */
            uint8_t             : 3;
    } RMONCP1_b;
  } ;
  __IM  uint8_t   RESERVED38;
  __IM  uint16_t  RESERVED39[2];
  
  union {
    __IM  uint8_t BCNT0CP2;                     /*!< (@ 0x00000072) BCNT0 Capture Register 2                                   */
    
    union {
      __IM  uint8_t RSECCP2;                    /*!< (@ 0x00000072) Second Capture Register 2                                  */
      
      struct {
        __IM  uint8_t SEC1      : 4;            /*!< [3..0] 1-Second Capture                                                   */
        __IM  uint8_t SEC10     : 3;            /*!< [6..4] 10-Second Capture                                                  */
              uint8_t           : 1;
      } RSECCP2_b;
    } ;
  };
  __IM  uint8_t   RESERVED40;
  
  union {
    __IM  uint8_t BCNT1CP2;                     /*!< (@ 0x00000074) BCNT1 Capture Register 2                                   */
    
    union {
      __IM  uint8_t RMINCP2;                    /*!< (@ 0x00000074) Minute Capture Register 2                                  */
      
      struct {
        __IM  uint8_t MIN1      : 4;            /*!< [3..0] 1-Minute Capture                                                   */
        __IM  uint8_t MIN10     : 3;            /*!< [6..4] 10-Minute Capture                                                  */
              uint8_t           : 1;
      } RMINCP2_b;
    } ;
  };
  __IM  uint8_t   RESERVED41;
  
  union {
    __IM  uint8_t BCNT2CP2;                     /*!< (@ 0x00000076) BCNT2 Capture Register 2                                   */
    
    union {
      __IM  uint8_t RHRCP2;                     /*!< (@ 0x00000076) Hour Capture Register 2                                    */
      
      struct {
        __IM  uint8_t HR1       : 4;            /*!< [3..0] 1-Hour Capture                                                     */
        __IM  uint8_t HR10      : 2;            /*!< [5..4] 10-Hour Capture                                                    */
        __IM  uint8_t PM        : 1;            /*!< [6..6] PM                                                                 */
              uint8_t           : 1;
      } RHRCP2_b;
    } ;
  };
  __IM  uint8_t   RESERVED42;
  __IM  uint16_t  RESERVED43;
  
  union {
    __IM  uint8_t BCNT3CP2;                     /*!< (@ 0x0000007A) BCNT3 Capture Register 2                                   */
    
    union {
      __IM  uint8_t RDAYCP2;                    /*!< (@ 0x0000007A) Date Capture Register 2                                    */
      
      struct {
        __IM  uint8_t DATE1     : 4;            /*!< [3..0] 1-Day Capture                                                      */
        __IM  uint8_t DATE10    : 2;            /*!< [5..4] 10-Day Capture                                                     */
              uint8_t           : 2;
      } RDAYCP2_b;
    } ;
  };
  __IM  uint8_t   RESERVED44;
  
  union {
    __IM  uint8_t RMONCP2;                      /*!< (@ 0x0000007C) Month Capture Register 2                                   */
    
    struct {
      __IM  uint8_t MON1        : 4;            /*!< [3..0] 1-Month Capture                                                    */
      __IM  uint8_t MON10       : 1;            /*!< [4..4] 10-Month Capture                                                   */
            uint8_t             : 3;
    } RMONCP2_b;
  } ;
  __IM  uint8_t   RESERVED45;
  __IM  uint16_t  RESERVED46;
} RTC_Type;                                     /*!< Size = 128 (0x80)                                                         */



/* =========================================================================================================================== */
/* ================                                            WDT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Watchdog Timer (WDT)
  */

typedef struct {                                /*!< (@ 0x40044200) WDT Structure                                              */
  __IOM uint8_t   WDTRR;                        /*!< (@ 0x00000000) WDT Refresh Register                                       */
  __IM  uint8_t   RESERVED;
  
  union {
    __IOM uint16_t WDTCR;                       /*!< (@ 0x00000002) WDT Control Register                                       */
    
    struct {
      __IOM uint16_t TOPS       : 2;            /*!< [1..0] Timeout Period Select                                              */
            uint16_t            : 2;
      __IOM uint16_t CKS        : 4;            /*!< [7..4] Clock Division Ratio Select                                        */
      __IOM uint16_t RPES       : 2;            /*!< [9..8] Window End Position Select                                         */
            uint16_t            : 2;
      __IOM uint16_t RPSS       : 2;            /*!< [13..12] Window Start Position Select                                     */
            uint16_t            : 2;
    } WDTCR_b;
  } ;
  
  union {
    __IOM uint16_t WDTSR;                       /*!< (@ 0x00000004) WDT Status Register                                        */
    
    struct {
      __IM  uint16_t CNTVAL     : 14;           /*!< [13..0] Down-Counter Value                                                */
      __IOM uint16_t UNDFF      : 1;            /*!< [14..14] Underflow Flag                                                   */
      __IOM uint16_t REFEF      : 1;            /*!< [15..15] Refresh Error Flag                                               */
    } WDTSR_b;
  } ;
  
  union {
    __IOM uint8_t WDTRCR;                       /*!< (@ 0x00000006) WDT Reset Control Register                                 */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t RSTIRQS     : 1;            /*!< [7..7] Reset Interrupt Request Select                                     */
    } WDTRCR_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t WDTCSTPR;                     /*!< (@ 0x00000008) WDT Count Stop Control Register                            */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t SLCSTP      : 1;            /*!< [7..7] WDT Count Stop Control Register                                    */
    } WDTCSTPR_b;
  } ;
  __IM  uint8_t   RESERVED2;
  __IM  uint16_t  RESERVED3;
} WDT_Type;                                     /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                           IWDT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Independent Watchdog Timer (IWDT)
  */

typedef struct {                                /*!< (@ 0x40044400) IWDT Structure                                             */
  __IOM uint8_t   IWDTRR;                       /*!< (@ 0x00000000) IWDT Refresh Register                                      */
  __IM  uint8_t   RESERVED;
  __IM  uint16_t  RESERVED1;
  
  union {
    __IOM uint16_t IWDTSR;                      /*!< (@ 0x00000004) IWDT Status Register                                       */
    
    struct {
      __IM  uint16_t CNTVAL     : 14;           /*!< [13..0] Down-counter Value                                                */
      __IOM uint16_t UNDFF      : 1;            /*!< [14..14] Underflow Flag                                                   */
      __IOM uint16_t REFEF      : 1;            /*!< [15..15] Refresh Error Flag                                               */
    } IWDTSR_b;
  } ;
} IWDT_Type;                                    /*!< Size = 6 (0x6)                                                            */



/* =========================================================================================================================== */
/* ================                                            CAC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Clock Frequency Accuracy Measurement Circuit (CAC)
  */

typedef struct {                                /*!< (@ 0x40044600) CAC Structure                                              */
  
  union {
    __IOM uint8_t CACR0;                        /*!< (@ 0x00000000) CAC Control Register 0                                     */
    
    struct {
      __IOM uint8_t CFME        : 1;            /*!< [0..0] Clock Frequency Measurement Enable                                 */
            uint8_t             : 7;
    } CACR0_b;
  } ;
  
  union {
    __IOM uint8_t CACR1;                        /*!< (@ 0x00000001) CAC Control Register 1                                     */
    
    struct {
      __IOM uint8_t CACREFE     : 1;            /*!< [0..0] CACREF Pin Input Enable                                            */
      __IOM uint8_t FMCS        : 3;            /*!< [3..1] Measurement Target Clock Select                                    */
      __IOM uint8_t TCSS        : 2;            /*!< [5..4] Timer Count Clock Source Select                                    */
      __IOM uint8_t EDGES       : 2;            /*!< [7..6] Valid Edge Select                                                  */
    } CACR1_b;
  } ;
  
  union {
    __IOM uint8_t CACR2;                        /*!< (@ 0x00000002) CAC Control Register 2                                     */
    
    struct {
      __IOM uint8_t RPS         : 1;            /*!< [0..0] Reference Signal Select                                            */
      __IOM uint8_t RSCS        : 3;            /*!< [3..1] Measurement Reference Clock Select                                 */
      __IOM uint8_t RCDS        : 2;            /*!< [5..4] Measurement Reference Clock Frequency Division Ratio
                                                     Select                                                                    */
      __IOM uint8_t DFS         : 2;            /*!< [7..6] Digital Filter Select                                              */
    } CACR2_b;
  } ;
  
  union {
    __IOM uint8_t CAICR;                        /*!< (@ 0x00000003) CAC Interrupt Control Register                             */
    
    struct {
      __IOM uint8_t FERRIE      : 1;            /*!< [0..0] Frequency Error Interrupt Request Enable                           */
      __IOM uint8_t MENDIE      : 1;            /*!< [1..1] Measurement End Interrupt Request Enable                           */
      __IOM uint8_t OVFIE       : 1;            /*!< [2..2] Overflow Interrupt Request Enable                                  */
            uint8_t             : 1;
      __OM  uint8_t FERRFCL     : 1;            /*!< [4..4] FERRF Clear                                                        */
      __OM  uint8_t MENDFCL     : 1;            /*!< [5..5] MENDF Clear                                                        */
      __OM  uint8_t OVFFCL      : 1;            /*!< [6..6] OVFF Clear                                                         */
            uint8_t             : 1;
    } CAICR_b;
  } ;
  
  union {
    __IM  uint8_t CASTR;                        /*!< (@ 0x00000004) CAC Status Register                                        */
    
    struct {
      __IM  uint8_t FERRF       : 1;            /*!< [0..0] Frequency Error Flag                                               */
      __IM  uint8_t MENDF       : 1;            /*!< [1..1] Measurement End Flag                                               */
      __IM  uint8_t OVFF        : 1;            /*!< [2..2] Overflow Flag                                                      */
            uint8_t             : 5;
    } CASTR_b;
  } ;
  __IM  uint8_t   RESERVED;
  __IOM uint16_t  CAULVR;                       /*!< (@ 0x00000006) CAC Upper-Limit Value Setting Register                     */
  __IOM uint16_t  CALLVR;                       /*!< (@ 0x00000008) CAC Lower-Limit Value Setting Register                     */
  __IM  uint16_t  CACNTBR;                      /*!< (@ 0x0000000A) CAC Counter Buffer Register                                */
} CAC_Type;                                     /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                           MSTP                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Module Stop Control B, C, D (MSTP)
  */

typedef struct {                                /*!< (@ 0x40047000) MSTP Structure                                             */
  
  union {
    __IOM uint32_t MSTPCRB;                     /*!< (@ 0x00000000) Module Stop Control Register B                             */
    
    struct {
            uint32_t            : 5;
      __IOM uint32_t MSTPB5     : 1;            /*!< [5..5] IrDA Module Stop                                                   */
      __IOM uint32_t MSTPB6     : 1;            /*!< [6..6] QSPI Module Stop                                                   */
            uint32_t            : 1;
      __IOM uint32_t MSTPB8     : 1;            /*!< [8..8] IIC1 Module Stop                                                   */
      __IOM uint32_t MSTPB9     : 1;            /*!< [9..9] IIC0 Module Stop                                                   */
            uint32_t            : 8;
      __IOM uint32_t MSTPB18    : 1;            /*!< [18..18] SPI1 Module Stop                                                 */
      __IOM uint32_t MSTPB19    : 1;            /*!< [19..19] SPI0 Module Stop                                                 */
            uint32_t            : 2;
      __IOM uint32_t MSTPB22    : 1;            /*!< [22..22] SCI9 Module Stop                                                 */
            uint32_t            : 3;
      __IOM uint32_t MSTPB26    : 1;            /*!< [26..26] SCI5 Module Stop                                                 */
      __IOM uint32_t MSTPB27    : 1;            /*!< [27..27] SCI4 Module Stop                                                 */
      __IOM uint32_t MSTPB28    : 1;            /*!< [28..28] SCI3 Module Stop                                                 */
      __IOM uint32_t MSTPB29    : 1;            /*!< [29..29] SCI2 Module Stop                                                 */
      __IOM uint32_t MSTPB30    : 1;            /*!< [30..30] SCI1 Module Stop                                                 */
      __IOM uint32_t MSTPB31    : 1;            /*!< [31..31] SCI0 Module Stop                                                 */
    } MSTPCRB_b;
  } ;
  
  union {
    __IOM uint32_t MSTPCRC;                     /*!< (@ 0x00000004) Module Stop Control Register C                             */
    
    struct {
      __IOM uint32_t MSTPC0     : 1;            /*!< [0..0] CAC Module Stop                                                    */
      __IOM uint32_t MSTPC1     : 1;            /*!< [1..1] CRC Module Stop                                                    */
            uint32_t            : 11;
      __IOM uint32_t MSTPC13    : 1;            /*!< [13..13] DOC Module Stop                                                  */
      __IOM uint32_t MSTPC14    : 1;            /*!< [14..14] ELC Module Stop                                                  */
      __IOM uint32_t MSTPC15    : 1;            /*!< [15..15] DIV Module Stop                                                  */
            uint32_t            : 6;
      __IOM uint32_t MSTPC22    : 1;            /*!< [22..22] DIL Module Stop                                                  */
            uint32_t            : 2;
      __IOM uint32_t MSTPC25    : 1;            /*!< [25..25] MLCD Module Stop                                                 */
      __IOM uint32_t MSTPC26    : 1;            /*!< [26..26] GDT Module Stop                                                  */
            uint32_t            : 4;
      __IOM uint32_t MSTPC31    : 1;            /*!< [31..31] TSIP-Lite Module Stop                                            */
    } MSTPCRC_b;
  } ;
  
  union {
    __IOM uint32_t MSTPCRD;                     /*!< (@ 0x00000008) Module Stop Control Register D                             */
    
    struct {
      __IOM uint32_t MSTPD0     : 1;            /*!< [0..0] LST Module Stop                                                    */
      __IOM uint32_t MSTPD1     : 1;            /*!< [1..1] TMR Module Stop                                                    */
      __IOM uint32_t MSTPD2     : 1;            /*!< [2..2] AGT1 Module Stop                                                   */
      __IOM uint32_t MSTPD3     : 1;            /*!< [3..3] AGT0 Module Stop                                                   */
            uint32_t            : 1;
      __IOM uint32_t MSTPD5     : 1;            /*!< [5..5] GPT320 and GPT321 Module Stop                                      */
      __IOM uint32_t MSTPD6     : 1;            /*!< [6..6] GPT162 to GPT165 Module Stop                                       */
      __IOM uint32_t MSTPD7     : 1;            /*!< [7..7] CCC Module Stop                                                    */
            uint32_t            : 1;
      __IOM uint32_t MSTPD9     : 1;            /*!< [9..9] RTC Module Stop                                                    */
      __IOM uint32_t MSTPD10    : 1;            /*!< [10..10] IWDT Module Stop                                                 */
      __IOM uint32_t MSTPD11    : 1;            /*!< [11..11] WDT Module Stop                                                  */
      __IOM uint32_t MSTPD12    : 1;            /*!< [12..12] AGTW0 Module Stop                                                */
      __IOM uint32_t MSTPD13    : 1;            /*!< [13..13] AGTW1 Module Stop                                                */
      __IOM uint32_t MSTPD14    : 1;            /*!< [14..14] POE Module Stop                                                  */
            uint32_t            : 1;
      __IOM uint32_t MSTPD16    : 1;            /*!< [16..16] ADC14 Module Stop                                                */
      __IOM uint32_t MSTPD17    : 1;            /*!< [17..17] VREF Module Stop                                                 */
      __IOM uint32_t MSTPD18    : 1;            /*!< [18..18] WUPT Module Stop                                                 */
            uint32_t            : 3;
      __IOM uint32_t MSTPD22    : 1;            /*!< [22..22] TSN Module Stop                                                  */
            uint32_t            : 9;
    } MSTPCRD_b;
  } ;
} MSTP_Type;                                    /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                           TMR0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief 8-Bit Timer 0 (TMR0)
  */

typedef struct {                                /*!< (@ 0x40052000) TMR0 Structure                                             */
  
  union {
    __IOM uint8_t TCR;                          /*!< (@ 0x00000000) Timer Control Register                                     */
    
    struct {
            uint8_t             : 3;
      __IOM uint8_t CCLR        : 2;            /*!< [4..3] Counter Clear                                                      */
      __IOM uint8_t OVIE        : 1;            /*!< [5..5] Timer Overflow Interrupt Enable                                    */
      __IOM uint8_t CMIEA       : 1;            /*!< [6..6] Compare Match Interrupt Enable A                                   */
      __IOM uint8_t CMIEB       : 1;            /*!< [7..7] Compare Match Interrupt Enable B                                   */
    } TCR_b;
  } ;
  __IM  uint8_t   RESERVED;
  
  union {
    __IOM uint8_t TCSR;                         /*!< (@ 0x00000002) Timer Control/Status Register                              */
    
    struct {
      __IOM uint8_t OSA         : 2;            /*!< [1..0] Output Select A                                                    */
      __IOM uint8_t OSB         : 2;            /*!< [3..2] Output Select B                                                    */
      __IOM uint8_t ADTE        : 1;            /*!< [4..4] A/D Trigger Enable                                                 */
            uint8_t             : 3;
    } TCSR_b;
  } ;
  __IM  uint8_t   RESERVED1;
  __IOM uint8_t   TCORA;                        /*!< (@ 0x00000004) Time Constant Register A                                   */
  __IM  uint8_t   RESERVED2;
  __IOM uint8_t   TCORB;                        /*!< (@ 0x00000006) Time Constant Register B                                   */
  __IM  uint8_t   RESERVED3;
  __IOM uint8_t   TCNT;                         /*!< (@ 0x00000008) Timer Counter                                              */
  __IM  uint8_t   RESERVED4;
  
  union {
    __IOM uint8_t TCCR;                         /*!< (@ 0x0000000A) Timer Counter Control Register                             */
    
    struct {
      __IOM uint8_t CKS         : 3;            /*!< [2..0] Clock Select                                                       */
      __IOM uint8_t CSS         : 2;            /*!< [4..3] Clock Source Select                                                */
            uint8_t             : 2;
      __IOM uint8_t TMRIS       : 1;            /*!< [7..7] Timer Reset Detection Condition Select                             */
    } TCCR_b;
  } ;
} TMR0_Type;                                    /*!< Size = 11 (0xb)                                                           */



/* =========================================================================================================================== */
/* ================                                           TMR1                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief 8-Bit Timer 1 (TMR1)
  */

typedef struct {                                /*!< (@ 0x40052001) TMR1 Structure                                             */
  
  union {
    __IOM uint8_t TCR;                          /*!< (@ 0x00000000) Timer Control Register                                     */
    
    struct {
            uint8_t             : 3;
      __IOM uint8_t CCLR        : 2;            /*!< [4..3] Counter Clear                                                      */
      __IOM uint8_t OVIE        : 1;            /*!< [5..5] Timer Overflow Interrupt Enable                                    */
      __IOM uint8_t CMIEA       : 1;            /*!< [6..6] Compare Match Interrupt Enable A                                   */
      __IOM uint8_t CMIEB       : 1;            /*!< [7..7] Compare Match Interrupt Enable B                                   */
    } TCR_b;
  } ;
  __IM  uint8_t   RESERVED;
  
  union {
    __IOM uint8_t TCSR;                         /*!< (@ 0x00000002) Timer Control/Status Register                              */
    
    struct {
      __IOM uint8_t OSA         : 2;            /*!< [1..0] Output Select A                                                    */
      __IOM uint8_t OSB         : 2;            /*!< [3..2] Output Select B                                                    */
            uint8_t             : 4;
    } TCSR_b;
  } ;
  __IM  uint8_t   RESERVED1;
  __IOM uint8_t   TCORA;                        /*!< (@ 0x00000004) Time Constant Register A                                   */
  __IM  uint8_t   RESERVED2;
  __IOM uint8_t   TCORB;                        /*!< (@ 0x00000006) Time Constant Register B                                   */
  __IM  uint8_t   RESERVED3;
  __IOM uint8_t   TCNT;                         /*!< (@ 0x00000008) Timer Counter                                              */
  __IM  uint8_t   RESERVED4;
  
  union {
    __IOM uint8_t TCCR;                         /*!< (@ 0x0000000A) Timer Counter Control Register                             */
    
    struct {
      __IOM uint8_t CKS         : 3;            /*!< [2..0] Clock Select                                                       */
      __IOM uint8_t CSS         : 2;            /*!< [4..3] Clock Source Select                                                */
            uint8_t             : 2;
      __IOM uint8_t TMRIS       : 1;            /*!< [7..7] Timer Reset Detection Condition Select                             */
    } TCCR_b;
  } ;
} TMR1_Type;                                    /*!< Size = 11 (0xb)                                                           */



/* =========================================================================================================================== */
/* ================                                           IIC0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Inter-Integrated Circuit 0 (IIC0)
  */

typedef struct {                                /*!< (@ 0x40053000) IIC0 Structure                                             */
  
  union {
    __IOM uint8_t ICCR1;                        /*!< (@ 0x00000000) I2C Bus Control Register 1                                 */
    
    struct {
      __IM  uint8_t SDAI        : 1;            /*!< [0..0] SDA Line Monitor                                                   */
      __IM  uint8_t SCLI        : 1;            /*!< [1..1] SCL Line Monitor                                                   */
      __IOM uint8_t SDAO        : 1;            /*!< [2..2] SDA Output Control/Monitor                                         */
      __IOM uint8_t SCLO        : 1;            /*!< [3..3] SCL Output Control/Monitor                                         */
      __OM  uint8_t SOWP        : 1;            /*!< [4..4] SCLO/SDAO Write Protect                                            */
      __IOM uint8_t CLO         : 1;            /*!< [5..5] Extra SCL Clock Cycle Output                                       */
      __IOM uint8_t IICRST      : 1;            /*!< [6..6] I2C Bus Interface Internal Reset                                   */
      __IOM uint8_t ICE         : 1;            /*!< [7..7] I2C Bus Interface Enable                                           */
    } ICCR1_b;
  } ;
  
  union {
    __IOM uint8_t ICCR2;                        /*!< (@ 0x00000001) I2C Bus Control Register 2                                 */
    
    struct {
            uint8_t             : 1;
      __IOM uint8_t ST          : 1;            /*!< [1..1] Start Condition Issuance Request                                   */
      __IOM uint8_t RS          : 1;            /*!< [2..2] Restart Condition Issuance Request                                 */
      __IOM uint8_t SP          : 1;            /*!< [3..3] Stop Condition Issuance Request                                    */
            uint8_t             : 1;
      __IOM uint8_t TRS         : 1;            /*!< [5..5] Transmit/Receive Mode                                              */
      __IOM uint8_t MST         : 1;            /*!< [6..6] Master/Slave Mode                                                  */
      __IM  uint8_t BBSY        : 1;            /*!< [7..7] Bus Busy Detection Flag                                            */
    } ICCR2_b;
  } ;
  
  union {
    __IOM uint8_t ICMR1;                        /*!< (@ 0x00000002) I2C Bus Mode Register 1                                    */
    
    struct {
      __IOM uint8_t BC          : 3;            /*!< [2..0] Bit Counter                                                        */
      __OM  uint8_t BCWP        : 1;            /*!< [3..3] BC Write Protect                                                   */
      __IOM uint8_t CKS         : 3;            /*!< [6..4] Internal Reference Clock Select                                    */
      __IOM uint8_t MTWP        : 1;            /*!< [7..7] MST/TRS Write Protect                                              */
    } ICMR1_b;
  } ;
  
  union {
    __IOM uint8_t ICMR2;                        /*!< (@ 0x00000003) I2C Bus Mode Register 2                                    */
    
    struct {
      __IOM uint8_t TMOS        : 1;            /*!< [0..0] Timeout Detection Time Select                                      */
      __IOM uint8_t TMOL        : 1;            /*!< [1..1] Timeout L Count Control                                            */
      __IOM uint8_t TMOH        : 1;            /*!< [2..2] Timeout H Count Control                                            */
            uint8_t             : 1;
      __IOM uint8_t SDDL        : 3;            /*!< [6..4] SDA Output Delay Counter                                           */
      __IOM uint8_t DLCS        : 1;            /*!< [7..7] SDA Output Delay Clock Source Select                               */
    } ICMR2_b;
  } ;
  
  union {
    __IOM uint8_t ICMR3;                        /*!< (@ 0x00000004) I2C Bus Mode Register 3                                    */
    
    struct {
      __IOM uint8_t NF          : 2;            /*!< [1..0] Noise Filter Stage Select                                          */
      __IM  uint8_t ACKBR       : 1;            /*!< [2..2] Receive Acknowledge                                                */
      __IOM uint8_t ACKBT       : 1;            /*!< [3..3] Transmit Acknowledge                                               */
      __IOM uint8_t ACKWP       : 1;            /*!< [4..4] ACKBT Write Protect                                                */
      __IOM uint8_t RDRFS       : 1;            /*!< [5..5] RDRF Flag Set Timing Select                                        */
      __IOM uint8_t WAIT        : 1;            /*!< [6..6] Low-hold is released by reading ICDRR.                             */
      __IOM uint8_t SMBS        : 1;            /*!< [7..7] SMBus/I2C Bus Select                                               */
    } ICMR3_b;
  } ;
  
  union {
    __IOM uint8_t ICFER;                        /*!< (@ 0x00000005) I2C Bus Function Enable Register                           */
    
    struct {
      __IOM uint8_t TMOE        : 1;            /*!< [0..0] Timeout Function Enable                                            */
      __IOM uint8_t MALE        : 1;            /*!< [1..1] Master Arbitration-Lost Detection Enable                           */
      __IOM uint8_t NALE        : 1;            /*!< [2..2] NACK Transmission Arbitration-Lost Detection Enable                */
      __IOM uint8_t SALE        : 1;            /*!< [3..3] Slave Arbitration-Lost Detection Enable                            */
      __IOM uint8_t NACKE       : 1;            /*!< [4..4] NACK Reception Transfer Suspension Enable                          */
      __IOM uint8_t NFE         : 1;            /*!< [5..5] Digital Noise Filter Circuit Enable                                */
      __IOM uint8_t SCLE        : 1;            /*!< [6..6] SCL Synchronous Circuit Enable                                     */
            uint8_t             : 1;
    } ICFER_b;
  } ;
  
  union {
    __IOM uint8_t ICSER;                        /*!< (@ 0x00000006) I2C Bus Status Enable Register                             */
    
    struct {
      __IOM uint8_t SAR0E       : 1;            /*!< [0..0] Slave Address Register 0 Enable                                    */
      __IOM uint8_t SAR1E       : 1;            /*!< [1..1] Slave Address Register 1 Enable                                    */
      __IOM uint8_t SAR2E       : 1;            /*!< [2..2] Slave Address Register 2 Enable                                    */
      __IOM uint8_t GCAE        : 1;            /*!< [3..3] General Call Address Enable                                        */
            uint8_t             : 1;
      __IOM uint8_t DIDE        : 1;            /*!< [5..5] Device-ID Address Detection Enable                                 */
            uint8_t             : 1;
      __IOM uint8_t HOAE        : 1;            /*!< [7..7] Host Address Enable                                                */
    } ICSER_b;
  } ;
  
  union {
    __IOM uint8_t ICIER;                        /*!< (@ 0x00000007) I2C Bus Interrupt Enable Register                          */
    
    struct {
      __IOM uint8_t TMOIE       : 1;            /*!< [0..0] Timeout Interrupt Request Enable                                   */
      __IOM uint8_t ALIE        : 1;            /*!< [1..1] Arbitration-Lost Interrupt Request Enable                          */
      __IOM uint8_t STIE        : 1;            /*!< [2..2] Start Condition Detection Interrupt Request Enable                 */
      __IOM uint8_t SPIE        : 1;            /*!< [3..3] Stop Condition Detection Interrupt Request Enable                  */
      __IOM uint8_t NAKIE       : 1;            /*!< [4..4] NACK Reception Interrupt Request Enable                            */
      __IOM uint8_t RIE         : 1;            /*!< [5..5] Receive Data Full Interrupt Request Enable                         */
      __IOM uint8_t TEIE        : 1;            /*!< [6..6] Transmit End Interrupt Request Enable                              */
      __IOM uint8_t TIE         : 1;            /*!< [7..7] Transmit Data Empty Interrupt Request Enable                       */
    } ICIER_b;
  } ;
  
  union {
    __IOM uint8_t ICSR1;                        /*!< (@ 0x00000008) I2C Bus Status Register 1                                  */
    
    struct {
      __IOM uint8_t AAS0        : 1;            /*!< [0..0] Slave Address 0 Detection Flag                                     */
      __IOM uint8_t AAS1        : 1;            /*!< [1..1] Slave Address 1 Detection Flag                                     */
      __IOM uint8_t AAS2        : 1;            /*!< [2..2] Slave Address 2 Detection Flag                                     */
      __IOM uint8_t GCA         : 1;            /*!< [3..3] General Call Address Detection Flag                                */
            uint8_t             : 1;
      __IOM uint8_t DID         : 1;            /*!< [5..5] Device-ID Address Detection Flag                                   */
            uint8_t             : 1;
      __IOM uint8_t HOA         : 1;            /*!< [7..7] Host Address Detection Flag                                        */
    } ICSR1_b;
  } ;
  
  union {
    __IOM uint8_t ICSR2;                        /*!< (@ 0x00000009) I2C Bus Status Register 2                                  */
    
    struct {
      __IOM uint8_t TMOF        : 1;            /*!< [0..0] Timeout Detection Flag                                             */
      __IOM uint8_t AL          : 1;            /*!< [1..1] Arbitration-Lost Flag                                              */
      __IOM uint8_t START       : 1;            /*!< [2..2] Start Condition Detection Flag                                     */
      __IOM uint8_t STOP        : 1;            /*!< [3..3] Stop Condition Detection Flag                                      */
      __IOM uint8_t NACKF       : 1;            /*!< [4..4] NACK Detection Flag                                                */
      __IOM uint8_t RDRF        : 1;            /*!< [5..5] Receive Data Full Flag                                             */
      __IOM uint8_t TEND        : 1;            /*!< [6..6] Transmit End Flag                                                  */
      __IM  uint8_t TDRE        : 1;            /*!< [7..7] Transmit Data Empty Flag                                           */
    } ICSR2_b;
  } ;
  
  union {
    __IOM uint8_t SARL0;                        /*!< (@ 0x0000000A) Slave Address Register Ly                                  */
    
    struct {
      __IOM uint8_t SVA0        : 1;            /*!< [0..0] 10-bit Address LSB                                                 */
      __IOM uint8_t SVA         : 7;            /*!< [7..1] 7-bit Address/10-bit Address Lower Bits                            */
    } SARL0_b;
  } ;
  
  union {
    __IOM uint8_t SARU0;                        /*!< (@ 0x0000000B) Slave Address Register Uy                                  */
    
    struct {
      __IOM uint8_t FS          : 1;            /*!< [0..0] 7-bit/10-bit Address Format Select                                 */
      __IOM uint8_t SVA         : 2;            /*!< [2..1] 10-bit Address Upper Bits                                          */
            uint8_t             : 5;
    } SARU0_b;
  } ;
  
  union {
    __IOM uint8_t SARL1;                        /*!< (@ 0x0000000C) Slave Address Register Ly                                  */
    
    struct {
      __IOM uint8_t SVA0        : 1;            /*!< [0..0] 10-bit Address LSB                                                 */
      __IOM uint8_t SVA         : 7;            /*!< [7..1] 7-bit Address/10-bit Address Lower Bits                            */
    } SARL1_b;
  } ;
  
  union {
    __IOM uint8_t SARU1;                        /*!< (@ 0x0000000D) Slave Address Register Uy                                  */
    
    struct {
      __IOM uint8_t FS          : 1;            /*!< [0..0] 7-bit/10-bit Address Format Select                                 */
      __IOM uint8_t SVA         : 2;            /*!< [2..1] 10-bit Address Upper Bits                                          */
            uint8_t             : 5;
    } SARU1_b;
  } ;
  
  union {
    __IOM uint8_t SARL2;                        /*!< (@ 0x0000000E) Slave Address Register Ly                                  */
    
    struct {
      __IOM uint8_t SVA0        : 1;            /*!< [0..0] 10-bit Address LSB                                                 */
      __IOM uint8_t SVA         : 7;            /*!< [7..1] 7-bit Address/10-bit Address Lower Bits                            */
    } SARL2_b;
  } ;
  
  union {
    __IOM uint8_t SARU2;                        /*!< (@ 0x0000000F) Slave Address Register Uy                                  */
    
    struct {
      __IOM uint8_t FS          : 1;            /*!< [0..0] 7-bit/10-bit Address Format Select                                 */
      __IOM uint8_t SVA         : 2;            /*!< [2..1] 10-bit Address Upper Bits                                          */
            uint8_t             : 5;
    } SARU2_b;
  } ;
  
  union {
    __IOM uint8_t ICBRL;                        /*!< (@ 0x00000010) I2C Bus Bit Rate Low-Level Register                        */
    
    struct {
      __IOM uint8_t BRL         : 5;            /*!< [4..0] Bit Rate Low-Level Period                                          */
            uint8_t             : 3;
    } ICBRL_b;
  } ;
  
  union {
    __IOM uint8_t ICBRH;                        /*!< (@ 0x00000011) I2C Bus Bit Rate High-Level Register                       */
    
    struct {
      __IOM uint8_t BRH         : 5;            /*!< [4..0] Bit Rate High-Level Period                                         */
            uint8_t             : 3;
    } ICBRH_b;
  } ;
  __IOM uint8_t   ICDRT;                        /*!< (@ 0x00000012) I2C Bus Transmit Data Register                             */
  __IM  uint8_t   ICDRR;                        /*!< (@ 0x00000013) I2C Bus Receive Data Register                              */
} IIC0_Type;                                    /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                            DOC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Data Operation Circuit (DOC)
  */

typedef struct {                                /*!< (@ 0x40054100) DOC Structure                                              */
  
  union {
    __IOM uint8_t DOCR;                         /*!< (@ 0x00000000) DOC Control Register                                       */
    
    struct {
      __IOM uint8_t OMS         : 2;            /*!< [1..0] Operating Mode Select                                              */
      __IOM uint8_t DCSEL       : 1;            /*!< [2..2] Detection Condition Select                                         */
            uint8_t             : 2;
      __IM  uint8_t DOPCF       : 1;            /*!< [5..5] DOC Flag                                                           */
      __IOM uint8_t DOPCFCL     : 1;            /*!< [6..6] DOPCF Clear                                                        */
            uint8_t             : 1;
    } DOCR_b;
  } ;
  __IM  uint8_t   RESERVED;
  __IOM uint16_t  DODIR;                        /*!< (@ 0x00000002) DOC Data Input Register                                    */
  __IOM uint16_t  DODSR;                        /*!< (@ 0x00000004) DOC Data Setting Register                                  */
} DOC_Type;                                     /*!< Size = 6 (0x6)                                                            */



/* =========================================================================================================================== */
/* ================                                          GPT320                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief General PWM 32-bit Timer 0 (GPT320)
  */

typedef struct {                                /*!< (@ 0x40055000) GPT320 Structure                                           */
  
  union {
    __IOM uint32_t GTWP;                        /*!< (@ 0x00000000) General PWM Timer Write-Protection Register                */
    
    struct {
      __IOM uint32_t WP         : 1;            /*!< [0..0] Register Write Disable                                             */
            uint32_t            : 7;
      __IOM uint32_t PRKEY      : 8;            /*!< [15..8] GTWP Key Code                                                     */
            uint32_t            : 16;
    } GTWP_b;
  } ;
  
  union {
    __IOM uint32_t GTSTR;                       /*!< (@ 0x00000004) General PWM Timer Software Start Register                  */
    
    struct {
      __IOM uint32_t CSTRT0     : 1;            /*!< [0..0] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTRT1     : 1;            /*!< [1..1] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTRT2     : 1;            /*!< [2..2] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTRT3     : 1;            /*!< [3..3] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTRT4     : 1;            /*!< [4..4] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTRT5     : 1;            /*!< [5..5] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
            uint32_t            : 26;
    } GTSTR_b;
  } ;
  
  union {
    __IOM uint32_t GTSTP;                       /*!< (@ 0x00000008) General PWM Timer Software Stop Register                   */
    
    struct {
      __IOM uint32_t CSTOP0     : 1;            /*!< [0..0] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTOP1     : 1;            /*!< [1..1] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTOP2     : 1;            /*!< [2..2] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTOP3     : 1;            /*!< [3..3] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTOP4     : 1;            /*!< [4..4] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTOP5     : 1;            /*!< [5..5] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
            uint32_t            : 26;
    } GTSTP_b;
  } ;
  
  union {
    __OM  uint32_t GTCLR;                       /*!< (@ 0x0000000C) General PWM Timer Software Clear Register                  */
    
    struct {
      __OM  uint32_t CCLR0      : 1;            /*!< [0..0] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
      __OM  uint32_t CCLR1      : 1;            /*!< [1..1] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
      __OM  uint32_t CCLR2      : 1;            /*!< [2..2] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
      __OM  uint32_t CCLR3      : 1;            /*!< [3..3] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
      __OM  uint32_t CCLR4      : 1;            /*!< [4..4] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
      __OM  uint32_t CCLR5      : 1;            /*!< [5..5] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
            uint32_t            : 26;
    } GTCLR_b;
  } ;
  
  union {
    __IOM uint32_t GTSSR;                       /*!< (@ 0x00000010) General PWM Timer Start Source Select Register             */
    
    struct {
      __IOM uint32_t SSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Start Enable               */
      __IOM uint32_t SSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Start Enable              */
      __IOM uint32_t SSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Start Enable               */
      __IOM uint32_t SSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Start Enable              */
            uint32_t            : 4;
      __IOM uint32_t SSCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source Counter Start Enable                                               */
      __IOM uint32_t SSCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source Counter Start Enable                                               */
      __IOM uint32_t SSCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source Counter Start Enable                                               */
      __IOM uint32_t SSCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source Counter Start Enable                                               */
      __IOM uint32_t SSCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source Counter Start Enable                                               */
      __IOM uint32_t SSELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source Counter Start Enable                       */
      __IOM uint32_t SSELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source Counter Start Enable                       */
      __IOM uint32_t SSELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source Counter Start Enable                       */
      __IOM uint32_t SSELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source Counter Start Enable                       */
            uint32_t            : 11;
      __IOM uint32_t CSTRT      : 1;            /*!< [31..31] Software Source Counter Start Enable                             */
    } GTSSR_b;
  } ;
  
  union {
    __IOM uint32_t GTPSR;                       /*!< (@ 0x00000014) General PWM Timer Stop Source Select Register              */
    
    struct {
      __IOM uint32_t PSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Stop Enable                */
      __IOM uint32_t PSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Stop Enable               */
      __IOM uint32_t PSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Stop Enable                */
      __IOM uint32_t PSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Stop Enable               */
            uint32_t            : 4;
      __IOM uint32_t PSCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source Counter Stop Enable                                                */
      __IOM uint32_t PSCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source Counter Stop Enable                                                */
      __IOM uint32_t PSCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source Counter Stop Enable                                                */
      __IOM uint32_t PSCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source Counter Stop Enable                                                */
      __IOM uint32_t PSCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source Counter Stop Enable                                                */
      __IOM uint32_t PSELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source Counter Stop Enable                        */
      __IOM uint32_t PSELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source Counter Stop Enable                        */
      __IOM uint32_t PSELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source Counter Stop Enable                        */
      __IOM uint32_t PSELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source Counter Stop Enable                        */
            uint32_t            : 11;
      __IOM uint32_t CSTOP      : 1;            /*!< [31..31] Software Source Counter Stop Enable                              */
    } GTPSR_b;
  } ;
  
  union {
    __IOM uint32_t GTCSR;                       /*!< (@ 0x00000018) General PWM Timer Clear Source Select Register             */
    
    struct {
      __IOM uint32_t CSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Clear Enable               */
      __IOM uint32_t CSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Clear Enable              */
      __IOM uint32_t CSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Clear Enable               */
      __IOM uint32_t CSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Clear Enable              */
            uint32_t            : 4;
      __IOM uint32_t CSCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source Counter Clear Enable                                               */
      __IOM uint32_t CSCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source Counter Clear Enable                                               */
      __IOM uint32_t CSCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source Counter Clear Enable                                               */
      __IOM uint32_t CSCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source Counter Clear Enable                                               */
      __IOM uint32_t CSCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source Counter Clear Enable                                               */
      __IOM uint32_t CSELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source Counter Clear Enable                       */
      __IOM uint32_t CSELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source Counter Clear Enable                       */
      __IOM uint32_t CSELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source Counter Clear Enable                       */
      __IOM uint32_t CSELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source Counter Clear Enable                       */
            uint32_t            : 11;
      __IOM uint32_t CCLR       : 1;            /*!< [31..31] Software Source Counter Clear Enable                             */
    } GTCSR_b;
  } ;
  
  union {
    __IOM uint32_t GTUPSR;                      /*!< (@ 0x0000001C) General PWM Timer Up Count Source Select Register          */
    
    struct {
      __IOM uint32_t USGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Count Up Enable            */
      __IOM uint32_t USGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Count Up Enable           */
      __IOM uint32_t USGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Count Up Enable            */
      __IOM uint32_t USGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Count Up Enable           */
            uint32_t            : 4;
      __IOM uint32_t USCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source Counter Count Up Enable                                            */
      __IOM uint32_t USCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source Counter Count Up Enable                                            */
      __IOM uint32_t USCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source Counter Count Up Enable                                            */
      __IOM uint32_t USCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source Counter Count Up Enable                                            */
      __IOM uint32_t USCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source Counter Count Up Enable                                            */
      __IOM uint32_t USELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source Counter Count Up Enable                    */
      __IOM uint32_t USELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source Counter Count Up Enable                    */
      __IOM uint32_t USELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source Counter Count Up Enable                    */
      __IOM uint32_t USELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source Counter Count Up Enable                    */
            uint32_t            : 12;
    } GTUPSR_b;
  } ;
  
  union {
    __IOM uint32_t GTDNSR;                      /*!< (@ 0x00000020) General PWM Timer Down Count Source Select Register        */
    
    struct {
      __IOM uint32_t DSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Count Down Enable          */
      __IOM uint32_t DSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Count Down Enable         */
      __IOM uint32_t DSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Count Down Enable          */
      __IOM uint32_t DSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Count Down Enable         */
            uint32_t            : 4;
      __IOM uint32_t DSCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source Counter Count Down Enable                                          */
      __IOM uint32_t DSCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source Counter Count Down Enable                                          */
      __IOM uint32_t DSCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source Counter Count Down Enable                                          */
      __IOM uint32_t DSCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source Counter Count Down Enable                                          */
      __IOM uint32_t DSCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source Counter Count Down Enable                                          */
      __IOM uint32_t DSELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source Counter Count Down Enable                  */
      __IOM uint32_t DSELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source Counter Count Down Enable                  */
      __IOM uint32_t DSELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source Counter Count Down Enable                  */
      __IOM uint32_t DSELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source Counter Count Down Enable                  */
            uint32_t            : 12;
    } GTDNSR_b;
  } ;
  
  union {
    __IOM uint32_t GTICASR;                     /*!< (@ 0x00000024) General PWM Timer Input Capture Source Select
                                                                    Register A                                                 */
    
    struct {
      __IOM uint32_t ASGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
            uint32_t            : 4;
      __IOM uint32_t ASCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source GTCCRA Input Capture Enable                                        */
      __IOM uint32_t ASCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source GTCCRA Input Capture Enable                                        */
      __IOM uint32_t ASCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source GTCCRA Input Capture Enable                                        */
      __IOM uint32_t ASCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source GTCCRA Input Capture Enable                                        */
      __IOM uint32_t ASCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source GTCCRA Input Capture Enable                                        */
      __IOM uint32_t ASELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source GTCCRA Input Capture Enable                */
      __IOM uint32_t ASELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source GTCCRA Input Capture Enable                */
      __IOM uint32_t ASELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source GTCCRA Input Capture Enable                */
      __IOM uint32_t ASELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source GTCCRA Input Capture Enable                */
            uint32_t            : 12;
    } GTICASR_b;
  } ;
  
  union {
    __IOM uint32_t GTICBSR;                     /*!< (@ 0x00000028) General PWM Timer Input Capture Source Select
                                                                    Register B                                                 */
    
    struct {
      __IOM uint32_t BSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
            uint32_t            : 4;
      __IOM uint32_t BSCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source GTCCRB Input Capture Enable                                        */
      __IOM uint32_t BSCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source GTCCRB Input Capture Enable                                        */
      __IOM uint32_t BSCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source GTCCRB Input Capture Enable                                        */
      __IOM uint32_t BSCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source GTCCRB Input Capture Enable                                        */
      __IOM uint32_t BSCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source GTCCRB Input Capture Enable                                        */
      __IOM uint32_t BSELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source GTCCRB Input Capture Enable                */
      __IOM uint32_t BSELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source GTCCRB Input Capture Enable                */
      __IOM uint32_t BSELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source GTCCRB Input Capture Enable                */
      __IOM uint32_t BSELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source GTCCRB Input Capture Enable                */
            uint32_t            : 12;
    } GTICBSR_b;
  } ;
  
  union {
    __IOM uint32_t GTCR;                        /*!< (@ 0x0000002C) General PWM Timer Control Register                         */
    
    struct {
      __IOM uint32_t CST        : 1;            /*!< [0..0] Count Start                                                        */
            uint32_t            : 15;
      __IOM uint32_t MD         : 3;            /*!< [18..16] Mode Select                                                      */
            uint32_t            : 5;
      __IOM uint32_t TPCS       : 3;            /*!< [26..24] Timer Prescaler Select                                           */
            uint32_t            : 5;
    } GTCR_b;
  } ;
  
  union {
    __IOM uint32_t GTUDDTYC;                    /*!< (@ 0x00000030) General PWM Timer Count Direction and Duty Setting
                                                                    Register                                                   */
    
    struct {
      __IOM uint32_t UD         : 1;            /*!< [0..0] Count Direction Setting                                            */
      __IOM uint32_t UDF        : 1;            /*!< [1..1] Forcible Count Direction Setting                                   */
            uint32_t            : 14;
      __IOM uint32_t OADTY      : 2;            /*!< [17..16] GTIOCnA Output Duty Setting                                      */
      __IOM uint32_t OADTYF     : 1;            /*!< [18..18] Forcible GTIOCnA Output Duty Setting                             */
      __IOM uint32_t OADTYR     : 1;            /*!< [19..19] GTIOCnA Output Value Selecting after Releasing 0%/100%
                                                     Duty Setting                                                              */
            uint32_t            : 4;
      __IOM uint32_t OBDTY      : 2;            /*!< [25..24] GTIOCnB Output Duty Setting                                      */
      __IOM uint32_t OBDTYF     : 1;            /*!< [26..26] Forcible GTIOCnB Output Duty Setting                             */
      __IOM uint32_t OBDTYR     : 1;            /*!< [27..27] GTIOCnB Output Value Selecting after Releasing 0%/100%
                                                     Duty Setting                                                              */
            uint32_t            : 4;
    } GTUDDTYC_b;
  } ;
  
  union {
    __IOM uint32_t GTIOR;                       /*!< (@ 0x00000034) General PWM Timer I/O Control Register                     */
    
    struct {
      __IOM uint32_t GTIOA      : 5;            /*!< [4..0] GTIOCnA Pin Function Select                                        */
            uint32_t            : 1;
      __IOM uint32_t OADFLT     : 1;            /*!< [6..6] GTIOCnA Pin Output Value Setting at the Count Stop                 */
      __IOM uint32_t OAHLD      : 1;            /*!< [7..7] GTIOCnA Pin Output Setting at the Start/Stop Count                 */
      __IOM uint32_t OAE        : 1;            /*!< [8..8] GTIOCnA Pin Output Enable                                          */
      __IOM uint32_t OADF       : 2;            /*!< [10..9] GTIOCnA Pin Disable Value Setting                                 */
            uint32_t            : 2;
      __IOM uint32_t NFAEN      : 1;            /*!< [13..13] Noise Filter A Enable                                            */
      __IOM uint32_t NFCSA      : 2;            /*!< [15..14] Noise Filter A Sampling Clock Select                             */
      __IOM uint32_t GTIOB      : 5;            /*!< [20..16] GTIOCnB Pin Function Select                                      */
            uint32_t            : 1;
      __IOM uint32_t OBDFLT     : 1;            /*!< [22..22] GTIOCnB Pin Output Value Setting at the Count Stop               */
      __IOM uint32_t OBHLD      : 1;            /*!< [23..23] GTIOCnB Pin Output Setting at the Start/Stop Count               */
      __IOM uint32_t OBE        : 1;            /*!< [24..24] GTIOCnB Pin Output Enable                                        */
      __IOM uint32_t OBDF       : 2;            /*!< [26..25] GTIOCnB Pin Disable Value Setting                                */
            uint32_t            : 2;
      __IOM uint32_t NFBEN      : 1;            /*!< [29..29] Noise Filter B Enable                                            */
      __IOM uint32_t NFCSB      : 2;            /*!< [31..30] Noise Filter B Sampling Clock Select                             */
    } GTIOR_b;
  } ;
  
  union {
    __IOM uint32_t GTINTAD;                     /*!< (@ 0x00000038) General PWM Timer Interrupt Output Setting Register        */
    
    struct {
            uint32_t            : 24;
      __IOM uint32_t GRP        : 2;            /*!< [25..24] Output Disable Source Select                                     */
            uint32_t            : 3;
      __IOM uint32_t GRPABH     : 1;            /*!< [29..29] Same Time Output Level High Disable Request Enable               */
      __IOM uint32_t GRPABL     : 1;            /*!< [30..30] Same Time Output Level Low Disable Request Enable                */
            uint32_t            : 1;
    } GTINTAD_b;
  } ;
  
  union {
    __IOM uint32_t GTST;                        /*!< (@ 0x0000003C) General PWM Timer Status Register                          */
    
    struct {
      __IOM uint32_t TCFA       : 1;            /*!< [0..0] Input Capture/Compare Match Flag A                                 */
      __IOM uint32_t TCFB       : 1;            /*!< [1..1] Input Capture/Compare Match Flag B                                 */
      __IOM uint32_t TCFC       : 1;            /*!< [2..2] Input Compare Match Flag C                                         */
      __IOM uint32_t TCFD       : 1;            /*!< [3..3] Input Compare Match Flag D                                         */
      __IOM uint32_t TCFE       : 1;            /*!< [4..4] Input Compare Match Flag E                                         */
      __IOM uint32_t TCFF       : 1;            /*!< [5..5] Input Compare Match Flag F                                         */
      __IOM uint32_t TCFPO      : 1;            /*!< [6..6] Overflow Flag                                                      */
      __IOM uint32_t TCFPU      : 1;            /*!< [7..7] Underflow Flag                                                     */
            uint32_t            : 7;
      __IM  uint32_t TUCF       : 1;            /*!< [15..15] Count Direction Flag                                             */
            uint32_t            : 8;
      __IM  uint32_t ODF        : 1;            /*!< [24..24] Output Disable Flag                                              */
            uint32_t            : 4;
      __IM  uint32_t OABHF      : 1;            /*!< [29..29] Same Time Output Level High Flag                                 */
      __IM  uint32_t OABLF      : 1;            /*!< [30..30] Same Time Output Level Low Flag                                  */
            uint32_t            : 1;
    } GTST_b;
  } ;
  
  union {
    __IOM uint32_t GTBER;                       /*!< (@ 0x00000040) General PWM Timer Buffer Enable Register                   */
    
    struct {
      __IOM uint32_t BD0        : 1;            /*!< [0..0] GTCCR Buffer Operation Disable                                     */
      __IOM uint32_t BD1        : 1;            /*!< [1..1] GTPR Buffer Operation Disable                                      */
            uint32_t            : 14;
      __IOM uint32_t CCRA       : 2;            /*!< [17..16] GTCCRA Buffer Operation                                          */
      __IOM uint32_t CCRB       : 2;            /*!< [19..18] GTCCRB Buffer Operation                                          */
      __IOM uint32_t PR         : 2;            /*!< [21..20] GTPR Buffer Operation                                            */
      __IOM uint32_t CCRSWT     : 1;            /*!< [22..22] GTCCRA and GTCCRB Forcible Buffer Operation                      */
            uint32_t            : 9;
    } GTBER_b;
  } ;
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  GTCNT;                        /*!< (@ 0x00000048) General PWM Timer Counter                                  */
  __IOM uint32_t  GTCCRA;                       /*!< (@ 0x0000004C) General PWM Timer Compare Capture Register A               */
  __IOM uint32_t  GTCCRB;                       /*!< (@ 0x00000050) General PWM Timer Compare Capture Register B               */
  __IOM uint32_t  GTCCRC;                       /*!< (@ 0x00000054) General PWM Timer Compare Capture Register C               */
  __IOM uint32_t  GTCCRE;                       /*!< (@ 0x00000058) General PWM Timer Compare Capture Register E               */
  __IOM uint32_t  GTCCRD;                       /*!< (@ 0x0000005C) General PWM Timer Compare Capture Register D               */
  __IOM uint32_t  GTCCRF;                       /*!< (@ 0x00000060) General PWM Timer Compare Capture Register F               */
  __IOM uint32_t  GTPR;                         /*!< (@ 0x00000064) General PWM Timer Cycle Setting Register                   */
  __IOM uint32_t  GTPBR;                        /*!< (@ 0x00000068) General PWM Timer Cycle Setting Buffer Register            */
  __IM  uint32_t  RESERVED1[7];
  
  union {
    __IOM uint32_t GTDTCR;                      /*!< (@ 0x00000088) General PWM Timer Dead Time Control Register               */
    
    struct {
      __IOM uint32_t TDE        : 1;            /*!< [0..0] Negative-Phase Waveform Setting                                    */
            uint32_t            : 31;
    } GTDTCR_b;
  } ;
  __IOM uint32_t  GTDVU;                        /*!< (@ 0x0000008C) General PWM Timer Dead Time Value Register U               */
} GPT320_Type;                                  /*!< Size = 144 (0x90)                                                         */



/* =========================================================================================================================== */
/* ================                                          GPT162                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief General PWM 16-bit Timer 2 (GPT162)
  */

typedef struct {                                /*!< (@ 0x40055200) GPT162 Structure                                           */
  
  union {
    __IOM uint32_t GTWP;                        /*!< (@ 0x00000000) General PWM Timer Write-Protection Register                */
    
    struct {
      __IOM uint32_t WP         : 1;            /*!< [0..0] Register Write Disable                                             */
            uint32_t            : 7;
      __IOM uint32_t PRKEY      : 8;            /*!< [15..8] GTWP Key Code                                                     */
            uint32_t            : 16;
    } GTWP_b;
  } ;
  
  union {
    __IOM uint32_t GTSTR;                       /*!< (@ 0x00000004) General PWM Timer Software Start Register                  */
    
    struct {
      __IOM uint32_t CSTRT0     : 1;            /*!< [0..0] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTRT1     : 1;            /*!< [1..1] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTRT2     : 1;            /*!< [2..2] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTRT3     : 1;            /*!< [3..3] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTRT4     : 1;            /*!< [4..4] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTRT5     : 1;            /*!< [5..5] Channel n GTCNT Count Start (n : the same as bit position
                                                     value)                                                                    */
            uint32_t            : 26;
    } GTSTR_b;
  } ;
  
  union {
    __IOM uint32_t GTSTP;                       /*!< (@ 0x00000008) General PWM Timer Software Stop Register                   */
    
    struct {
      __IOM uint32_t CSTOP0     : 1;            /*!< [0..0] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTOP1     : 1;            /*!< [1..1] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTOP2     : 1;            /*!< [2..2] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTOP3     : 1;            /*!< [3..3] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTOP4     : 1;            /*!< [4..4] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
      __IOM uint32_t CSTOP5     : 1;            /*!< [5..5] Channel n GTCNT Count Stop (n : the same as bit position
                                                     value)                                                                    */
            uint32_t            : 26;
    } GTSTP_b;
  } ;
  
  union {
    __OM  uint32_t GTCLR;                       /*!< (@ 0x0000000C) General PWM Timer Software Clear Register                  */
    
    struct {
      __OM  uint32_t CCLR0      : 1;            /*!< [0..0] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
      __OM  uint32_t CCLR1      : 1;            /*!< [1..1] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
      __OM  uint32_t CCLR2      : 1;            /*!< [2..2] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
      __OM  uint32_t CCLR3      : 1;            /*!< [3..3] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
      __OM  uint32_t CCLR4      : 1;            /*!< [4..4] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
      __OM  uint32_t CCLR5      : 1;            /*!< [5..5] Channel n GTCNT Count Clear (n : the same as bit position
                                                     value)                                                                    */
            uint32_t            : 26;
    } GTCLR_b;
  } ;
  
  union {
    __IOM uint32_t GTSSR;                       /*!< (@ 0x00000010) General PWM Timer Start Source Select Register             */
    
    struct {
      __IOM uint32_t SSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Start Enable               */
      __IOM uint32_t SSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Start Enable              */
      __IOM uint32_t SSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Start Enable               */
      __IOM uint32_t SSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Start Enable              */
            uint32_t            : 4;
      __IOM uint32_t SSCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source Counter Start Enable                                               */
      __IOM uint32_t SSCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source Counter Start Enable                                               */
      __IOM uint32_t SSCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     Counter Start Enable                                                      */
      __IOM uint32_t SSCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source Counter Start Enable                                               */
      __IOM uint32_t SSCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source Counter Start Enable                                               */
      __IOM uint32_t SSCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source Counter Start Enable                                               */
      __IOM uint32_t SSELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source Counter Start Enable                       */
      __IOM uint32_t SSELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source Counter Start Enable                       */
      __IOM uint32_t SSELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source Counter Start Enable                       */
      __IOM uint32_t SSELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source Counter Start Enable                       */
            uint32_t            : 11;
      __IOM uint32_t CSTRT      : 1;            /*!< [31..31] Software Source Counter Start Enable                             */
    } GTSSR_b;
  } ;
  
  union {
    __IOM uint32_t GTPSR;                       /*!< (@ 0x00000014) General PWM Timer Stop Source Select Register              */
    
    struct {
      __IOM uint32_t PSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Stop Enable                */
      __IOM uint32_t PSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Stop Enable               */
      __IOM uint32_t PSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Stop Enable                */
      __IOM uint32_t PSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Stop Enable               */
            uint32_t            : 4;
      __IOM uint32_t PSCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source Counter Stop Enable                                                */
      __IOM uint32_t PSCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source Counter Stop Enable                                                */
      __IOM uint32_t PSCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     Counter Stop Enable                                                       */
      __IOM uint32_t PSCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source Counter Stop Enable                                                */
      __IOM uint32_t PSCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source Counter Stop Enable                                                */
      __IOM uint32_t PSCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source Counter Stop Enable                                                */
      __IOM uint32_t PSELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source Counter Stop Enable                        */
      __IOM uint32_t PSELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source Counter Stop Enable                        */
      __IOM uint32_t PSELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source Counter Stop Enable                        */
      __IOM uint32_t PSELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source Counter Stop Enable                        */
            uint32_t            : 11;
      __IOM uint32_t CSTOP      : 1;            /*!< [31..31] Software Source Counter Stop Enable                              */
    } GTPSR_b;
  } ;
  
  union {
    __IOM uint32_t GTCSR;                       /*!< (@ 0x00000018) General PWM Timer Clear Source Select Register             */
    
    struct {
      __IOM uint32_t CSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Clear Enable               */
      __IOM uint32_t CSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Clear Enable              */
      __IOM uint32_t CSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Clear Enable               */
      __IOM uint32_t CSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Clear Enable              */
            uint32_t            : 4;
      __IOM uint32_t CSCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source Counter Clear Enable                                               */
      __IOM uint32_t CSCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source Counter Clear Enable                                               */
      __IOM uint32_t CSCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     Counter Clear Enable                                                      */
      __IOM uint32_t CSCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source Counter Clear Enable                                               */
      __IOM uint32_t CSCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source Counter Clear Enable                                               */
      __IOM uint32_t CSCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source Counter Clear Enable                                               */
      __IOM uint32_t CSELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source Counter Clear Enable                       */
      __IOM uint32_t CSELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source Counter Clear Enable                       */
      __IOM uint32_t CSELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source Counter Clear Enable                       */
      __IOM uint32_t CSELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source Counter Clear Enable                       */
            uint32_t            : 11;
      __IOM uint32_t CCLR       : 1;            /*!< [31..31] Software Source Counter Clear Enable                             */
    } GTCSR_b;
  } ;
  
  union {
    __IOM uint32_t GTUPSR;                      /*!< (@ 0x0000001C) General PWM Timer Up Count Source Select Register          */
    
    struct {
      __IOM uint32_t USGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Count Up Enable            */
      __IOM uint32_t USGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Count Up Enable           */
      __IOM uint32_t USGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Count Up Enable            */
      __IOM uint32_t USGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Count Up Enable           */
            uint32_t            : 4;
      __IOM uint32_t USCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source Counter Count Up Enable                                            */
      __IOM uint32_t USCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source Counter Count Up Enable                                            */
      __IOM uint32_t USCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     Counter Count Up Enable                                                   */
      __IOM uint32_t USCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source Counter Count Up Enable                                            */
      __IOM uint32_t USCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source Counter Count Up Enable                                            */
      __IOM uint32_t USCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source Counter Count Up Enable                                            */
      __IOM uint32_t USELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source Counter Count Up Enable                    */
      __IOM uint32_t USELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source Counter Count Up Enable                    */
      __IOM uint32_t USELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source Counter Count Up Enable                    */
      __IOM uint32_t USELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source Counter Count Up Enable                    */
            uint32_t            : 12;
    } GTUPSR_b;
  } ;
  
  union {
    __IOM uint32_t GTDNSR;                      /*!< (@ 0x00000020) General PWM Timer Down Count Source Select Register        */
    
    struct {
      __IOM uint32_t DSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source Counter Count Down Enable          */
      __IOM uint32_t DSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source Counter Count Down Enable         */
      __IOM uint32_t DSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source Counter Count Down Enable          */
      __IOM uint32_t DSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source Counter Count Down Enable         */
            uint32_t            : 4;
      __IOM uint32_t DSCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source Counter Count Down Enable                                          */
      __IOM uint32_t DSCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source Counter Count Down Enable                                          */
      __IOM uint32_t DSCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     Counter Count Down Enable                                                 */
      __IOM uint32_t DSCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source Counter Count Down Enable                                          */
      __IOM uint32_t DSCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source Counter Count Down Enable                                          */
      __IOM uint32_t DSCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source Counter Count Down Enable                                          */
      __IOM uint32_t DSELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source Counter Count Down Enable                  */
      __IOM uint32_t DSELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source Counter Count Down Enable                  */
      __IOM uint32_t DSELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source Counter Count Down Enable                  */
      __IOM uint32_t DSELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source Counter Count Down Enable                  */
            uint32_t            : 12;
    } GTDNSR_b;
  } ;
  
  union {
    __IOM uint32_t GTICASR;                     /*!< (@ 0x00000024) General PWM Timer Input Capture Source Select
                                                                    Register A                                                 */
    
    struct {
      __IOM uint32_t ASGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t ASGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source GTCCRA Input Capture
                                                     Enable                                                                    */
            uint32_t            : 4;
      __IOM uint32_t ASCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source GTCCRA Input Capture Enable                                        */
      __IOM uint32_t ASCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source GTCCRA Input Capture Enable                                        */
      __IOM uint32_t ASCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     GTCCRA Input Capture Enable                                               */
      __IOM uint32_t ASCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source GTCCRA Input Capture Enable                                        */
      __IOM uint32_t ASCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source GTCCRA Input Capture Enable                                        */
      __IOM uint32_t ASCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source GTCCRA Input Capture Enable                                        */
      __IOM uint32_t ASELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source GTCCRA Input Capture Enable                */
      __IOM uint32_t ASELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source GTCCRA Input Capture Enable                */
      __IOM uint32_t ASELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source GTCCRA Input Capture Enable                */
      __IOM uint32_t ASELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source GTCCRA Input Capture Enable                */
            uint32_t            : 12;
    } GTICASR_b;
  } ;
  
  union {
    __IOM uint32_t GTICBSR;                     /*!< (@ 0x00000028) General PWM Timer Input Capture Source Select
                                                                    Register B                                                 */
    
    struct {
      __IOM uint32_t BSGTRGAR   : 1;            /*!< [0..0] GTETRGA Pin Rising Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGAF   : 1;            /*!< [1..1] GTETRGA Pin Falling Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGBR   : 1;            /*!< [2..2] GTETRGB Pin Rising Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
      __IOM uint32_t BSGTRGBF   : 1;            /*!< [3..3] GTETRGB Pin Falling Input Source GTCCRB Input Capture
                                                     Enable                                                                    */
            uint32_t            : 4;
      __IOM uint32_t BSCARBL    : 1;            /*!< [8..8] GTIOCnA Pin Rising Input during GTIOCnB Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCARBH    : 1;            /*!< [9..9] GTIOCnA Pin Rising Input during GTIOCnB Value High Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCAFBL    : 1;            /*!< [10..10] GTIOCnA Pin Falling Input during GTIOCnB Value Low
                                                     Source GTCCRB Input Capture Enable                                        */
      __IOM uint32_t BSCAFBH    : 1;            /*!< [11..11] GTIOCnA Pin Falling Input during GTIOCnB Value High
                                                     Source GTCCRB Input Capture Enable                                        */
      __IOM uint32_t BSCBRAL    : 1;            /*!< [12..12] GTIOCnB Pin Rising Input during GTIOCnA Value Low Source
                                                     GTCCRB Input Capture Enable                                               */
      __IOM uint32_t BSCBRAH    : 1;            /*!< [13..13] GTIOCnB Pin Rising Input during GTIOCnA Value High
                                                     Source GTCCRB Input Capture Enable                                        */
      __IOM uint32_t BSCBFAL    : 1;            /*!< [14..14] GTIOCnB Pin Falling Input during GTIOCnA Value Low
                                                     Source GTCCRB Input Capture Enable                                        */
      __IOM uint32_t BSCBFAH    : 1;            /*!< [15..15] GTIOCnB Pin Falling Input during GTIOCnA Value High
                                                     Source GTCCRB Input Capture Enable                                        */
      __IOM uint32_t BSELCA     : 1;            /*!< [16..16] ELC_GPTA Event Source GTCCRB Input Capture Enable                */
      __IOM uint32_t BSELCB     : 1;            /*!< [17..17] ELC_GPTB Event Source GTCCRB Input Capture Enable                */
      __IOM uint32_t BSELCC     : 1;            /*!< [18..18] ELC_GPTC Event Source GTCCRB Input Capture Enable                */
      __IOM uint32_t BSELCD     : 1;            /*!< [19..19] ELC_GPTD Event Source GTCCRB Input Capture Enable                */
            uint32_t            : 12;
    } GTICBSR_b;
  } ;
  
  union {
    __IOM uint32_t GTCR;                        /*!< (@ 0x0000002C) General PWM Timer Control Register                         */
    
    struct {
      __IOM uint32_t CST        : 1;            /*!< [0..0] Count Start                                                        */
            uint32_t            : 15;
      __IOM uint32_t MD         : 3;            /*!< [18..16] Mode Select                                                      */
            uint32_t            : 5;
      __IOM uint32_t TPCS       : 3;            /*!< [26..24] Timer Prescaler Select                                           */
            uint32_t            : 5;
    } GTCR_b;
  } ;
  
  union {
    __IOM uint32_t GTUDDTYC;                    /*!< (@ 0x00000030) General PWM Timer Count Direction and Duty Setting
                                                                    Register                                                   */
    
    struct {
      __IOM uint32_t UD         : 1;            /*!< [0..0] Count Direction Setting                                            */
      __IOM uint32_t UDF        : 1;            /*!< [1..1] Forcible Count Direction Setting                                   */
            uint32_t            : 14;
      __IOM uint32_t OADTY      : 2;            /*!< [17..16] GTIOCnA Output Duty Setting                                      */
      __IOM uint32_t OADTYF     : 1;            /*!< [18..18] Forcible GTIOCnA Output Duty Setting                             */
      __IOM uint32_t OADTYR     : 1;            /*!< [19..19] GTIOCnA Output Value Selecting after Releasing 0%/100%
                                                     Duty Setting                                                              */
            uint32_t            : 4;
      __IOM uint32_t OBDTY      : 2;            /*!< [25..24] GTIOCnB Output Duty Setting                                      */
      __IOM uint32_t OBDTYF     : 1;            /*!< [26..26] Forcible GTIOCnB Output Duty Setting                             */
      __IOM uint32_t OBDTYR     : 1;            /*!< [27..27] GTIOCnB Output Value Selecting after Releasing 0%/100%
                                                     Duty Setting                                                              */
            uint32_t            : 4;
    } GTUDDTYC_b;
  } ;
  
  union {
    __IOM uint32_t GTIOR;                       /*!< (@ 0x00000034) General PWM Timer I/O Control Register                     */
    
    struct {
      __IOM uint32_t GTIOA      : 5;            /*!< [4..0] GTIOCnA Pin Function Select                                        */
            uint32_t            : 1;
      __IOM uint32_t OADFLT     : 1;            /*!< [6..6] GTIOCnA Pin Output Value Setting at the Count Stop                 */
      __IOM uint32_t OAHLD      : 1;            /*!< [7..7] GTIOCnA Pin Output Setting at the Start/Stop Count                 */
      __IOM uint32_t OAE        : 1;            /*!< [8..8] GTIOCnA Pin Output Enable                                          */
      __IOM uint32_t OADF       : 2;            /*!< [10..9] GTIOCnA Pin Disable Value Setting                                 */
            uint32_t            : 2;
      __IOM uint32_t NFAEN      : 1;            /*!< [13..13] Noise Filter A Enable                                            */
      __IOM uint32_t NFCSA      : 2;            /*!< [15..14] Noise Filter A Sampling Clock Select                             */
      __IOM uint32_t GTIOB      : 5;            /*!< [20..16] GTIOCnB Pin Function Select                                      */
            uint32_t            : 1;
      __IOM uint32_t OBDFLT     : 1;            /*!< [22..22] GTIOCnB Pin Output Value Setting at the Count Stop               */
      __IOM uint32_t OBHLD      : 1;            /*!< [23..23] GTIOCnB Pin Output Setting at the Start/Stop Count               */
      __IOM uint32_t OBE        : 1;            /*!< [24..24] GTIOCnB Pin Output Enable                                        */
      __IOM uint32_t OBDF       : 2;            /*!< [26..25] GTIOCnB Pin Disable Value Setting                                */
            uint32_t            : 2;
      __IOM uint32_t NFBEN      : 1;            /*!< [29..29] Noise Filter B Enable                                            */
      __IOM uint32_t NFCSB      : 2;            /*!< [31..30] Noise Filter B Sampling Clock Select                             */
    } GTIOR_b;
  } ;
  
  union {
    __IOM uint32_t GTINTAD;                     /*!< (@ 0x00000038) General PWM Timer Interrupt Output Setting Register        */
    
    struct {
            uint32_t            : 24;
      __IOM uint32_t GRP        : 2;            /*!< [25..24] Output Disable Source Select                                     */
            uint32_t            : 3;
      __IOM uint32_t GRPABH     : 1;            /*!< [29..29] Same Time Output Level High Disable Request Enable               */
      __IOM uint32_t GRPABL     : 1;            /*!< [30..30] Same Time Output Level Low Disable Request Enable                */
            uint32_t            : 1;
    } GTINTAD_b;
  } ;
  
  union {
    __IOM uint32_t GTST;                        /*!< (@ 0x0000003C) General PWM Timer Status Register                          */
    
    struct {
      __IOM uint32_t TCFA       : 1;            /*!< [0..0] Input Capture/Compare Match Flag A                                 */
      __IOM uint32_t TCFB       : 1;            /*!< [1..1] Input Capture/Compare Match Flag B                                 */
      __IOM uint32_t TCFC       : 1;            /*!< [2..2] Input Compare Match Flag C                                         */
      __IOM uint32_t TCFD       : 1;            /*!< [3..3] Input Compare Match Flag D                                         */
      __IOM uint32_t TCFE       : 1;            /*!< [4..4] Input Compare Match Flag E                                         */
      __IOM uint32_t TCFF       : 1;            /*!< [5..5] Input Compare Match Flag F                                         */
      __IOM uint32_t TCFPO      : 1;            /*!< [6..6] Overflow Flag                                                      */
      __IOM uint32_t TCFPU      : 1;            /*!< [7..7] Underflow Flag                                                     */
            uint32_t            : 7;
      __IM  uint32_t TUCF       : 1;            /*!< [15..15] Count Direction Flag                                             */
            uint32_t            : 8;
      __IM  uint32_t ODF        : 1;            /*!< [24..24] Output Disable Flag                                              */
            uint32_t            : 4;
      __IM  uint32_t OABHF      : 1;            /*!< [29..29] Same Time Output Level High Flag                                 */
      __IM  uint32_t OABLF      : 1;            /*!< [30..30] Same Time Output Level Low Flag                                  */
            uint32_t            : 1;
    } GTST_b;
  } ;
  
  union {
    __IOM uint32_t GTBER;                       /*!< (@ 0x00000040) General PWM Timer Buffer Enable Register                   */
    
    struct {
      __IOM uint32_t BD0        : 1;            /*!< [0..0] GTCCR Buffer Operation Disable                                     */
      __IOM uint32_t BD1        : 1;            /*!< [1..1] GTPR Buffer Operation Disable                                      */
            uint32_t            : 14;
      __IOM uint32_t CCRA       : 2;            /*!< [17..16] GTCCRA Buffer Operation                                          */
      __IOM uint32_t CCRB       : 2;            /*!< [19..18] GTCCRB Buffer Operation                                          */
      __IOM uint32_t PR         : 2;            /*!< [21..20] GTPR Buffer Operation                                            */
      __IOM uint32_t CCRSWT     : 1;            /*!< [22..22] GTCCRA and GTCCRB Forcible Buffer Operation                      */
            uint32_t            : 9;
    } GTBER_b;
  } ;
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  GTCNT;                        /*!< (@ 0x00000048) General PWM Timer Counter                                  */
  __IOM uint32_t  GTCCRA;                       /*!< (@ 0x0000004C) General PWM Timer Compare Capture Register A               */
  __IOM uint32_t  GTCCRB;                       /*!< (@ 0x00000050) General PWM Timer Compare Capture Register B               */
  __IOM uint32_t  GTCCRC;                       /*!< (@ 0x00000054) General PWM Timer Compare Capture Register C               */
  __IOM uint32_t  GTCCRE;                       /*!< (@ 0x00000058) General PWM Timer Compare Capture Register E               */
  __IOM uint32_t  GTCCRD;                       /*!< (@ 0x0000005C) General PWM Timer Compare Capture Register D               */
  __IOM uint32_t  GTCCRF;                       /*!< (@ 0x00000060) General PWM Timer Compare Capture Register F               */
  __IOM uint32_t  GTPR;                         /*!< (@ 0x00000064) General PWM Timer Cycle Setting Register                   */
  __IOM uint32_t  GTPBR;                        /*!< (@ 0x00000068) General PWM Timer Cycle Setting Buffer Register            */
  __IM  uint32_t  RESERVED1[7];
  
  union {
    __IOM uint32_t GTDTCR;                      /*!< (@ 0x00000088) General PWM Timer Dead Time Control Register               */
    
    struct {
      __IOM uint32_t TDE        : 1;            /*!< [0..0] Negative-Phase Waveform Setting                                    */
            uint32_t            : 31;
    } GTDTCR_b;
  } ;
  __IOM uint32_t  GTDVU;                        /*!< (@ 0x0000008C) General PWM Timer Dead Time Value Register U               */
} GPT162_Type;                                  /*!< Size = 144 (0x90)                                                         */



/* =========================================================================================================================== */
/* ================                                          GPT_OPS                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief Output Phase Switching Controller (GPT_OPS)
  */

typedef struct {                                /*!< (@ 0x40055FF0) GPT_OPS Structure                                          */
  
  union {
    __IOM uint32_t OPSCR;                       /*!< (@ 0x00000000) Output Phase Switching Control Register                    */
    
    struct {
      __IOM uint32_t UF         : 1;            /*!< [0..0] UF                                                                 */
      __IOM uint32_t VF         : 1;            /*!< [1..1] VF                                                                 */
      __IOM uint32_t WF         : 1;            /*!< [2..2] WF                                                                 */
            uint32_t            : 1;
      __IM  uint32_t U          : 1;            /*!< [4..4] Input U-Phase Monitor                                              */
      __IM  uint32_t V          : 1;            /*!< [5..5] Input V-Phase Monitor                                              */
      __IM  uint32_t W          : 1;            /*!< [6..6] Input W-Phase Monitor                                              */
            uint32_t            : 1;
      __IOM uint32_t EN         : 1;            /*!< [8..8] Enable-Phase Output Control                                        */
            uint32_t            : 7;
      __IOM uint32_t FB         : 1;            /*!< [16..16] External Feedback Signal Enable                                  */
      __IOM uint32_t P          : 1;            /*!< [17..17] Positive-Phase Output (P) Control                                */
      __IOM uint32_t N          : 1;            /*!< [18..18] Negative-Phase Output (N) Control                                */
      __IOM uint32_t INV        : 1;            /*!< [19..19] Invert-Phase Output Control                                      */
      __IOM uint32_t RV         : 1;            /*!< [20..20] Output Phase Rotation Direction Reversal Control                 */
      __IOM uint32_t ALIGN      : 1;            /*!< [21..21] Input Phase Alignment                                            */
            uint32_t            : 2;
      __IOM uint32_t GRP        : 2;            /*!< [25..24] Output Disabled Source Selection                                 */
      __IOM uint32_t GODF       : 1;            /*!< [26..26] Group Output Disable Function                                    */
            uint32_t            : 2;
      __IOM uint32_t NFEN       : 1;            /*!< [29..29] External Input Noise Filter Enable                               */
      __IOM uint32_t NFCS       : 2;            /*!< [31..30] External Input Noise Filter Clock Selection                      */
    } OPSCR_b;
  } ;
} GPT_OPS_Type;                                 /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                          ADC140                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief 14-bit A/D Converter (ADC140)
  */

typedef struct {                                /*!< (@ 0x4005C000) ADC140 Structure                                           */
  
  union {
    __IOM uint16_t ADCSR;                       /*!< (@ 0x00000000) A/D Control Register                                       */
    
    struct {
      __IOM uint16_t DBLANS     : 5;            /*!< [4..0] Double Trigger Channel Select                                      */
            uint16_t            : 1;
      __IOM uint16_t GBADIE     : 1;            /*!< [6..6] Group B Scan End Interrupt and ELC Event Enable                    */
      __IOM uint16_t DBLE       : 1;            /*!< [7..7] Double Trigger Mode Select                                         */
      __IOM uint16_t EXTRG      : 1;            /*!< [8..8] Trigger Select                                                     */
      __IOM uint16_t TRGE       : 1;            /*!< [9..9] Trigger Start Enable                                               */
            uint16_t            : 2;
      __IOM uint16_t ADIE       : 1;            /*!< [12..12] ADIE                                                             */
      __IOM uint16_t ADCS       : 2;            /*!< [14..13] Scan Mode Select                                                 */
      __IOM uint16_t ADST       : 1;            /*!< [15..15] A/D Conversion Start                                             */
    } ADCSR_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint16_t ADANSA0;                     /*!< (@ 0x00000004) A/D Channel Select Register A0                             */
    
    struct {
      __IOM uint16_t ANSA00     : 1;            /*!< [0..0] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSA01     : 1;            /*!< [1..1] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSA02     : 1;            /*!< [2..2] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSA03     : 1;            /*!< [3..3] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSA04     : 1;            /*!< [4..4] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSA05     : 1;            /*!< [5..5] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSA06     : 1;            /*!< [6..6] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSA07     : 1;            /*!< [7..7] A/D Conversion Channels Select                                     */
            uint16_t            : 8;
    } ADANSA0_b;
  } ;
  
  union {
    __IOM uint16_t ADANSA1;                     /*!< (@ 0x00000006) A/D Channel Select Register A1                             */
    
    struct {
      __IOM uint16_t ANSA16     : 1;            /*!< [0..0] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSA17     : 1;            /*!< [1..1] A/D Conversion Channels Select                                     */
            uint16_t            : 2;
      __IOM uint16_t ANSA20     : 1;            /*!< [4..4] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSA21     : 1;            /*!< [5..5] A/D Conversion Channels Select                                     */
            uint16_t            : 9;
      __IOM uint16_t ANSA31     : 1;            /*!< [15..15] A/D Conversion Channels Select                                   */
    } ADANSA1_b;
  } ;
  
  union {
    __IOM uint16_t ADADS0;                      /*!< (@ 0x00000008) A/D-Converted Value Addition/Average Channel
                                                                    Select Register 0                                          */
    
    struct {
      __IOM uint16_t ADS00      : 1;            /*!< [0..0] A/D-Converted Value Addition/Average Channel Select                */
      __IOM uint16_t ADS01      : 1;            /*!< [1..1] A/D-Converted Value Addition/Average Channel Select                */
      __IOM uint16_t ADS02      : 1;            /*!< [2..2] A/D-Converted Value Addition/Average Channel Select                */
      __IOM uint16_t ADS03      : 1;            /*!< [3..3] A/D-Converted Value Addition/Average Channel Select                */
      __IOM uint16_t ADS04      : 1;            /*!< [4..4] A/D-Converted Value Addition/Average Channel Select                */
      __IOM uint16_t ADS05      : 1;            /*!< [5..5] A/D-Converted Value Addition/Average Channel Select                */
      __IOM uint16_t ADS06      : 1;            /*!< [6..6] A/D-Converted Value Addition/Average Channel Select                */
      __IOM uint16_t ADS07      : 1;            /*!< [7..7] A/D-Converted Value Addition/Average Channel Select                */
            uint16_t            : 8;
    } ADADS0_b;
  } ;
  
  union {
    __IOM uint16_t ADADS1;                      /*!< (@ 0x0000000A) A/D-Converted Value Addition/Average Channel
                                                                    Select Register 1                                          */
    
    struct {
      __IOM uint16_t ADS16      : 1;            /*!< [0..0] A/D-Converted Value Addition/Average Channel Select                */
      __IOM uint16_t ADS17      : 1;            /*!< [1..1] A/D-Converted Value Addition/Average Channel Select                */
            uint16_t            : 2;
      __IOM uint16_t ADS20      : 1;            /*!< [4..4] A/D-Converted Value Addition/Average Channel Select                */
      __IOM uint16_t ADS21      : 1;            /*!< [5..5] A/D-Converted Value Addition/Average Channel Select                */
            uint16_t            : 9;
      __IOM uint16_t ADS31      : 1;            /*!< [15..15] A/D-Converted Value Addition/Average Channel Select              */
    } ADADS1_b;
  } ;
  
  union {
    __IOM uint8_t ADADC;                        /*!< (@ 0x0000000C) A/D-Converted Value Addition/Average Count Select
                                                                    Register                                                   */
    
    struct {
      __IOM uint8_t ADC         : 3;            /*!< [2..0] Addition/Average Count Select                                      */
            uint8_t             : 4;
      __IOM uint8_t AVEE        : 1;            /*!< [7..7] Average Mode Select                                                */
    } ADADC_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint16_t ADCER;                       /*!< (@ 0x0000000E) A/D Control Extended Register                              */
    
    struct {
            uint16_t            : 1;
      __IOM uint16_t ADPRC      : 2;            /*!< [2..1] ADPRC                                                              */
            uint16_t            : 2;
      __IOM uint16_t ACE        : 1;            /*!< [5..5] A/D Data Register Automatic Clearing Enable                        */
            uint16_t            : 2;
      __IOM uint16_t DIAGVAL    : 2;            /*!< [9..8] Self-Diagnosis Conversion Voltage Select                           */
      __IOM uint16_t DIAGLD     : 1;            /*!< [10..10] Self-Diagnosis Mode Select                                       */
      __IOM uint16_t DIAGM      : 1;            /*!< [11..11] Self-Diagnosis Enable                                            */
            uint16_t            : 3;
      __IOM uint16_t ADRFMT     : 1;            /*!< [15..15] A/D Data Register Format Select                                  */
    } ADCER_b;
  } ;
  
  union {
    __IOM uint16_t ADSTRGR;                     /*!< (@ 0x00000010) A/D Conversion Start Trigger Select Register               */
    
    struct {
      __IOM uint16_t TRSB       : 6;            /*!< [5..0] A/D Conversion Start Trigger Select for Group B                    */
            uint16_t            : 2;
      __IOM uint16_t TRSA       : 6;            /*!< [13..8] A/D Conversion Start Trigger Select                               */
            uint16_t            : 2;
    } ADSTRGR_b;
  } ;
  
  union {
    __IOM uint16_t ADEXICR;                     /*!< (@ 0x00000012) A/D Conversion Extended Input Control Registers            */
    
    struct {
      __IOM uint16_t TSSAD      : 1;            /*!< [0..0] Temperature Sensor Output A/D-Converted Value Addition/Average
                                                     Mode Select                                                               */
            uint16_t            : 7;
      __IOM uint16_t TSSA       : 1;            /*!< [8..8] Temperature Sensor Output A/D Conversion Select                    */
            uint16_t            : 1;
      __IOM uint16_t TSSB       : 1;            /*!< [10..10] Temperature Sensor Output A/D Conversion Select for
                                                     Group B                                                                   */
            uint16_t            : 5;
    } ADEXICR_b;
  } ;
  
  union {
    __IOM uint16_t ADANSB0;                     /*!< (@ 0x00000014) A/D Channel Select Register B0                             */
    
    struct {
      __IOM uint16_t ANSB00     : 1;            /*!< [0..0] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSB01     : 1;            /*!< [1..1] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSB02     : 1;            /*!< [2..2] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSB03     : 1;            /*!< [3..3] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSB04     : 1;            /*!< [4..4] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSB05     : 1;            /*!< [5..5] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSB06     : 1;            /*!< [6..6] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSB07     : 1;            /*!< [7..7] A/D Conversion Channels Select                                     */
            uint16_t            : 8;
    } ADANSB0_b;
  } ;
  
  union {
    __IOM uint16_t ADANSB1;                     /*!< (@ 0x00000016) A/D Channel Select Register B1                             */
    
    struct {
      __IOM uint16_t ANSB16     : 1;            /*!< [0..0] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSB17     : 1;            /*!< [1..1] A/D Conversion Channels Select                                     */
            uint16_t            : 2;
      __IOM uint16_t ANSB20     : 1;            /*!< [4..4] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSB21     : 1;            /*!< [5..5] A/D Conversion Channels Select                                     */
            uint16_t            : 9;
      __IOM uint16_t ANSB31     : 1;            /*!< [15..15] A/D Conversion Channels Select                                   */
    } ADANSB1_b;
  } ;
  
  union {
    __IM  uint16_t ADDBLDR;                     /*!< (@ 0x00000018) A/D Data Duplexing Register                                */
    
    struct {
      __IM  uint16_t ADDBLDR    : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDBLDR_b;
  } ;
  
  union {
    __IM  uint16_t ADTSDR;                      /*!< (@ 0x0000001A) A/D Temperature Sensor Data Register                       */
    
    struct {
      __IM  uint16_t ADTSDR     : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADTSDR_b;
  } ;
  __IM  uint16_t  RESERVED2;
  
  union {
    __IM  uint16_t ADRD;                        /*!< (@ 0x0000001E) A/D Self-Diagnosis Data Register                           */
    
    struct {
      __IM  uint16_t AD         : 14;           /*!< [13..0] Converted Value 13 to 0                                           */
      __IM  uint16_t DIAGST     : 2;            /*!< [15..14] Self-Diagnosis Status                                            */
    } ADRD_b;
  } ;
  
  union {
    __IM  uint16_t ADDR0;                       /*!< (@ 0x00000020) A/D Data Registers 0                                       */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR0_b;
  } ;
  
  union {
    __IM  uint16_t ADDR1;                       /*!< (@ 0x00000022) A/D Data Registers 1                                       */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR1_b;
  } ;
  
  union {
    __IM  uint16_t ADDR2;                       /*!< (@ 0x00000024) A/D Data Registers 2                                       */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR2_b;
  } ;
  
  union {
    __IM  uint16_t ADDR3;                       /*!< (@ 0x00000026) A/D Data Registers 3                                       */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR3_b;
  } ;
  
  union {
    __IM  uint16_t ADDR4;                       /*!< (@ 0x00000028) A/D Data Registers 4                                       */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR4_b;
  } ;
  
  union {
    __IM  uint16_t ADDR5;                       /*!< (@ 0x0000002A) A/D Data Registers 5                                       */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR5_b;
  } ;
  
  union {
    __IM  uint16_t ADDR6;                       /*!< (@ 0x0000002C) A/D Data Registers 6                                       */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR6_b;
  } ;
  
  union {
    __IM  uint16_t ADDR7;                       /*!< (@ 0x0000002E) A/D Data Registers 7                                       */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR7_b;
  } ;
  __IM  uint16_t  RESERVED3[8];
  
  union {
    __IM  uint16_t ADDR16;                      /*!< (@ 0x00000040) A/D Data Registers 16                                      */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR16_b;
  } ;
  
  union {
    __IM  uint16_t ADDR17;                      /*!< (@ 0x00000042) A/D Data Registers 17                                      */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR17_b;
  } ;
  __IM  uint16_t  RESERVED4[2];
  
  union {
    __IM  uint16_t ADDR20;                      /*!< (@ 0x00000048) A/D Data Registers 20                                      */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR20_b;
  } ;
  
  union {
    __IM  uint16_t ADDR21;                      /*!< (@ 0x0000004A) A/D Data Registers 21                                      */
    
    struct {
      __IM  uint16_t ADDRn      : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADDR21_b;
  } ;
  __IM  uint16_t  RESERVED5[9];
  
  union {
    __IM  uint16_t ADVSCDR;                     /*!< (@ 0x0000005E) A/D VSC_VCC Voltage Voltage Data Register                  */
    
    struct {
      __IM  uint16_t ADVSCDR    : 16;           /*!< [15..0] Converted Value 15 to 0                                           */
    } ADVSCDR_b;
  } ;
  __IM  uint16_t  RESERVED6[2];
  
  union {
    __IOM uint8_t ADSCLKCR;                     /*!< (@ 0x00000064) A/D Sub-Clock Mode Control Register                        */
    
    struct {
      __IOM uint8_t SCLKEN      : 1;            /*!< [0..0] Sub-Clock Mode Setting                                             */
            uint8_t             : 7;
    } ADSCLKCR_b;
  } ;
  __IM  uint8_t   RESERVED7;
  __IM  uint16_t  RESERVED8[10];
  
  union {
    __IOM uint8_t ADDISCR;                      /*!< (@ 0x0000007A) A/D Disconnection Detection Control Register               */
    
    struct {
      __IOM uint8_t ADNDIS      : 4;            /*!< [3..0] Disconnection Detection Assist Setting                             */
      __IOM uint8_t PCHG        : 1;            /*!< [4..4] Precharge/discharge select                                         */
            uint8_t             : 3;
    } ADDISCR_b;
  } ;
  __IM  uint8_t   RESERVED9[2];
  
  union {
    __IOM uint8_t ADELCCR;                      /*!< (@ 0x0000007D) A/D Event Link Control Register                            */
    
    struct {
      __IOM uint8_t ELCC        : 2;            /*!< [1..0] Event Link Control                                                 */
      __IOM uint8_t GCELC       : 1;            /*!< [2..2] Group C Event Link Control                                         */
            uint8_t             : 5;
    } ADELCCR_b;
  } ;
  __IM  uint16_t  RESERVED10;
  
  union {
    __IOM uint16_t ADGSPCR;                     /*!< (@ 0x00000080) A/D Group Scan Priority Control Register                   */
    
    struct {
      __IOM uint16_t PGS        : 1;            /*!< [0..0] Group Priority Operation Setting                                   */
      __IOM uint16_t GBRSCN     : 1;            /*!< [1..1] Lower-Priority Group Restart Setting                               */
            uint16_t            : 12;
      __IOM uint16_t LGRRS      : 1;            /*!< [14..14] Enabled only when PGS = 1 and GBRSCN = 1.                        */
      __IOM uint16_t GBRP       : 1;            /*!< [15..15] Single Scan Continuous Start                                     */
    } ADGSPCR_b;
  } ;
  __IM  uint16_t  RESERVED11[4];
  
  union {
    __IOM uint8_t ADHVREFCNT;                   /*!< (@ 0x0000008A) A/D High-Potential/Low-Potential Reference Voltage
                                                                    Control Register                                           */
    
    struct {
      __IOM uint8_t HVSEL       : 2;            /*!< [1..0] High-Potential Reference Voltage Select                            */
            uint8_t             : 2;
      __IOM uint8_t LVSEL       : 1;            /*!< [4..4] Low-Potential Reference Voltage Select                             */
            uint8_t             : 3;
    } ADHVREFCNT_b;
  } ;
  __IM  uint8_t   RESERVED12;
  
  union {
    __IM  uint8_t ADWINMON;                     /*!< (@ 0x0000008C) A/D Compare Function Window A/B Status Monitor
                                                                    Register                                                   */
    
    struct {
      __IM  uint8_t MONCOMB     : 1;            /*!< [0..0] Combination Result Monitor                                         */
            uint8_t             : 3;
      __IM  uint8_t MONCMPA     : 1;            /*!< [4..4] Comparison Result Monitor A                                        */
      __IM  uint8_t MONCMPB     : 1;            /*!< [5..5] Comparison Result Monitor B                                        */
            uint8_t             : 2;
    } ADWINMON_b;
  } ;
  __IM  uint8_t   RESERVED13;
  __IM  uint16_t  RESERVED14;
  
  union {
    __IOM uint16_t ADCMPCR;                     /*!< (@ 0x00000090) A/D Compare Function Control Register                      */
    
    struct {
      __IOM uint16_t CMPAB      : 2;            /*!< [1..0] Window A/B Composite Conditions Setting                            */
            uint16_t            : 7;
      __IOM uint16_t CMPBE      : 1;            /*!< [9..9] Compare Window B Operation Enable                                  */
            uint16_t            : 1;
      __IOM uint16_t CMPAE      : 1;            /*!< [11..11] Compare Window A Operation Enable                                */
            uint16_t            : 1;
      __IOM uint16_t CMPBIE     : 1;            /*!< [13..13] Compare B Interrupt Enable                                       */
      __IOM uint16_t WCMPE      : 1;            /*!< [14..14] Window Function Setting                                          */
      __IOM uint16_t CMPAIE     : 1;            /*!< [15..15] Compare A Interrupt Enable                                       */
    } ADCMPCR_b;
  } ;
  
  union {
    __IOM uint8_t ADCMPANSER;                   /*!< (@ 0x00000092) A/D Compare Function Window A Extended Input
                                                                    Select Register                                            */
    
    struct {
      __IOM uint8_t CMPTSA      : 1;            /*!< [0..0] Temperature Sensor Output Compare Select                           */
            uint8_t             : 7;
    } ADCMPANSER_b;
  } ;
  
  union {
    __IOM uint8_t ADCMPLER;                     /*!< (@ 0x00000093) A/D Compare Function Window A Extended Input
                                                                    Comparison Condition Setting Register                      */
    
    struct {
      __IOM uint8_t CMPLTSA     : 1;            /*!< [0..0] Compare Window A Temperature Sensor Output Comparison
                                                     Condition Select                                                          */
            uint8_t             : 7;
    } ADCMPLER_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPANSR0;                  /*!< (@ 0x00000094) A/D Compare Function Window A Channel Select
                                                                    Register 0                                                 */
    
    struct {
      __IOM uint16_t CMPCHA00   : 1;            /*!< [0..0] Compare Window A Channel Select                                    */
      __IOM uint16_t CMPCHA01   : 1;            /*!< [1..1] Compare Window A Channel Select                                    */
      __IOM uint16_t CMPCHA02   : 1;            /*!< [2..2] Compare Window A Channel Select                                    */
      __IOM uint16_t CMPCHA03   : 1;            /*!< [3..3] Compare Window A Channel Select                                    */
      __IOM uint16_t CMPCHA04   : 1;            /*!< [4..4] Compare Window A Channel Select                                    */
      __IOM uint16_t CMPCHA05   : 1;            /*!< [5..5] Compare Window A Channel Select                                    */
      __IOM uint16_t CMPCHA06   : 1;            /*!< [6..6] Compare Window A Channel Select                                    */
      __IOM uint16_t CMPCHA07   : 1;            /*!< [7..7] Compare Window A Channel Select                                    */
            uint16_t            : 8;
    } ADCMPANSR0_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPANSR1;                  /*!< (@ 0x00000096) A/D Compare Function Window A Channel Select
                                                                    Register 1                                                 */
    
    struct {
      __IOM uint16_t CMPCHA16   : 1;            /*!< [0..0] Compare Window A Channel Select                                    */
      __IOM uint16_t CMPCHA17   : 1;            /*!< [1..1] Compare Window A Channel Select                                    */
            uint16_t            : 2;
      __IOM uint16_t CMPCHA20   : 1;            /*!< [4..4] Compare Window A Channel Select                                    */
      __IOM uint16_t CMPCHA21   : 1;            /*!< [5..5] Compare Window A Channel Select                                    */
            uint16_t            : 9;
      __IOM uint16_t CMPCHA31   : 1;            /*!< [15..15] Compare Window A Channel Select                                  */
    } ADCMPANSR1_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPLR0;                    /*!< (@ 0x00000098) A/D Compare Function Window A Comparison Condition
                                                                    Setting Register 0                                         */
    
    struct {
      __IOM uint16_t CMPLCHA00  : 1;            /*!< [0..0] Compare Window A Comparison Condition Select                       */
      __IOM uint16_t CMPLCHA01  : 1;            /*!< [1..1] Compare Window A Comparison Condition Select                       */
      __IOM uint16_t CMPLCHA02  : 1;            /*!< [2..2] Compare Window A Comparison Condition Select                       */
      __IOM uint16_t CMPLCHA03  : 1;            /*!< [3..3] Compare Window A Comparison Condition Select                       */
      __IOM uint16_t CMPLCHA04  : 1;            /*!< [4..4] Compare Window A Comparison Condition Select                       */
      __IOM uint16_t CMPLCHA05  : 1;            /*!< [5..5] Compare Window A Comparison Condition Select                       */
      __IOM uint16_t CMPLCHA06  : 1;            /*!< [6..6] Compare Window A Comparison Condition Select                       */
      __IOM uint16_t CMPLCHA07  : 1;            /*!< [7..7] Compare Window A Comparison Condition Select                       */
            uint16_t            : 8;
    } ADCMPLR0_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPLR1;                    /*!< (@ 0x0000009A) A/D Compare Function Window A Comparison Condition
                                                                    Setting Register 1                                         */
    
    struct {
      __IOM uint16_t CMPLCHA16  : 1;            /*!< [0..0] Compare Window A Comparison Condition Select                       */
      __IOM uint16_t CMPLCHA17  : 1;            /*!< [1..1] Compare Window A Comparison Condition Select                       */
            uint16_t            : 2;
      __IOM uint16_t CMPLCHA20  : 1;            /*!< [4..4] Compare Window A Comparison Condition Select                       */
      __IOM uint16_t CMPLCHA21  : 1;            /*!< [5..5] Compare Window A Comparison Condition Select                       */
            uint16_t            : 9;
      __IOM uint16_t CMPLCHA31  : 1;            /*!< [15..15] Compare Window A Comparison Condition Select                     */
    } ADCMPLR1_b;
  } ;
  __IOM uint16_t  ADCMPDR0;                     /*!< (@ 0x0000009C) A/D Compare Function Window A Lower-Side/Upper-Side
                                                                    Level Setting Register                                     */
  __IOM uint16_t  ADCMPDR1;                     /*!< (@ 0x0000009E) A/D Compare Function Window A Lower-Side/Upper-Side
                                                                    Level Setting Register                                     */
  
  union {
    __IOM uint16_t ADCMPSR0;                    /*!< (@ 0x000000A0) A/D Compare Function Window A Channel Status
                                                                    Register 0                                                 */
    
    struct {
      __IOM uint16_t CMPSTCHA00 : 1;            /*!< [0..0] Compare Window A Flag                                              */
      __IOM uint16_t CMPSTCHA01 : 1;            /*!< [1..1] Compare Window A Flag                                              */
      __IOM uint16_t CMPSTCHA02 : 1;            /*!< [2..2] Compare Window A Flag                                              */
      __IOM uint16_t CMPSTCHA03 : 1;            /*!< [3..3] Compare Window A Flag                                              */
      __IOM uint16_t CMPSTCHA04 : 1;            /*!< [4..4] Compare Window A Flag                                              */
      __IOM uint16_t CMPSTCHA05 : 1;            /*!< [5..5] Compare Window A Flag                                              */
      __IOM uint16_t CMPSTCHA06 : 1;            /*!< [6..6] Compare Window A Flag                                              */
      __IOM uint16_t CMPSTCHA07 : 1;            /*!< [7..7] Compare Window A Flag                                              */
            uint16_t            : 8;
    } ADCMPSR0_b;
  } ;
  
  union {
    __IOM uint16_t ADCMPSR1;                    /*!< (@ 0x000000A2) A/D Compare Function Window A Channel Status
                                                                    Register1                                                  */
    
    struct {
      __IOM uint16_t CMPSTCHA16 : 1;            /*!< [0..0] Compare Window A Flag                                              */
      __IOM uint16_t CMPSTCHA17 : 1;            /*!< [1..1] Compare Window A Flag                                              */
            uint16_t            : 2;
      __IOM uint16_t CMPSTCHA20 : 1;            /*!< [4..4] Compare Window A Flag                                              */
      __IOM uint16_t CMPSTCHA21 : 1;            /*!< [5..5] Compare Window A Flag                                              */
            uint16_t            : 9;
      __IOM uint16_t CMPSTCHA31 : 1;            /*!< [15..15] Compare Window A Flag                                            */
    } ADCMPSR1_b;
  } ;
  
  union {
    __IOM uint8_t ADCMPSER;                     /*!< (@ 0x000000A4) A/D Compare Function Window A Extended Input
                                                                    Channel Status Register                                    */
    
    struct {
      __IOM uint8_t CMPSTTSA    : 1;            /*!< [0..0] Compare Window A Temperature Sensor Output Compare Flag            */
            uint8_t             : 7;
    } ADCMPSER_b;
  } ;
  __IM  uint8_t   RESERVED15;
  
  union {
    __IOM uint8_t ADCMPBNSR;                    /*!< (@ 0x000000A6) A/D Compare Function Window B Channel Select
                                                                    Register                                                   */
    
    struct {
      __IOM uint8_t CMPCHB      : 6;            /*!< [5..0] Compare Window B Channel Select                                    */
            uint8_t             : 1;
      __IOM uint8_t CMPLB       : 1;            /*!< [7..7] Compare Window B Comparison Condition Setting                      */
    } ADCMPBNSR_b;
  } ;
  __IM  uint8_t   RESERVED16;
  __IOM uint16_t  ADWINLLB;                     /*!< (@ 0x000000A8) A/D Compare Function Window B Lower-Side/Upper-Side
                                                                    Level Setting Register                                     */
  __IOM uint16_t  ADWINULB;                     /*!< (@ 0x000000AA) A/D Compare Function Window B Lower-Side/Upper-Side
                                                                    Level Setting Register                                     */
  
  union {
    __IOM uint8_t ADCMPBSR;                     /*!< (@ 0x000000AC) A/D Compare Function Window B Status Register              */
    
    struct {
      __IOM uint8_t CMPSTB      : 1;            /*!< [0..0] Compare Window B Flag                                              */
            uint8_t             : 7;
    } ADCMPBSR_b;
  } ;
  __IM  uint8_t   RESERVED17;
  __IM  uint16_t  RESERVED18[19];
  
  union {
    __IOM uint16_t ADANSC0;                     /*!< (@ 0x000000D4) A/D Channel Select Register C0                             */
    
    struct {
      __IOM uint16_t ANSC00     : 1;            /*!< [0..0] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSC01     : 1;            /*!< [1..1] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSC02     : 1;            /*!< [2..2] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSC03     : 1;            /*!< [3..3] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSC04     : 1;            /*!< [4..4] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSC05     : 1;            /*!< [5..5] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSC06     : 1;            /*!< [6..6] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSC07     : 1;            /*!< [7..7] A/D Conversion Channels Select                                     */
            uint16_t            : 8;
    } ADANSC0_b;
  } ;
  
  union {
    __IOM uint16_t ADANSC1;                     /*!< (@ 0x000000D6) A/D Channel Select Register C1                             */
    
    struct {
      __IOM uint16_t ANSC16     : 1;            /*!< [0..0] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSC17     : 1;            /*!< [1..1] A/D Conversion Channels Select                                     */
            uint16_t            : 2;
      __IOM uint16_t ANSC20     : 1;            /*!< [4..4] A/D Conversion Channels Select                                     */
      __IOM uint16_t ANSC21     : 1;            /*!< [5..5] A/D Conversion Channels Select                                     */
            uint16_t            : 9;
      __IOM uint16_t ANSC31     : 1;            /*!< [15..15] A/D Conversion Channels Select                                   */
    } ADANSC1_b;
  } ;
  
  union {
    __IOM uint8_t ADGCEXCR;                     /*!< (@ 0x000000D8) A/D Group C Extended Input Control Register                */
    
    struct {
      __IOM uint8_t TSSC        : 1;            /*!< [0..0] Temperature Sensor Output A/D Conversion Select for Group
                                                     C                                                                         */
            uint8_t             : 7;
    } ADGCEXCR_b;
  } ;
  
  union {
    __IOM uint8_t ADGCTRGR;                     /*!< (@ 0x000000D9) A/D Group C Trigger Select Register                        */
    
    struct {
      __IOM uint8_t TRSC        : 6;            /*!< [5..0] A/D Conversion Start Trigger Select for Group C                    */
      __IOM uint8_t GCADIE      : 1;            /*!< [6..6] Group C Scan End Interrupt Enable                                  */
      __IOM uint8_t GRCE        : 1;            /*!< [7..7] A/D Conversion Operation Enable for Group C                        */
    } ADGCTRGR_b;
  } ;
  __IM  uint16_t  RESERVED19;
  __IM  uint8_t   RESERVED20;
  
  union {
    __IOM uint8_t ADSSTRL;                      /*!< (@ 0x000000DD) A/D Sampling State Register                                */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting                                              */
    } ADSSTRL_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTRT;                      /*!< (@ 0x000000DE) A/D Sampling State Register                                */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting                                              */
    } ADSSTRT_b;
  } ;
  __IM  uint8_t   RESERVED21;
  
  union {
    __IOM uint8_t ADSSTR0;                      /*!< (@ 0x000000E0) A/D Sampling State Register                                */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting                                              */
    } ADSSTR0_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR1;                      /*!< (@ 0x000000E1) A/D Sampling State Register                                */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting                                              */
    } ADSSTR1_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR2;                      /*!< (@ 0x000000E2) A/D Sampling State Register                                */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting                                              */
    } ADSSTR2_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR3;                      /*!< (@ 0x000000E3) A/D Sampling State Register                                */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting                                              */
    } ADSSTR3_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR4;                      /*!< (@ 0x000000E4) A/D Sampling State Register                                */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting                                              */
    } ADSSTR4_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR5;                      /*!< (@ 0x000000E5) A/D Sampling State Register                                */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting                                              */
    } ADSSTR5_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR6;                      /*!< (@ 0x000000E6) A/D Sampling State Register                                */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting                                              */
    } ADSSTR6_b;
  } ;
  
  union {
    __IOM uint8_t ADSSTR7;                      /*!< (@ 0x000000E7) A/D Sampling State Register                                */
    
    struct {
      __IOM uint8_t SST         : 8;            /*!< [7..0] Sampling Time Setting                                              */
    } ADSSTR7_b;
  } ;
  __IM  uint16_t  RESERVED22[44];
  
  union {
    __IOM uint8_t ADCALC;                       /*!< (@ 0x00000140) A/D Calibration Control Register                           */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t CALST       : 1;            /*!< [7..7] Offset Calibration                                                 */
    } ADCALC_b;
  } ;
  __IM  uint8_t   RESERVED23;
  __IM  uint16_t  RESERVED24[23];
  
  union {
    __IOM uint16_t ADEDCR0;                     /*!< (@ 0x00000170) A/D Emulator Debug Function Control Register
                                                                    0                                                          */
    
    struct {
      __IOM uint16_t EDANC0     : 2;            /*!< [1..0] Emulator Debug Function Control                                    */
            uint16_t            : 2;
      __IOM uint16_t EDANC1     : 2;            /*!< [5..4] Emulator Debug Function Control                                    */
            uint16_t            : 2;
      __IOM uint16_t EDANC2     : 2;            /*!< [9..8] Emulator Debug Function Control                                    */
            uint16_t            : 2;
      __IOM uint16_t EDANC3     : 2;            /*!< [13..12] Emulator Debug Function Control                                  */
            uint16_t            : 2;
    } ADEDCR0_b;
  } ;
  
  union {
    __IOM uint16_t ADEDCR1;                     /*!< (@ 0x00000172) A/D Emulator Debug Function Control Register
                                                                    1                                                          */
    
    struct {
      __IOM uint16_t EDANC4     : 2;            /*!< [1..0] Emulator Debug Function Control                                    */
            uint16_t            : 2;
      __IOM uint16_t EDANC5     : 2;            /*!< [5..4] Emulator Debug Function Control                                    */
            uint16_t            : 2;
      __IOM uint16_t EDANC6     : 2;            /*!< [9..8] Emulator Debug Function Control                                    */
            uint16_t            : 2;
      __IOM uint16_t EDANC7     : 2;            /*!< [13..12] Emulator Debug Function Control                                  */
            uint16_t            : 2;
    } ADEDCR1_b;
  } ;
  __IM  uint16_t  RESERVED25[2];
  
  union {
    __IOM uint16_t ADEDCR4;                     /*!< (@ 0x00000178) A/D Emulator Debug Function Control Register
                                                                    4                                                          */
    
    struct {
      __IOM uint16_t EDANC16    : 2;            /*!< [1..0] Emulator Debug Function Control                                    */
            uint16_t            : 2;
      __IOM uint16_t EDANC17    : 2;            /*!< [5..4] Emulator Debug Function Control                                    */
            uint16_t            : 10;
    } ADEDCR4_b;
  } ;
  
  union {
    __IOM uint16_t ADEDCR5;                     /*!< (@ 0x0000017A) A/D Emulator Debug Function Control Register
                                                                    5                                                          */
    
    struct {
      __IOM uint16_t EDANC20    : 2;            /*!< [1..0] Emulator Debug Function Control                                    */
            uint16_t            : 2;
      __IOM uint16_t EDANC21    : 2;            /*!< [5..4] Emulator Debug Function Control                                    */
            uint16_t            : 10;
    } ADEDCR5_b;
  } ;
  __IM  uint16_t  RESERVED26;
  
  union {
    __IOM uint16_t ADEDCR7;                     /*!< (@ 0x0000017E) A/D Emulator Debug Function Control Register
                                                                    7                                                          */
    
    struct {
            uint16_t            : 12;
      __IOM uint16_t EDANC31    : 2;            /*!< [13..12] Emulator Debug Function Control                                  */
            uint16_t            : 2;
    } ADEDCR7_b;
  } ;
  
  union {
    __IOM uint16_t ADEDEXCR;                    /*!< (@ 0x00000180) A/D Emulator Debug Function Extension Control
                                                                    Register                                                   */
    
    struct {
      __IOM uint16_t EDDIAGC    : 2;            /*!< [1..0] Emulator Debug Function Self-Diagnosis Control                     */
            uint16_t            : 2;
      __IOM uint16_t EDTSC      : 2;            /*!< [5..4] Emulator Debug Function Temperature Sensor Output Control          */
            uint16_t            : 10;
    } ADEDEXCR_b;
  } ;
  
  union {
    __IOM uint16_t ADEDDMY0;                    /*!< (@ 0x00000182) A/D Emulator Debug Function Dummy Data Setting
                                                                    Register 0                                                 */
    
    struct {
      __IOM uint16_t EDDMY0     : 14;           /*!< [13..0] Dummy Data Setting 0                                              */
            uint16_t            : 2;
    } ADEDDMY0_b;
  } ;
  
  union {
    __IOM uint16_t ADEDDMY1;                    /*!< (@ 0x00000184) A/D Emulator Debug Function Dummy Data Setting
                                                                    Register 1                                                 */
    
    struct {
      __IOM uint16_t EDDMY1     : 14;           /*!< [13..0] Dummy Data Setting 1                                              */
            uint16_t            : 2;
    } ADEDDMY1_b;
  } ;
  __IM  uint16_t  RESERVED27[29];
  
  union {
    __IOM uint8_t ADSCS0;                       /*!< (@ 0x000001C0) A/D Channel Conversion Order Setting Register
                                                                    0                                                          */
    
    struct {
      __IOM uint8_t SCS00       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS0_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS1;                       /*!< (@ 0x000001C1) A/D Channel Conversion Order Setting Register
                                                                    1                                                          */
    
    struct {
      __IOM uint8_t SCS01       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS1_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS2;                       /*!< (@ 0x000001C2) A/D Channel Conversion Order Setting Register
                                                                    2                                                          */
    
    struct {
      __IOM uint8_t SCS02       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS2_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS3;                       /*!< (@ 0x000001C3) A/D Channel Conversion Order Setting Register
                                                                    3                                                          */
    
    struct {
      __IOM uint8_t SCS03       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS3_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS4;                       /*!< (@ 0x000001C4) A/D Channel Conversion Order Setting Register
                                                                    4                                                          */
    
    struct {
      __IOM uint8_t SCS04       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS4_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS5;                       /*!< (@ 0x000001C5) A/D Channel Conversion Order Setting Register
                                                                    5                                                          */
    
    struct {
      __IOM uint8_t SCS05       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS5_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS6;                       /*!< (@ 0x000001C6) A/D Channel Conversion Order Setting Register
                                                                    6                                                          */
    
    struct {
      __IOM uint8_t SCS06       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS6_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS7;                       /*!< (@ 0x000001C7) A/D Channel Conversion Order Setting Register
                                                                    7                                                          */
    
    struct {
      __IOM uint8_t SCS07       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS7_b;
  } ;
  __IM  uint16_t  RESERVED28[4];
  
  union {
    __IOM uint8_t ADSCS16;                      /*!< (@ 0x000001D0) A/D Channel Conversion Order Setting Register
                                                                    16                                                         */
    
    struct {
      __IOM uint8_t SCS16       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS16_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS17;                      /*!< (@ 0x000001D1) A/D Channel Conversion Order Setting Register
                                                                    17                                                         */
    
    struct {
      __IOM uint8_t SCS17       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS17_b;
  } ;
  __IM  uint16_t  RESERVED29;
  
  union {
    __IOM uint8_t ADSCS20;                      /*!< (@ 0x000001D4) A/D Channel Conversion Order Setting Register
                                                                    20                                                         */
    
    struct {
      __IOM uint8_t SCS20       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS20_b;
  } ;
  
  union {
    __IOM uint8_t ADSCS21;                      /*!< (@ 0x000001D5) A/D Channel Conversion Order Setting Register
                                                                    21                                                         */
    
    struct {
      __IOM uint8_t SCS21       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS21_b;
  } ;
  __IM  uint16_t  RESERVED30[4];
  __IM  uint8_t   RESERVED31;
  
  union {
    __IOM uint8_t ADSCS31;                      /*!< (@ 0x000001DF) A/D Channel Conversion Order Setting Register
                                                                    31                                                         */
    
    struct {
      __IOM uint8_t SCS31       : 5;            /*!< [4..0] (mth) Conversion Channel Setting                                   */
            uint8_t             : 3;
    } ADSCS31_b;
  } ;
} ADC140_Type;                                  /*!< Size = 480 (0x1e0)                                                        */



/* =========================================================================================================================== */
/* ================                                            TSN                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Temperature Sensor (TSN)
  */

typedef struct {                                /*!< (@ 0x4005D000) TSN Structure                                              */
  
  union {
    __IOM uint8_t TSCR;                         /*!< (@ 0x00000000) Temperature Sensor Control Register                        */
    
    struct {
            uint8_t             : 7;
      __IOM uint8_t TSEN        : 1;            /*!< [7..7] Temperature Sensor Enable                                          */
    } TSCR_b;
  } ;
} TSN_Type;                                     /*!< Size = 1 (0x1)                                                            */



/* =========================================================================================================================== */
/* ================                                           SCI0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Communication Interface 0 (SCI0)
  */

typedef struct {                                /*!< (@ 0x40070000) SCI0 Structure                                             */
  
  union {
    union {
      __IOM uint8_t SMR;                        /*!< (@ 0x00000000) Serial Mode Register for Non-Smart Card Interface
                                                                    Mode (SCMR.SMIF = 0)                                       */
      
      struct {
        __IOM uint8_t CKS       : 2;            /*!< [1..0] Clock Select                                                       */
        __IOM uint8_t MP        : 1;            /*!< [2..2] Multi-Processor Mode                                               */
        __IOM uint8_t STOP      : 1;            /*!< [3..3] Stop Bit Length                                                    */
        __IOM uint8_t PM        : 1;            /*!< [4..4] Parity Mode                                                        */
        __IOM uint8_t PE        : 1;            /*!< [5..5] Parity Enable                                                      */
        __IOM uint8_t CHR       : 1;            /*!< [6..6] Character Length                                                   */
        __IOM uint8_t CM        : 1;            /*!< [7..7] Communication Mode                                                 */
      } SMR_b;
    } ;
    
    union {
      __IOM uint8_t SMR_SMCI;                   /*!< (@ 0x00000000) Serial Mode Register for Smart Card Interface
                                                                    Mode (SCMR.SMIF = 1)                                       */
      
      struct {
        __IOM uint8_t CKS       : 2;            /*!< [1..0] Clock Select                                                       */
        __IOM uint8_t BCP       : 2;            /*!< [3..2] Base Clock Pulse                                                   */
        __IOM uint8_t PM        : 1;            /*!< [4..4] Parity Mode                                                        */
        __IOM uint8_t PE        : 1;            /*!< [5..5] Parity Enable                                                      */
        __IOM uint8_t BLK       : 1;            /*!< [6..6] Block Transfer Mode                                                */
        __IOM uint8_t GM        : 1;            /*!< [7..7] GSM Mode                                                           */
      } SMR_SMCI_b;
    } ;
  };
  __IOM uint8_t   BRR;                          /*!< (@ 0x00000001) Bit Rate Register                                          */
  
  union {
    union {
      __IOM uint8_t SCR;                        /*!< (@ 0x00000002) Serial Control Register for Non-Smart Card Interface
                                                                    Mode (SCMR.SMIF = 0)                                       */
      
      struct {
        __IOM uint8_t CKE       : 2;            /*!< [1..0] Clock Enable                                                       */
        __IOM uint8_t TEIE      : 1;            /*!< [2..2] Transmit End Interrupt Enable                                      */
        __IOM uint8_t MPIE      : 1;            /*!< [3..3] Multi-Processor Interrupt Enable                                   */
        __IOM uint8_t RE        : 1;            /*!< [4..4] Receive Enable                                                     */
        __IOM uint8_t TE        : 1;            /*!< [5..5] Transmit Enable                                                    */
        __IOM uint8_t RIE       : 1;            /*!< [6..6] Receive Interrupt Enable                                           */
        __IOM uint8_t TIE       : 1;            /*!< [7..7] Transmit Interrupt Enable                                          */
      } SCR_b;
    } ;
    
    union {
      __IOM uint8_t SCR_SMCI;                   /*!< (@ 0x00000002) Serial Control Register for Smart Card Interface
                                                                    Mode (SCMR.SMIF = 1)                                       */
      
      struct {
        __IOM uint8_t CKE       : 2;            /*!< [1..0] Clock Enable                                                       */
        __IOM uint8_t TEIE      : 1;            /*!< [2..2] Transmit End Interrupt Enable                                      */
        __IOM uint8_t MPIE      : 1;            /*!< [3..3] Multi-Processor Interrupt Enable                                   */
        __IOM uint8_t RE        : 1;            /*!< [4..4] Receive Enable                                                     */
        __IOM uint8_t TE        : 1;            /*!< [5..5] Transmit Enable                                                    */
        __IOM uint8_t RIE       : 1;            /*!< [6..6] Receive Interrupt Enable                                           */
        __IOM uint8_t TIE       : 1;            /*!< [7..7] Transmit Interrupt Enable                                          */
      } SCR_SMCI_b;
    } ;
  };
  __IOM uint8_t   TDR;                          /*!< (@ 0x00000003) Transmit Data Register                                     */
  
  union {
    union {
      __IOM uint8_t SSR;                        /*!< (@ 0x00000004) Serial Status Register for Non-Smart Card Interface
                                                                    and Non-FIFO Mode (SCMR.SMIF = 0, FCR.FM
                                                                    = 0)                                                       */
      
      struct {
        __IOM uint8_t MPBT      : 1;            /*!< [0..0] Multi-Processor Bit Transfer                                       */
        __IM  uint8_t MPB       : 1;            /*!< [1..1] Multi-Processor                                                    */
        __IM  uint8_t TEND      : 1;            /*!< [2..2] Transmit End Flag                                                  */
        __IOM uint8_t PER       : 1;            /*!< [3..3] Parity Error Flag                                                  */
        __IOM uint8_t FER       : 1;            /*!< [4..4] Framing Error Flag                                                 */
        __IOM uint8_t ORER      : 1;            /*!< [5..5] Overrun Error Flag                                                 */
        __IOM uint8_t RDRF      : 1;            /*!< [6..6] Receive Data Full Flag                                             */
        __IOM uint8_t TDRE      : 1;            /*!< [7..7] Transmit Data Empty Flag                                           */
      } SSR_b;
    } ;
    
    union {
      __IOM uint8_t SSR_FIFO;                   /*!< (@ 0x00000004) Serial Status Register for Non-Smart Card Interface
                                                                    and FIFO Mode (SCMR.SMIF = 0, FCR.FM = 1)                  */
      
      struct {
        __IOM uint8_t DR        : 1;            /*!< [0..0] Receive Data Ready Flag                                            */
              uint8_t           : 1;
        __IOM uint8_t TEND      : 1;            /*!< [2..2] Transmit End Flag                                                  */
        __IOM uint8_t PER       : 1;            /*!< [3..3] Parity Error Flag                                                  */
        __IOM uint8_t FER       : 1;            /*!< [4..4] Framing Error Flag                                                 */
        __IOM uint8_t ORER      : 1;            /*!< [5..5] Overrun Error Flag                                                 */
        __IOM uint8_t RDF       : 1;            /*!< [6..6] Receive FIFO Data Full Flag                                        */
        __IOM uint8_t TDFE      : 1;            /*!< [7..7] Transmit FIFO Data Empty Flag                                      */
      } SSR_FIFO_b;
    } ;
    
    union {
      __IOM uint8_t SSR_SMCI;                   /*!< (@ 0x00000004) Serial Status Register for Smart Card Interface
                                                                    Mode (SCMR.SMIF = 1)                                       */
      
      struct {
        __IOM uint8_t MPBT      : 1;            /*!< [0..0] Multi-Processor Bit Transfer                                       */
        __IM  uint8_t MPB       : 1;            /*!< [1..1] Multi-Processor                                                    */
        __IM  uint8_t TEND      : 1;            /*!< [2..2] Transmit End Flag                                                  */
        __IOM uint8_t PER       : 1;            /*!< [3..3] Parity Error Flag                                                  */
        __IOM uint8_t ERS       : 1;            /*!< [4..4] Error Signal Status Flag                                           */
        __IOM uint8_t ORER      : 1;            /*!< [5..5] Overrun Error Flag                                                 */
        __IOM uint8_t RDRF      : 1;            /*!< [6..6] Receive Data Full Flag                                             */
        __IOM uint8_t TDRE      : 1;            /*!< [7..7] Transmit Data Empty Flag                                           */
      } SSR_SMCI_b;
    } ;
  };
  __IM  uint8_t   RDR;                          /*!< (@ 0x00000005) Receive Data Register                                      */
  
  union {
    __IOM uint8_t SCMR;                         /*!< (@ 0x00000006) Smart Card Mode Register                                   */
    
    struct {
      __IOM uint8_t SMIF        : 1;            /*!< [0..0] Smart Card Interface Mode Select                                   */
            uint8_t             : 1;
      __IOM uint8_t SINV        : 1;            /*!< [2..2] Transmitted/Received Data Invert                                   */
      __IOM uint8_t SDIR        : 1;            /*!< [3..3] Transmitted/Received Data Transfer Direction                       */
      __IOM uint8_t CHR1        : 1;            /*!< [4..4] Character Length 1                                                 */
            uint8_t             : 2;
      __IOM uint8_t BCP2        : 1;            /*!< [7..7] Base Clock Pulse 2                                                 */
    } SCMR_b;
  } ;
  
  union {
    __IOM uint8_t SEMR;                         /*!< (@ 0x00000007) Serial Extended Mode Register                              */
    
    struct {
            uint8_t             : 2;
      __IOM uint8_t BRME        : 1;            /*!< [2..2] Bit Rate Modulation Enable                                         */
      __IOM uint8_t ABCSE       : 1;            /*!< [3..3] Asynchronous Mode Extended Base Clock Select 1                     */
      __IOM uint8_t ABCS        : 1;            /*!< [4..4] Basic Clock Selection                                              */
      __IOM uint8_t NFEN        : 1;            /*!< [5..5] Digital Noise Filter Function Enable                               */
      __IOM uint8_t BGDM        : 1;            /*!< [6..6] Baud Rate Generator Double-Speed Mode Select                       */
      __IOM uint8_t RXDESEL     : 1;            /*!< [7..7] Asynchronous Start Bit Edge Detection Select                       */
    } SEMR_b;
  } ;
  
  union {
    __IOM uint8_t SNFR;                         /*!< (@ 0x00000008) Noise Filter Setting Register                              */
    
    struct {
      __IOM uint8_t NFCS        : 3;            /*!< [2..0] Noise Filter Clock Select                                          */
            uint8_t             : 5;
    } SNFR_b;
  } ;
  
  union {
    __IOM uint8_t SIMR1;                        /*!< (@ 0x00000009) IIC Mode Register 1                                        */
    
    struct {
      __IOM uint8_t IICM        : 1;            /*!< [0..0] Simple IIC Mode Select                                             */
            uint8_t             : 2;
      __IOM uint8_t IICDL       : 5;            /*!< [7..3] SSDAn Delay Output Select                                          */
    } SIMR1_b;
  } ;
  
  union {
    __IOM uint8_t SIMR2;                        /*!< (@ 0x0000000A) IIC Mode Register 2                                        */
    
    struct {
      __IOM uint8_t IICINTM     : 1;            /*!< [0..0] IIC Interrupt Mode Select                                          */
      __IOM uint8_t IICCSC      : 1;            /*!< [1..1] Clock Synchronization                                              */
            uint8_t             : 3;
      __IOM uint8_t IICACKT     : 1;            /*!< [5..5] ACK Transmission Data                                              */
            uint8_t             : 2;
    } SIMR2_b;
  } ;
  
  union {
    __IOM uint8_t SIMR3;                        /*!< (@ 0x0000000B) IIC Mode Register 3                                        */
    
    struct {
      __IOM uint8_t IICSTAREQ   : 1;            /*!< [0..0] Start Condition Generation                                         */
      __IOM uint8_t IICRSTAREQ  : 1;            /*!< [1..1] Restart Condition Generation                                       */
      __IOM uint8_t IICSTPREQ   : 1;            /*!< [2..2] Stop Condition Generation                                          */
      __IOM uint8_t IICSTIF     : 1;            /*!< [3..3] Issuing of Start, Restart, or Stop Condition Completed
                                                     Flag                                                                      */
      __IOM uint8_t IICSDAS     : 2;            /*!< [5..4] SSDAn Output Select                                                */
      __IOM uint8_t IICSCLS     : 2;            /*!< [7..6] SSCLn Output Select                                                */
    } SIMR3_b;
  } ;
  
  union {
    __IM  uint8_t SISR;                         /*!< (@ 0x0000000C) IIC Status Register                                        */
    
    struct {
      __IM  uint8_t IICACKR     : 1;            /*!< [0..0] ACK Reception Data Flag                                            */
            uint8_t             : 7;
    } SISR_b;
  } ;
  
  union {
    __IOM uint8_t SPMR;                         /*!< (@ 0x0000000D) SPI Mode Register                                          */
    
    struct {
      __IOM uint8_t SSE         : 1;            /*!< [0..0] SSn Pin Function Enable                                            */
      __IOM uint8_t CTSE        : 1;            /*!< [1..1] CTS Enable                                                         */
      __IOM uint8_t MSS         : 1;            /*!< [2..2] Master Slave Select                                                */
            uint8_t             : 1;
      __IOM uint8_t MFF         : 1;            /*!< [4..4] Mode Fault Flag                                                    */
            uint8_t             : 1;
      __IOM uint8_t CKPOL       : 1;            /*!< [6..6] Clock Polarity Select                                              */
      __IOM uint8_t CKPH        : 1;            /*!< [7..7] Clock Phase Select                                                 */
    } SPMR_b;
  } ;
  
  union {
    union {
      __OM  uint16_t FTDRHL;                    /*!< (@ 0x0000000E) Transmit FIFO Data Register                                */
      
      struct {
        __OM  uint16_t TDAT     : 9;            /*!< [8..0] Serial transmit data                                               */
        __OM  uint16_t MPBT     : 1;            /*!< [9..9] Multi-Processor Transfer Bit Flag                                  */
              uint16_t          : 6;
      } FTDRHL_b;
    } ;
    
    union {
      __IOM uint16_t TDRHL;                     /*!< (@ 0x0000000E) Transmit Data Register                                     */
      
      struct {
        __IOM uint16_t TDAT     : 9;            /*!< [8..0] Serial Transmit Data                                               */
              uint16_t          : 7;
      } TDRHL_b;
    } ;
    
    struct {
      union {
        __OM  uint8_t FTDRH;                    /*!< (@ 0x0000000E) Transmit FIFO Data Register                                */
        
        struct {
                uint8_t         : 1;
          __OM  uint8_t MPBT    : 1;            /*!< [1..1] Multi-Processor Transfer Bit Flag                                  */
                uint8_t         : 6;
        } FTDRH_b;
      } ;
      
      union {
        __OM  uint8_t FTDRL;                    /*!< (@ 0x0000000F) Transmit FIFO Data Register                                */
        
        struct {
          __OM  uint8_t TDAT    : 8;            /*!< [7..0] Serial transmit data                                               */
        } FTDRL_b;
      } ;
    };
  };
  
  union {
    union {
      __IM  uint16_t FRDRHL;                    /*!< (@ 0x00000010) Receive FIFO Data Register                                 */
      
      struct {
        __IM  uint16_t RDAT     : 9;            /*!< [8..0] Serial receive data                                                */
        __IM  uint16_t MPB      : 1;            /*!< [9..9] Multi-Processor Bit Flag                                           */
        __IM  uint16_t DR       : 1;            /*!< [10..10] Receive Data Ready Flag                                          */
        __IM  uint16_t PER      : 1;            /*!< [11..11] Parity Error Flag                                                */
        __IM  uint16_t FER      : 1;            /*!< [12..12] Framing Error Flag                                               */
        __IM  uint16_t ORER     : 1;            /*!< [13..13] Overrun Error Flag                                               */
        __IM  uint16_t RDF      : 1;            /*!< [14..14] Receive FIFO Data Full Flag                                      */
              uint16_t          : 1;
      } FRDRHL_b;
    } ;
    
    union {
      __IM  uint16_t RDRHL;                     /*!< (@ 0x00000010) Receive Data Register                                      */
      
      struct {
        __IM  uint16_t RDAT     : 9;            /*!< [8..0] Serial Receive Data                                                */
              uint16_t          : 7;
      } RDRHL_b;
    } ;
    
    struct {
      union {
        __IM  uint8_t FRDRH;                    /*!< (@ 0x00000010) Receive FIFO Data Register                                 */
        
        struct {
                uint8_t         : 1;
          __IM  uint8_t MPB     : 1;            /*!< [1..1] Multi-Processor Bit Flag                                           */
          __IM  uint8_t DR      : 1;            /*!< [2..2] Receive Data Ready Flag                                            */
          __IM  uint8_t PER     : 1;            /*!< [3..3] Parity Error Flag                                                  */
          __IM  uint8_t FER     : 1;            /*!< [4..4] Framing Error Flag                                                 */
          __IM  uint8_t ORER    : 1;            /*!< [5..5] Overrun Error Flag                                                 */
          __IM  uint8_t RDF     : 1;            /*!< [6..6] Receive FIFO Data Full Flag                                        */
                uint8_t         : 1;
        } FRDRH_b;
      } ;
      
      union {
        __IM  uint8_t FRDRL;                    /*!< (@ 0x00000011) Receive FIFO Data Register                                 */
        
        struct {
          __IM  uint8_t RDAT    : 8;            /*!< [7..0] Serial receive data                                                */
        } FRDRL_b;
      } ;
    };
  };
  __IOM uint8_t   MDDR;                         /*!< (@ 0x00000012) Modulation Duty Register                                   */
  
  union {
    __IOM uint8_t DCCR;                         /*!< (@ 0x00000013) Data Compare Match Control Register                        */
    
    struct {
      __IOM uint8_t DCMF        : 1;            /*!< [0..0] Data Compare Match Flag                                            */
            uint8_t             : 2;
      __IOM uint8_t DPER        : 1;            /*!< [3..3] Data Compare Match Parity Error Flag                               */
      __IOM uint8_t DFER        : 1;            /*!< [4..4] Data Compare Match Framing Error Flag                              */
            uint8_t             : 1;
      __IOM uint8_t IDSEL       : 1;            /*!< [6..6] ID Frame Select                                                    */
      __IOM uint8_t DCME        : 1;            /*!< [7..7] Data Compare Match Enable                                          */
    } DCCR_b;
  } ;
  
  union {
    __IOM uint16_t FCR;                         /*!< (@ 0x00000014) FIFO Control Register                                      */
    
    struct {
      __IOM uint16_t FM         : 1;            /*!< [0..0] FIFO Mode Select                                                   */
      __IOM uint16_t RFRST      : 1;            /*!< [1..1] Receive FIFO Data Register Reset                                   */
      __IOM uint16_t TFRST      : 1;            /*!< [2..2] Transmit FIFO Data Register Reset                                  */
      __IOM uint16_t DRES       : 1;            /*!< [3..3] Receive Data Ready Error Select                                    */
      __IOM uint16_t TTRG       : 4;            /*!< [7..4] Transmit FIFO Data Trigger Number                                  */
      __IOM uint16_t RTRG       : 4;            /*!< [11..8] Receive FIFO Data Trigger Number                                  */
      __IOM uint16_t RSTRG      : 4;            /*!< [15..12] RTS Output Active Trigger Number Select                          */
    } FCR_b;
  } ;
  
  union {
    __IM  uint16_t FDR;                         /*!< (@ 0x00000016) FIFO Data Count Register                                   */
    
    struct {
      __IM  uint16_t R          : 5;            /*!< [4..0] Receive FIFO Data Count                                            */
            uint16_t            : 3;
      __IM  uint16_t T          : 5;            /*!< [12..8] Transmit FIFO Data Count                                          */
            uint16_t            : 3;
    } FDR_b;
  } ;
  
  union {
    __IM  uint16_t LSR;                         /*!< (@ 0x00000018) Line Status Register                                       */
    
    struct {
      __IM  uint16_t ORER       : 1;            /*!< [0..0] Overrun Error Flag                                                 */
            uint16_t            : 1;
      __IM  uint16_t FNUM       : 5;            /*!< [6..2] Framing Error Count                                                */
            uint16_t            : 1;
      __IM  uint16_t PNUM       : 5;            /*!< [12..8] Parity Error Count                                                */
            uint16_t            : 3;
    } LSR_b;
  } ;
  
  union {
    __IOM uint16_t CDR;                         /*!< (@ 0x0000001A) Compare Match Data Register                                */
    
    struct {
      __IOM uint16_t CMPD       : 9;            /*!< [8..0] Compare Match Data                                                 */
            uint16_t            : 7;
    } CDR_b;
  } ;
  
  union {
    __IOM uint8_t SPTR;                         /*!< (@ 0x0000001C) Serial Port Register                                       */
    
    struct {
      __IM  uint8_t RXDMON      : 1;            /*!< [0..0] Serial Input Data Monitor                                          */
      __IOM uint8_t SPB2DT      : 1;            /*!< [1..1] Serial Port Break Data Select                                      */
      __IOM uint8_t SPB2IO      : 1;            /*!< [2..2] Serial Port Break I/O                                              */
            uint8_t             : 5;
    } SPTR_b;
  } ;
  __IM  uint8_t   RESERVED;
  __IM  uint16_t  RESERVED1;
} SCI0_Type;                                    /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                           MLCD                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief MIP LCD Controller (MLCD)
  */

typedef struct {                                /*!< (@ 0x40070200) MLCD Structure                                             */
  
  union {
    __IOM uint32_t MLCDCR;                      /*!< (@ 0x00000000) MLCD Control Register                                      */
    
    struct {
      __IOM uint32_t TE         : 1;            /*!< [0..0] MLCD Transmit Enable                                               */
            uint32_t            : 4;
      __IOM uint32_t TEIE       : 1;            /*!< [5..5] Transmit End Interrupt Enable                                      */
      __IOM uint32_t TEMIE      : 1;            /*!< [6..6] Data Register Empty Interrupt Enable                               */
            uint32_t            : 1;
      __IOM uint32_t XRST       : 1;            /*!< [8..8] Liquid Crystal Display                                             */
            uint32_t            : 3;
      __IOM uint32_t BITSW      : 1;            /*!< [12..12] Endian Conversion                                                */
            uint32_t            : 3;
      __IOM uint32_t SCKCR      : 8;            /*!< [23..16] Transmit Clock Control                                           */
            uint32_t            : 4;
      __IOM uint32_t HADDRDEC   : 1;            /*!< [28..28] Horizontal Address Control                                       */
      __IOM uint32_t VADDRDEC   : 1;            /*!< [29..29] Vertical Address Control                                         */
            uint32_t            : 2;
    } MLCDCR_b;
  } ;
  
  union {
    __IM  uint32_t MLCDSR;                      /*!< (@ 0x00000004) MLCD Status Register                                       */
    
    struct {
      __IM  uint32_t TEND       : 1;            /*!< [0..0] Transmission Flag                                                  */
      __IM  uint32_t TEF        : 1;            /*!< [1..1] Empty Flag                                                         */
            uint32_t            : 30;
    } MLCDSR_b;
  } ;
  
  union {
    __IOM uint32_t MLCDADDR;                    /*!< (@ 0x00000008) MLCD Address Setting Register                              */
    
    struct {
            uint32_t            : 3;
      __IOM uint32_t HADDR      : 5;            /*!< [7..3] Horizontal Address Setting                                         */
            uint32_t            : 8;
      __IOM uint32_t VADDR      : 8;            /*!< [23..16] Vertical Address Setting                                         */
            uint32_t            : 8;
    } MLCDADDR_b;
  } ;
  
  union {
    __IOM uint32_t MLCDWRCR;                    /*!< (@ 0x0000000C) MLCD Transmit Data Size Setting Register                   */
    
    struct {
      __IOM uint32_t BYTE       : 6;            /*!< [5..0] Horizontal Size Setting                                            */
            uint32_t            : 10;
      __IOM uint32_t LINE       : 9;            /*!< [24..16] Vertical Size Setting                                            */
            uint32_t            : 7;
    } MLCDWRCR_b;
  } ;
  
  union {
    __OM  uint32_t MLCDSEND;                    /*!< (@ 0x00000010) MLCD Same Image Transmit Register                          */
    
    struct {
      __OM  uint32_t EN         : 1;            /*!< [0..0] Same Image Transmit Setting                                        */
            uint32_t            : 31;
    } MLCDSEND_b;
  } ;
  
  union {
    __IOM uint32_t MLCDBKCR;                    /*!< (@ 0x00000014) MLCD Block Transfer Setting Register                       */
    
    struct {
      __IOM uint32_t BKEN       : 1;            /*!< [0..0] Block Transfer Enable                                              */
      __IOM uint32_t BKSIZE     : 1;            /*!< [1..1] Block Transfer Size                                                */
            uint32_t            : 6;
      __IOM uint32_t BKMODE     : 2;            /*!< [9..8] Block Transfer Mode Setting                                        */
            uint32_t            : 6;
      __IOM uint32_t BKHNUM     : 6;            /*!< [21..16] Horizontal Transfer Count Setting                                */
            uint32_t            : 2;
      __IOM uint32_t BKVNUM     : 6;            /*!< [29..24] Vertical Transfer Count Setting                                  */
            uint32_t            : 2;
    } MLCDBKCR_b;
  } ;
  
  union {
    __IOM uint32_t MLCDVCOMCTL;                 /*!< (@ 0x00000018) MLCD VCOM Control Register                                 */
    
    struct {
      __IOM uint32_t VCOME      : 1;            /*!< [0..0] VCOM Output Enable                                                 */
      __IOM uint32_t VCOMW      : 2;            /*!< [2..1] VCOM Output High-Width Setting                                     */
            uint32_t            : 6;
      __IOM uint32_t HWMSKEN    : 1;            /*!< [9..9] HW VCOM Mask                                                       */
      __IM  uint32_t HWMSKF     : 1;            /*!< [10..10] HW Mask                                                          */
            uint32_t            : 5;
      __IOM uint32_t FMASK      : 8;            /*!< [23..16] VCOM Hardware Mask Range Bits Before Data Transmission           */
      __IOM uint32_t BMASK      : 8;            /*!< [31..24] VCOM Hardware Mask Range Bits After Data Transmission            */
    } MLCDVCOMCTL_b;
  } ;
  
  union {
    __IOM uint32_t MLCDENBCR;                   /*!< (@ 0x0000001C) MLCD Enable Signal Control Register                        */
    
    struct {
      __IOM uint32_t ENBW       : 10;           /*!< [9..0] High-Width Setting                                                 */
            uint32_t            : 6;
      __IOM uint32_t ENBEG      : 8;            /*!< [23..16] Timing Setting                                                   */
            uint32_t            : 8;
    } MLCDENBCR_b;
  } ;
  
  union {
    __IOM uint32_t DATA_W0;                     /*!< (@ 0x00000020) MLCD Drawing Word Data Setting Register                    */
    
    struct {
      union {
        __IOM uint16_t DATA_HW0;                /*!< (@ 0x00000020) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA0;                  /*!< (@ 0x00000020) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA1;                  /*!< (@ 0x00000021) MLCD Drawing Byte Data Setting Register                    */
        };
      };
      
      union {
        __IOM uint16_t DATA_HW1;                /*!< (@ 0x00000022) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA2;                  /*!< (@ 0x00000022) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA3;                  /*!< (@ 0x00000023) MLCD Drawing Byte Data Setting Register                    */
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W1;                     /*!< (@ 0x00000024) MLCD Drawing Word Data Setting Register                    */
    
    struct {
      union {
        __IOM uint16_t DATA_HW2;                /*!< (@ 0x00000024) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA4;                  /*!< (@ 0x00000024) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA5;                  /*!< (@ 0x00000025) MLCD Drawing Byte Data Setting Register                    */
        };
      };
      
      union {
        __IOM uint16_t DATA_HW3;                /*!< (@ 0x00000026) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA6;                  /*!< (@ 0x00000026) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA7;                  /*!< (@ 0x00000027) MLCD Drawing Byte Data Setting Register                    */
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W2;                     /*!< (@ 0x00000028) MLCD Drawing Word Data Setting Register                    */
    
    struct {
      union {
        __IOM uint16_t DATA_HW4;                /*!< (@ 0x00000028) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA8;                  /*!< (@ 0x00000028) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA9;                  /*!< (@ 0x00000029) MLCD Drawing Byte Data Setting Register                    */
        };
      };
      
      union {
        __IOM uint16_t DATA_HW5;                /*!< (@ 0x0000002A) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA10;                 /*!< (@ 0x0000002A) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA11;                 /*!< (@ 0x0000002B) MLCD Drawing Byte Data Setting Register                    */
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W3;                     /*!< (@ 0x0000002C) MLCD Drawing Word Data Setting Register                    */
    
    struct {
      union {
        __IOM uint16_t DATA_HW6;                /*!< (@ 0x0000002C) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA12;                 /*!< (@ 0x0000002C) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA13;                 /*!< (@ 0x0000002D) MLCD Drawing Byte Data Setting Register                    */
        };
      };
      
      union {
        __IOM uint16_t DATA_HW7;                /*!< (@ 0x0000002E) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA14;                 /*!< (@ 0x0000002E) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA15;                 /*!< (@ 0x0000002F) MLCD Drawing Byte Data Setting Register                    */
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W4;                     /*!< (@ 0x00000030) MLCD Drawing Word Data Setting Register                    */
    
    struct {
      union {
        __IOM uint16_t DATA_HW8;                /*!< (@ 0x00000030) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA16;                 /*!< (@ 0x00000030) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA17;                 /*!< (@ 0x00000031) MLCD Drawing Byte Data Setting Register                    */
        };
      };
      
      union {
        __IOM uint16_t DATA_HW9;                /*!< (@ 0x00000032) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA18;                 /*!< (@ 0x00000032) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA19;                 /*!< (@ 0x00000033) MLCD Drawing Byte Data Setting Register                    */
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W5;                     /*!< (@ 0x00000034) MLCD Drawing Word Data Setting Register                    */
    
    struct {
      union {
        __IOM uint16_t DATA_HW10;               /*!< (@ 0x00000034) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA20;                 /*!< (@ 0x00000034) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA21;                 /*!< (@ 0x00000035) MLCD Drawing Byte Data Setting Register                    */
        };
      };
      
      union {
        __IOM uint16_t DATA_HW11;               /*!< (@ 0x00000036) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA22;                 /*!< (@ 0x00000036) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA23;                 /*!< (@ 0x00000037) MLCD Drawing Byte Data Setting Register                    */
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W6;                     /*!< (@ 0x00000038) MLCD Drawing Word Data Setting Register                    */
    
    struct {
      union {
        __IOM uint16_t DATA_HW12;               /*!< (@ 0x00000038) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA24;                 /*!< (@ 0x00000038) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA25;                 /*!< (@ 0x00000039) MLCD Drawing Byte Data Setting Register                    */
        };
      };
      
      union {
        __IOM uint16_t DATA_HW13;               /*!< (@ 0x0000003A) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA26;                 /*!< (@ 0x0000003A) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA27;                 /*!< (@ 0x0000003B) MLCD Drawing Byte Data Setting Register                    */
        };
      };
    };
  };
  
  union {
    __IOM uint32_t DATA_W7;                     /*!< (@ 0x0000003C) MLCD Drawing Word Data Setting Register                    */
    
    struct {
      union {
        __IOM uint16_t DATA_HW14;               /*!< (@ 0x0000003C) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA28;                 /*!< (@ 0x0000003C) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA29;                 /*!< (@ 0x0000003D) MLCD Drawing Byte Data Setting Register                    */
        };
      };
      
      union {
        __IOM uint16_t DATA_HW15;               /*!< (@ 0x0000003E) MLCD Drawing Halfword Data Setting Register                */
        
        struct {
          __IOM uint8_t DATA30;                 /*!< (@ 0x0000003E) MLCD Drawing Byte Data Setting Register                    */
          __IOM uint8_t DATA31;                 /*!< (@ 0x0000003F) MLCD Drawing Byte Data Setting Register                    */
        };
      };
    };
  };
} MLCD_Type;                                    /*!< Size = 64 (0x40)                                                          */



/* =========================================================================================================================== */
/* ================                                            GDT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief 2D Graphics Data Conversion Circuit (GDT)
  */

typedef struct {                                /*!< (@ 0x40070800) GDT Structure                                              */
  
  union {
    __IOM uint32_t GDTCR;                       /*!< (@ 0x00000000) GDT Control Register                                       */
    
    struct {
      __IOM uint32_t GDTSTART   : 1;            /*!< [0..0] GDT Processing Start                                               */
            uint32_t            : 3;
      __IOM uint32_t IFLPEN     : 1;            /*!< [4..4] Inversion Enable                                                   */
      __IOM uint32_t GDTDSZ     : 1;            /*!< [5..5] Image Processing Data Size Select                                  */
            uint32_t            : 1;
      __IOM uint32_t ENDIAN     : 1;            /*!< [7..7] Endian Conversion                                                  */
      __IOM uint32_t CIALGEN    : 1;            /*!< [8..8] Color Data Sorting Enable                                          */
      __IOM uint32_t CIALGSL    : 1;            /*!< [9..9] Color Data Sorting Select                                          */
      __IOM uint32_t RTTEN      : 1;            /*!< [10..10] Rotation Enable                                                  */
      __IOM uint32_t RTTFC      : 2;            /*!< [12..11] Rotation Type Select                                             */
      __IOM uint32_t ISCREN     : 3;            /*!< [15..13] Image Scrolling Enable                                           */
      __IOM uint32_t MSYNEN     : 1;            /*!< [16..16] Monochrome Image Compositing Enable                              */
      __IOM uint32_t MPCS       : 1;            /*!< [17..17] Monochrome Priority Color Setting                                */
      __IOM uint32_t MBRDEN     : 1;            /*!< [18..18] Image Trimming Enable                                            */
      __IOM uint32_t CSYNEN     : 1;            /*!< [19..19] Color Image Compositing Enable                                   */
      __IOM uint32_t CPTS       : 1;            /*!< [20..20] Color Image Priority/Transparency Setting                        */
      __IOM uint32_t CDCS       : 3;            /*!< [23..21] Specified Color Setting                                          */
            uint32_t            : 1;
      __IOM uint32_t CLREN      : 1;            /*!< [25..25] Image Colorization Function Enable                               */
      __IOM uint32_t CLRDS0     : 3;            /*!< [28..26] 0 Data Color Setting                                             */
      __IOM uint32_t CLRDS1     : 3;            /*!< [31..29] 1 Data Color Setting                                             */
    } GDTCR_b;
  } ;
  
  union {
    __IOM uint32_t GDTSCR;                      /*!< (@ 0x00000004) Reduction Function Control Register                        */
    
    struct {
      __IOM uint32_t SHRNKEN    : 1;            /*!< [0..0] Scaling Down Enable                                                */
            uint32_t            : 7;
      __IOM uint32_t SHRNKSZ    : 3;            /*!< [10..8] Scaling Down Ratio Select                                         */
            uint32_t            : 5;
      __IOM uint32_t SBCS       : 1;            /*!< [16..16] Unused Background Color Setting                                  */
            uint32_t            : 7;
      __IOM uint32_t SHRNKNUM   : 3;            /*!< [26..24] Number of Images for Scaling Down                                */
            uint32_t            : 5;
    } GDTSCR_b;
  } ;
  
  union {
    __IOM uint32_t GDTFDCS;                     /*!< (@ 0x00000008) Glyph Data Image Conversion Setting Register               */
    
    struct {
      __IOM uint32_t FDCEN      : 1;            /*!< [0..0] Glyph Data Conversion Enable                                       */
            uint32_t            : 3;
      __IOM uint32_t SAC        : 3;            /*!< [6..4] Start Address Change                                               */
      __IOM uint32_t FDHAD      : 1;            /*!< [7..7] Unused Bit Setting                                                 */
      __IOM uint32_t FDIR       : 6;            /*!< [13..8] Number of Rounds of Data Processing Setting                       */
            uint32_t            : 2;
      __IOM uint32_t FDLTDSZ    : 6;            /*!< [21..16] Glyph Data Horizontal Size Setting                               */
            uint32_t            : 2;
      __IOM uint32_t FDLNGSZ    : 7;            /*!< [30..24] Glyph Data Vertical Size Setting                                 */
            uint32_t            : 1;
    } GDTFDCS_b;
  } ;
  
  union {
    __IOM uint8_t GDTPIER;                      /*!< (@ 0x0000000C) Image Data Processing Interrupt Enable Register            */
    
    struct {
      __IOM uint8_t DATIIE      : 1;            /*!< [0..0] Image Data Input Request Interrupt Enable                          */
      __IOM uint8_t DATOIE      : 1;            /*!< [1..1] Image Data Output Request Interrupt Enable                         */
      __IOM uint8_t FDCENDIE    : 1;            /*!< [2..2] Glyph Data Conversion Complete Interrupt Enable                    */
            uint8_t             : 4;
      __IOM uint8_t INTMODE     : 1;            /*!< [7..7] GDT Interrupt Mode Select                                          */
    } GDTPIER_b;
  } ;
  __IM  uint8_t   RESERVED;
  __IM  uint16_t  RESERVED1;
  __IM  uint32_t  RESERVED2[60];
  __OM  uint32_t  GDTIBUF0;                     /*!< (@ 0x00000100) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF1;                     /*!< (@ 0x00000104) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF2;                     /*!< (@ 0x00000108) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF3;                     /*!< (@ 0x0000010C) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF4;                     /*!< (@ 0x00000110) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF5;                     /*!< (@ 0x00000114) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF6;                     /*!< (@ 0x00000118) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF7;                     /*!< (@ 0x0000011C) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF8;                     /*!< (@ 0x00000120) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF9;                     /*!< (@ 0x00000124) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF10;                    /*!< (@ 0x00000128) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF11;                    /*!< (@ 0x0000012C) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF12;                    /*!< (@ 0x00000130) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF13;                    /*!< (@ 0x00000134) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF14;                    /*!< (@ 0x00000138) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF15;                    /*!< (@ 0x0000013C) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF16;                    /*!< (@ 0x00000140) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF17;                    /*!< (@ 0x00000144) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF18;                    /*!< (@ 0x00000148) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF19;                    /*!< (@ 0x0000014C) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF20;                    /*!< (@ 0x00000150) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF21;                    /*!< (@ 0x00000154) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF22;                    /*!< (@ 0x00000158) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF23;                    /*!< (@ 0x0000015C) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF24;                    /*!< (@ 0x00000160) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF25;                    /*!< (@ 0x00000164) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF26;                    /*!< (@ 0x00000168) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF27;                    /*!< (@ 0x0000016C) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF28;                    /*!< (@ 0x00000170) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF29;                    /*!< (@ 0x00000174) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF30;                    /*!< (@ 0x00000178) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF31;                    /*!< (@ 0x0000017C) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF32;                    /*!< (@ 0x00000180) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF33;                    /*!< (@ 0x00000184) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF34;                    /*!< (@ 0x00000188) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF35;                    /*!< (@ 0x0000018C) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF36;                    /*!< (@ 0x00000190) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF37;                    /*!< (@ 0x00000194) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF38;                    /*!< (@ 0x00000198) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF39;                    /*!< (@ 0x0000019C) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF40;                    /*!< (@ 0x000001A0) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF41;                    /*!< (@ 0x000001A4) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF42;                    /*!< (@ 0x000001A8) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF43;                    /*!< (@ 0x000001AC) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF44;                    /*!< (@ 0x000001B0) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF45;                    /*!< (@ 0x000001B4) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF46;                    /*!< (@ 0x000001B8) GDT Image Data Input Register                              */
  __OM  uint32_t  GDTIBUF47;                    /*!< (@ 0x000001BC) GDT Image Data Input Register                              */
  __IM  uint32_t  RESERVED3[16];
  __IM  uint32_t  GDTOBUF0;                     /*!< (@ 0x00000200) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF1;                     /*!< (@ 0x00000204) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF2;                     /*!< (@ 0x00000208) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF3;                     /*!< (@ 0x0000020C) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF4;                     /*!< (@ 0x00000210) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF5;                     /*!< (@ 0x00000214) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF6;                     /*!< (@ 0x00000218) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF7;                     /*!< (@ 0x0000021C) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF8;                     /*!< (@ 0x00000220) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF9;                     /*!< (@ 0x00000224) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF10;                    /*!< (@ 0x00000228) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF11;                    /*!< (@ 0x0000022C) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF12;                    /*!< (@ 0x00000230) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF13;                    /*!< (@ 0x00000234) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF14;                    /*!< (@ 0x00000238) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF15;                    /*!< (@ 0x0000023C) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF16;                    /*!< (@ 0x00000240) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF17;                    /*!< (@ 0x00000244) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF18;                    /*!< (@ 0x00000248) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF19;                    /*!< (@ 0x0000024C) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF20;                    /*!< (@ 0x00000250) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF21;                    /*!< (@ 0x00000254) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF22;                    /*!< (@ 0x00000258) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF23;                    /*!< (@ 0x0000025C) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF24;                    /*!< (@ 0x00000260) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF25;                    /*!< (@ 0x00000264) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF26;                    /*!< (@ 0x00000268) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF27;                    /*!< (@ 0x0000026C) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF28;                    /*!< (@ 0x00000270) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF29;                    /*!< (@ 0x00000274) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF30;                    /*!< (@ 0x00000278) GDT Image Data Output Register                             */
  __IM  uint32_t  GDTOBUF31;                    /*!< (@ 0x0000027C) GDT Image Data Output Register                             */
} GDT_Type;                                     /*!< Size = 640 (0x280)                                                        */



/* =========================================================================================================================== */
/* ================                                           IRDA                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief IrDA Interface (IRDA)
  */

typedef struct {                                /*!< (@ 0x40070F00) IRDA Structure                                             */
  
  union {
    __IOM uint8_t IRCR;                         /*!< (@ 0x00000000) IrDA Control Register                                      */
    
    struct {
            uint8_t             : 2;
      __IOM uint8_t IRRXINV     : 1;            /*!< [2..2] IRRXD Polarity Switching                                           */
      __IOM uint8_t IRTXINV     : 1;            /*!< [3..3] IRTXD Polarity Switching                                           */
            uint8_t             : 3;
      __IOM uint8_t IRE         : 1;            /*!< [7..7] IrDA Enable                                                        */
    } IRCR_b;
  } ;
} IRDA_Type;                                    /*!< Size = 1 (0x1)                                                            */



/* =========================================================================================================================== */
/* ================                                           SPI0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Peripheral Interface 0 (SPI0)
  */

typedef struct {                                /*!< (@ 0x40072000) SPI0 Structure                                             */
  
  union {
    __IOM uint8_t SPCR;                         /*!< (@ 0x00000000) SPI Control Register                                       */
    
    struct {
      __IOM uint8_t SPMS        : 1;            /*!< [0..0] SPI Mode Select                                                    */
      __IOM uint8_t TXMD        : 1;            /*!< [1..1] Communications Operating Mode Select                               */
      __IOM uint8_t MODFEN      : 1;            /*!< [2..2] Mode Fault Error Detection Enable                                  */
      __IOM uint8_t MSTR        : 1;            /*!< [3..3] SPI Master/Slave Mode Select                                       */
      __IOM uint8_t SPEIE       : 1;            /*!< [4..4] SPI Error Interrupt Enable                                         */
      __IOM uint8_t SPTIE       : 1;            /*!< [5..5] Transmit Buffer Empty Interrupt Enable                             */
      __IOM uint8_t SPE         : 1;            /*!< [6..6] SPI Function Enable                                                */
      __IOM uint8_t SPRIE       : 1;            /*!< [7..7] SPI Receive Buffer Full Interrupt Enable                           */
    } SPCR_b;
  } ;
  
  union {
    __IOM uint8_t SSLP;                         /*!< (@ 0x00000001) SPI Slave Select Polarity Register                         */
    
    struct {
      __IOM uint8_t SSL0P       : 1;            /*!< [0..0] SSLn0 Signal Polarity Setting                                      */
      __IOM uint8_t SSL1P       : 1;            /*!< [1..1] SSLn1 Signal Polarity Setting                                      */
      __IOM uint8_t SSL2P       : 1;            /*!< [2..2] SSLn2 Signal Polarity Setting                                      */
      __IOM uint8_t SSL3P       : 1;            /*!< [3..3] SSLn3 Signal Polarity Setting                                      */
            uint8_t             : 4;
    } SSLP_b;
  } ;
  
  union {
    __IOM uint8_t SPPCR;                        /*!< (@ 0x00000002) SPI Pin Control Register                                   */
    
    struct {
      __IOM uint8_t SPLP        : 1;            /*!< [0..0] SPI Loopback                                                       */
      __IOM uint8_t SPLP2       : 1;            /*!< [1..1] SPI Loopback 2                                                     */
            uint8_t             : 2;
      __IOM uint8_t MOIFV       : 1;            /*!< [4..4] MOSI Idle Fixed Value                                              */
      __IOM uint8_t MOIFE       : 1;            /*!< [5..5] MOSI Idle Value Fixing Enable                                      */
            uint8_t             : 2;
    } SPPCR_b;
  } ;
  
  union {
    __IOM uint8_t SPSR;                         /*!< (@ 0x00000003) SPI Status Register                                        */
    
    struct {
      __IOM uint8_t OVRF        : 1;            /*!< [0..0] Overrun Error Flag                                                 */
      __IM  uint8_t IDLNF       : 1;            /*!< [1..1] SPI Idle Flag                                                      */
      __IOM uint8_t MODF        : 1;            /*!< [2..2] Mode Fault Error Flag                                              */
      __IOM uint8_t PERF        : 1;            /*!< [3..3] Parity Error Flag                                                  */
      __IOM uint8_t UDRF        : 1;            /*!< [4..4] Underrun Error Flag                                                */
      __IOM uint8_t SPTEF       : 1;            /*!< [5..5] SPI Transmit Buffer Empty Flag                                     */
            uint8_t             : 1;
      __IOM uint8_t SPRF        : 1;            /*!< [7..7] SPI Receive Buffer Full Flag                                       */
    } SPSR_b;
  } ;
  
  union {
    __IOM uint32_t SPDR;                        /*!< (@ 0x00000004) SPI Data Register                                          */
    __IOM uint16_t SPDR_HA;                     /*!< (@ 0x00000004) SPI Data Register                                          */
    __IOM uint8_t SPDR_BY;                      /*!< (@ 0x00000004) SPI Data Register                                          */
  };
  
  union {
    __IOM uint8_t SPSCR;                        /*!< (@ 0x00000008) SPI Sequence Control Register                              */
    
    struct {
      __IOM uint8_t SPSLN       : 3;            /*!< [2..0] SPI Sequence Length Specification                                  */
            uint8_t             : 5;
    } SPSCR_b;
  } ;
  
  union {
    __IM  uint8_t SPSSR;                        /*!< (@ 0x00000009) SPI Sequence Status Register                               */
    
    struct {
      __IM  uint8_t SPCP        : 3;            /*!< [2..0] SPI Command Pointer                                                */
            uint8_t             : 1;
      __IM  uint8_t SPECM       : 3;            /*!< [6..4] SPI Error Command                                                  */
            uint8_t             : 1;
    } SPSSR_b;
  } ;
  __IOM uint8_t   SPBR;                         /*!< (@ 0x0000000A) SPI Bit Rate Register                                      */
  
  union {
    __IOM uint8_t SPDCR;                        /*!< (@ 0x0000000B) SPI Data Control Register                                  */
    
    struct {
      __IOM uint8_t SPFC        : 2;            /*!< [1..0] Number of Frames Specification (only SPI0)                         */
            uint8_t             : 2;
      __IOM uint8_t SPRDTD      : 1;            /*!< [4..4] SPI Receive/Transmit Data Select (only SPI0)                       */
      __IOM uint8_t SPLW        : 1;            /*!< [5..5] SPI Word Access/Halfword Access Specification                      */
      __IOM uint8_t SPBYT       : 1;            /*!< [6..6] SPI Byte Access Specification                                      */
            uint8_t             : 1;
    } SPDCR_b;
  } ;
  
  union {
    __IOM uint8_t SPCKD;                        /*!< (@ 0x0000000C) SPI Clock Delay Register                                   */
    
    struct {
      __IOM uint8_t SCKDL       : 3;            /*!< [2..0] RSPCK Delay Setting                                                */
            uint8_t             : 5;
    } SPCKD_b;
  } ;
  
  union {
    __IOM uint8_t SSLND;                        /*!< (@ 0x0000000D) SPI Slave Select Negation Delay Register                   */
    
    struct {
      __IOM uint8_t SLNDL       : 3;            /*!< [2..0] SSL Negation Delay Setting                                         */
            uint8_t             : 5;
    } SSLND_b;
  } ;
  
  union {
    __IOM uint8_t SPND;                         /*!< (@ 0x0000000E) SPI Next-Access Delay Register                             */
    
    struct {
      __IOM uint8_t SPNDL       : 3;            /*!< [2..0] SPI Next-Access Delay Setting                                      */
            uint8_t             : 5;
    } SPND_b;
  } ;
  
  union {
    __IOM uint8_t SPCR2;                        /*!< (@ 0x0000000F) SPI Control Register 2                                     */
    
    struct {
      __IOM uint8_t SPPE        : 1;            /*!< [0..0] Parity Enable                                                      */
      __IOM uint8_t SPOE        : 1;            /*!< [1..1] Parity Mode                                                        */
      __IOM uint8_t SPIIE       : 1;            /*!< [2..2] SPI Idle Interrupt Enable                                          */
      __IOM uint8_t PTE         : 1;            /*!< [3..3] Parity Self-Testing                                                */
      __IOM uint8_t SCKASE      : 1;            /*!< [4..4] RSPCK Auto-Stop Function Enable                                    */
            uint8_t             : 3;
    } SPCR2_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD0;                      /*!< (@ 0x00000010) SPI Command Register 0                                     */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 3;            /*!< [6..4] SSL Signal Assertion Setting                                       */
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSL Signal Level Keeping (only SPI0)                               */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD0_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD1;                      /*!< (@ 0x00000012) SPI Command Register 1                                     */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 3;            /*!< [6..4] SSL Signal Assertion Setting                                       */
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSL Signal Level Keeping (only SPI0)                               */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD1_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD2;                      /*!< (@ 0x00000014) SPI Command Register 2                                     */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 3;            /*!< [6..4] SSL Signal Assertion Setting                                       */
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSL Signal Level Keeping (only SPI0)                               */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD2_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD3;                      /*!< (@ 0x00000016) SPI Command Register 3                                     */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 3;            /*!< [6..4] SSL Signal Assertion Setting                                       */
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSL Signal Level Keeping (only SPI0)                               */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD3_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD4;                      /*!< (@ 0x00000018) SPI Command Register 4                                     */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 3;            /*!< [6..4] SSL Signal Assertion Setting                                       */
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSL Signal Level Keeping (only SPI0)                               */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD4_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD5;                      /*!< (@ 0x0000001A) SPI Command Register 5                                     */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 3;            /*!< [6..4] SSL Signal Assertion Setting                                       */
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSL Signal Level Keeping (only SPI0)                               */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD5_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD6;                      /*!< (@ 0x0000001C) SPI Command Register 6                                     */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 3;            /*!< [6..4] SSL Signal Assertion Setting                                       */
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSL Signal Level Keeping (only SPI0)                               */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD6_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD7;                      /*!< (@ 0x0000001E) SPI Command Register 7                                     */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 3;            /*!< [6..4] SSL Signal Assertion Setting                                       */
      __IOM uint16_t SSLKP      : 1;            /*!< [7..7] SSL Signal Level Keeping (only SPI0)                               */
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD7_b;
  } ;
} SPI0_Type;                                    /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                           SPI1                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Peripheral Interface 1 (SPI1)
  */

typedef struct {                                /*!< (@ 0x40072100) SPI1 Structure                                             */
  
  union {
    __IOM uint8_t SPCR;                         /*!< (@ 0x00000000) SPI Control Register                                       */
    
    struct {
      __IOM uint8_t SPMS        : 1;            /*!< [0..0] SPI Mode Select                                                    */
      __IOM uint8_t TXMD        : 1;            /*!< [1..1] Communications Operating Mode Select                               */
      __IOM uint8_t MODFEN      : 1;            /*!< [2..2] Mode Fault Error Detection Enable                                  */
      __IOM uint8_t MSTR        : 1;            /*!< [3..3] SPI Master/Slave Mode Select                                       */
      __IOM uint8_t SPEIE       : 1;            /*!< [4..4] SPI Error Interrupt Enable                                         */
      __IOM uint8_t SPTIE       : 1;            /*!< [5..5] Transmit Buffer Empty Interrupt Enable                             */
      __IOM uint8_t SPE         : 1;            /*!< [6..6] SPI Function Enable                                                */
      __IOM uint8_t SPRIE       : 1;            /*!< [7..7] SPI Receive Buffer Full Interrupt Enable                           */
    } SPCR_b;
  } ;
  
  union {
    __IOM uint8_t SSLP;                         /*!< (@ 0x00000001) SPI Slave Select Polarity Register                         */
    
    struct {
      __IOM uint8_t SSL0P       : 1;            /*!< [0..0] SSLn0 Signal Polarity Setting                                      */
      __IOM uint8_t SSL1P       : 1;            /*!< [1..1] SSLn1 Signal Polarity Setting                                      */
      __IOM uint8_t SSL2P       : 1;            /*!< [2..2] SSLn2 Signal Polarity Setting                                      */
      __IOM uint8_t SSL3P       : 1;            /*!< [3..3] SSLn3 Signal Polarity Setting                                      */
            uint8_t             : 4;
    } SSLP_b;
  } ;
  
  union {
    __IOM uint8_t SPPCR;                        /*!< (@ 0x00000002) SPI Pin Control Register                                   */
    
    struct {
      __IOM uint8_t SPLP        : 1;            /*!< [0..0] SPI Loopback                                                       */
      __IOM uint8_t SPLP2       : 1;            /*!< [1..1] SPI Loopback 2                                                     */
            uint8_t             : 2;
      __IOM uint8_t MOIFV       : 1;            /*!< [4..4] MOSI Idle Fixed Value                                              */
      __IOM uint8_t MOIFE       : 1;            /*!< [5..5] MOSI Idle Value Fixing Enable                                      */
            uint8_t             : 2;
    } SPPCR_b;
  } ;
  
  union {
    __IOM uint8_t SPSR;                         /*!< (@ 0x00000003) SPI Status Register                                        */
    
    struct {
      __IOM uint8_t OVRF        : 1;            /*!< [0..0] Overrun Error Flag                                                 */
      __IM  uint8_t IDLNF       : 1;            /*!< [1..1] SPI Idle Flag                                                      */
      __IOM uint8_t MODF        : 1;            /*!< [2..2] Mode Fault Error Flag                                              */
      __IOM uint8_t PERF        : 1;            /*!< [3..3] Parity Error Flag                                                  */
      __IOM uint8_t UDRF        : 1;            /*!< [4..4] Underrun Error Flag                                                */
      __IOM uint8_t SPTEF       : 1;            /*!< [5..5] SPI Transmit Buffer Empty Flag                                     */
            uint8_t             : 1;
      __IOM uint8_t SPRF        : 1;            /*!< [7..7] SPI Receive Buffer Full Flag                                       */
    } SPSR_b;
  } ;
  
  union {
    __IOM uint32_t SPDR;                        /*!< (@ 0x00000004) SPI Data Register                                          */
    __IOM uint16_t SPDR_HA;                     /*!< (@ 0x00000004) SPI Data Register                                          */
    __IOM uint8_t SPDR_BY;                      /*!< (@ 0x00000004) SPI Data Register                                          */
  };
  __IM  uint16_t  RESERVED;
  __IOM uint8_t   SPBR;                         /*!< (@ 0x0000000A) SPI Bit Rate Register                                      */
  
  union {
    __IOM uint8_t SPDCR;                        /*!< (@ 0x0000000B) SPI Data Control Register                                  */
    
    struct {
            uint8_t             : 4;
      __IOM uint8_t SPRDTD      : 1;            /*!< [4..4] SPI Receive/Transmit Data Select (only SPI0)                       */
      __IOM uint8_t SPLW        : 1;            /*!< [5..5] SPI Word Access/Halfword Access Specification                      */
      __IOM uint8_t SPBYT       : 1;            /*!< [6..6] SPI Byte Access Specification                                      */
            uint8_t             : 1;
    } SPDCR_b;
  } ;
  
  union {
    __IOM uint8_t SPCKD;                        /*!< (@ 0x0000000C) SPI Clock Delay Register                                   */
    
    struct {
      __IOM uint8_t SCKDL       : 3;            /*!< [2..0] RSPCK Delay Setting                                                */
            uint8_t             : 5;
    } SPCKD_b;
  } ;
  
  union {
    __IOM uint8_t SSLND;                        /*!< (@ 0x0000000D) SPI Slave Select Negation Delay Register                   */
    
    struct {
      __IOM uint8_t SLNDL       : 3;            /*!< [2..0] SSL Negation Delay Setting                                         */
            uint8_t             : 5;
    } SSLND_b;
  } ;
  
  union {
    __IOM uint8_t SPND;                         /*!< (@ 0x0000000E) SPI Next-Access Delay Register                             */
    
    struct {
      __IOM uint8_t SPNDL       : 3;            /*!< [2..0] SPI Next-Access Delay Setting                                      */
            uint8_t             : 5;
    } SPND_b;
  } ;
  
  union {
    __IOM uint8_t SPCR2;                        /*!< (@ 0x0000000F) SPI Control Register 2                                     */
    
    struct {
      __IOM uint8_t SPPE        : 1;            /*!< [0..0] Parity Enable                                                      */
      __IOM uint8_t SPOE        : 1;            /*!< [1..1] Parity Mode                                                        */
      __IOM uint8_t SPIIE       : 1;            /*!< [2..2] SPI Idle Interrupt Enable                                          */
      __IOM uint8_t PTE         : 1;            /*!< [3..3] Parity Self-Testing                                                */
      __IOM uint8_t SCKASE      : 1;            /*!< [4..4] RSPCK Auto-Stop Function Enable                                    */
            uint8_t             : 3;
    } SPCR2_b;
  } ;
  
  union {
    __IOM uint16_t SPCMD0;                      /*!< (@ 0x00000010) SPI Command Register 0                                     */
    
    struct {
      __IOM uint16_t CPHA       : 1;            /*!< [0..0] RSPCK Phase Setting                                                */
      __IOM uint16_t CPOL       : 1;            /*!< [1..1] RSPCK Polarity Setting                                             */
      __IOM uint16_t BRDV       : 2;            /*!< [3..2] Bit Rate Division Setting                                          */
      __IOM uint16_t SSLA       : 3;            /*!< [6..4] SSL Signal Assertion Setting                                       */
            uint16_t            : 1;
      __IOM uint16_t SPB        : 4;            /*!< [11..8] SPI Data Length Setting                                           */
      __IOM uint16_t LSBF       : 1;            /*!< [12..12] SPI LSB First                                                    */
      __IOM uint16_t SPNDEN     : 1;            /*!< [13..13] SPI Next-Access Delay Enable                                     */
      __IOM uint16_t SLNDEN     : 1;            /*!< [14..14] SSL Negation Delay Setting Enable                                */
      __IOM uint16_t SCKDEN     : 1;            /*!< [15..15] RSPCK Delay Setting Enable                                       */
    } SPCMD0_b;
  } ;
  __IM  uint16_t  RESERVED1;
} SPI1_Type;                                    /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Cyclic Redundancy Check Calculator (CRC)
  */

typedef struct {                                /*!< (@ 0x40074000) CRC Structure                                              */
  
  union {
    __IOM uint8_t CRCCR0;                       /*!< (@ 0x00000000) CRC Control Register 0                                     */
    
    struct {
      __IOM uint8_t GPS         : 3;            /*!< [2..0] CRC Generating Polynomial Switching                                */
            uint8_t             : 3;
      __IOM uint8_t LMS         : 1;            /*!< [6..6] CRC Calculation Switching                                          */
      __OM  uint8_t DORCLR      : 1;            /*!< [7..7] CRCDOR/CRCDOR_HA/CRCDOR_BY Register Clear                          */
    } CRCCR0_b;
  } ;
  
  union {
    __IOM uint8_t CRCCR1;                       /*!< (@ 0x00000001) CRC Control Register 1                                     */
    
    struct {
            uint8_t             : 6;
      __IOM uint8_t CRCSWR      : 1;            /*!< [6..6] Snoop-On-Write/Read Switch                                         */
      __IOM uint8_t CRCSEN      : 1;            /*!< [7..7] Snoop Enable                                                       */
    } CRCCR1_b;
  } ;
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint32_t CRCDIR;                      /*!< (@ 0x00000004) CRC Data Input Register                                    */
    __IOM uint8_t CRCDIR_BY;                    /*!< (@ 0x00000004) CRC Data Input Register                                    */
  };
  
  union {
    __IOM uint32_t CRCDOR;                      /*!< (@ 0x00000008) CRC Data Output Register                                   */
    __IOM uint16_t CRCDOR_HA;                   /*!< (@ 0x00000008) CRC Data Output Register                                   */
    __IOM uint8_t CRCDOR_BY;                    /*!< (@ 0x00000008) CRC Data Output Register                                   */
  };
  
  union {
    __IOM uint16_t CRCSAR;                      /*!< (@ 0x0000000C) Snoop Address Register                                     */
    
    struct {
      __IOM uint16_t CRCSA      : 14;           /*!< [13..0] Register Snoop Address                                            */
            uint16_t            : 2;
    } CRCSAR_b;
  } ;
  __IM  uint16_t  RESERVED1;
} CRC_Type;                                     /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                           KINT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Key Interrupt Function (KINT)
  */

typedef struct {                                /*!< (@ 0x40080000) KINT Structure                                             */
  
  union {
    __IOM uint8_t KRCTL;                        /*!< (@ 0x00000000) Key Return Control Register                                */
    
    struct {
      __IOM uint8_t KREG        : 1;            /*!< [0..0] Detection Edge Selection (KRM00 to KRM07 pins)                     */
            uint8_t             : 6;
      __IOM uint8_t KRMD        : 1;            /*!< [7..7] Usage of Key Interrupt Flags (KRF.KIF0 to KRF.KIF7)                */
    } KRCTL_b;
  } ;
  __IM  uint8_t   RESERVED[3];
  
  union {
    __IOM uint8_t KRF;                          /*!< (@ 0x00000004) Key Return Flag Register                                   */
    
    struct {
      __IOM uint8_t KIF0        : 1;            /*!< [0..0] Key Interrupt Flag n                                               */
      __IOM uint8_t KIF1        : 1;            /*!< [1..1] Key Interrupt Flag n                                               */
      __IOM uint8_t KIF2        : 1;            /*!< [2..2] Key Interrupt Flag n                                               */
      __IOM uint8_t KIF3        : 1;            /*!< [3..3] Key Interrupt Flag n                                               */
      __IOM uint8_t KIF4        : 1;            /*!< [4..4] Key Interrupt Flag n                                               */
      __IOM uint8_t KIF5        : 1;            /*!< [5..5] Key Interrupt Flag n                                               */
      __IOM uint8_t KIF6        : 1;            /*!< [6..6] Key Interrupt Flag n                                               */
      __IOM uint8_t KIF7        : 1;            /*!< [7..7] Key Interrupt Flag n                                               */
    } KRF_b;
  } ;
  __IM  uint8_t   RESERVED1[3];
  
  union {
    __IOM uint8_t KRM;                          /*!< (@ 0x00000008) Key Return Mode Register                                   */
    
    struct {
      __IOM uint8_t KIMC0       : 1;            /*!< [0..0] Key Interrupt Mode Control n                                       */
      __IOM uint8_t KIMC1       : 1;            /*!< [1..1] Key Interrupt Mode Control n                                       */
      __IOM uint8_t KIMC2       : 1;            /*!< [2..2] Key Interrupt Mode Control n                                       */
      __IOM uint8_t KIMC3       : 1;            /*!< [3..3] Key Interrupt Mode Control n                                       */
      __IOM uint8_t KIMC4       : 1;            /*!< [4..4] Key Interrupt Mode Control n                                       */
      __IOM uint8_t KIMC5       : 1;            /*!< [5..5] Key Interrupt Mode Control n                                       */
      __IOM uint8_t KIMC6       : 1;            /*!< [6..6] Key Interrupt Mode Control n                                       */
      __IOM uint8_t KIMC7       : 1;            /*!< [7..7] Key Interrupt Mode Control n                                       */
    } KRM_b;
  } ;
} KINT_Type;                                    /*!< Size = 9 (0x9)                                                            */



/* =========================================================================================================================== */
/* ================                                            CCC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Clock Correction Circuit (CCC)
  */

typedef struct {                                /*!< (@ 0x40080400) CCC Structure                                              */
  
  union {
    __IOM uint32_t ADJUSTR;                     /*!< (@ 0x00000000) Adjustment Register                                        */
    
    struct {
      __IOM uint32_t ADJUST     : 9;            /*!< [8..0] Adjustment                                                         */
            uint32_t            : 23;
    } ADJUSTR_b;
  } ;
  
  union {
    __IM  uint32_t R128CNT;                     /*!< (@ 0x00000004) 128-Hz Counter                                             */
    
    struct {
      __IM  uint32_t CF128HZ    : 1;            /*!< [0..0] CF128HZ                                                            */
      __IM  uint32_t CF64HZ     : 1;            /*!< [1..1] CF64HZ                                                             */
      __IM  uint32_t CF32HZ     : 1;            /*!< [2..2] CF32HZ                                                             */
      __IM  uint32_t CF16HZ     : 1;            /*!< [3..3] CF16HZ                                                             */
      __IM  uint32_t CF8HZ      : 1;            /*!< [4..4] CF8HZ                                                              */
      __IM  uint32_t CF4HZ      : 1;            /*!< [5..5] CF4HZ                                                              */
      __IM  uint32_t CF2HZ      : 1;            /*!< [6..6] CF2HZ                                                              */
      __IM  uint32_t CF1HZ      : 1;            /*!< [7..7] CF1HZ                                                              */
            uint32_t            : 24;
    } R128CNT_b;
  } ;
  
  union {
    __IOM uint32_t R128CTRL;                    /*!< (@ 0x00000008) 128-Hz Counter Control Register                            */
    
    struct {
      __IOM uint32_t CADJUSCEN  : 1;            /*!< [0..0] CCC Enable                                                         */
      __IOM uint32_t ADJUSTEN   : 1;            /*!< [1..1] Frequency Correction Enable                                        */
      __IOM uint32_t CRESET     : 1;            /*!< [2..2] Software Reset                                                     */
      __IOM uint32_t COPSEL     : 1;            /*!< [3..3] CCCOUT Output Port Select                                          */
      __IOM uint32_t CRTCOS     : 1;            /*!< [4..4] CCCOUT Output Select                                               */
      __IOM uint32_t CCIE       : 1;            /*!< [5..5] Overflow Interrupt Enable                                          */
      __IOM uint32_t CPIE       : 1;            /*!< [6..6] Periodic Interrupt Enable                                          */
      __IOM uint32_t CPES       : 2;            /*!< [8..7] Periodic Interrupt Select                                          */
      __IOM uint32_t CRTCOE     : 1;            /*!< [9..9] CCCOUT Output Enable                                               */
      __IOM uint32_t CEIE       : 1;            /*!< [10..10] Read Error Interrupt Enable                                      */
      __IOM uint32_t CPES_EX    : 1;            /*!< [11..11] Periodic Interrupt Select                                        */
            uint32_t            : 4;
      __IOM uint32_t PF128HZ    : 1;            /*!< [16..16] 1/128-Second Periodic Interrupt Flag                             */
      __IOM uint32_t PF64HZ     : 1;            /*!< [17..17] 1/64-Second Periodic Interrupt Flag                              */
      __IOM uint32_t PF16HZ     : 1;            /*!< [18..18] 1/16-Second Periodic Interrupt Flag                              */
      __IOM uint32_t PF4HZ      : 1;            /*!< [19..19] 1/4-Second Periodic Interrupt Flag                               */
      __IOM uint32_t PF2HZ      : 1;            /*!< [20..20] 1/2-Second Periodic Interrupt Flag                               */
      __IOM uint32_t PF1HZ      : 1;            /*!< [21..21] 1-Second Periodic Interrupt Flag                                 */
      __IM  uint32_t PFWR0ST    : 1;            /*!< [22..22] Periodic Interrupt Status Flag                                   */
            uint32_t            : 8;
      __IOM uint32_t PFEN       : 1;            /*!< [31..31] Periodic Interrupt Enable                                        */
    } R128CTRL_b;
  } ;
} CCC_Type;                                     /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                           AGT0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Low Power Asynchronous General Purpose 8-bit Timer 0 (AGT0)
  */

typedef struct {                                /*!< (@ 0x40084000) AGT0 Structure                                             */
  __IOM uint16_t  AGT;                          /*!< (@ 0x00000000) AGT Counter Register                                       */
  __IOM uint16_t  AGTCMA;                       /*!< (@ 0x00000002) AGT Compare Match A Register                               */
  __IOM uint16_t  AGTCMB;                       /*!< (@ 0x00000004) AGT Compare Match B Register                               */
  __IM  uint16_t  RESERVED;
  
  union {
    __IOM uint8_t AGTCR;                        /*!< (@ 0x00000008) AGT Control Register                                       */
    
    struct {
      __IOM uint8_t TSTART      : 1;            /*!< [0..0] AGT Count Start                                                    */
      __IM  uint8_t TCSTF       : 1;            /*!< [1..1] AGT Count Status Flag                                              */
      __OM  uint8_t TSTOP       : 1;            /*!< [2..2] AGT Count Forced Stop                                              */
            uint8_t             : 1;
      __IOM uint8_t TEDGF       : 1;            /*!< [4..4] Active Edge Judgment Flag                                          */
      __IOM uint8_t TUNDF       : 1;            /*!< [5..5] Underflow Flag                                                     */
      __IOM uint8_t TCMAF       : 1;            /*!< [6..6] Compare Match A Flag                                               */
      __IOM uint8_t TCMBF       : 1;            /*!< [7..7] Compare Match B Flag                                               */
    } AGTCR_b;
  } ;
  
  union {
    __IOM uint8_t AGTMR1;                       /*!< (@ 0x00000009) AGT Mode Register 1                                        */
    
    struct {
      __IOM uint8_t TMOD        : 3;            /*!< [2..0] Operating Mode                                                     */
      __IOM uint8_t TEDGPL      : 1;            /*!< [3..3] Edge Polarity                                                      */
      __IOM uint8_t TCK         : 3;            /*!< [6..4] Count Source                                                       */
            uint8_t             : 1;
    } AGTMR1_b;
  } ;
  
  union {
    __IOM uint8_t AGTMR2;                       /*!< (@ 0x0000000A) AGT Mode Register 2                                        */
    
    struct {
      __IOM uint8_t CKS         : 3;            /*!< [2..0] AGTLCLK or AGTSCLK Count Source Clock Frequency Division
                                                     Ratio                                                                     */
            uint8_t             : 4;
      __IOM uint8_t LPM         : 1;            /*!< [7..7] Low Power Mode                                                     */
    } AGTMR2_b;
  } ;
  __IM  uint8_t   RESERVED1;
  
  union {
    __IOM uint8_t AGTIOC;                       /*!< (@ 0x0000000C) AGT I/O Control Register                                   */
    
    struct {
      __IOM uint8_t TEDGSEL     : 1;            /*!< [0..0] I/O Polarity Switch                                                */
            uint8_t             : 1;
      __IOM uint8_t TOE         : 1;            /*!< [2..2] AGTOn pin Output Enable                                            */
            uint8_t             : 1;
      __IOM uint8_t TIPF        : 2;            /*!< [5..4] Input Filter                                                       */
      __IOM uint8_t TIOGT       : 2;            /*!< [7..6] Count Control                                                      */
    } AGTIOC_b;
  } ;
  
  union {
    __IOM uint8_t AGTISR;                       /*!< (@ 0x0000000D) AGT Event Pin Select Register                              */
    
    struct {
            uint8_t             : 2;
      __IOM uint8_t EEPS        : 1;            /*!< [2..2] AGTEEn Polarity Selection                                          */
            uint8_t             : 5;
    } AGTISR_b;
  } ;
  
  union {
    __IOM uint8_t AGTCMSR;                      /*!< (@ 0x0000000E) AGT Compare Match Function Select Register                 */
    
    struct {
      __IOM uint8_t TCMEA       : 1;            /*!< [0..0] AGT Compare Match A Register Enable                                */
      __IOM uint8_t TOEA        : 1;            /*!< [1..1] AGTOAn Pin Output Enable                                           */
      __IOM uint8_t TOPOLA      : 1;            /*!< [2..2] AGTOAn Pin Polarity Select                                         */
            uint8_t             : 1;
      __IOM uint8_t TCMEB       : 1;            /*!< [4..4] AGT Compare Match B Register Enable                                */
      __IOM uint8_t TOEB        : 1;            /*!< [5..5] AGTOBn Pin Output Enable                                           */
      __IOM uint8_t TOPOLB      : 1;            /*!< [6..6] AGTOBn Pin Polarity Select                                         */
            uint8_t             : 1;
    } AGTCMSR_b;
  } ;
  
  union {
    __IOM uint8_t AGTIOSEL;                     /*!< (@ 0x0000000F) AGT Pin Select Register                                    */
    
    struct {
            uint8_t             : 4;
      __IOM uint8_t TIES        : 1;            /*!< [4..4] AGTIOn Pin Input Enable                                            */
            uint8_t             : 3;
    } AGTIOSEL_b;
  } ;
} AGT0_Type;                                    /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                           AGTW0                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Low Power Asynchronous General Purpose 16-bit Timer 0 (AGTW0)
  */

typedef struct {                                /*!< (@ 0x40084200) AGTW0 Structure                                            */
  __IOM uint32_t  AGT;                          /*!< (@ 0x00000000) AGT Counter Register                                       */
  __IOM uint32_t  AGTCMA;                       /*!< (@ 0x00000004) AGT CounterCompare Match A Register                        */
  __IOM uint32_t  AGTCMB;                       /*!< (@ 0x00000008) AGT CounterCompare Match B Register                        */
  
  union {
    __IOM uint8_t AGTCR;                        /*!< (@ 0x0000000C) AGT Control Register                                       */
    
    struct {
      __IOM uint8_t TSTART      : 1;            /*!< [0..0] AGT Count Start                                                    */
      __IM  uint8_t TCSTF       : 1;            /*!< [1..1] AGT Count Status Flag                                              */
      __OM  uint8_t TSTOP       : 1;            /*!< [2..2] AGT Count Forced Stop                                              */
            uint8_t             : 1;
      __IOM uint8_t TEDGF       : 1;            /*!< [4..4] Active Edge Judgment Flag                                          */
      __IOM uint8_t TUNDF       : 1;            /*!< [5..5] Underflow Flag                                                     */
      __IOM uint8_t TCMAF       : 1;            /*!< [6..6] Compare Match A Flag                                               */
      __IOM uint8_t TCMBF       : 1;            /*!< [7..7] Compare Match B Flag                                               */
    } AGTCR_b;
  } ;
  
  union {
    __IOM uint8_t AGTMR1;                       /*!< (@ 0x0000000D) AGT Mode Register 1                                        */
    
    struct {
      __IOM uint8_t TMOD        : 3;            /*!< [2..0] Operating Mode                                                     */
      __IOM uint8_t TEDGPL      : 1;            /*!< [3..3] Edge Polarity                                                      */
      __IOM uint8_t TCK         : 3;            /*!< [6..4] Count Source                                                       */
            uint8_t             : 1;
    } AGTMR1_b;
  } ;
  
  union {
    __IOM uint8_t AGTMR2;                       /*!< (@ 0x0000000E) AGT Mode Register 2                                        */
    
    struct {
      __IOM uint8_t CKS         : 3;            /*!< [2..0] AGTLCLK or AGTSCLK Count Source Clock Frequency Division
                                                     Ratio                                                                     */
            uint8_t             : 4;
      __IOM uint8_t LPM         : 1;            /*!< [7..7] Low Power Mode                                                     */
    } AGTMR2_b;
  } ;
  __IM  uint8_t   RESERVED;
  
  union {
    __IOM uint8_t AGTIOC;                       /*!< (@ 0x00000010) AGT I/O Control Register                                   */
    
    struct {
      __IOM uint8_t TEDGSEL     : 1;            /*!< [0..0] I/O Polarity Switch                                                */
            uint8_t             : 1;
      __IOM uint8_t TOE         : 1;            /*!< [2..2] AGTOn pin Output Enable                                            */
            uint8_t             : 1;
      __IOM uint8_t TIPF        : 2;            /*!< [5..4] Input Filter                                                       */
      __IOM uint8_t TIOGT       : 2;            /*!< [7..6] Count Control                                                      */
    } AGTIOC_b;
  } ;
  
  union {
    __IOM uint8_t AGTISR;                       /*!< (@ 0x00000011) AGT Event Pin Select Register                              */
    
    struct {
            uint8_t             : 2;
      __IOM uint8_t EEPS        : 1;            /*!< [2..2] AGTEEn Polarity Selection                                          */
            uint8_t             : 5;
    } AGTISR_b;
  } ;
  
  union {
    __IOM uint8_t AGTCMSR;                      /*!< (@ 0x00000012) AGT Compare Match Function Select Register                 */
    
    struct {
      __IOM uint8_t TCMEA       : 1;            /*!< [0..0] AGT Compare Match A Register Enable                                */
      __IOM uint8_t TOEA        : 1;            /*!< [1..1] AGTOAn Pin Output Enable                                           */
      __IOM uint8_t TOPOLA      : 1;            /*!< [2..2] AGTOAn Pin Polarity Select                                         */
            uint8_t             : 1;
      __IOM uint8_t TCMEB       : 1;            /*!< [4..4] AGT Compare Match B Register Enable                                */
      __IOM uint8_t TOEB        : 1;            /*!< [5..5] AGTOBn Pin Output Enable                                           */
      __IOM uint8_t TOPOLB      : 1;            /*!< [6..6] AGTOBn Pin Polarity Select                                         */
            uint8_t             : 1;
    } AGTCMSR_b;
  } ;
  
  union {
    __IOM uint8_t AGTIOSEL;                     /*!< (@ 0x00000013) AGT Pin Select Register                                    */
    
    struct {
            uint8_t             : 4;
      __IOM uint8_t TIES        : 1;            /*!< [4..4] AGTIOn Pin Input Enable                                            */
            uint8_t             : 3;
    } AGTIOSEL_b;
  } ;
} AGTW0_Type;                                   /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                            LST                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Low-Speed Clock Timer (LST)
  */

typedef struct {                                /*!< (@ 0x40084400) LST Structure                                              */
  
  union {
    __IM  uint32_t LSTCNT;                      /*!< (@ 0x00000000) Low-Speed Clock Timer Count Register                       */
    
    struct {
      __IM  uint32_t OTHSECCNT  : 4;            /*!< [3..0] 0.001-Second Count                                                 */
      __IM  uint32_t OHSECCNT   : 4;            /*!< [7..4] 0.01-Second Count                                                  */
      __IM  uint32_t OTSECCNT   : 4;            /*!< [11..8] 0.1-Second Count                                                  */
      __IM  uint32_t SECCNT     : 1;            /*!< [12..12] 1-Second Count                                                   */
            uint32_t            : 19;
    } LSTCNT_b;
  } ;
  
  union {
    __IOM uint32_t LSTCTRL;                     /*!< (@ 0x00000004) Low-Speed Clock Timer Counter Control Register             */
    
    struct {
      __IOM uint32_t LSTSTART   : 1;            /*!< [0..0] Count Start                                                        */
      __IOM uint32_t LSTRST     : 1;            /*!< [1..1] Counter Clear                                                      */
            uint32_t            : 30;
    } LSTCTRL_b;
  } ;
} LST_Type;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                           WUPT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Wakeup Timer (WUPT)
  */

typedef struct {                                /*!< (@ 0x40084480) WUPT Structure                                             */
  __IOM uint8_t   TCM0;                         /*!< (@ 0x00000000) Timer Compare Match Register                               */
  __IOM uint8_t   TCM1;                         /*!< (@ 0x00000001) Timer Compare Match Register                               */
  __IOM uint8_t   TCM2;                         /*!< (@ 0x00000002) Timer Compare Match Register                               */
  __IOM uint8_t   TCM3;                         /*!< (@ 0x00000003) Timer Compare Match Register                               */
  
  union {
    __IOM uint8_t TCR;                          /*!< (@ 0x00000004) Timer Control Register                                     */
    
    struct {
      __IOM uint8_t OS          : 2;            /*!< [1..0] Output Select                                                      */
      __IOM uint8_t TMOE        : 1;            /*!< [2..2] Timer Output Enable                                                */
      __IOM uint8_t OVIE        : 1;            /*!< [3..3] Timer Overflow Interrupt Enable                                    */
      __IOM uint8_t TCCE        : 1;            /*!< [4..4] Timer Count Clock Enable                                           */
            uint8_t             : 1;
      __IOM uint8_t TCRS        : 1;            /*!< [6..6] Timer Count Reset                                                  */
      __IOM uint8_t TCST        : 1;            /*!< [7..7] Timer Count Start                                                  */
    } TCR_b;
  } ;
} WUPT_Type;                                    /*!< Size = 5 (0x5)                                                            */



/* =========================================================================================================================== */
/* ================                                            DIL                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Data Inversion and Logic operation (DIL)
  */

typedef struct {                                /*!< (@ 0x40084500) DIL Structure                                              */
  __IOM uint32_t  IDR0;                         /*!< (@ 0x00000000) DIL Input Data Registers 0                                 */
  __IOM uint32_t  IDR1;                         /*!< (@ 0x00000004) DIL Input Data Registers 1                                 */
  __IOM uint32_t  IDR2;                         /*!< (@ 0x00000008) DIL Input Data Registers 2                                 */
  __IOM uint32_t  IDR3;                         /*!< (@ 0x0000000C) DIL Input Data Registers 3                                 */
  __IM  uint32_t  ODR0;                         /*!< (@ 0x00000010) DIL Output Data Registers 0                                */
  __IM  uint32_t  ODR1;                         /*!< (@ 0x00000014) DIL Output Data Registers 1                                */
  __IM  uint32_t  ODR2;                         /*!< (@ 0x00000018) DIL Output Data Registers 2                                */
  __IM  uint32_t  ODR3;                         /*!< (@ 0x0000001C) DIL Output Data Registers 3                                */
  __IOM uint32_t  IDR10;                        /*!< (@ 0x00000020) DIL Input Data Registers 10                                */
  __IOM uint32_t  IDR11;                        /*!< (@ 0x00000024) DIL Input Data Registers 11                                */
  __IOM uint32_t  IDR12;                        /*!< (@ 0x00000028) DIL Input Data Registers 12                                */
  __IOM uint32_t  IDR13;                        /*!< (@ 0x0000002C) DIL Input Data Registers 13                                */
  
  union {
    __IOM uint32_t DILCR;                       /*!< (@ 0x00000030) DIL Control Register                                       */
    
    struct {
      __IOM uint32_t DILEN      : 1;            /*!< [0..0] Bit Inversion Function Enable                                      */
            uint32_t            : 15;
      __IOM uint32_t DILMODE    : 4;            /*!< [19..16] Data Conversion Mode Select                                      */
            uint32_t            : 12;
    } DILCR_b;
  } ;
} DIL_Type;                                     /*!< Size = 52 (0x34)                                                          */



/* =========================================================================================================================== */
/* ================                                            DIV                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Divider (DIV)
  */

typedef struct {                                /*!< (@ 0x40084600) DIV Structure                                              */
  __IM  uint32_t  RESERVED[32];
  
  union {
    __IOM uint32_t DIVCR;                       /*!< (@ 0x00000080) Division Operation Control Register                        */
    
    struct {
      __OM  uint32_t EN         : 1;            /*!< [0..0] Division Operation Start                                           */
            uint32_t            : 7;
      __IM  uint32_t CALBUSY    : 1;            /*!< [8..8] Division Operation Status Flag                                     */
      __IM  uint32_t DIVERR     : 1;            /*!< [9..9] Division by Zero Flag                                              */
            uint32_t            : 22;
    } DIVCR_b;
  } ;
  __IOM uint32_t  DIVIDEND;                     /*!< (@ 0x00000084) Dividend Setting Register                                  */
  __IOM uint32_t  DIVSOR;                       /*!< (@ 0x00000088) Divisor Setting Register                                   */
  __IM  uint32_t  QUOTIENT;                     /*!< (@ 0x0000008C) Quotient Indication Register                               */
  __IM  uint32_t  REMAINDER;                    /*!< (@ 0x00000090) Remainder Register                                         */
} DIV_Type;                                     /*!< Size = 148 (0x94)                                                         */



/* =========================================================================================================================== */
/* ================                                           VREF                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Reference Voltage Generation Circuit (VREF)
  */

typedef struct {                                /*!< (@ 0x40086A00) VREF Structure                                             */
  __IM  uint32_t  RESERVED[32];
  
  union {
    __IOM uint32_t AVCR;                        /*!< (@ 0x00000080) Reference Voltage Output Control Register                  */
    
    struct {
      __IOM uint32_t IBIASEN    : 1;            /*!< [0..0] Reference Current Source Enable                                    */
            uint32_t            : 3;
      __IOM uint32_t VREFEN     : 1;            /*!< [4..4] Reference Voltage Generation Circuit Enable                        */
            uint32_t            : 3;
      __IOM uint32_t AVSEL      : 1;            /*!< [8..8] Output Select                                                      */
            uint32_t            : 7;
      __IOM uint32_t LPMD       : 1;            /*!< [16..16] Low Power Consumption Mode                                       */
            uint32_t            : 1;
      __IOM uint32_t STDMD      : 1;            /*!< [18..18] Standard Operation Mode                                          */
            uint32_t            : 13;
    } AVCR_b;
  } ;
} VREF_Type;                                    /*!< Size = 132 (0x84)                                                         */



/* =========================================================================================================================== */
/* ================                                           FACI                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Flash Application Command Interface (FACI)
  */

typedef struct {                                /*!< (@ 0x407FE000) FACI Structure                                             */
  __IM  uint32_t  RESERVED[4];
  
  union {
    __IOM uint8_t FASTAT;                       /*!< (@ 0x00000010) Flash Access Status Register                               */
    
    struct {
            uint8_t             : 4;
      __IM  uint8_t CMDLK       : 1;            /*!< [4..4] Command Lock Flag                                                  */
            uint8_t             : 2;
      __IOM uint8_t CFAE        : 1;            /*!< [7..7] Code Flash Memory Access Violation Flag                            */
    } FASTAT_b;
  } ;
  __IM  uint8_t   RESERVED1;
  __IM  uint16_t  RESERVED2;
  
  union {
    __IOM uint8_t FAEINT;                       /*!< (@ 0x00000014) Flash Access Error Interrupt Enable Register               */
    
    struct {
            uint8_t             : 4;
      __IOM uint8_t CMDLKIE     : 1;            /*!< [4..4] Command Lock Interrupt Enable                                      */
            uint8_t             : 2;
      __IOM uint8_t CFAEIE      : 1;            /*!< [7..7] Code Flash Memory Access Violation Interrupt Enable                */
    } FAEINT_b;
  } ;
  __IM  uint8_t   RESERVED3;
  __IM  uint16_t  RESERVED4;
  
  union {
    __IOM uint8_t FRDYIE;                       /*!< (@ 0x00000018) Flash Ready Interrupt Enable Register                      */
    
    struct {
      __IOM uint8_t FRDYIE      : 1;            /*!< [0..0] Flash Ready Interrupt Enable                                       */
            uint8_t             : 7;
    } FRDYIE_b;
  } ;
  __IM  uint8_t   RESERVED5;
  __IM  uint16_t  RESERVED6;
  __IM  uint32_t  RESERVED7[5];
  
  union {
    __IOM uint32_t FSADDR;                      /*!< (@ 0x00000030) FACI Command Start Address Register                        */
    
    struct {
      __IOM uint32_t FSADDR     : 32;           /*!< [31..0] Start Address for FACI Command Processing                         */
    } FSADDR_b;
  } ;
  __IM  uint32_t  RESERVED8[19];
  
  union {
    __IOM uint32_t FSTATR;                      /*!< (@ 0x00000080) Flash Status Register                                      */
    
    struct {
            uint32_t            : 6;
      __IM  uint32_t FLWEERR    : 1;            /*!< [6..6] Flash Write/Erase Protect Error Flag                               */
            uint32_t            : 1;
      __IM  uint32_t PRGSPD     : 1;            /*!< [8..8] Programming Suspend Status Flag                                    */
      __IM  uint32_t ERSSPD     : 1;            /*!< [9..9] Erasure Suspend Status Flag                                        */
      __IM  uint32_t DBFULL     : 1;            /*!< [10..10] Data Buffer Full Flag                                            */
      __IM  uint32_t SUSRDY     : 1;            /*!< [11..11] Suspend Ready Flag                                               */
      __IM  uint32_t PRGERR     : 1;            /*!< [12..12] Programming Error Flag                                           */
      __IM  uint32_t ERSERR     : 1;            /*!< [13..13] Erasure Error Flag                                               */
      __IM  uint32_t ILGLERR    : 1;            /*!< [14..14] Illegal Command Error Flag                                       */
      __IM  uint32_t FRDY       : 1;            /*!< [15..15] Flash Ready Flag                                                 */
            uint32_t            : 4;
      __IM  uint32_t OTERR      : 1;            /*!< [20..20] Other Error                                                      */
      __IM  uint32_t SECERR     : 1;            /*!< [21..21] Security Error                                                   */
      __IM  uint32_t FESETERR   : 1;            /*!< [22..22] FENTRY Setting Error                                             */
      __IM  uint32_t ILGCOMERR  : 1;            /*!< [23..23] Illegal Command Error                                            */
            uint32_t            : 8;
    } FSTATR_b;
  } ;
  
  union {
    __IOM uint16_t FENTRYR;                     /*!< (@ 0x00000084) Flash P/E Mode Entry Register                              */
    
    struct {
      __IOM uint16_t FENTRYC    : 1;            /*!< [0..0] Code Flash P/E Mode Entry                                          */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } FENTRYR_b;
  } ;
  __IM  uint16_t  RESERVED9;
  __IM  uint32_t  RESERVED10;
  
  union {
    __IOM uint16_t FSUINITR;                    /*!< (@ 0x0000008C) Flash Sequencer Setup Initialization Register              */
    
    struct {
      __IOM uint16_t SUINIT     : 1;            /*!< [0..0] Set-Up Initialization                                              */
            uint16_t            : 7;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } FSUINITR_b;
  } ;
  __IM  uint16_t  RESERVED11;
  __IM  uint32_t  RESERVED12[4];
  
  union {
    __IM  uint16_t FCMDR;                       /*!< (@ 0x000000A0) FACI Command Register                                      */
    
    struct {
      __IM  uint16_t PCMDR      : 8;            /*!< [7..0] Pre-command Flag                                                   */
      __IM  uint16_t CMDR       : 8;            /*!< [15..8] Command Flag                                                      */
    } FCMDR_b;
  } ;
  __IM  uint16_t  RESERVED13;
  __IM  uint32_t  RESERVED14[14];
  
  union {
    __IM  uint32_t FAWMON;                      /*!< (@ 0x000000DC) Flash Access Window Monitor Register                       */
    
    struct {
      __IM  uint32_t FAWS       : 10;           /*!< [9..0] Flash Access Window Start Address                                  */
            uint32_t            : 5;
      __IM  uint32_t FSPR       : 1;            /*!< [15..15] Access Window Protection Flag                                    */
      __IM  uint32_t FAWE       : 10;           /*!< [25..16] Flash Access Window End Address                                  */
            uint32_t            : 5;
      __IM  uint32_t BTFLG      : 1;            /*!< [31..31] Startup Area Select Flag                                         */
    } FAWMON_b;
  } ;
  __IM  uint32_t  RESERVED15;
  
  union {
    __IOM uint16_t FPCKAR;                      /*!< (@ 0x000000E4) Flash Sequencer Processing Clock Notification
                                                                    Register                                                   */
    
    struct {
      __IOM uint16_t PCKA       : 8;            /*!< [7..0] Flash Sequencer Operating Clock Notification                       */
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } FPCKAR_b;
  } ;
  __IM  uint16_t  RESERVED16;
  
  union {
    __IOM uint16_t FSUACR;                      /*!< (@ 0x000000E8) Flash Startup Area Control Register                        */
    
    struct {
      __IOM uint16_t SAS        : 2;            /*!< [1..0] Startup Area Select                                                */
            uint16_t            : 6;
      __IOM uint16_t KEY        : 8;            /*!< [15..8] Key Code                                                          */
    } FSUACR_b;
  } ;
  __IM  uint16_t  RESERVED17;
} FACI_Type;                                    /*!< Size = 236 (0xec)                                                         */



/* =========================================================================================================================== */
/* ================                                           QSPI                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Quad Serial Peripheral Interface (QSPI)
  */

typedef struct {                                /*!< (@ 0x64000000) QSPI Structure                                             */
  
  union {
    __IOM uint32_t SFMSMD;                      /*!< (@ 0x00000000) Transfer Mode Control Register                             */
    
    struct {
      __IOM uint32_t SFMRM      : 3;            /*!< [2..0] Serial interface read mode select                                  */
            uint32_t            : 1;
      __IOM uint32_t SFMSE      : 2;            /*!< [5..4] QSSL extension function select after SPI bus access                */
      __IOM uint32_t SFMPFE     : 1;            /*!< [6..6] Prefetch function select                                           */
            uint32_t            : 1;
      __IOM uint32_t SFMMD3     : 1;            /*!< [8..8] SPI mode select.                                                   */
      __IOM uint32_t SFMOEX     : 1;            /*!< [9..9] Extension select for the I/O buffer output enable signal
                                                     for the serial interface                                                  */
            uint32_t            : 5;
      __IOM uint32_t SFMCCE     : 1;            /*!< [15..15] Read instruction code select                                     */
            uint32_t            : 16;
    } SFMSMD_b;
  } ;
  
  union {
    __IOM uint32_t SFMSSC;                      /*!< (@ 0x00000004) Chip Selection Control Register                            */
    
    struct {
      __IOM uint32_t SFMSW      : 4;            /*!< [3..0] Minimum high-level width select for QSSL signal                    */
      __IOM uint32_t SFMSHD     : 1;            /*!< [4..4] QSSL Signal Hold Time                                              */
      __IOM uint32_t SFMSLD     : 1;            /*!< [5..5] QSSL Signal Setup Time                                             */
            uint32_t            : 26;
    } SFMSSC_b;
  } ;
  
  union {
    __IOM uint32_t SFMSKC;                      /*!< (@ 0x00000008) Clock Control Register                                     */
    
    struct {
      __IOM uint32_t SFMDV      : 5;            /*!< [4..0] Serial interface reference cycle select. (Pay attention
                                                     to irregularities.)                                                       */
      __IOM uint32_t SFMDTY     : 1;            /*!< [5..5] Duty ratio correction function select for the QSPCLK
                                                     signal when devided by an odd number                                      */
            uint32_t            : 26;
    } SFMSKC_b;
  } ;
  
  union {
    __IM  uint32_t SFMSST;                      /*!< (@ 0x0000000C) Status Register                                            */
    
    struct {
      __IM  uint32_t PFCNT      : 5;            /*!< [4..0] Number of bytes of prefetched data                                 */
            uint32_t            : 1;
      __IM  uint32_t PFFUL      : 1;            /*!< [6..6] Prefetch buffer state                                              */
      __IM  uint32_t PFOFF      : 1;            /*!< [7..7] Prefetch function operating state                                  */
            uint32_t            : 24;
    } SFMSST_b;
  } ;
  
  union {
    __IOM uint32_t SFMCOM;                      /*!< (@ 0x00000010) Communication Port Register                                */
    
    struct {
      __IOM uint32_t SFMD       : 8;            /*!< [7..0] Port for direct communication with the SPI bus                     */
            uint32_t            : 24;
    } SFMCOM_b;
  } ;
  
  union {
    __IOM uint32_t SFMCMD;                      /*!< (@ 0x00000014) Communication Mode Control Register                        */
    
    struct {
      __IOM uint32_t DCOM       : 1;            /*!< [0..0] Mode select for communication with the SPI bus                     */
            uint32_t            : 31;
    } SFMCMD_b;
  } ;
  
  union {
    __IOM uint32_t SFMCST;                      /*!< (@ 0x00000018) Communication Status Register                              */
    
    struct {
      __IM  uint32_t COMBSY     : 1;            /*!< [0..0] SPI bus cycle completion state in direct communication             */
            uint32_t            : 6;
      __IOM uint32_t EROMR      : 1;            /*!< [7..7] ROM access detection status in direct communication mode           */
            uint32_t            : 24;
    } SFMCST_b;
  } ;
  __IM  uint32_t  RESERVED;
  
  union {
    __IOM uint32_t SFMSIC;                      /*!< (@ 0x00000020) Instruction Code Register                                  */
    
    struct {
      __IOM uint32_t SFMCIC     : 8;            /*!< [7..0] Serial flash instruction code to substitute                        */
            uint32_t            : 24;
    } SFMSIC_b;
  } ;
  
  union {
    __IOM uint32_t SFMSAC;                      /*!< (@ 0x00000024) Address Mode Control Register                              */
    
    struct {
      __IOM uint32_t SFMAS      : 2;            /*!< [1..0] Number of address bytes select for the serial interface            */
            uint32_t            : 2;
      __IOM uint32_t SFM4BC     : 1;            /*!< [4..4] Default instruction code select, when the serial interface
                                                     address width is 4 bytes                                                  */
            uint32_t            : 27;
    } SFMSAC_b;
  } ;
  
  union {
    __IOM uint32_t SFMSDC;                      /*!< (@ 0x00000028) Dummy Cycle Control Register                               */
    
    struct {
      __IOM uint32_t SFMDN      : 4;            /*!< [3..0] Number of dummy cycles select for Fast Read instructions           */
            uint32_t            : 2;
      __IM  uint32_t SFMXST     : 1;            /*!< [6..6] XIP mode status                                                    */
      __IOM uint32_t SFMXEN     : 1;            /*!< [7..7] XIP mode permission                                                */
      __IOM uint32_t SFMXD      : 8;            /*!< [15..8] Mode data for serial flash (Controls XIP mode.)                   */
            uint32_t            : 16;
    } SFMSDC_b;
  } ;
  __IM  uint32_t  RESERVED1;
  
  union {
    __IOM uint32_t SFMSPC;                      /*!< (@ 0x00000030) SPI Protocol Control Register                              */
    
    struct {
      __IOM uint32_t SFMSPI     : 2;            /*!< [1..0] SPI protocol select                                                */
            uint32_t            : 2;
      __IOM uint32_t SFMSDE     : 1;            /*!< [4..4] QSPCLK extended selection bit when switching I/O of QIOn
                                                     pin                                                                       */
            uint32_t            : 27;
    } SFMSPC_b;
  } ;
  
  union {
    __IOM uint32_t SFMPMD;                      /*!< (@ 0x00000034) Port Control Register                                      */
    
    struct {
            uint32_t            : 2;
      __IOM uint32_t SFMWPL     : 1;            /*!< [2..2] WP pin level specification                                         */
            uint32_t            : 29;
    } SFMPMD_b;
  } ;
  __IM  uint32_t  RESERVED2[499];
  
  union {
    __IOM uint32_t SFMCNT1;                     /*!< (@ 0x00000804) External QSPI Address Register                             */
    
    struct {
            uint32_t            : 26;
      __IOM uint32_t QSPI_EXT   : 6;            /*!< [31..26] Bank switching address                                           */
    } SFMCNT1_b;
  } ;
} QSPI_Type;                                    /*!< Size = 2056 (0x808)                                                       */


/** @} */ /* End of group Device_Peripheral_peripherals */


/* =========================================================================================================================== */
/* ================                          Device Specific Peripheral Address Map                           ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripheralAddr
  * @{
  */

#define RMPU_BASE                   0x40000000UL
#define MMF_BASE                    0x40001000UL
#define BUS_BASE                    0x40003000UL
#define DMAC0_BASE                  0x40005000UL
#define DMAC1_BASE                  0x40005040UL
#define DMAC2_BASE                  0x40005080UL
#define DMAC3_BASE                  0x400050C0UL
#define DMA_BASE                    0x40005200UL
#define DTC_BASE                    0x40005400UL
#define ICU_BASE                    0x40006000UL
#define DBG_BASE                    0x4001B000UL
#define SYSF_BASE                   0x4001C000UL
#define SYSC_BASE                   0x4001E000UL
#define EHC_BASE                    0x4001E180UL
#define PORT0_BASE                  0x40040000UL
#define PORT1_BASE                  0x40040020UL
#define PORT2_BASE                  0x40040040UL
#define PORT3_BASE                  0x40040060UL
#define PORT4_BASE                  0x40040080UL
#define PORT5_BASE                  0x400400A0UL
#define PORT6_BASE                  0x400400C0UL
#define PORT7_BASE                  0x400400E0UL
#define PORT8_BASE                  0x40040100UL
#define PFS_BASE                    0x40040800UL
#define ELC_BASE                    0x40041000UL
#define SCI2_BASE                   0x40041240UL
#define SCI3_BASE                   0x40041260UL
#define SCI4_BASE                   0x40041280UL
#define SCI5_BASE                   0x400412A0UL
#define SCI9_BASE                   0x40041320UL
#define POE_BASE                    0x40042000UL
#define RTC_BASE                    0x40044000UL
#define WDT_BASE                    0x40044200UL
#define IWDT_BASE                   0x40044400UL
#define CAC_BASE                    0x40044600UL
#define MSTP_BASE                   0x40047000UL
#define TMR0_BASE                   0x40052000UL
#define TMR1_BASE                   0x40052001UL
#define IIC0_BASE                   0x40053000UL
#define IIC1_BASE                   0x40053100UL
#define DOC_BASE                    0x40054100UL
#define GPT320_BASE                 0x40055000UL
#define GPT321_BASE                 0x40055100UL
#define GPT162_BASE                 0x40055200UL
#define GPT163_BASE                 0x40055300UL
#define GPT164_BASE                 0x40055400UL
#define GPT165_BASE                 0x40055500UL
#define GPT_OPS_BASE                0x40055FF0UL
#define ADC140_BASE                 0x4005C000UL
#define TSN_BASE                    0x4005D000UL
#define SCI0_BASE                   0x40070000UL
#define SCI1_BASE                   0x40070020UL
#define MLCD_BASE                   0x40070200UL
#define GDT_BASE                    0x40070800UL
#define IRDA_BASE                   0x40070F00UL
#define SPI0_BASE                   0x40072000UL
#define SPI1_BASE                   0x40072100UL
#define CRC_BASE                    0x40074000UL
#define KINT_BASE                   0x40080000UL
#define CCC_BASE                    0x40080400UL
#define AGT0_BASE                   0x40084000UL
#define AGT1_BASE                   0x40084100UL
#define AGTW0_BASE                  0x40084200UL
#define AGTW1_BASE                  0x40084300UL
#define LST_BASE                    0x40084400UL
#define WUPT_BASE                   0x40084480UL
#define DIL_BASE                    0x40084500UL
#define DIV_BASE                    0x40084600UL
#define VREF_BASE                   0x40086A00UL
#define FACI_BASE                   0x407FE000UL
#define QSPI_BASE                   0x64000000UL

/** @} */ /* End of group Device_Peripheral_peripheralAddr */


/* =========================================================================================================================== */
/* ================                                  Peripheral declaration                                   ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_declaration
  * @{
  */

#define RMPU                        ((RMPU_Type*)              RMPU_BASE)
#define MMF                         ((MMF_Type*)               MMF_BASE)
#define BUS                         ((BUS_Type*)               BUS_BASE)
#define DMAC0                       ((DMAC0_Type*)             DMAC0_BASE)
#define DMAC1                       ((DMAC0_Type*)             DMAC1_BASE)
#define DMAC2                       ((DMAC0_Type*)             DMAC2_BASE)
#define DMAC3                       ((DMAC0_Type*)             DMAC3_BASE)
#define DMA                         ((DMA_Type*)               DMA_BASE)
#define DTC                         ((DTC_Type*)               DTC_BASE)
#define ICU                         ((ICU_Type*)               ICU_BASE)
#define DBG                         ((DBG_Type*)               DBG_BASE)
#define SYSF                        ((SYSF_Type*)              SYSF_BASE)
#define SYSC                        ((SYSC_Type*)              SYSC_BASE)
#define EHC                         ((EHC_Type*)               EHC_BASE)
#define PORT0                       ((PORT0_Type*)             PORT0_BASE)
#define PORT1                       ((PORT0_Type*)             PORT1_BASE)
#define PORT2                       ((PORT2_Type*)             PORT2_BASE)
#define PORT3                       ((PORT3_Type*)             PORT3_BASE)
#define PORT4                       ((PORT4_Type*)             PORT4_BASE)
#define PORT5                       ((PORT0_Type*)             PORT5_BASE)
#define PORT6                       ((PORT0_Type*)             PORT6_BASE)
#define PORT7                       ((PORT0_Type*)             PORT7_BASE)
#define PORT8                       ((PORT0_Type*)             PORT8_BASE)
#define PFS                         ((PFS_Type*)               PFS_BASE)
#define ELC                         ((ELC_Type*)               ELC_BASE)
#define SCI2                        ((SCI2_Type*)              SCI2_BASE)
#define SCI3                        ((SCI2_Type*)              SCI3_BASE)
#define SCI4                        ((SCI2_Type*)              SCI4_BASE)
#define SCI5                        ((SCI2_Type*)              SCI5_BASE)
#define SCI9                        ((SCI2_Type*)              SCI9_BASE)
#define POE                         ((POE_Type*)               POE_BASE)
#define RTC                         ((RTC_Type*)               RTC_BASE)
#define WDT                         ((WDT_Type*)               WDT_BASE)
#define IWDT                        ((IWDT_Type*)              IWDT_BASE)
#define CAC                         ((CAC_Type*)               CAC_BASE)
#define MSTP                        ((MSTP_Type*)              MSTP_BASE)
#define TMR0                        ((TMR0_Type*)              TMR0_BASE)
#define TMR1                        ((TMR1_Type*)              TMR1_BASE)
#define IIC0                        ((IIC0_Type*)              IIC0_BASE)
#define IIC1                        ((IIC0_Type*)              IIC1_BASE)
#define DOC                         ((DOC_Type*)               DOC_BASE)
#define GPT320                      ((GPT320_Type*)            GPT320_BASE)
#define GPT321                      ((GPT320_Type*)            GPT321_BASE)
#define GPT162                      ((GPT162_Type*)            GPT162_BASE)
#define GPT163                      ((GPT162_Type*)            GPT163_BASE)
#define GPT164                      ((GPT162_Type*)            GPT164_BASE)
#define GPT165                      ((GPT162_Type*)            GPT165_BASE)
#define GPT_OPS                     ((GPT_OPS_Type*)           GPT_OPS_BASE)
#define ADC140                      ((ADC140_Type*)            ADC140_BASE)
#define TSN                         ((TSN_Type*)               TSN_BASE)
#define SCI0                        ((SCI0_Type*)              SCI0_BASE)
#define SCI1                        ((SCI0_Type*)              SCI1_BASE)
#define MLCD                        ((MLCD_Type*)              MLCD_BASE)
#define GDT                         ((GDT_Type*)               GDT_BASE)
#define IRDA                        ((IRDA_Type*)              IRDA_BASE)
#define SPI0                        ((SPI0_Type*)              SPI0_BASE)
#define SPI1                        ((SPI1_Type*)              SPI1_BASE)
#define CRC                         ((CRC_Type*)               CRC_BASE)
#define KINT                        ((KINT_Type*)              KINT_BASE)
#define CCC                         ((CCC_Type*)               CCC_BASE)
#define AGT0                        ((AGT0_Type*)              AGT0_BASE)
#define AGT1                        ((AGT0_Type*)              AGT1_BASE)
#define AGTW0                       ((AGTW0_Type*)             AGTW0_BASE)
#define AGTW1                       ((AGTW0_Type*)             AGTW1_BASE)
#define LST                         ((LST_Type*)               LST_BASE)
#define WUPT                        ((WUPT_Type*)              WUPT_BASE)
#define DIL                         ((DIL_Type*)               DIL_BASE)
#define DIV                         ((DIV_Type*)               DIV_BASE)
#define VREF                        ((VREF_Type*)              VREF_BASE)
#define FACI                        ((FACI_Type*)              FACI_BASE)
#define QSPI                        ((QSPI_Type*)              QSPI_BASE)

/** @} */ /* End of group Device_Peripheral_declaration */


/* =========================================  End of section using anonymous unions  ========================================= */
#if defined (__CC_ARM)
  #pragma pop
#elif defined (__ICCARM__)
  /* leave anonymous unions enabled */
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic pop
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning restore
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#endif


/* =========================================================================================================================== */
/* ================                                Pos/Mask Peripheral Section                                ================ */
/* =========================================================================================================================== */


/** @addtogroup PosMask_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                           RMPU                                            ================ */
/* =========================================================================================================================== */

/* =======================================================  MMPUCTLA  ======================================================== */
#define RMPU_MMPUCTLA_ENABLE_Pos          (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define RMPU_MMPUCTLA_ENABLE_Msk          (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
#define RMPU_MMPUCTLA_OAD_Pos             (1UL)                     /*!< OAD (Bit 1)                                           */
#define RMPU_MMPUCTLA_OAD_Msk             (0x2UL)                   /*!< OAD (Bitfield-Mask: 0x01)                             */
#define RMPU_MMPUCTLA_KEY_Pos             (8UL)                     /*!< KEY (Bit 8)                                           */
#define RMPU_MMPUCTLA_KEY_Msk             (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
/* ========================================================  MMPUPTA  ======================================================== */
#define RMPU_MMPUPTA_PROTECT_Pos          (0UL)                     /*!< PROTECT (Bit 0)                                       */
#define RMPU_MMPUPTA_PROTECT_Msk          (0x1UL)                   /*!< PROTECT (Bitfield-Mask: 0x01)                         */
#define RMPU_MMPUPTA_KEY_Pos              (8UL)                     /*!< KEY (Bit 8)                                           */
#define RMPU_MMPUPTA_KEY_Msk              (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
/* =======================================================  MMPUACA0  ======================================================== */
#define RMPU_MMPUACA0_ENABLE_Pos          (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define RMPU_MMPUACA0_ENABLE_Msk          (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
#define RMPU_MMPUACA0_RP_Pos              (1UL)                     /*!< RP (Bit 1)                                            */
#define RMPU_MMPUACA0_RP_Msk              (0x2UL)                   /*!< RP (Bitfield-Mask: 0x01)                              */
#define RMPU_MMPUACA0_WP_Pos              (2UL)                     /*!< WP (Bit 2)                                            */
#define RMPU_MMPUACA0_WP_Msk              (0x4UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
/* =======================================================  MMPUACA1  ======================================================== */
#define RMPU_MMPUACA1_ENABLE_Pos          (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define RMPU_MMPUACA1_ENABLE_Msk          (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
#define RMPU_MMPUACA1_RP_Pos              (1UL)                     /*!< RP (Bit 1)                                            */
#define RMPU_MMPUACA1_RP_Msk              (0x2UL)                   /*!< RP (Bitfield-Mask: 0x01)                              */
#define RMPU_MMPUACA1_WP_Pos              (2UL)                     /*!< WP (Bit 2)                                            */
#define RMPU_MMPUACA1_WP_Msk              (0x4UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
/* =======================================================  MMPUACA2  ======================================================== */
#define RMPU_MMPUACA2_ENABLE_Pos          (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define RMPU_MMPUACA2_ENABLE_Msk          (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
#define RMPU_MMPUACA2_RP_Pos              (1UL)                     /*!< RP (Bit 1)                                            */
#define RMPU_MMPUACA2_RP_Msk              (0x2UL)                   /*!< RP (Bitfield-Mask: 0x01)                              */
#define RMPU_MMPUACA2_WP_Pos              (2UL)                     /*!< WP (Bit 2)                                            */
#define RMPU_MMPUACA2_WP_Msk              (0x4UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
/* =======================================================  MMPUACA3  ======================================================== */
#define RMPU_MMPUACA3_ENABLE_Pos          (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define RMPU_MMPUACA3_ENABLE_Msk          (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
#define RMPU_MMPUACA3_RP_Pos              (1UL)                     /*!< RP (Bit 1)                                            */
#define RMPU_MMPUACA3_RP_Msk              (0x2UL)                   /*!< RP (Bitfield-Mask: 0x01)                              */
#define RMPU_MMPUACA3_WP_Pos              (2UL)                     /*!< WP (Bit 2)                                            */
#define RMPU_MMPUACA3_WP_Msk              (0x4UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
/* ========================================================  MMPUSA0  ======================================================== */
#define RMPU_MMPUSA0_MMPUSA_Pos           (0UL)                     /*!< MMPUSA (Bit 0)                                        */
#define RMPU_MMPUSA0_MMPUSA_Msk           (0xffffffffUL)            /*!< MMPUSA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  MMPUSA1  ======================================================== */
#define RMPU_MMPUSA1_MMPUSA_Pos           (0UL)                     /*!< MMPUSA (Bit 0)                                        */
#define RMPU_MMPUSA1_MMPUSA_Msk           (0xffffffffUL)            /*!< MMPUSA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  MMPUSA2  ======================================================== */
#define RMPU_MMPUSA2_MMPUSA_Pos           (0UL)                     /*!< MMPUSA (Bit 0)                                        */
#define RMPU_MMPUSA2_MMPUSA_Msk           (0xffffffffUL)            /*!< MMPUSA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  MMPUSA3  ======================================================== */
#define RMPU_MMPUSA3_MMPUSA_Pos           (0UL)                     /*!< MMPUSA (Bit 0)                                        */
#define RMPU_MMPUSA3_MMPUSA_Msk           (0xffffffffUL)            /*!< MMPUSA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  MMPUEA0  ======================================================== */
#define RMPU_MMPUEA0_MMPUEA_Pos           (0UL)                     /*!< MMPUEA (Bit 0)                                        */
#define RMPU_MMPUEA0_MMPUEA_Msk           (0xffffffffUL)            /*!< MMPUEA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  MMPUEA1  ======================================================== */
#define RMPU_MMPUEA1_MMPUEA_Pos           (0UL)                     /*!< MMPUEA (Bit 0)                                        */
#define RMPU_MMPUEA1_MMPUEA_Msk           (0xffffffffUL)            /*!< MMPUEA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  MMPUEA2  ======================================================== */
#define RMPU_MMPUEA2_MMPUEA_Pos           (0UL)                     /*!< MMPUEA (Bit 0)                                        */
#define RMPU_MMPUEA2_MMPUEA_Msk           (0xffffffffUL)            /*!< MMPUEA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  MMPUEA3  ======================================================== */
#define RMPU_MMPUEA3_MMPUEA_Pos           (0UL)                     /*!< MMPUEA (Bit 0)                                        */
#define RMPU_MMPUEA3_MMPUEA_Msk           (0xffffffffUL)            /*!< MMPUEA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  SMPUCTL  ======================================================== */
#define RMPU_SMPUCTL_OAD_Pos              (0UL)                     /*!< OAD (Bit 0)                                           */
#define RMPU_SMPUCTL_OAD_Msk              (0x1UL)                   /*!< OAD (Bitfield-Mask: 0x01)                             */
#define RMPU_SMPUCTL_PROTECT_Pos          (1UL)                     /*!< PROTECT (Bit 1)                                       */
#define RMPU_SMPUCTL_PROTECT_Msk          (0x2UL)                   /*!< PROTECT (Bitfield-Mask: 0x01)                         */
#define RMPU_SMPUCTL_KEY_Pos              (8UL)                     /*!< KEY (Bit 8)                                           */
#define RMPU_SMPUCTL_KEY_Msk              (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
/* =======================================================  SMPUMBIU  ======================================================== */
#define RMPU_SMPUMBIU_RPGRPA_Pos          (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define RMPU_SMPUMBIU_RPGRPA_Msk          (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define RMPU_SMPUMBIU_WPGRPA_Pos          (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define RMPU_SMPUMBIU_WPGRPA_Msk          (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
/* =======================================================  SMPUFBIU  ======================================================== */
#define RMPU_SMPUFBIU_RPCPU_Pos           (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define RMPU_SMPUFBIU_RPCPU_Msk           (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUFBIU_WPCPU_Pos           (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define RMPU_SMPUFBIU_WPCPU_Msk           (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUFBIU_RPGRPA_Pos          (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define RMPU_SMPUFBIU_RPGRPA_Msk          (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define RMPU_SMPUFBIU_WPGRPA_Pos          (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define RMPU_SMPUFBIU_WPGRPA_Msk          (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
/* =======================================================  SMPUSRAM0  ======================================================= */
#define RMPU_SMPUSRAM0_RPCPU_Pos          (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define RMPU_SMPUSRAM0_RPCPU_Msk          (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUSRAM0_WPCPU_Pos          (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define RMPU_SMPUSRAM0_WPCPU_Msk          (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUSRAM0_RPGRPA_Pos         (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define RMPU_SMPUSRAM0_RPGRPA_Msk         (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define RMPU_SMPUSRAM0_WPGRPA_Pos         (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define RMPU_SMPUSRAM0_WPGRPA_Msk         (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
/* =======================================================  SMPUSRAM1  ======================================================= */
#define RMPU_SMPUSRAM1_RPCPU_Pos          (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define RMPU_SMPUSRAM1_RPCPU_Msk          (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUSRAM1_WPCPU_Pos          (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define RMPU_SMPUSRAM1_WPCPU_Msk          (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUSRAM1_RPGRPA_Pos         (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define RMPU_SMPUSRAM1_RPGRPA_Msk         (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define RMPU_SMPUSRAM1_WPGRPA_Pos         (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define RMPU_SMPUSRAM1_WPGRPA_Msk         (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
/* =======================================================  SMPUP0BIU  ======================================================= */
#define RMPU_SMPUP0BIU_RPCPU_Pos          (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define RMPU_SMPUP0BIU_RPCPU_Msk          (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUP0BIU_WPCPU_Pos          (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define RMPU_SMPUP0BIU_WPCPU_Msk          (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUP0BIU_RPGRPA_Pos         (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define RMPU_SMPUP0BIU_RPGRPA_Msk         (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define RMPU_SMPUP0BIU_WPGRPA_Pos         (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define RMPU_SMPUP0BIU_WPGRPA_Msk         (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
/* =======================================================  SMPUP2BIU  ======================================================= */
#define RMPU_SMPUP2BIU_RPCPU_Pos          (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define RMPU_SMPUP2BIU_RPCPU_Msk          (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUP2BIU_WPCPU_Pos          (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define RMPU_SMPUP2BIU_WPCPU_Msk          (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUP2BIU_RPGRPA_Pos         (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define RMPU_SMPUP2BIU_RPGRPA_Msk         (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define RMPU_SMPUP2BIU_WPGRPA_Pos         (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define RMPU_SMPUP2BIU_WPGRPA_Msk         (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
/* ======================================================  SMPUEXBIU2  ======================================================= */
#define RMPU_SMPUEXBIU2_RPCPU_Pos         (0UL)                     /*!< RPCPU (Bit 0)                                         */
#define RMPU_SMPUEXBIU2_RPCPU_Msk         (0x1UL)                   /*!< RPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUEXBIU2_WPCPU_Pos         (1UL)                     /*!< WPCPU (Bit 1)                                         */
#define RMPU_SMPUEXBIU2_WPCPU_Msk         (0x2UL)                   /*!< WPCPU (Bitfield-Mask: 0x01)                           */
#define RMPU_SMPUEXBIU2_RPGRPA_Pos        (2UL)                     /*!< RPGRPA (Bit 2)                                        */
#define RMPU_SMPUEXBIU2_RPGRPA_Msk        (0x4UL)                   /*!< RPGRPA (Bitfield-Mask: 0x01)                          */
#define RMPU_SMPUEXBIU2_WPGRPA_Pos        (3UL)                     /*!< WPGRPA (Bit 3)                                        */
#define RMPU_SMPUEXBIU2_WPGRPA_Msk        (0x8UL)                   /*!< WPGRPA (Bitfield-Mask: 0x01)                          */
/* =======================================================  MSPMPUOAD  ======================================================= */
#define RMPU_MSPMPUOAD_OAD_Pos            (0UL)                     /*!< OAD (Bit 0)                                           */
#define RMPU_MSPMPUOAD_OAD_Msk            (0x1UL)                   /*!< OAD (Bitfield-Mask: 0x01)                             */
#define RMPU_MSPMPUOAD_KEY_Pos            (8UL)                     /*!< KEY (Bit 8)                                           */
#define RMPU_MSPMPUOAD_KEY_Msk            (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
/* =======================================================  MSPMPUCTL  ======================================================= */
#define RMPU_MSPMPUCTL_ENABLE_Pos         (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define RMPU_MSPMPUCTL_ENABLE_Msk         (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
#define RMPU_MSPMPUCTL_ERROR_Pos          (8UL)                     /*!< ERROR (Bit 8)                                         */
#define RMPU_MSPMPUCTL_ERROR_Msk          (0x100UL)                 /*!< ERROR (Bitfield-Mask: 0x01)                           */
/* =======================================================  MSPMPUPT  ======================================================== */
#define RMPU_MSPMPUPT_PROTECT_Pos         (0UL)                     /*!< PROTECT (Bit 0)                                       */
#define RMPU_MSPMPUPT_PROTECT_Msk         (0x1UL)                   /*!< PROTECT (Bitfield-Mask: 0x01)                         */
#define RMPU_MSPMPUPT_KEY_Pos             (8UL)                     /*!< KEY (Bit 8)                                           */
#define RMPU_MSPMPUPT_KEY_Msk             (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
/* =======================================================  MSPMPUSA  ======================================================== */
#define RMPU_MSPMPUSA_MSPMPUSA_Pos        (0UL)                     /*!< MSPMPUSA (Bit 0)                                      */
#define RMPU_MSPMPUSA_MSPMPUSA_Msk        (0xffffffffUL)            /*!< MSPMPUSA (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  MSPMPUEA  ======================================================== */
#define RMPU_MSPMPUEA_MSPMPUEA_Pos        (0UL)                     /*!< MSPMPUEA (Bit 0)                                      */
#define RMPU_MSPMPUEA_MSPMPUEA_Msk        (0xffffffffUL)            /*!< MSPMPUEA (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  PSPMPUOAD  ======================================================= */
#define RMPU_PSPMPUOAD_OAD_Pos            (0UL)                     /*!< OAD (Bit 0)                                           */
#define RMPU_PSPMPUOAD_OAD_Msk            (0x1UL)                   /*!< OAD (Bitfield-Mask: 0x01)                             */
#define RMPU_PSPMPUOAD_KEY_Pos            (8UL)                     /*!< KEY (Bit 8)                                           */
#define RMPU_PSPMPUOAD_KEY_Msk            (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
/* =======================================================  PSPMPUCTL  ======================================================= */
#define RMPU_PSPMPUCTL_ENABLE_Pos         (0UL)                     /*!< ENABLE (Bit 0)                                        */
#define RMPU_PSPMPUCTL_ENABLE_Msk         (0x1UL)                   /*!< ENABLE (Bitfield-Mask: 0x01)                          */
#define RMPU_PSPMPUCTL_ERROR_Pos          (8UL)                     /*!< ERROR (Bit 8)                                         */
#define RMPU_PSPMPUCTL_ERROR_Msk          (0x100UL)                 /*!< ERROR (Bitfield-Mask: 0x01)                           */
/* =======================================================  PSPMPUPT  ======================================================== */
#define RMPU_PSPMPUPT_PROTECT_Pos         (0UL)                     /*!< PROTECT (Bit 0)                                       */
#define RMPU_PSPMPUPT_PROTECT_Msk         (0x1UL)                   /*!< PROTECT (Bitfield-Mask: 0x01)                         */
#define RMPU_PSPMPUPT_KEY_Pos             (8UL)                     /*!< KEY (Bit 8)                                           */
#define RMPU_PSPMPUPT_KEY_Msk             (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
/* =======================================================  PSPMPUSA  ======================================================== */
#define RMPU_PSPMPUSA_PSPMPUSA_Pos        (0UL)                     /*!< PSPMPUSA (Bit 0)                                      */
#define RMPU_PSPMPUSA_PSPMPUSA_Msk        (0xffffffffUL)            /*!< PSPMPUSA (Bitfield-Mask: 0xffffffff)                  */
/* =======================================================  PSPMPUEA  ======================================================== */
#define RMPU_PSPMPUEA_PSPMPUEA_Pos        (0UL)                     /*!< PSPMPUEA (Bit 0)                                      */
#define RMPU_PSPMPUEA_PSPMPUEA_Msk        (0xffffffffUL)            /*!< PSPMPUEA (Bitfield-Mask: 0xffffffff)                  */


/* =========================================================================================================================== */
/* ================                                            MMF                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  MMSFR  ========================================================= */
#define MMF_MMSFR_MEMMIRADDR_Pos          (7UL)                     /*!< MEMMIRADDR (Bit 7)                                    */
#define MMF_MMSFR_MEMMIRADDR_Msk          (0x7fff80UL)              /*!< MEMMIRADDR (Bitfield-Mask: 0xffff)                    */
#define MMF_MMSFR_KEY_Pos                 (24UL)                    /*!< KEY (Bit 24)                                          */
#define MMF_MMSFR_KEY_Msk                 (0xff000000UL)            /*!< KEY (Bitfield-Mask: 0xff)                             */
/* =========================================================  MMEN  ========================================================== */
#define MMF_MMEN_EN_Pos                   (0UL)                     /*!< EN (Bit 0)                                            */
#define MMF_MMEN_EN_Msk                   (0x1UL)                   /*!< EN (Bitfield-Mask: 0x01)                              */
#define MMF_MMEN_KEY_Pos                  (24UL)                    /*!< KEY (Bit 24)                                          */
#define MMF_MMEN_KEY_Msk                  (0xff000000UL)            /*!< KEY (Bitfield-Mask: 0xff)                             */


/* =========================================================================================================================== */
/* ================                                            BUS                                            ================ */
/* =========================================================================================================================== */

/* ======================================================  BUSMCNTSYS  ======================================================= */
#define BUS_BUSMCNTSYS_IERES_Pos          (15UL)                    /*!< IERES (Bit 15)                                        */
#define BUS_BUSMCNTSYS_IERES_Msk          (0x8000UL)                /*!< IERES (Bitfield-Mask: 0x01)                           */
/* ======================================================  BUSMCNTDMA  ======================================================= */
#define BUS_BUSMCNTDMA_IERES_Pos          (15UL)                    /*!< IERES (Bit 15)                                        */
#define BUS_BUSMCNTDMA_IERES_Msk          (0x8000UL)                /*!< IERES (Bitfield-Mask: 0x01)                           */
/* ======================================================  BUS3ERRADD  ======================================================= */
#define BUS_BUS3ERRADD_BERAD_Pos          (0UL)                     /*!< BERAD (Bit 0)                                         */
#define BUS_BUS3ERRADD_BERAD_Msk          (0xffffffffUL)            /*!< BERAD (Bitfield-Mask: 0xffffffff)                     */
/* ======================================================  BUS3ERRSTAT  ====================================================== */
#define BUS_BUS3ERRSTAT_ACCSTAT_Pos       (0UL)                     /*!< ACCSTAT (Bit 0)                                       */
#define BUS_BUS3ERRSTAT_ACCSTAT_Msk       (0x1UL)                   /*!< ACCSTAT (Bitfield-Mask: 0x01)                         */
#define BUS_BUS3ERRSTAT_ERRSTAT_Pos       (7UL)                     /*!< ERRSTAT (Bit 7)                                       */
#define BUS_BUS3ERRSTAT_ERRSTAT_Msk       (0x80UL)                  /*!< ERRSTAT (Bitfield-Mask: 0x01)                         */
/* ======================================================  BUS4ERRADD  ======================================================= */
#define BUS_BUS4ERRADD_BERAD_Pos          (0UL)                     /*!< BERAD (Bit 0)                                         */
#define BUS_BUS4ERRADD_BERAD_Msk          (0xffffffffUL)            /*!< BERAD (Bitfield-Mask: 0xffffffff)                     */
/* ======================================================  BUS4ERRSTAT  ====================================================== */
#define BUS_BUS4ERRSTAT_ACCSTAT_Pos       (0UL)                     /*!< ACCSTAT (Bit 0)                                       */
#define BUS_BUS4ERRSTAT_ACCSTAT_Msk       (0x1UL)                   /*!< ACCSTAT (Bitfield-Mask: 0x01)                         */
#define BUS_BUS4ERRSTAT_ERRSTAT_Pos       (7UL)                     /*!< ERRSTAT (Bit 7)                                       */
#define BUS_BUS4ERRSTAT_ERRSTAT_Msk       (0x80UL)                  /*!< ERRSTAT (Bitfield-Mask: 0x01)                         */


/* =========================================================================================================================== */
/* ================                                           DMAC0                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  DMSAR  ========================================================= */
/* =========================================================  DMDAR  ========================================================= */
/* =========================================================  DMCRA  ========================================================= */
#define DMAC0_DMCRA_DMCRAL_Pos            (0UL)                     /*!< DMCRAL (Bit 0)                                        */
#define DMAC0_DMCRA_DMCRAL_Msk            (0xffffUL)                /*!< DMCRAL (Bitfield-Mask: 0xffff)                        */
#define DMAC0_DMCRA_DMCRAH_Pos            (16UL)                    /*!< DMCRAH (Bit 16)                                       */
#define DMAC0_DMCRA_DMCRAH_Msk            (0x3ff0000UL)             /*!< DMCRAH (Bitfield-Mask: 0x3ff)                         */
/* =========================================================  DMCRB  ========================================================= */
/* =========================================================  DMTMD  ========================================================= */
#define DMAC0_DMTMD_DCTG_Pos              (0UL)                     /*!< DCTG (Bit 0)                                          */
#define DMAC0_DMTMD_DCTG_Msk              (0x3UL)                   /*!< DCTG (Bitfield-Mask: 0x03)                            */
#define DMAC0_DMTMD_SZ_Pos                (8UL)                     /*!< SZ (Bit 8)                                            */
#define DMAC0_DMTMD_SZ_Msk                (0x300UL)                 /*!< SZ (Bitfield-Mask: 0x03)                              */
#define DMAC0_DMTMD_DTS_Pos               (12UL)                    /*!< DTS (Bit 12)                                          */
#define DMAC0_DMTMD_DTS_Msk               (0x3000UL)                /*!< DTS (Bitfield-Mask: 0x03)                             */
#define DMAC0_DMTMD_MD_Pos                (14UL)                    /*!< MD (Bit 14)                                           */
#define DMAC0_DMTMD_MD_Msk                (0xc000UL)                /*!< MD (Bitfield-Mask: 0x03)                              */
/* =========================================================  DMINT  ========================================================= */
#define DMAC0_DMINT_DARIE_Pos             (0UL)                     /*!< DARIE (Bit 0)                                         */
#define DMAC0_DMINT_DARIE_Msk             (0x1UL)                   /*!< DARIE (Bitfield-Mask: 0x01)                           */
#define DMAC0_DMINT_SARIE_Pos             (1UL)                     /*!< SARIE (Bit 1)                                         */
#define DMAC0_DMINT_SARIE_Msk             (0x2UL)                   /*!< SARIE (Bitfield-Mask: 0x01)                           */
#define DMAC0_DMINT_RPTIE_Pos             (2UL)                     /*!< RPTIE (Bit 2)                                         */
#define DMAC0_DMINT_RPTIE_Msk             (0x4UL)                   /*!< RPTIE (Bitfield-Mask: 0x01)                           */
#define DMAC0_DMINT_ESIE_Pos              (3UL)                     /*!< ESIE (Bit 3)                                          */
#define DMAC0_DMINT_ESIE_Msk              (0x8UL)                   /*!< ESIE (Bitfield-Mask: 0x01)                            */
#define DMAC0_DMINT_DTIE_Pos              (4UL)                     /*!< DTIE (Bit 4)                                          */
#define DMAC0_DMINT_DTIE_Msk              (0x10UL)                  /*!< DTIE (Bitfield-Mask: 0x01)                            */
/* =========================================================  DMAMD  ========================================================= */
#define DMAC0_DMAMD_DARA_Pos              (0UL)                     /*!< DARA (Bit 0)                                          */
#define DMAC0_DMAMD_DARA_Msk              (0x1fUL)                  /*!< DARA (Bitfield-Mask: 0x1f)                            */
#define DMAC0_DMAMD_DM_Pos                (6UL)                     /*!< DM (Bit 6)                                            */
#define DMAC0_DMAMD_DM_Msk                (0xc0UL)                  /*!< DM (Bitfield-Mask: 0x03)                              */
#define DMAC0_DMAMD_SARA_Pos              (8UL)                     /*!< SARA (Bit 8)                                          */
#define DMAC0_DMAMD_SARA_Msk              (0x1f00UL)                /*!< SARA (Bitfield-Mask: 0x1f)                            */
#define DMAC0_DMAMD_SM_Pos                (14UL)                    /*!< SM (Bit 14)                                           */
#define DMAC0_DMAMD_SM_Msk                (0xc000UL)                /*!< SM (Bitfield-Mask: 0x03)                              */
/* =========================================================  DMOFR  ========================================================= */
/* =========================================================  DMCNT  ========================================================= */
#define DMAC0_DMCNT_DTE_Pos               (0UL)                     /*!< DTE (Bit 0)                                           */
#define DMAC0_DMCNT_DTE_Msk               (0x1UL)                   /*!< DTE (Bitfield-Mask: 0x01)                             */
/* =========================================================  DMREQ  ========================================================= */
#define DMAC0_DMREQ_SWREQ_Pos             (0UL)                     /*!< SWREQ (Bit 0)                                         */
#define DMAC0_DMREQ_SWREQ_Msk             (0x1UL)                   /*!< SWREQ (Bitfield-Mask: 0x01)                           */
#define DMAC0_DMREQ_CLRS_Pos              (4UL)                     /*!< CLRS (Bit 4)                                          */
#define DMAC0_DMREQ_CLRS_Msk              (0x10UL)                  /*!< CLRS (Bitfield-Mask: 0x01)                            */
/* =========================================================  DMSTS  ========================================================= */
#define DMAC0_DMSTS_ESIF_Pos              (0UL)                     /*!< ESIF (Bit 0)                                          */
#define DMAC0_DMSTS_ESIF_Msk              (0x1UL)                   /*!< ESIF (Bitfield-Mask: 0x01)                            */
#define DMAC0_DMSTS_DTIF_Pos              (4UL)                     /*!< DTIF (Bit 4)                                          */
#define DMAC0_DMSTS_DTIF_Msk              (0x10UL)                  /*!< DTIF (Bitfield-Mask: 0x01)                            */
#define DMAC0_DMSTS_ACT_Pos               (7UL)                     /*!< ACT (Bit 7)                                           */
#define DMAC0_DMSTS_ACT_Msk               (0x80UL)                  /*!< ACT (Bitfield-Mask: 0x01)                             */


/* =========================================================================================================================== */
/* ================                                            DMA                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DMAST  ========================================================= */
#define DMA_DMAST_DMST_Pos                (0UL)                     /*!< DMST (Bit 0)                                          */
#define DMA_DMAST_DMST_Msk                (0x1UL)                   /*!< DMST (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                            DTC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DTCCR  ========================================================= */
#define DTC_DTCCR_RRS_Pos                 (4UL)                     /*!< RRS (Bit 4)                                           */
#define DTC_DTCCR_RRS_Msk                 (0x10UL)                  /*!< RRS (Bitfield-Mask: 0x01)                             */
/* ========================================================  DTCVBR  ========================================================= */
/* =========================================================  DTCST  ========================================================= */
#define DTC_DTCST_DTCST_Pos               (0UL)                     /*!< DTCST (Bit 0)                                         */
#define DTC_DTCST_DTCST_Msk               (0x1UL)                   /*!< DTCST (Bitfield-Mask: 0x01)                           */
/* ========================================================  DTCSTS  ========================================================= */
#define DTC_DTCSTS_VECN_Pos               (0UL)                     /*!< VECN (Bit 0)                                          */
#define DTC_DTCSTS_VECN_Msk               (0xffUL)                  /*!< VECN (Bitfield-Mask: 0xff)                            */
#define DTC_DTCSTS_ACT_Pos                (15UL)                    /*!< ACT (Bit 15)                                          */
#define DTC_DTCSTS_ACT_Msk                (0x8000UL)                /*!< ACT (Bitfield-Mask: 0x01)                             */


/* =========================================================================================================================== */
/* ================                                            ICU                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  IRQCR0  ========================================================= */
#define ICU_IRQCR0_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR0_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR1  ========================================================= */
#define ICU_IRQCR1_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR1_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR2  ========================================================= */
#define ICU_IRQCR2_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR2_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR3  ========================================================= */
#define ICU_IRQCR3_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR3_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR4  ========================================================= */
#define ICU_IRQCR4_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR4_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR5  ========================================================= */
#define ICU_IRQCR5_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR5_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR6  ========================================================= */
#define ICU_IRQCR6_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR6_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR7  ========================================================= */
#define ICU_IRQCR7_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR7_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR8  ========================================================= */
#define ICU_IRQCR8_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR8_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* ========================================================  IRQCR9  ========================================================= */
#define ICU_IRQCR9_IRQMD_Pos              (0UL)                     /*!< IRQMD (Bit 0)                                         */
#define ICU_IRQCR9_IRQMD_Msk              (0x3UL)                   /*!< IRQMD (Bitfield-Mask: 0x03)                           */
/* =========================================================  NMICR  ========================================================= */
#define ICU_NMICR_NMIMD_Pos               (0UL)                     /*!< NMIMD (Bit 0)                                         */
#define ICU_NMICR_NMIMD_Msk               (0x1UL)                   /*!< NMIMD (Bitfield-Mask: 0x01)                           */
/* =========================================================  NMIER  ========================================================= */
#define ICU_NMIER_IWDTEN_Pos              (0UL)                     /*!< IWDTEN (Bit 0)                                        */
#define ICU_NMIER_IWDTEN_Msk              (0x1UL)                   /*!< IWDTEN (Bitfield-Mask: 0x01)                          */
#define ICU_NMIER_WDTEN_Pos               (1UL)                     /*!< WDTEN (Bit 1)                                         */
#define ICU_NMIER_WDTEN_Msk               (0x2UL)                   /*!< WDTEN (Bitfield-Mask: 0x01)                           */
#define ICU_NMIER_LVD1EN_Pos              (2UL)                     /*!< LVD1EN (Bit 2)                                        */
#define ICU_NMIER_LVD1EN_Msk              (0x4UL)                   /*!< LVD1EN (Bitfield-Mask: 0x01)                          */
#define ICU_NMIER_LVDBATEN_Pos            (3UL)                     /*!< LVDBATEN (Bit 3)                                      */
#define ICU_NMIER_LVDBATEN_Msk            (0x8UL)                   /*!< LVDBATEN (Bitfield-Mask: 0x01)                        */
#define ICU_NMIER_OSTEN_Pos               (6UL)                     /*!< OSTEN (Bit 6)                                         */
#define ICU_NMIER_OSTEN_Msk               (0x40UL)                  /*!< OSTEN (Bitfield-Mask: 0x01)                           */
#define ICU_NMIER_NMIEN_Pos               (7UL)                     /*!< NMIEN (Bit 7)                                         */
#define ICU_NMIER_NMIEN_Msk               (0x80UL)                  /*!< NMIEN (Bitfield-Mask: 0x01)                           */
#define ICU_NMIER_BUSSEN_Pos              (10UL)                    /*!< BUSSEN (Bit 10)                                       */
#define ICU_NMIER_BUSSEN_Msk              (0x400UL)                 /*!< BUSSEN (Bitfield-Mask: 0x01)                          */
#define ICU_NMIER_BUSMEN_Pos              (11UL)                    /*!< BUSMEN (Bit 11)                                       */
#define ICU_NMIER_BUSMEN_Msk              (0x800UL)                 /*!< BUSMEN (Bitfield-Mask: 0x01)                          */
#define ICU_NMIER_SPEEN_Pos               (12UL)                    /*!< SPEEN (Bit 12)                                        */
#define ICU_NMIER_SPEEN_Msk               (0x1000UL)                /*!< SPEEN (Bitfield-Mask: 0x01)                           */
/* ========================================================  NMICLR  ========================================================= */
#define ICU_NMICLR_IWDTCLR_Pos            (0UL)                     /*!< IWDTCLR (Bit 0)                                       */
#define ICU_NMICLR_IWDTCLR_Msk            (0x1UL)                   /*!< IWDTCLR (Bitfield-Mask: 0x01)                         */
#define ICU_NMICLR_WDTCLR_Pos             (1UL)                     /*!< WDTCLR (Bit 1)                                        */
#define ICU_NMICLR_WDTCLR_Msk             (0x2UL)                   /*!< WDTCLR (Bitfield-Mask: 0x01)                          */
#define ICU_NMICLR_LVD1CLR_Pos            (2UL)                     /*!< LVD1CLR (Bit 2)                                       */
#define ICU_NMICLR_LVD1CLR_Msk            (0x4UL)                   /*!< LVD1CLR (Bitfield-Mask: 0x01)                         */
#define ICU_NMICLR_LVDBATCLR_Pos          (3UL)                     /*!< LVDBATCLR (Bit 3)                                     */
#define ICU_NMICLR_LVDBATCLR_Msk          (0x8UL)                   /*!< LVDBATCLR (Bitfield-Mask: 0x01)                       */
#define ICU_NMICLR_OSTCLR_Pos             (6UL)                     /*!< OSTCLR (Bit 6)                                        */
#define ICU_NMICLR_OSTCLR_Msk             (0x40UL)                  /*!< OSTCLR (Bitfield-Mask: 0x01)                          */
#define ICU_NMICLR_NMICLR_Pos             (7UL)                     /*!< NMICLR (Bit 7)                                        */
#define ICU_NMICLR_NMICLR_Msk             (0x80UL)                  /*!< NMICLR (Bitfield-Mask: 0x01)                          */
#define ICU_NMICLR_BUSSCLR_Pos            (10UL)                    /*!< BUSSCLR (Bit 10)                                      */
#define ICU_NMICLR_BUSSCLR_Msk            (0x400UL)                 /*!< BUSSCLR (Bitfield-Mask: 0x01)                         */
#define ICU_NMICLR_BUSMCLR_Pos            (11UL)                    /*!< BUSMCLR (Bit 11)                                      */
#define ICU_NMICLR_BUSMCLR_Msk            (0x800UL)                 /*!< BUSMCLR (Bitfield-Mask: 0x01)                         */
#define ICU_NMICLR_SPECLR_Pos             (12UL)                    /*!< SPECLR (Bit 12)                                       */
#define ICU_NMICLR_SPECLR_Msk             (0x1000UL)                /*!< SPECLR (Bitfield-Mask: 0x01)                          */
/* =========================================================  NMISR  ========================================================= */
#define ICU_NMISR_IWDTST_Pos              (0UL)                     /*!< IWDTST (Bit 0)                                        */
#define ICU_NMISR_IWDTST_Msk              (0x1UL)                   /*!< IWDTST (Bitfield-Mask: 0x01)                          */
#define ICU_NMISR_WDTST_Pos               (1UL)                     /*!< WDTST (Bit 1)                                         */
#define ICU_NMISR_WDTST_Msk               (0x2UL)                   /*!< WDTST (Bitfield-Mask: 0x01)                           */
#define ICU_NMISR_LVD1ST_Pos              (2UL)                     /*!< LVD1ST (Bit 2)                                        */
#define ICU_NMISR_LVD1ST_Msk              (0x4UL)                   /*!< LVD1ST (Bitfield-Mask: 0x01)                          */
#define ICU_NMISR_LVDBATST_Pos            (3UL)                     /*!< LVDBATST (Bit 3)                                      */
#define ICU_NMISR_LVDBATST_Msk            (0x8UL)                   /*!< LVDBATST (Bitfield-Mask: 0x01)                        */
#define ICU_NMISR_OSTST_Pos               (6UL)                     /*!< OSTST (Bit 6)                                         */
#define ICU_NMISR_OSTST_Msk               (0x40UL)                  /*!< OSTST (Bitfield-Mask: 0x01)                           */
#define ICU_NMISR_NMIST_Pos               (7UL)                     /*!< NMIST (Bit 7)                                         */
#define ICU_NMISR_NMIST_Msk               (0x80UL)                  /*!< NMIST (Bitfield-Mask: 0x01)                           */
#define ICU_NMISR_BUSSST_Pos              (10UL)                    /*!< BUSSST (Bit 10)                                       */
#define ICU_NMISR_BUSSST_Msk              (0x400UL)                 /*!< BUSSST (Bitfield-Mask: 0x01)                          */
#define ICU_NMISR_BUSMST_Pos              (11UL)                    /*!< BUSMST (Bit 11)                                       */
#define ICU_NMISR_BUSMST_Msk              (0x800UL)                 /*!< BUSMST (Bitfield-Mask: 0x01)                          */
#define ICU_NMISR_SPEST_Pos               (12UL)                    /*!< SPEST (Bit 12)                                        */
#define ICU_NMISR_SPEST_Msk               (0x1000UL)                /*!< SPEST (Bitfield-Mask: 0x01)                           */
/* =========================================================  WUPEN  ========================================================= */
#define ICU_WUPEN_IRQWUPEN0_Pos           (0UL)                     /*!< IRQWUPEN0 (Bit 0)                                     */
#define ICU_WUPEN_IRQWUPEN0_Msk           (0x1UL)                   /*!< IRQWUPEN0 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN1_Pos           (1UL)                     /*!< IRQWUPEN1 (Bit 1)                                     */
#define ICU_WUPEN_IRQWUPEN1_Msk           (0x2UL)                   /*!< IRQWUPEN1 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN2_Pos           (2UL)                     /*!< IRQWUPEN2 (Bit 2)                                     */
#define ICU_WUPEN_IRQWUPEN2_Msk           (0x4UL)                   /*!< IRQWUPEN2 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN3_Pos           (3UL)                     /*!< IRQWUPEN3 (Bit 3)                                     */
#define ICU_WUPEN_IRQWUPEN3_Msk           (0x8UL)                   /*!< IRQWUPEN3 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN4_Pos           (4UL)                     /*!< IRQWUPEN4 (Bit 4)                                     */
#define ICU_WUPEN_IRQWUPEN4_Msk           (0x10UL)                  /*!< IRQWUPEN4 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN5_Pos           (5UL)                     /*!< IRQWUPEN5 (Bit 5)                                     */
#define ICU_WUPEN_IRQWUPEN5_Msk           (0x20UL)                  /*!< IRQWUPEN5 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN6_Pos           (6UL)                     /*!< IRQWUPEN6 (Bit 6)                                     */
#define ICU_WUPEN_IRQWUPEN6_Msk           (0x40UL)                  /*!< IRQWUPEN6 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN7_Pos           (7UL)                     /*!< IRQWUPEN7 (Bit 7)                                     */
#define ICU_WUPEN_IRQWUPEN7_Msk           (0x80UL)                  /*!< IRQWUPEN7 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN8_Pos           (8UL)                     /*!< IRQWUPEN8 (Bit 8)                                     */
#define ICU_WUPEN_IRQWUPEN8_Msk           (0x100UL)                 /*!< IRQWUPEN8 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IRQWUPEN9_Pos           (9UL)                     /*!< IRQWUPEN9 (Bit 9)                                     */
#define ICU_WUPEN_IRQWUPEN9_Msk           (0x200UL)                 /*!< IRQWUPEN9 (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_IWDTWUPEN_Pos           (16UL)                    /*!< IWDTWUPEN (Bit 16)                                    */
#define ICU_WUPEN_IWDTWUPEN_Msk           (0x10000UL)               /*!< IWDTWUPEN (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_KEYWUPEN_Pos            (17UL)                    /*!< KEYWUPEN (Bit 17)                                     */
#define ICU_WUPEN_KEYWUPEN_Msk            (0x20000UL)               /*!< KEYWUPEN (Bitfield-Mask: 0x01)                        */
#define ICU_WUPEN_LVD1WUPEN_Pos           (18UL)                    /*!< LVD1WUPEN (Bit 18)                                    */
#define ICU_WUPEN_LVD1WUPEN_Msk           (0x40000UL)               /*!< LVD1WUPEN (Bitfield-Mask: 0x01)                       */
#define ICU_WUPEN_LVDBATWUPEN_Pos         (19UL)                    /*!< LVDBATWUPEN (Bit 19)                                  */
#define ICU_WUPEN_LVDBATWUPEN_Msk         (0x80000UL)               /*!< LVDBATWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_SOLDHWUPEN_Pos          (22UL)                    /*!< SOLDHWUPEN (Bit 22)                                   */
#define ICU_WUPEN_SOLDHWUPEN_Msk          (0x400000UL)              /*!< SOLDHWUPEN (Bitfield-Mask: 0x01)                      */
#define ICU_WUPEN_AGTW0CAWUPEN_Pos        (23UL)                    /*!< AGTW0CAWUPEN (Bit 23)                                 */
#define ICU_WUPEN_AGTW0CAWUPEN_Msk        (0x800000UL)              /*!< AGTW0CAWUPEN (Bitfield-Mask: 0x01)                    */
#define ICU_WUPEN_RTCALMWUPEN_Pos         (24UL)                    /*!< RTCALMWUPEN (Bit 24)                                  */
#define ICU_WUPEN_RTCALMWUPEN_Msk         (0x1000000UL)             /*!< RTCALMWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_RTCPRDWUPEN_Pos         (25UL)                    /*!< RTCPRDWUPEN (Bit 25)                                  */
#define ICU_WUPEN_RTCPRDWUPEN_Msk         (0x2000000UL)             /*!< RTCPRDWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_CCCPRDWUPEN_Pos         (26UL)                    /*!< CCCPRDWUPEN (Bit 26)                                  */
#define ICU_WUPEN_CCCPRDWUPEN_Msk         (0x4000000UL)             /*!< CCCPRDWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_AGTW1CAWUPEN_Pos        (27UL)                    /*!< AGTW1CAWUPEN (Bit 27)                                 */
#define ICU_WUPEN_AGTW1CAWUPEN_Msk        (0x8000000UL)             /*!< AGTW1CAWUPEN (Bitfield-Mask: 0x01)                    */
#define ICU_WUPEN_AGT1UDWUPEN_Pos         (28UL)                    /*!< AGT1UDWUPEN (Bit 28)                                  */
#define ICU_WUPEN_AGT1UDWUPEN_Msk         (0x10000000UL)            /*!< AGT1UDWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_AGT1CAWUPEN_Pos         (29UL)                    /*!< AGT1CAWUPEN (Bit 29)                                  */
#define ICU_WUPEN_AGT1CAWUPEN_Msk         (0x20000000UL)            /*!< AGT1CAWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_AGT0CAWUPEN_Pos         (30UL)                    /*!< AGT0CAWUPEN (Bit 30)                                  */
#define ICU_WUPEN_AGT0CAWUPEN_Msk         (0x40000000UL)            /*!< AGT0CAWUPEN (Bitfield-Mask: 0x01)                     */
#define ICU_WUPEN_SOLDLWUPEN_Pos          (31UL)                    /*!< SOLDLWUPEN (Bit 31)                                   */
#define ICU_WUPEN_SOLDLWUPEN_Msk          (0x80000000UL)            /*!< SOLDLWUPEN (Bitfield-Mask: 0x01)                      */
/* ========================================================  SELSR0  ========================================================= */
/* ========================================================  DELSR0  ========================================================= */
#define ICU_DELSR0_DELS_Pos               (0UL)                     /*!< DELS (Bit 0)                                          */
#define ICU_DELSR0_DELS_Msk               (0xffUL)                  /*!< DELS (Bitfield-Mask: 0xff)                            */
#define ICU_DELSR0_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_DELSR0_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
/* ========================================================  DELSR1  ========================================================= */
#define ICU_DELSR1_DELS_Pos               (0UL)                     /*!< DELS (Bit 0)                                          */
#define ICU_DELSR1_DELS_Msk               (0xffUL)                  /*!< DELS (Bitfield-Mask: 0xff)                            */
#define ICU_DELSR1_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_DELSR1_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
/* ========================================================  DELSR2  ========================================================= */
#define ICU_DELSR2_DELS_Pos               (0UL)                     /*!< DELS (Bit 0)                                          */
#define ICU_DELSR2_DELS_Msk               (0xffUL)                  /*!< DELS (Bitfield-Mask: 0xff)                            */
#define ICU_DELSR2_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_DELSR2_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
/* ========================================================  DELSR3  ========================================================= */
#define ICU_DELSR3_DELS_Pos               (0UL)                     /*!< DELS (Bit 0)                                          */
#define ICU_DELSR3_DELS_Msk               (0xffUL)                  /*!< DELS (Bitfield-Mask: 0xff)                            */
#define ICU_DELSR3_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_DELSR3_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
/* ========================================================  IELSR0  ========================================================= */
#define ICU_IELSR0_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR0_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR0_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR0_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR0_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR0_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR1  ========================================================= */
#define ICU_IELSR1_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR1_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR1_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR1_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR1_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR1_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR2  ========================================================= */
#define ICU_IELSR2_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR2_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR2_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR2_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR2_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR2_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR3  ========================================================= */
#define ICU_IELSR3_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR3_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR3_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR3_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR3_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR3_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR4  ========================================================= */
#define ICU_IELSR4_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR4_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR4_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR4_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR4_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR4_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR5  ========================================================= */
#define ICU_IELSR5_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR5_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR5_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR5_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR5_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR5_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR6  ========================================================= */
#define ICU_IELSR6_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR6_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR6_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR6_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR6_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR6_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR7  ========================================================= */
#define ICU_IELSR7_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR7_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR7_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR7_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR7_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR7_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR8  ========================================================= */
#define ICU_IELSR8_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR8_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR8_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR8_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR8_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR8_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR9  ========================================================= */
#define ICU_IELSR9_IELS_Pos               (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR9_IELS_Msk               (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR9_IR_Pos                 (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR9_IR_Msk                 (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR9_DTCE_Pos               (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR9_DTCE_Msk               (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR10  ======================================================== */
#define ICU_IELSR10_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR10_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR10_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR10_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR10_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR10_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR11  ======================================================== */
#define ICU_IELSR11_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR11_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR11_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR11_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR11_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR11_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR12  ======================================================== */
#define ICU_IELSR12_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR12_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR12_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR12_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR12_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR12_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR13  ======================================================== */
#define ICU_IELSR13_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR13_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR13_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR13_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR13_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR13_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR14  ======================================================== */
#define ICU_IELSR14_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR14_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR14_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR14_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR14_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR14_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR15  ======================================================== */
#define ICU_IELSR15_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR15_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR15_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR15_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR15_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR15_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR16  ======================================================== */
#define ICU_IELSR16_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR16_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR16_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR16_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR16_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR16_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR17  ======================================================== */
#define ICU_IELSR17_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR17_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR17_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR17_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR17_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR17_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR18  ======================================================== */
#define ICU_IELSR18_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR18_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR18_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR18_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR18_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR18_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR19  ======================================================== */
#define ICU_IELSR19_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR19_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR19_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR19_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR19_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR19_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR20  ======================================================== */
#define ICU_IELSR20_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR20_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR20_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR20_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR20_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR20_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR21  ======================================================== */
#define ICU_IELSR21_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR21_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR21_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR21_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR21_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR21_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR22  ======================================================== */
#define ICU_IELSR22_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR22_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR22_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR22_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR22_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR22_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR23  ======================================================== */
#define ICU_IELSR23_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR23_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR23_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR23_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR23_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR23_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR24  ======================================================== */
#define ICU_IELSR24_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR24_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR24_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR24_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR24_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR24_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR25  ======================================================== */
#define ICU_IELSR25_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR25_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR25_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR25_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR25_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR25_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR26  ======================================================== */
#define ICU_IELSR26_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR26_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR26_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR26_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR26_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR26_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR27  ======================================================== */
#define ICU_IELSR27_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR27_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR27_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR27_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR27_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR27_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR28  ======================================================== */
#define ICU_IELSR28_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR28_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR28_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR28_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR28_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR28_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR29  ======================================================== */
#define ICU_IELSR29_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR29_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR29_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR29_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR29_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR29_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR30  ======================================================== */
#define ICU_IELSR30_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR30_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR30_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR30_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR30_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR30_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  IELSR31  ======================================================== */
#define ICU_IELSR31_IELS_Pos              (0UL)                     /*!< IELS (Bit 0)                                          */
#define ICU_IELSR31_IELS_Msk              (0x1fUL)                  /*!< IELS (Bitfield-Mask: 0x1f)                            */
#define ICU_IELSR31_IR_Pos                (16UL)                    /*!< IR (Bit 16)                                           */
#define ICU_IELSR31_IR_Msk                (0x10000UL)               /*!< IR (Bitfield-Mask: 0x01)                              */
#define ICU_IELSR31_DTCE_Pos              (24UL)                    /*!< DTCE (Bit 24)                                         */
#define ICU_IELSR31_DTCE_Msk              (0x1000000UL)             /*!< DTCE (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                            DBG                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  DBGSTR  ========================================================= */
#define DBG_DBGSTR_CDBGPWRUPREQ_Pos       (28UL)                    /*!< CDBGPWRUPREQ (Bit 28)                                 */
#define DBG_DBGSTR_CDBGPWRUPREQ_Msk       (0x10000000UL)            /*!< CDBGPWRUPREQ (Bitfield-Mask: 0x01)                    */
#define DBG_DBGSTR_CDBGPWRUPACK_Pos       (29UL)                    /*!< CDBGPWRUPACK (Bit 29)                                 */
#define DBG_DBGSTR_CDBGPWRUPACK_Msk       (0x20000000UL)            /*!< CDBGPWRUPACK (Bitfield-Mask: 0x01)                    */
/* =======================================================  DBGSTOPCR  ======================================================= */
#define DBG_DBGSTOPCR_DBGSTOP_IWDT_Pos    (0UL)                     /*!< DBGSTOP_IWDT (Bit 0)                                  */
#define DBG_DBGSTOPCR_DBGSTOP_IWDT_Msk    (0x1UL)                   /*!< DBGSTOP_IWDT (Bitfield-Mask: 0x01)                    */
#define DBG_DBGSTOPCR_DBGSTOP_WDT_Pos     (1UL)                     /*!< DBGSTOP_WDT (Bit 1)                                   */
#define DBG_DBGSTOPCR_DBGSTOP_WDT_Msk     (0x2UL)                   /*!< DBGSTOP_WDT (Bitfield-Mask: 0x01)                     */
#define DBG_DBGSTOPCR_DBGSTOP_LVD0_Pos    (16UL)                    /*!< DBGSTOP_LVD0 (Bit 16)                                 */
#define DBG_DBGSTOPCR_DBGSTOP_LVD0_Msk    (0x10000UL)               /*!< DBGSTOP_LVD0 (Bitfield-Mask: 0x01)                    */
#define DBG_DBGSTOPCR_DBGSTOP_LVD1_Pos    (17UL)                    /*!< DBGSTOP_LVD1 (Bit 17)                                 */
#define DBG_DBGSTOPCR_DBGSTOP_LVD1_Msk    (0x20000UL)               /*!< DBGSTOP_LVD1 (Bitfield-Mask: 0x01)                    */
#define DBG_DBGSTOPCR_DBGSTOP_LVDBAT_Pos  (18UL)                    /*!< DBGSTOP_LVDBAT (Bit 18)                               */
#define DBG_DBGSTOPCR_DBGSTOP_LVDBAT_Msk  (0x40000UL)               /*!< DBGSTOP_LVDBAT (Bitfield-Mask: 0x01)                  */


/* =========================================================================================================================== */
/* ================                                           SYSF                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  FLWT  ========================================================== */
#define SYSF_FLWT_FLWT_Pos                (0UL)                     /*!< FLWT (Bit 0)                                          */
#define SYSF_FLWT_FLWT_Msk                (0x7UL)                   /*!< FLWT (Bitfield-Mask: 0x07)                            */


/* =========================================================================================================================== */
/* ================                                           SYSC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  SBYCR  ========================================================= */
#define SYSC_SBYCR_SSBY_Pos               (15UL)                    /*!< SSBY (Bit 15)                                         */
#define SYSC_SBYCR_SSBY_Msk               (0x8000UL)                /*!< SSBY (Bitfield-Mask: 0x01)                            */
/* ========================================================  RAMSDCR  ======================================================== */
#define SYSC_RAMSDCR_RAMSD0_Pos           (0UL)                     /*!< RAMSD0 (Bit 0)                                        */
#define SYSC_RAMSDCR_RAMSD0_Msk           (0x1UL)                   /*!< RAMSD0 (Bitfield-Mask: 0x01)                          */
#define SYSC_RAMSDCR_RAMSD1_Pos           (1UL)                     /*!< RAMSD1 (Bit 1)                                        */
#define SYSC_RAMSDCR_RAMSD1_Msk           (0x2UL)                   /*!< RAMSD1 (Bitfield-Mask: 0x01)                          */
#define SYSC_RAMSDCR_RAMSD2_Pos           (2UL)                     /*!< RAMSD2 (Bit 2)                                        */
#define SYSC_RAMSDCR_RAMSD2_Msk           (0x4UL)                   /*!< RAMSD2 (Bitfield-Mask: 0x01)                          */
#define SYSC_RAMSDCR_RAMSD3_Pos           (3UL)                     /*!< RAMSD3 (Bit 3)                                        */
#define SYSC_RAMSDCR_RAMSD3_Msk           (0x8UL)                   /*!< RAMSD3 (Bitfield-Mask: 0x01)                          */
/* ========================================================  MSTPCRA  ======================================================== */
#define SYSC_MSTPCRA_MSTPA22_Pos          (22UL)                    /*!< MSTPA22 (Bit 22)                                      */
#define SYSC_MSTPCRA_MSTPA22_Msk          (0x400000UL)              /*!< MSTPA22 (Bitfield-Mask: 0x01)                         */
/* =======================================================  SCKDIVCR  ======================================================== */
#define SYSC_SCKDIVCR_PCKB_Pos            (8UL)                     /*!< PCKB (Bit 8)                                          */
#define SYSC_SCKDIVCR_PCKB_Msk            (0x700UL)                 /*!< PCKB (Bitfield-Mask: 0x07)                            */
#define SYSC_SCKDIVCR_ICK_Pos             (24UL)                    /*!< ICK (Bit 24)                                          */
#define SYSC_SCKDIVCR_ICK_Msk             (0x7000000UL)             /*!< ICK (Bitfield-Mask: 0x07)                             */
/* ========================================================  SCKSCR  ========================================================= */
#define SYSC_SCKSCR_CKSEL_Pos             (0UL)                     /*!< CKSEL (Bit 0)                                         */
#define SYSC_SCKSCR_CKSEL_Msk             (0x7UL)                   /*!< CKSEL (Bitfield-Mask: 0x07)                           */
/* ========================================================  MOSCCR  ========================================================= */
#define SYSC_MOSCCR_MOSTP_Pos             (0UL)                     /*!< MOSTP (Bit 0)                                         */
#define SYSC_MOSCCR_MOSTP_Msk             (0x1UL)                   /*!< MOSTP (Bitfield-Mask: 0x01)                           */
/* ========================================================  HOCOCR  ========================================================= */
#define SYSC_HOCOCR_HCSTP_Pos             (0UL)                     /*!< HCSTP (Bit 0)                                         */
#define SYSC_HOCOCR_HCSTP_Msk             (0x1UL)                   /*!< HCSTP (Bitfield-Mask: 0x01)                           */
/* ========================================================  HOCOMCR  ======================================================== */
#define SYSC_HOCOMCR_HCFRQ_Pos            (0UL)                     /*!< HCFRQ (Bit 0)                                         */
#define SYSC_HOCOMCR_HCFRQ_Msk            (0x3UL)                   /*!< HCFRQ (Bitfield-Mask: 0x03)                           */
/* ========================================================  MOCOCR  ========================================================= */
#define SYSC_MOCOCR_MCSTP_Pos             (0UL)                     /*!< MCSTP (Bit 0)                                         */
#define SYSC_MOCOCR_MCSTP_Msk             (0x1UL)                   /*!< MCSTP (Bitfield-Mask: 0x01)                           */
/* ========================================================  FLLCR1  ========================================================= */
#define SYSC_FLLCR1_FLLEN_Pos             (0UL)                     /*!< FLLEN (Bit 0)                                         */
#define SYSC_FLLCR1_FLLEN_Msk             (0x1UL)                   /*!< FLLEN (Bitfield-Mask: 0x01)                           */
/* =========================================================  OSCSF  ========================================================= */
#define SYSC_OSCSF_HOCOSF_Pos             (0UL)                     /*!< HOCOSF (Bit 0)                                        */
#define SYSC_OSCSF_HOCOSF_Msk             (0x1UL)                   /*!< HOCOSF (Bitfield-Mask: 0x01)                          */
#define SYSC_OSCSF_MOSCSF_Pos             (3UL)                     /*!< MOSCSF (Bit 3)                                        */
#define SYSC_OSCSF_MOSCSF_Msk             (0x8UL)                   /*!< MOSCSF (Bitfield-Mask: 0x01)                          */
/* ========================================================  CKO32CR  ======================================================== */
#define SYSC_CKO32CR_CKO32EN_Pos          (7UL)                     /*!< CKO32EN (Bit 7)                                       */
#define SYSC_CKO32CR_CKO32EN_Msk          (0x80UL)                  /*!< CKO32EN (Bitfield-Mask: 0x01)                         */
/* =========================================================  CKOCR  ========================================================= */
#define SYSC_CKOCR_CKOSEL_Pos             (0UL)                     /*!< CKOSEL (Bit 0)                                        */
#define SYSC_CKOCR_CKOSEL_Msk             (0x7UL)                   /*!< CKOSEL (Bitfield-Mask: 0x07)                          */
#define SYSC_CKOCR_CKODIV_Pos             (4UL)                     /*!< CKODIV (Bit 4)                                        */
#define SYSC_CKOCR_CKODIV_Msk             (0x70UL)                  /*!< CKODIV (Bitfield-Mask: 0x07)                          */
#define SYSC_CKOCR_CKOEN_Pos              (7UL)                     /*!< CKOEN (Bit 7)                                         */
#define SYSC_CKOCR_CKOEN_Msk              (0x80UL)                  /*!< CKOEN (Bitfield-Mask: 0x01)                           */
/* ========================================================  OSTDCR  ========================================================= */
#define SYSC_OSTDCR_OSTDIE_Pos            (0UL)                     /*!< OSTDIE (Bit 0)                                        */
#define SYSC_OSTDCR_OSTDIE_Msk            (0x1UL)                   /*!< OSTDIE (Bitfield-Mask: 0x01)                          */
#define SYSC_OSTDCR_OSTDDIVSEL_Pos        (4UL)                     /*!< OSTDDIVSEL (Bit 4)                                    */
#define SYSC_OSTDCR_OSTDDIVSEL_Msk        (0x10UL)                  /*!< OSTDDIVSEL (Bitfield-Mask: 0x01)                      */
#define SYSC_OSTDCR_OSTDE_Pos             (7UL)                     /*!< OSTDE (Bit 7)                                         */
#define SYSC_OSTDCR_OSTDE_Msk             (0x80UL)                  /*!< OSTDE (Bitfield-Mask: 0x01)                           */
/* ========================================================  OSTDSR  ========================================================= */
#define SYSC_OSTDSR_OSTDF_Pos             (0UL)                     /*!< OSTDF (Bit 0)                                         */
#define SYSC_OSTDSR_OSTDF_Msk             (0x1UL)                   /*!< OSTDF (Bitfield-Mask: 0x01)                           */
/* =========================================================  SNZCR  ========================================================= */
#define SYSC_SNZCR_RXDREQEN_Pos           (0UL)                     /*!< RXDREQEN (Bit 0)                                      */
#define SYSC_SNZCR_RXDREQEN_Msk           (0x1UL)                   /*!< RXDREQEN (Bitfield-Mask: 0x01)                        */
#define SYSC_SNZCR_SNZDTCEN_Pos           (1UL)                     /*!< SNZDTCEN (Bit 1)                                      */
#define SYSC_SNZCR_SNZDTCEN_Msk           (0x2UL)                   /*!< SNZDTCEN (Bitfield-Mask: 0x01)                        */
#define SYSC_SNZCR_SNZE_Pos               (7UL)                     /*!< SNZE (Bit 7)                                          */
#define SYSC_SNZCR_SNZE_Msk               (0x80UL)                  /*!< SNZE (Bitfield-Mask: 0x01)                            */
/* =======================================================  SNZEDCR0  ======================================================== */
#define SYSC_SNZEDCR0_AGTUNFED_Pos        (0UL)                     /*!< AGTUNFED (Bit 0)                                      */
#define SYSC_SNZEDCR0_AGTUNFED_Msk        (0x1UL)                   /*!< AGTUNFED (Bitfield-Mask: 0x01)                        */
#define SYSC_SNZEDCR0_DTCZRED_Pos         (1UL)                     /*!< DTCZRED (Bit 1)                                       */
#define SYSC_SNZEDCR0_DTCZRED_Msk         (0x2UL)                   /*!< DTCZRED (Bitfield-Mask: 0x01)                         */
#define SYSC_SNZEDCR0_DTCNZRED_Pos        (2UL)                     /*!< DTCNZRED (Bit 2)                                      */
#define SYSC_SNZEDCR0_DTCNZRED_Msk        (0x4UL)                   /*!< DTCNZRED (Bitfield-Mask: 0x01)                        */
#define SYSC_SNZEDCR0_AD0MATED_Pos        (3UL)                     /*!< AD0MATED (Bit 3)                                      */
#define SYSC_SNZEDCR0_AD0MATED_Msk        (0x8UL)                   /*!< AD0MATED (Bitfield-Mask: 0x01)                        */
#define SYSC_SNZEDCR0_AD0UMTED_Pos        (4UL)                     /*!< AD0UMTED (Bit 4)                                      */
#define SYSC_SNZEDCR0_AD0UMTED_Msk        (0x10UL)                  /*!< AD0UMTED (Bitfield-Mask: 0x01)                        */
#define SYSC_SNZEDCR0_SCI0UMTED_Pos       (7UL)                     /*!< SCI0UMTED (Bit 7)                                     */
#define SYSC_SNZEDCR0_SCI0UMTED_Msk       (0x80UL)                  /*!< SCI0UMTED (Bitfield-Mask: 0x01)                       */
/* =======================================================  SNZREQCR0  ======================================================= */
#define SYSC_SNZREQCR0_SNZREQEN0_Pos      (0UL)                     /*!< SNZREQEN0 (Bit 0)                                     */
#define SYSC_SNZREQCR0_SNZREQEN0_Msk      (0x1UL)                   /*!< SNZREQEN0 (Bitfield-Mask: 0x01)                       */
#define SYSC_SNZREQCR0_SNZREQEN1_Pos      (1UL)                     /*!< SNZREQEN1 (Bit 1)                                     */
#define SYSC_SNZREQCR0_SNZREQEN1_Msk      (0x2UL)                   /*!< SNZREQEN1 (Bitfield-Mask: 0x01)                       */
#define SYSC_SNZREQCR0_SNZREQEN2_Pos      (2UL)                     /*!< SNZREQEN2 (Bit 2)                                     */
#define SYSC_SNZREQCR0_SNZREQEN2_Msk      (0x4UL)                   /*!< SNZREQEN2 (Bitfield-Mask: 0x01)                       */
#define SYSC_SNZREQCR0_SNZREQEN3_Pos      (3UL)                     /*!< SNZREQEN3 (Bit 3)                                     */
#define SYSC_SNZREQCR0_SNZREQEN3_Msk      (0x8UL)                   /*!< SNZREQEN3 (Bitfield-Mask: 0x01)                       */
#define SYSC_SNZREQCR0_SNZREQEN4_Pos      (4UL)                     /*!< SNZREQEN4 (Bit 4)                                     */
#define SYSC_SNZREQCR0_SNZREQEN4_Msk      (0x10UL)                  /*!< SNZREQEN4 (Bitfield-Mask: 0x01)                       */
#define SYSC_SNZREQCR0_SNZREQEN5_Pos      (5UL)                     /*!< SNZREQEN5 (Bit 5)                                     */
#define SYSC_SNZREQCR0_SNZREQEN5_Msk      (0x20UL)                  /*!< SNZREQEN5 (Bitfield-Mask: 0x01)                       */
#define SYSC_SNZREQCR0_SNZREQEN6_Pos      (6UL)                     /*!< SNZREQEN6 (Bit 6)                                     */
#define SYSC_SNZREQCR0_SNZREQEN6_Msk      (0x40UL)                  /*!< SNZREQEN6 (Bitfield-Mask: 0x01)                       */
#define SYSC_SNZREQCR0_SNZREQEN7_Pos      (7UL)                     /*!< SNZREQEN7 (Bit 7)                                     */
#define SYSC_SNZREQCR0_SNZREQEN7_Msk      (0x80UL)                  /*!< SNZREQEN7 (Bitfield-Mask: 0x01)                       */
#define SYSC_SNZREQCR0_SNZREQEN17_Pos     (17UL)                    /*!< SNZREQEN17 (Bit 17)                                   */
#define SYSC_SNZREQCR0_SNZREQEN17_Msk     (0x20000UL)               /*!< SNZREQEN17 (Bitfield-Mask: 0x01)                      */
#define SYSC_SNZREQCR0_SNZREQEN23_Pos     (23UL)                    /*!< SNZREQEN23 (Bit 23)                                   */
#define SYSC_SNZREQCR0_SNZREQEN23_Msk     (0x800000UL)              /*!< SNZREQEN23 (Bitfield-Mask: 0x01)                      */
#define SYSC_SNZREQCR0_SNZREQEN24_Pos     (24UL)                    /*!< SNZREQEN24 (Bit 24)                                   */
#define SYSC_SNZREQCR0_SNZREQEN24_Msk     (0x1000000UL)             /*!< SNZREQEN24 (Bitfield-Mask: 0x01)                      */
#define SYSC_SNZREQCR0_SNZREQEN25_Pos     (25UL)                    /*!< SNZREQEN25 (Bit 25)                                   */
#define SYSC_SNZREQCR0_SNZREQEN25_Msk     (0x2000000UL)             /*!< SNZREQEN25 (Bitfield-Mask: 0x01)                      */
#define SYSC_SNZREQCR0_SNZREQEN28_Pos     (28UL)                    /*!< SNZREQEN28 (Bit 28)                                   */
#define SYSC_SNZREQCR0_SNZREQEN28_Msk     (0x10000000UL)            /*!< SNZREQEN28 (Bitfield-Mask: 0x01)                      */
#define SYSC_SNZREQCR0_SNZREQEN29_Pos     (29UL)                    /*!< SNZREQEN29 (Bit 29)                                   */
#define SYSC_SNZREQCR0_SNZREQEN29_Msk     (0x20000000UL)            /*!< SNZREQEN29 (Bitfield-Mask: 0x01)                      */
#define SYSC_SNZREQCR0_SNZREQEN30_Pos     (30UL)                    /*!< SNZREQEN30 (Bit 30)                                   */
#define SYSC_SNZREQCR0_SNZREQEN30_Msk     (0x40000000UL)            /*!< SNZREQEN30 (Bitfield-Mask: 0x01)                      */
/* =========================================================  OPCCR  ========================================================= */
#define SYSC_OPCCR_OPCM_Pos               (0UL)                     /*!< OPCM (Bit 0)                                          */
#define SYSC_OPCCR_OPCM_Msk               (0x3UL)                   /*!< OPCM (Bitfield-Mask: 0x03)                            */
#define SYSC_OPCCR_OPCMTSF_Pos            (4UL)                     /*!< OPCMTSF (Bit 4)                                       */
#define SYSC_OPCCR_OPCMTSF_Msk            (0x10UL)                  /*!< OPCMTSF (Bitfield-Mask: 0x01)                         */
/* =======================================================  MOSCWTCR  ======================================================== */
#define SYSC_MOSCWTCR_MSTS_Pos            (0UL)                     /*!< MSTS (Bit 0)                                          */
#define SYSC_MOSCWTCR_MSTS_Msk            (0xfUL)                   /*!< MSTS (Bitfield-Mask: 0x0f)                            */
/* ========================================================  RSTSR1  ========================================================= */
#define SYSC_RSTSR1_IWDTRF_Pos            (0UL)                     /*!< IWDTRF (Bit 0)                                        */
#define SYSC_RSTSR1_IWDTRF_Msk            (0x1UL)                   /*!< IWDTRF (Bitfield-Mask: 0x01)                          */
#define SYSC_RSTSR1_WDTRF_Pos             (1UL)                     /*!< WDTRF (Bit 1)                                         */
#define SYSC_RSTSR1_WDTRF_Msk             (0x2UL)                   /*!< WDTRF (Bitfield-Mask: 0x01)                           */
#define SYSC_RSTSR1_SWRF_Pos              (2UL)                     /*!< SWRF (Bit 2)                                          */
#define SYSC_RSTSR1_SWRF_Msk              (0x4UL)                   /*!< SWRF (Bitfield-Mask: 0x01)                            */
#define SYSC_RSTSR1_BUSSRF_Pos            (10UL)                    /*!< BUSSRF (Bit 10)                                       */
#define SYSC_RSTSR1_BUSSRF_Msk            (0x400UL)                 /*!< BUSSRF (Bitfield-Mask: 0x01)                          */
#define SYSC_RSTSR1_BUSMRF_Pos            (11UL)                    /*!< BUSMRF (Bit 11)                                       */
#define SYSC_RSTSR1_BUSMRF_Msk            (0x800UL)                 /*!< BUSMRF (Bitfield-Mask: 0x01)                          */
#define SYSC_RSTSR1_SPERF_Pos             (12UL)                    /*!< SPERF (Bit 12)                                        */
#define SYSC_RSTSR1_SPERF_Msk             (0x1000UL)                /*!< SPERF (Bitfield-Mask: 0x01)                           */
/* ========================================================  LVD1CR1  ======================================================== */
#define SYSC_LVD1CR1_IDTSEL_Pos           (0UL)                     /*!< IDTSEL (Bit 0)                                        */
#define SYSC_LVD1CR1_IDTSEL_Msk           (0x3UL)                   /*!< IDTSEL (Bitfield-Mask: 0x03)                          */
#define SYSC_LVD1CR1_IRQSEL_Pos           (2UL)                     /*!< IRQSEL (Bit 2)                                        */
#define SYSC_LVD1CR1_IRQSEL_Msk           (0x4UL)                   /*!< IRQSEL (Bitfield-Mask: 0x01)                          */
/* ========================================================  LVD1SR  ========================================================= */
#define SYSC_LVD1SR_DET_Pos               (0UL)                     /*!< DET (Bit 0)                                           */
#define SYSC_LVD1SR_DET_Msk               (0x1UL)                   /*!< DET (Bitfield-Mask: 0x01)                             */
#define SYSC_LVD1SR_MON_Pos               (1UL)                     /*!< MON (Bit 1)                                           */
#define SYSC_LVD1SR_MON_Msk               (0x2UL)                   /*!< MON (Bitfield-Mask: 0x01)                             */
/* =======================================================  LVDBATCR1  ======================================================= */
#define SYSC_LVDBATCR1_IDTSEL_Pos         (0UL)                     /*!< IDTSEL (Bit 0)                                        */
#define SYSC_LVDBATCR1_IDTSEL_Msk         (0x3UL)                   /*!< IDTSEL (Bitfield-Mask: 0x03)                          */
#define SYSC_LVDBATCR1_IRQSEL_Pos         (2UL)                     /*!< IRQSEL (Bit 2)                                        */
#define SYSC_LVDBATCR1_IRQSEL_Msk         (0x4UL)                   /*!< IRQSEL (Bitfield-Mask: 0x01)                          */
/* =======================================================  LVDBATSR  ======================================================== */
#define SYSC_LVDBATSR_DET_Pos             (0UL)                     /*!< DET (Bit 0)                                           */
#define SYSC_LVDBATSR_DET_Msk             (0x1UL)                   /*!< DET (Bitfield-Mask: 0x01)                             */
#define SYSC_LVDBATSR_MON_Pos             (1UL)                     /*!< MON (Bit 1)                                           */
#define SYSC_LVDBATSR_MON_Msk             (0x2UL)                   /*!< MON (Bitfield-Mask: 0x01)                             */
/* ========================================================  FSTPCR  ========================================================= */
#define SYSC_FSTPCR_DBGSTP_Pos            (7UL)                     /*!< DBGSTP (Bit 7)                                        */
#define SYSC_FSTPCR_DBGSTP_Msk            (0x80UL)                  /*!< DBGSTP (Bitfield-Mask: 0x01)                          */
/* =========================================================  PRCR  ========================================================== */
#define SYSC_PRCR_PRC0_Pos                (0UL)                     /*!< PRC0 (Bit 0)                                          */
#define SYSC_PRCR_PRC0_Msk                (0x1UL)                   /*!< PRC0 (Bitfield-Mask: 0x01)                            */
#define SYSC_PRCR_PRC1_Pos                (1UL)                     /*!< PRC1 (Bit 1)                                          */
#define SYSC_PRCR_PRC1_Msk                (0x2UL)                   /*!< PRC1 (Bitfield-Mask: 0x01)                            */
#define SYSC_PRCR_PRC3_Pos                (3UL)                     /*!< PRC3 (Bit 3)                                          */
#define SYSC_PRCR_PRC3_Msk                (0x8UL)                   /*!< PRC3 (Bitfield-Mask: 0x01)                            */
#define SYSC_PRCR_PRC4_Pos                (4UL)                     /*!< PRC4 (Bit 4)                                          */
#define SYSC_PRCR_PRC4_Msk                (0x10UL)                  /*!< PRC4 (Bitfield-Mask: 0x01)                            */
#define SYSC_PRCR_PRKEY_Pos               (8UL)                     /*!< PRKEY (Bit 8)                                         */
#define SYSC_PRCR_PRKEY_Msk               (0xff00UL)                /*!< PRKEY (Bitfield-Mask: 0xff)                           */
/* ========================================================  DPSBYCR  ======================================================== */
#define SYSC_DPSBYCR_IOKEEP_Pos           (6UL)                     /*!< IOKEEP (Bit 6)                                        */
#define SYSC_DPSBYCR_IOKEEP_Msk           (0x40UL)                  /*!< IOKEEP (Bitfield-Mask: 0x01)                          */
#define SYSC_DPSBYCR_DPSBY_Pos            (7UL)                     /*!< DPSBY (Bit 7)                                         */
#define SYSC_DPSBYCR_DPSBY_Msk            (0x80UL)                  /*!< DPSBY (Bitfield-Mask: 0x01)                           */
/* ========================================================  DPSIER0  ======================================================== */
#define SYSC_DPSIER0_DIRQ0E_Pos           (0UL)                     /*!< DIRQ0E (Bit 0)                                        */
#define SYSC_DPSIER0_DIRQ0E_Msk           (0x1UL)                   /*!< DIRQ0E (Bitfield-Mask: 0x01)                          */
#define SYSC_DPSIER0_DIRQ1E_Pos           (1UL)                     /*!< DIRQ1E (Bit 1)                                        */
#define SYSC_DPSIER0_DIRQ1E_Msk           (0x2UL)                   /*!< DIRQ1E (Bitfield-Mask: 0x01)                          */
#define SYSC_DPSIER0_DIRQ2E_Pos           (2UL)                     /*!< DIRQ2E (Bit 2)                                        */
#define SYSC_DPSIER0_DIRQ2E_Msk           (0x4UL)                   /*!< DIRQ2E (Bitfield-Mask: 0x01)                          */
#define SYSC_DPSIER0_DIRQ3E_Pos           (3UL)                     /*!< DIRQ3E (Bit 3)                                        */
#define SYSC_DPSIER0_DIRQ3E_Msk           (0x8UL)                   /*!< DIRQ3E (Bitfield-Mask: 0x01)                          */
/* ========================================================  DPSIER1  ======================================================== */
#define SYSC_DPSIER1_DLVD1IE_Pos          (0UL)                     /*!< DLVD1IE (Bit 0)                                       */
#define SYSC_DPSIER1_DLVD1IE_Msk          (0x1UL)                   /*!< DLVD1IE (Bitfield-Mask: 0x01)                         */
#define SYSC_DPSIER1_DLVDBATIE_Pos        (1UL)                     /*!< DLVDBATIE (Bit 1)                                     */
#define SYSC_DPSIER1_DLVDBATIE_Msk        (0x2UL)                   /*!< DLVDBATIE (Bitfield-Mask: 0x01)                       */
#define SYSC_DPSIER1_DRTCIIE_Pos          (2UL)                     /*!< DRTCIIE (Bit 2)                                       */
#define SYSC_DPSIER1_DRTCIIE_Msk          (0x4UL)                   /*!< DRTCIIE (Bitfield-Mask: 0x01)                         */
#define SYSC_DPSIER1_DRTCAIE_Pos          (3UL)                     /*!< DRTCAIE (Bit 3)                                       */
#define SYSC_DPSIER1_DRTCAIE_Msk          (0x8UL)                   /*!< DRTCAIE (Bitfield-Mask: 0x01)                         */
#define SYSC_DPSIER1_DNMIE_Pos            (4UL)                     /*!< DNMIE (Bit 4)                                         */
#define SYSC_DPSIER1_DNMIE_Msk            (0x10UL)                  /*!< DNMIE (Bitfield-Mask: 0x01)                           */
#define SYSC_DPSIER1_DCCCIE_Pos           (5UL)                     /*!< DCCCIE (Bit 5)                                        */
#define SYSC_DPSIER1_DCCCIE_Msk           (0x20UL)                  /*!< DCCCIE (Bitfield-Mask: 0x01)                          */
/* ========================================================  DPSIFR0  ======================================================== */
#define SYSC_DPSIFR0_DIRQ0E_Pos           (0UL)                     /*!< DIRQ0E (Bit 0)                                        */
#define SYSC_DPSIFR0_DIRQ0E_Msk           (0x1UL)                   /*!< DIRQ0E (Bitfield-Mask: 0x01)                          */
#define SYSC_DPSIFR0_DIRQ1E_Pos           (1UL)                     /*!< DIRQ1E (Bit 1)                                        */
#define SYSC_DPSIFR0_DIRQ1E_Msk           (0x2UL)                   /*!< DIRQ1E (Bitfield-Mask: 0x01)                          */
#define SYSC_DPSIFR0_DIRQ2E_Pos           (2UL)                     /*!< DIRQ2E (Bit 2)                                        */
#define SYSC_DPSIFR0_DIRQ2E_Msk           (0x4UL)                   /*!< DIRQ2E (Bitfield-Mask: 0x01)                          */
#define SYSC_DPSIFR0_DIRQ3E_Pos           (3UL)                     /*!< DIRQ3E (Bit 3)                                        */
#define SYSC_DPSIFR0_DIRQ3E_Msk           (0x8UL)                   /*!< DIRQ3E (Bitfield-Mask: 0x01)                          */
/* ========================================================  DPSIFR1  ======================================================== */
#define SYSC_DPSIFR1_DLVD1IF_Pos          (0UL)                     /*!< DLVD1IF (Bit 0)                                       */
#define SYSC_DPSIFR1_DLVD1IF_Msk          (0x1UL)                   /*!< DLVD1IF (Bitfield-Mask: 0x01)                         */
#define SYSC_DPSIFR1_DLVDBATIF_Pos        (1UL)                     /*!< DLVDBATIF (Bit 1)                                     */
#define SYSC_DPSIFR1_DLVDBATIF_Msk        (0x2UL)                   /*!< DLVDBATIF (Bitfield-Mask: 0x01)                       */
#define SYSC_DPSIFR1_DRTCIIF_Pos          (2UL)                     /*!< DRTCIIF (Bit 2)                                       */
#define SYSC_DPSIFR1_DRTCIIF_Msk          (0x4UL)                   /*!< DRTCIIF (Bitfield-Mask: 0x01)                         */
#define SYSC_DPSIFR1_DRTCAIF_Pos          (3UL)                     /*!< DRTCAIF (Bit 3)                                       */
#define SYSC_DPSIFR1_DRTCAIF_Msk          (0x8UL)                   /*!< DRTCAIF (Bitfield-Mask: 0x01)                         */
#define SYSC_DPSIFR1_DNMIF_Pos            (4UL)                     /*!< DNMIF (Bit 4)                                         */
#define SYSC_DPSIFR1_DNMIF_Msk            (0x10UL)                  /*!< DNMIF (Bitfield-Mask: 0x01)                           */
#define SYSC_DPSIFR1_DCCCIF_Pos           (5UL)                     /*!< DCCCIF (Bit 5)                                        */
#define SYSC_DPSIFR1_DCCCIF_Msk           (0x20UL)                  /*!< DCCCIF (Bitfield-Mask: 0x01)                          */
/* =======================================================  DPSIEGR0  ======================================================== */
#define SYSC_DPSIEGR0_DIRQ0EG_Pos         (0UL)                     /*!< DIRQ0EG (Bit 0)                                       */
#define SYSC_DPSIEGR0_DIRQ0EG_Msk         (0x1UL)                   /*!< DIRQ0EG (Bitfield-Mask: 0x01)                         */
#define SYSC_DPSIEGR0_DIRQ1EG_Pos         (1UL)                     /*!< DIRQ1EG (Bit 1)                                       */
#define SYSC_DPSIEGR0_DIRQ1EG_Msk         (0x2UL)                   /*!< DIRQ1EG (Bitfield-Mask: 0x01)                         */
#define SYSC_DPSIEGR0_DIRQ2EG_Pos         (2UL)                     /*!< DIRQ2EG (Bit 2)                                       */
#define SYSC_DPSIEGR0_DIRQ2EG_Msk         (0x4UL)                   /*!< DIRQ2EG (Bitfield-Mask: 0x01)                         */
#define SYSC_DPSIEGR0_DIRQ3EG_Pos         (3UL)                     /*!< DIRQ3EG (Bit 3)                                       */
#define SYSC_DPSIEGR0_DIRQ3EG_Msk         (0x8UL)                   /*!< DIRQ3EG (Bitfield-Mask: 0x01)                         */
/* =======================================================  DPSIEGR1  ======================================================== */
#define SYSC_DPSIEGR1_DLVD1EG_Pos         (0UL)                     /*!< DLVD1EG (Bit 0)                                       */
#define SYSC_DPSIEGR1_DLVD1EG_Msk         (0x1UL)                   /*!< DLVD1EG (Bitfield-Mask: 0x01)                         */
#define SYSC_DPSIEGR1_DLVDBATEG_Pos       (1UL)                     /*!< DLVDBATEG (Bit 1)                                     */
#define SYSC_DPSIEGR1_DLVDBATEG_Msk       (0x2UL)                   /*!< DLVDBATEG (Bitfield-Mask: 0x01)                       */
#define SYSC_DPSIEGR1_DNMIEG_Pos          (4UL)                     /*!< DNMIEG (Bit 4)                                        */
#define SYSC_DPSIEGR1_DNMIEG_Msk          (0x10UL)                  /*!< DNMIEG (Bitfield-Mask: 0x01)                          */
/* ========================================================  SYOCDCR  ======================================================== */
#define SYSC_SYOCDCR_DOCDF_Pos            (0UL)                     /*!< DOCDF (Bit 0)                                         */
#define SYSC_SYOCDCR_DOCDF_Msk            (0x1UL)                   /*!< DOCDF (Bitfield-Mask: 0x01)                           */
#define SYSC_SYOCDCR_DBGEN_Pos            (7UL)                     /*!< DBGEN (Bit 7)                                         */
#define SYSC_SYOCDCR_DBGEN_Msk            (0x80UL)                  /*!< DBGEN (Bitfield-Mask: 0x01)                           */
/* ========================================================  RSTSR0  ========================================================= */
#define SYSC_RSTSR0_PORF_Pos              (0UL)                     /*!< PORF (Bit 0)                                          */
#define SYSC_RSTSR0_PORF_Msk              (0x1UL)                   /*!< PORF (Bitfield-Mask: 0x01)                            */
#define SYSC_RSTSR0_LVD0RF_Pos            (1UL)                     /*!< LVD0RF (Bit 1)                                        */
#define SYSC_RSTSR0_LVD0RF_Msk            (0x2UL)                   /*!< LVD0RF (Bitfield-Mask: 0x01)                          */
#define SYSC_RSTSR0_LVD1RF_Pos            (2UL)                     /*!< LVD1RF (Bit 2)                                        */
#define SYSC_RSTSR0_LVD1RF_Msk            (0x4UL)                   /*!< LVD1RF (Bitfield-Mask: 0x01)                          */
#define SYSC_RSTSR0_LVDBATRF_Pos          (3UL)                     /*!< LVDBATRF (Bit 3)                                      */
#define SYSC_RSTSR0_LVDBATRF_Msk          (0x8UL)                   /*!< LVDBATRF (Bitfield-Mask: 0x01)                        */
#define SYSC_RSTSR0_DPSRSTF_Pos           (7UL)                     /*!< DPSRSTF (Bit 7)                                       */
#define SYSC_RSTSR0_DPSRSTF_Msk           (0x80UL)                  /*!< DPSRSTF (Bitfield-Mask: 0x01)                         */
/* ========================================================  RSTSR2  ========================================================= */
#define SYSC_RSTSR2_CWSF_Pos              (0UL)                     /*!< CWSF (Bit 0)                                          */
#define SYSC_RSTSR2_CWSF_Msk              (0x1UL)                   /*!< CWSF (Bitfield-Mask: 0x01)                            */
/* =========================================================  MOMCR  ========================================================= */
#define SYSC_MOMCR_MODRV_Pos              (3UL)                     /*!< MODRV (Bit 3)                                         */
#define SYSC_MOMCR_MODRV_Msk              (0x38UL)                  /*!< MODRV (Bitfield-Mask: 0x07)                           */
#define SYSC_MOMCR_MOSEL_Pos              (6UL)                     /*!< MOSEL (Bit 6)                                         */
#define SYSC_MOMCR_MOSEL_Msk              (0x40UL)                  /*!< MOSEL (Bitfield-Mask: 0x01)                           */
#define SYSC_MOMCR_OSCLPEN_Pos            (7UL)                     /*!< OSCLPEN (Bit 7)                                       */
#define SYSC_MOMCR_OSCLPEN_Msk            (0x80UL)                  /*!< OSCLPEN (Bitfield-Mask: 0x01)                         */
/* ========================================================  FWEPROR  ======================================================== */
#define SYSC_FWEPROR_FLWE_Pos             (0UL)                     /*!< FLWE (Bit 0)                                          */
#define SYSC_FWEPROR_FLWE_Msk             (0x3UL)                   /*!< FLWE (Bitfield-Mask: 0x03)                            */
/* ========================================================  LVCMPCR  ======================================================== */
#define SYSC_LVCMPCR_LVD1E_Pos            (5UL)                     /*!< LVD1E (Bit 5)                                         */
#define SYSC_LVCMPCR_LVD1E_Msk            (0x20UL)                  /*!< LVD1E (Bitfield-Mask: 0x01)                           */
#define SYSC_LVCMPCR_LVDBATE_Pos          (6UL)                     /*!< LVDBATE (Bit 6)                                       */
#define SYSC_LVCMPCR_LVDBATE_Msk          (0x40UL)                  /*!< LVDBATE (Bitfield-Mask: 0x01)                         */
/* ========================================================  LVDLVLR  ======================================================== */
#define SYSC_LVDLVLR_LVD1LVL_Pos          (0UL)                     /*!< LVD1LVL (Bit 0)                                       */
#define SYSC_LVDLVLR_LVD1LVL_Msk          (0x7UL)                   /*!< LVD1LVL (Bitfield-Mask: 0x07)                         */
#define SYSC_LVDLVLR_LVDBATLVL_Pos        (4UL)                     /*!< LVDBATLVL (Bit 4)                                     */
#define SYSC_LVDLVLR_LVDBATLVL_Msk        (0x70UL)                  /*!< LVDBATLVL (Bitfield-Mask: 0x07)                       */
/* ========================================================  LVD1CR0  ======================================================== */
#define SYSC_LVD1CR0_RIE_Pos              (0UL)                     /*!< RIE (Bit 0)                                           */
#define SYSC_LVD1CR0_RIE_Msk              (0x1UL)                   /*!< RIE (Bitfield-Mask: 0x01)                             */
#define SYSC_LVD1CR0_DFDIS_Pos            (1UL)                     /*!< DFDIS (Bit 1)                                         */
#define SYSC_LVD1CR0_DFDIS_Msk            (0x2UL)                   /*!< DFDIS (Bitfield-Mask: 0x01)                           */
#define SYSC_LVD1CR0_CMPE_Pos             (2UL)                     /*!< CMPE (Bit 2)                                          */
#define SYSC_LVD1CR0_CMPE_Msk             (0x4UL)                   /*!< CMPE (Bitfield-Mask: 0x01)                            */
#define SYSC_LVD1CR0_FSAMP_Pos            (4UL)                     /*!< FSAMP (Bit 4)                                         */
#define SYSC_LVD1CR0_FSAMP_Msk            (0x30UL)                  /*!< FSAMP (Bitfield-Mask: 0x03)                           */
#define SYSC_LVD1CR0_RI_Pos               (6UL)                     /*!< RI (Bit 6)                                            */
#define SYSC_LVD1CR0_RI_Msk               (0x40UL)                  /*!< RI (Bitfield-Mask: 0x01)                              */
#define SYSC_LVD1CR0_RN_Pos               (7UL)                     /*!< RN (Bit 7)                                            */
#define SYSC_LVD1CR0_RN_Msk               (0x80UL)                  /*!< RN (Bitfield-Mask: 0x01)                              */
/* =======================================================  LVDBATCR0  ======================================================= */
#define SYSC_LVDBATCR0_RIE_Pos            (0UL)                     /*!< RIE (Bit 0)                                           */
#define SYSC_LVDBATCR0_RIE_Msk            (0x1UL)                   /*!< RIE (Bitfield-Mask: 0x01)                             */
#define SYSC_LVDBATCR0_DFDIS_Pos          (1UL)                     /*!< DFDIS (Bit 1)                                         */
#define SYSC_LVDBATCR0_DFDIS_Msk          (0x2UL)                   /*!< DFDIS (Bitfield-Mask: 0x01)                           */
#define SYSC_LVDBATCR0_CMPE_Pos           (2UL)                     /*!< CMPE (Bit 2)                                          */
#define SYSC_LVDBATCR0_CMPE_Msk           (0x4UL)                   /*!< CMPE (Bitfield-Mask: 0x01)                            */
#define SYSC_LVDBATCR0_FSAMP_Pos          (4UL)                     /*!< FSAMP (Bit 4)                                         */
#define SYSC_LVDBATCR0_FSAMP_Msk          (0x30UL)                  /*!< FSAMP (Bitfield-Mask: 0x03)                           */
#define SYSC_LVDBATCR0_RI_Pos             (6UL)                     /*!< RI (Bit 6)                                            */
#define SYSC_LVDBATCR0_RI_Msk             (0x40UL)                  /*!< RI (Bitfield-Mask: 0x01)                              */
#define SYSC_LVDBATCR0_RN_Pos             (7UL)                     /*!< RN (Bit 7)                                            */
#define SYSC_LVDBATCR0_RN_Msk             (0x80UL)                  /*!< RN (Bitfield-Mask: 0x01)                              */
/* ========================================================  PWSTCR  ========================================================= */
#define SYSC_PWSTCR_PWST_Pos              (0UL)                     /*!< PWST (Bit 0)                                          */
#define SYSC_PWSTCR_PWST_Msk              (0x7UL)                   /*!< PWST (Bitfield-Mask: 0x07)                            */
#define SYSC_PWSTCR_SSBYPWG_Pos           (4UL)                     /*!< SSBYPWG (Bit 4)                                       */
#define SYSC_PWSTCR_SSBYPWG_Msk           (0x10UL)                  /*!< SSBYPWG (Bitfield-Mask: 0x01)                         */
#define SYSC_PWSTCR_SSBYVBB_Pos           (5UL)                     /*!< SSBYVBB (Bit 5)                                       */
#define SYSC_PWSTCR_SSBYVBB_Msk           (0x20UL)                  /*!< SSBYVBB (Bitfield-Mask: 0x01)                         */
#define SYSC_PWSTCR_SSBYACC_Pos           (6UL)                     /*!< SSBYACC (Bit 6)                                       */
#define SYSC_PWSTCR_SSBYACC_Msk           (0x40UL)                  /*!< SSBYACC (Bitfield-Mask: 0x01)                         */
/* =========================================================  PWSTF  ========================================================= */
#define SYSC_PWSTF_ALLPWONM_Pos           (0UL)                     /*!< ALLPWONM (Bit 0)                                      */
#define SYSC_PWSTF_ALLPWONM_Msk           (0x1UL)                   /*!< ALLPWONM (Bitfield-Mask: 0x01)                        */
#define SYSC_PWSTF_EXFPWONM_Pos           (1UL)                     /*!< EXFPWONM (Bit 1)                                      */
#define SYSC_PWSTF_EXFPWONM_Msk           (0x2UL)                   /*!< EXFPWONM (Bitfield-Mask: 0x01)                        */
#define SYSC_PWSTF_MINPWONM_Pos           (2UL)                     /*!< MINPWONM (Bit 2)                                      */
#define SYSC_PWSTF_MINPWONM_Msk           (0x4UL)                   /*!< MINPWONM (Bitfield-Mask: 0x01)                        */
#define SYSC_PWSTF_BOOSTM_Pos             (3UL)                     /*!< BOOSTM (Bit 3)                                        */
#define SYSC_PWSTF_BOOSTM_Msk             (0x8UL)                   /*!< BOOSTM (Bitfield-Mask: 0x01)                          */
#define SYSC_PWSTF_VBBM_Pos               (4UL)                     /*!< VBBM (Bit 4)                                          */
#define SYSC_PWSTF_VBBM_Msk               (0x10UL)                  /*!< VBBM (Bitfield-Mask: 0x01)                            */
/* =========================================================  LDOCR  ========================================================= */
#define SYSC_LDOCR_LDOCUT_Pos             (3UL)                     /*!< LDOCUT (Bit 3)                                        */
#define SYSC_LDOCR_LDOCUT_Msk             (0x8UL)                   /*!< LDOCUT (Bitfield-Mask: 0x01)                          */
/* =========================================================  VOCR  ========================================================== */
#define SYSC_VOCR_AV0CTL_Pos              (0UL)                     /*!< AV0CTL (Bit 0)                                        */
#define SYSC_VOCR_AV0CTL_Msk              (0x1UL)                   /*!< AV0CTL (Bitfield-Mask: 0x01)                          */
#define SYSC_VOCR_IV0CTL_Pos              (2UL)                     /*!< IV0CTL (Bit 2)                                        */
#define SYSC_VOCR_IV0CTL_Msk              (0x4UL)                   /*!< IV0CTL (Bitfield-Mask: 0x01)                          */
#define SYSC_VOCR_IV1CTL_Pos              (3UL)                     /*!< IV1CTL (Bit 3)                                        */
#define SYSC_VOCR_IV1CTL_Msk              (0x8UL)                   /*!< IV1CTL (Bitfield-Mask: 0x01)                          */
/* ========================================================  SOSCCR  ========================================================= */
#define SYSC_SOSCCR_SOSTP_Pos             (0UL)                     /*!< SOSTP (Bit 0)                                         */
#define SYSC_SOSCCR_SOSTP_Msk             (0x1UL)                   /*!< SOSTP (Bitfield-Mask: 0x01)                           */
/* =========================================================  SOMCR  ========================================================= */
#define SYSC_SOMCR_SODRV0_Pos             (0UL)                     /*!< SODRV0 (Bit 0)                                        */
#define SYSC_SOMCR_SODRV0_Msk             (0x1UL)                   /*!< SODRV0 (Bitfield-Mask: 0x01)                          */
#define SYSC_SOMCR_SODRV_Pos              (1UL)                     /*!< SODRV (Bit 1)                                         */
#define SYSC_SOMCR_SODRV_Msk              (0x2UL)                   /*!< SODRV (Bitfield-Mask: 0x01)                           */
#define SYSC_SOMCR_SONFSTP_Pos            (4UL)                     /*!< SONFSTP (Bit 4)                                       */
#define SYSC_SOMCR_SONFSTP_Msk            (0x10UL)                  /*!< SONFSTP (Bitfield-Mask: 0x01)                         */
/* ========================================================  LOCOCR  ========================================================= */
#define SYSC_LOCOCR_LCSTP_Pos             (0UL)                     /*!< LCSTP (Bit 0)                                         */
#define SYSC_LOCOCR_LCSTP_Msk             (0x1UL)                   /*!< LCSTP (Bitfield-Mask: 0x01)                           */
/* =========================================================  VBBCR  ========================================================= */
#define SYSC_VBBCR_CLKSEL_Pos             (0UL)                     /*!< CLKSEL (Bit 0)                                        */
#define SYSC_VBBCR_CLKSEL_Msk             (0x1UL)                   /*!< CLKSEL (Bitfield-Mask: 0x01)                          */
#define SYSC_VBBCR_IVDIS_Pos              (6UL)                     /*!< IVDIS (Bit 6)                                         */
#define SYSC_VBBCR_IVDIS_Msk              (0x40UL)                  /*!< IVDIS (Bitfield-Mask: 0x01)                           */
#define SYSC_VBBCR_VBBEN_Pos              (7UL)                     /*!< VBBEN (Bit 7)                                         */
#define SYSC_VBBCR_VBBEN_Msk              (0x80UL)                  /*!< VBBEN (Bitfield-Mask: 0x01)                           */
/* =========================================================  VBBST  ========================================================= */
#define SYSC_VBBST_VBBSTUP_Pos            (0UL)                     /*!< VBBSTUP (Bit 0)                                       */
#define SYSC_VBBST_VBBSTUP_Msk            (0x1UL)                   /*!< VBBSTUP (Bitfield-Mask: 0x01)                         */


/* =========================================================================================================================== */
/* ================                                            EHC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  EHCCR0  ========================================================= */
#define EHC_EHCCR0_CMPOUT_Pos             (13UL)                    /*!< CMPOUT (Bit 13)                                       */
#define EHC_EHCCR0_CMPOUT_Msk             (0x2000UL)                /*!< CMPOUT (Bitfield-Mask: 0x01)                          */
#define EHC_EHCCR0_ENOUT_Pos              (14UL)                    /*!< ENOUT (Bit 14)                                        */
#define EHC_EHCCR0_ENOUT_Msk              (0x4000UL)                /*!< ENOUT (Bitfield-Mask: 0x01)                           */
/* ========================================================  EHCCR1  ========================================================= */
#define EHC_EHCCR1_QUICKMODE_Pos          (0UL)                     /*!< QUICKMODE (Bit 0)                                     */
#define EHC_EHCCR1_QUICKMODE_Msk          (0x1UL)                   /*!< QUICKMODE (Bitfield-Mask: 0x01)                       */


/* =========================================================================================================================== */
/* ================                                           PORT0                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  PCNTR1  ========================================================= */
#define PORT0_PCNTR1_PDR00_Pos            (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT0_PCNTR1_PDR00_Msk            (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR01_Pos            (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT0_PCNTR1_PDR01_Msk            (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR02_Pos            (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT0_PCNTR1_PDR02_Msk            (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR03_Pos            (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT0_PCNTR1_PDR03_Msk            (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR04_Pos            (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT0_PCNTR1_PDR04_Msk            (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR05_Pos            (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT0_PCNTR1_PDR05_Msk            (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR06_Pos            (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT0_PCNTR1_PDR06_Msk            (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR07_Pos            (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT0_PCNTR1_PDR07_Msk            (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR08_Pos            (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT0_PCNTR1_PDR08_Msk            (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR09_Pos            (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT0_PCNTR1_PDR09_Msk            (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR10_Pos            (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT0_PCNTR1_PDR10_Msk            (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR11_Pos            (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT0_PCNTR1_PDR11_Msk            (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR12_Pos            (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT0_PCNTR1_PDR12_Msk            (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR13_Pos            (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT0_PCNTR1_PDR13_Msk            (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR14_Pos            (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT0_PCNTR1_PDR14_Msk            (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PDR15_Pos            (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT0_PCNTR1_PDR15_Msk            (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
#define PORT0_PCNTR1_PODR00_Pos           (16UL)                    /*!< PODR00 (Bit 16)                                       */
#define PORT0_PCNTR1_PODR00_Msk           (0x10000UL)               /*!< PODR00 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR01_Pos           (17UL)                    /*!< PODR01 (Bit 17)                                       */
#define PORT0_PCNTR1_PODR01_Msk           (0x20000UL)               /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR02_Pos           (18UL)                    /*!< PODR02 (Bit 18)                                       */
#define PORT0_PCNTR1_PODR02_Msk           (0x40000UL)               /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR03_Pos           (19UL)                    /*!< PODR03 (Bit 19)                                       */
#define PORT0_PCNTR1_PODR03_Msk           (0x80000UL)               /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR04_Pos           (20UL)                    /*!< PODR04 (Bit 20)                                       */
#define PORT0_PCNTR1_PODR04_Msk           (0x100000UL)              /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR05_Pos           (21UL)                    /*!< PODR05 (Bit 21)                                       */
#define PORT0_PCNTR1_PODR05_Msk           (0x200000UL)              /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR06_Pos           (22UL)                    /*!< PODR06 (Bit 22)                                       */
#define PORT0_PCNTR1_PODR06_Msk           (0x400000UL)              /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR07_Pos           (23UL)                    /*!< PODR07 (Bit 23)                                       */
#define PORT0_PCNTR1_PODR07_Msk           (0x800000UL)              /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR08_Pos           (24UL)                    /*!< PODR08 (Bit 24)                                       */
#define PORT0_PCNTR1_PODR08_Msk           (0x1000000UL)             /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR09_Pos           (25UL)                    /*!< PODR09 (Bit 25)                                       */
#define PORT0_PCNTR1_PODR09_Msk           (0x2000000UL)             /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR10_Pos           (26UL)                    /*!< PODR10 (Bit 26)                                       */
#define PORT0_PCNTR1_PODR10_Msk           (0x4000000UL)             /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR11_Pos           (27UL)                    /*!< PODR11 (Bit 27)                                       */
#define PORT0_PCNTR1_PODR11_Msk           (0x8000000UL)             /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR12_Pos           (28UL)                    /*!< PODR12 (Bit 28)                                       */
#define PORT0_PCNTR1_PODR12_Msk           (0x10000000UL)            /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR13_Pos           (29UL)                    /*!< PODR13 (Bit 29)                                       */
#define PORT0_PCNTR1_PODR13_Msk           (0x20000000UL)            /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR14_Pos           (30UL)                    /*!< PODR14 (Bit 30)                                       */
#define PORT0_PCNTR1_PODR14_Msk           (0x40000000UL)            /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR1_PODR15_Pos           (31UL)                    /*!< PODR15 (Bit 31)                                       */
#define PORT0_PCNTR1_PODR15_Msk           (0x80000000UL)            /*!< PODR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PODR  ========================================================== */
#define PORT0_PODR_PODR00_Pos             (0UL)                     /*!< PODR00 (Bit 0)                                        */
#define PORT0_PODR_PODR00_Msk             (0x1UL)                   /*!< PODR00 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR01_Pos             (1UL)                     /*!< PODR01 (Bit 1)                                        */
#define PORT0_PODR_PODR01_Msk             (0x2UL)                   /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR02_Pos             (2UL)                     /*!< PODR02 (Bit 2)                                        */
#define PORT0_PODR_PODR02_Msk             (0x4UL)                   /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR03_Pos             (3UL)                     /*!< PODR03 (Bit 3)                                        */
#define PORT0_PODR_PODR03_Msk             (0x8UL)                   /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR04_Pos             (4UL)                     /*!< PODR04 (Bit 4)                                        */
#define PORT0_PODR_PODR04_Msk             (0x10UL)                  /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR05_Pos             (5UL)                     /*!< PODR05 (Bit 5)                                        */
#define PORT0_PODR_PODR05_Msk             (0x20UL)                  /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR06_Pos             (6UL)                     /*!< PODR06 (Bit 6)                                        */
#define PORT0_PODR_PODR06_Msk             (0x40UL)                  /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR07_Pos             (7UL)                     /*!< PODR07 (Bit 7)                                        */
#define PORT0_PODR_PODR07_Msk             (0x80UL)                  /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR08_Pos             (8UL)                     /*!< PODR08 (Bit 8)                                        */
#define PORT0_PODR_PODR08_Msk             (0x100UL)                 /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR09_Pos             (9UL)                     /*!< PODR09 (Bit 9)                                        */
#define PORT0_PODR_PODR09_Msk             (0x200UL)                 /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR10_Pos             (10UL)                    /*!< PODR10 (Bit 10)                                       */
#define PORT0_PODR_PODR10_Msk             (0x400UL)                 /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR11_Pos             (11UL)                    /*!< PODR11 (Bit 11)                                       */
#define PORT0_PODR_PODR11_Msk             (0x800UL)                 /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR12_Pos             (12UL)                    /*!< PODR12 (Bit 12)                                       */
#define PORT0_PODR_PODR12_Msk             (0x1000UL)                /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR13_Pos             (13UL)                    /*!< PODR13 (Bit 13)                                       */
#define PORT0_PODR_PODR13_Msk             (0x2000UL)                /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR14_Pos             (14UL)                    /*!< PODR14 (Bit 14)                                       */
#define PORT0_PODR_PODR14_Msk             (0x4000UL)                /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PODR_PODR15_Pos             (15UL)                    /*!< PODR15 (Bit 15)                                       */
#define PORT0_PODR_PODR15_Msk             (0x8000UL)                /*!< PODR15 (Bitfield-Mask: 0x01)                          */
/* ==========================================================  PDR  ========================================================== */
#define PORT0_PDR_PDR00_Pos               (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT0_PDR_PDR00_Msk               (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR01_Pos               (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT0_PDR_PDR01_Msk               (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR02_Pos               (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT0_PDR_PDR02_Msk               (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR03_Pos               (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT0_PDR_PDR03_Msk               (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR04_Pos               (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT0_PDR_PDR04_Msk               (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR05_Pos               (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT0_PDR_PDR05_Msk               (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR06_Pos               (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT0_PDR_PDR06_Msk               (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR07_Pos               (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT0_PDR_PDR07_Msk               (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR08_Pos               (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT0_PDR_PDR08_Msk               (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR09_Pos               (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT0_PDR_PDR09_Msk               (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR10_Pos               (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT0_PDR_PDR10_Msk               (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR11_Pos               (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT0_PDR_PDR11_Msk               (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR12_Pos               (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT0_PDR_PDR12_Msk               (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR13_Pos               (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT0_PDR_PDR13_Msk               (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR14_Pos               (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT0_PDR_PDR14_Msk               (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT0_PDR_PDR15_Pos               (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT0_PDR_PDR15_Msk               (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
/* ========================================================  PCNTR2  ========================================================= */
#define PORT0_PCNTR2_PIDR00_Pos           (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT0_PCNTR2_PIDR00_Msk           (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR01_Pos           (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT0_PCNTR2_PIDR01_Msk           (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR02_Pos           (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT0_PCNTR2_PIDR02_Msk           (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR03_Pos           (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT0_PCNTR2_PIDR03_Msk           (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR04_Pos           (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT0_PCNTR2_PIDR04_Msk           (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR05_Pos           (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT0_PCNTR2_PIDR05_Msk           (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR06_Pos           (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT0_PCNTR2_PIDR06_Msk           (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR07_Pos           (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT0_PCNTR2_PIDR07_Msk           (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR08_Pos           (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT0_PCNTR2_PIDR08_Msk           (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR09_Pos           (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT0_PCNTR2_PIDR09_Msk           (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR10_Pos           (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT0_PCNTR2_PIDR10_Msk           (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR11_Pos           (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT0_PCNTR2_PIDR11_Msk           (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR12_Pos           (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT0_PCNTR2_PIDR12_Msk           (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR13_Pos           (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT0_PCNTR2_PIDR13_Msk           (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR14_Pos           (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT0_PCNTR2_PIDR14_Msk           (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR2_PIDR15_Pos           (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT0_PCNTR2_PIDR15_Msk           (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PIDR  ========================================================== */
#define PORT0_PIDR_PIDR00_Pos             (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT0_PIDR_PIDR00_Msk             (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR01_Pos             (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT0_PIDR_PIDR01_Msk             (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR02_Pos             (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT0_PIDR_PIDR02_Msk             (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR03_Pos             (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT0_PIDR_PIDR03_Msk             (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR04_Pos             (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT0_PIDR_PIDR04_Msk             (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR05_Pos             (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT0_PIDR_PIDR05_Msk             (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR06_Pos             (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT0_PIDR_PIDR06_Msk             (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR07_Pos             (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT0_PIDR_PIDR07_Msk             (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR08_Pos             (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT0_PIDR_PIDR08_Msk             (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR09_Pos             (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT0_PIDR_PIDR09_Msk             (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR10_Pos             (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT0_PIDR_PIDR10_Msk             (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR11_Pos             (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT0_PIDR_PIDR11_Msk             (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR12_Pos             (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT0_PIDR_PIDR12_Msk             (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR13_Pos             (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT0_PIDR_PIDR13_Msk             (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR14_Pos             (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT0_PIDR_PIDR14_Msk             (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PIDR_PIDR15_Pos             (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT0_PIDR_PIDR15_Msk             (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
/* ========================================================  PCNTR3  ========================================================= */
#define PORT0_PCNTR3_POSR00_Pos           (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT0_PCNTR3_POSR00_Msk           (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR01_Pos           (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT0_PCNTR3_POSR01_Msk           (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR02_Pos           (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT0_PCNTR3_POSR02_Msk           (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR03_Pos           (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT0_PCNTR3_POSR03_Msk           (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR04_Pos           (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT0_PCNTR3_POSR04_Msk           (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR05_Pos           (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT0_PCNTR3_POSR05_Msk           (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR06_Pos           (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT0_PCNTR3_POSR06_Msk           (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR07_Pos           (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT0_PCNTR3_POSR07_Msk           (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR08_Pos           (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT0_PCNTR3_POSR08_Msk           (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR09_Pos           (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT0_PCNTR3_POSR09_Msk           (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR10_Pos           (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT0_PCNTR3_POSR10_Msk           (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR11_Pos           (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT0_PCNTR3_POSR11_Msk           (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR12_Pos           (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT0_PCNTR3_POSR12_Msk           (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR13_Pos           (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT0_PCNTR3_POSR13_Msk           (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR14_Pos           (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT0_PCNTR3_POSR14_Msk           (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_POSR15_Pos           (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT0_PCNTR3_POSR15_Msk           (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR00_Pos           (16UL)                    /*!< PORR00 (Bit 16)                                       */
#define PORT0_PCNTR3_PORR00_Msk           (0x10000UL)               /*!< PORR00 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR01_Pos           (17UL)                    /*!< PORR01 (Bit 17)                                       */
#define PORT0_PCNTR3_PORR01_Msk           (0x20000UL)               /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR02_Pos           (18UL)                    /*!< PORR02 (Bit 18)                                       */
#define PORT0_PCNTR3_PORR02_Msk           (0x40000UL)               /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR03_Pos           (19UL)                    /*!< PORR03 (Bit 19)                                       */
#define PORT0_PCNTR3_PORR03_Msk           (0x80000UL)               /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR04_Pos           (20UL)                    /*!< PORR04 (Bit 20)                                       */
#define PORT0_PCNTR3_PORR04_Msk           (0x100000UL)              /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR05_Pos           (21UL)                    /*!< PORR05 (Bit 21)                                       */
#define PORT0_PCNTR3_PORR05_Msk           (0x200000UL)              /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR06_Pos           (22UL)                    /*!< PORR06 (Bit 22)                                       */
#define PORT0_PCNTR3_PORR06_Msk           (0x400000UL)              /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR07_Pos           (23UL)                    /*!< PORR07 (Bit 23)                                       */
#define PORT0_PCNTR3_PORR07_Msk           (0x800000UL)              /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR08_Pos           (24UL)                    /*!< PORR08 (Bit 24)                                       */
#define PORT0_PCNTR3_PORR08_Msk           (0x1000000UL)             /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR09_Pos           (25UL)                    /*!< PORR09 (Bit 25)                                       */
#define PORT0_PCNTR3_PORR09_Msk           (0x2000000UL)             /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR10_Pos           (26UL)                    /*!< PORR10 (Bit 26)                                       */
#define PORT0_PCNTR3_PORR10_Msk           (0x4000000UL)             /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR11_Pos           (27UL)                    /*!< PORR11 (Bit 27)                                       */
#define PORT0_PCNTR3_PORR11_Msk           (0x8000000UL)             /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR12_Pos           (28UL)                    /*!< PORR12 (Bit 28)                                       */
#define PORT0_PCNTR3_PORR12_Msk           (0x10000000UL)            /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR13_Pos           (29UL)                    /*!< PORR13 (Bit 29)                                       */
#define PORT0_PCNTR3_PORR13_Msk           (0x20000000UL)            /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR14_Pos           (30UL)                    /*!< PORR14 (Bit 30)                                       */
#define PORT0_PCNTR3_PORR14_Msk           (0x40000000UL)            /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PCNTR3_PORR15_Pos           (31UL)                    /*!< PORR15 (Bit 31)                                       */
#define PORT0_PCNTR3_PORR15_Msk           (0x80000000UL)            /*!< PORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PORR  ========================================================== */
#define PORT0_PORR_PORR00_Pos             (0UL)                     /*!< PORR00 (Bit 0)                                        */
#define PORT0_PORR_PORR00_Msk             (0x1UL)                   /*!< PORR00 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR01_Pos             (1UL)                     /*!< PORR01 (Bit 1)                                        */
#define PORT0_PORR_PORR01_Msk             (0x2UL)                   /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR02_Pos             (2UL)                     /*!< PORR02 (Bit 2)                                        */
#define PORT0_PORR_PORR02_Msk             (0x4UL)                   /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR03_Pos             (3UL)                     /*!< PORR03 (Bit 3)                                        */
#define PORT0_PORR_PORR03_Msk             (0x8UL)                   /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR04_Pos             (4UL)                     /*!< PORR04 (Bit 4)                                        */
#define PORT0_PORR_PORR04_Msk             (0x10UL)                  /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR05_Pos             (5UL)                     /*!< PORR05 (Bit 5)                                        */
#define PORT0_PORR_PORR05_Msk             (0x20UL)                  /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR06_Pos             (6UL)                     /*!< PORR06 (Bit 6)                                        */
#define PORT0_PORR_PORR06_Msk             (0x40UL)                  /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR07_Pos             (7UL)                     /*!< PORR07 (Bit 7)                                        */
#define PORT0_PORR_PORR07_Msk             (0x80UL)                  /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR08_Pos             (8UL)                     /*!< PORR08 (Bit 8)                                        */
#define PORT0_PORR_PORR08_Msk             (0x100UL)                 /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR09_Pos             (9UL)                     /*!< PORR09 (Bit 9)                                        */
#define PORT0_PORR_PORR09_Msk             (0x200UL)                 /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR10_Pos             (10UL)                    /*!< PORR10 (Bit 10)                                       */
#define PORT0_PORR_PORR10_Msk             (0x400UL)                 /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR11_Pos             (11UL)                    /*!< PORR11 (Bit 11)                                       */
#define PORT0_PORR_PORR11_Msk             (0x800UL)                 /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR12_Pos             (12UL)                    /*!< PORR12 (Bit 12)                                       */
#define PORT0_PORR_PORR12_Msk             (0x1000UL)                /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR13_Pos             (13UL)                    /*!< PORR13 (Bit 13)                                       */
#define PORT0_PORR_PORR13_Msk             (0x2000UL)                /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR14_Pos             (14UL)                    /*!< PORR14 (Bit 14)                                       */
#define PORT0_PORR_PORR14_Msk             (0x4000UL)                /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_PORR_PORR15_Pos             (15UL)                    /*!< PORR15 (Bit 15)                                       */
#define PORT0_PORR_PORR15_Msk             (0x8000UL)                /*!< PORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  POSR  ========================================================== */
#define PORT0_POSR_POSR00_Pos             (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT0_POSR_POSR00_Msk             (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR01_Pos             (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT0_POSR_POSR01_Msk             (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR02_Pos             (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT0_POSR_POSR02_Msk             (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR03_Pos             (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT0_POSR_POSR03_Msk             (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR04_Pos             (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT0_POSR_POSR04_Msk             (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR05_Pos             (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT0_POSR_POSR05_Msk             (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR06_Pos             (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT0_POSR_POSR06_Msk             (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR07_Pos             (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT0_POSR_POSR07_Msk             (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR08_Pos             (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT0_POSR_POSR08_Msk             (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR09_Pos             (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT0_POSR_POSR09_Msk             (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR10_Pos             (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT0_POSR_POSR10_Msk             (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR11_Pos             (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT0_POSR_POSR11_Msk             (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR12_Pos             (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT0_POSR_POSR12_Msk             (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR13_Pos             (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT0_POSR_POSR13_Msk             (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR14_Pos             (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT0_POSR_POSR14_Msk             (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT0_POSR_POSR15_Pos             (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT0_POSR_POSR15_Msk             (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           PORT2                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  PCNTR1  ========================================================= */
#define PORT2_PCNTR1_PDR00_Pos            (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT2_PCNTR1_PDR00_Msk            (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR01_Pos            (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT2_PCNTR1_PDR01_Msk            (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR02_Pos            (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT2_PCNTR1_PDR02_Msk            (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR03_Pos            (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT2_PCNTR1_PDR03_Msk            (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR04_Pos            (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT2_PCNTR1_PDR04_Msk            (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR05_Pos            (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT2_PCNTR1_PDR05_Msk            (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR06_Pos            (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT2_PCNTR1_PDR06_Msk            (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR07_Pos            (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT2_PCNTR1_PDR07_Msk            (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR08_Pos            (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT2_PCNTR1_PDR08_Msk            (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR09_Pos            (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT2_PCNTR1_PDR09_Msk            (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR10_Pos            (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT2_PCNTR1_PDR10_Msk            (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR11_Pos            (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT2_PCNTR1_PDR11_Msk            (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR12_Pos            (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT2_PCNTR1_PDR12_Msk            (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR13_Pos            (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT2_PCNTR1_PDR13_Msk            (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR14_Pos            (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT2_PCNTR1_PDR14_Msk            (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PDR15_Pos            (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT2_PCNTR1_PDR15_Msk            (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
#define PORT2_PCNTR1_PODR00_Pos           (16UL)                    /*!< PODR00 (Bit 16)                                       */
#define PORT2_PCNTR1_PODR00_Msk           (0x10000UL)               /*!< PODR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR01_Pos           (17UL)                    /*!< PODR01 (Bit 17)                                       */
#define PORT2_PCNTR1_PODR01_Msk           (0x20000UL)               /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR02_Pos           (18UL)                    /*!< PODR02 (Bit 18)                                       */
#define PORT2_PCNTR1_PODR02_Msk           (0x40000UL)               /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR03_Pos           (19UL)                    /*!< PODR03 (Bit 19)                                       */
#define PORT2_PCNTR1_PODR03_Msk           (0x80000UL)               /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR04_Pos           (20UL)                    /*!< PODR04 (Bit 20)                                       */
#define PORT2_PCNTR1_PODR04_Msk           (0x100000UL)              /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR05_Pos           (21UL)                    /*!< PODR05 (Bit 21)                                       */
#define PORT2_PCNTR1_PODR05_Msk           (0x200000UL)              /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR06_Pos           (22UL)                    /*!< PODR06 (Bit 22)                                       */
#define PORT2_PCNTR1_PODR06_Msk           (0x400000UL)              /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR07_Pos           (23UL)                    /*!< PODR07 (Bit 23)                                       */
#define PORT2_PCNTR1_PODR07_Msk           (0x800000UL)              /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR08_Pos           (24UL)                    /*!< PODR08 (Bit 24)                                       */
#define PORT2_PCNTR1_PODR08_Msk           (0x1000000UL)             /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR09_Pos           (25UL)                    /*!< PODR09 (Bit 25)                                       */
#define PORT2_PCNTR1_PODR09_Msk           (0x2000000UL)             /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR10_Pos           (26UL)                    /*!< PODR10 (Bit 26)                                       */
#define PORT2_PCNTR1_PODR10_Msk           (0x4000000UL)             /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR11_Pos           (27UL)                    /*!< PODR11 (Bit 27)                                       */
#define PORT2_PCNTR1_PODR11_Msk           (0x8000000UL)             /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR12_Pos           (28UL)                    /*!< PODR12 (Bit 28)                                       */
#define PORT2_PCNTR1_PODR12_Msk           (0x10000000UL)            /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR13_Pos           (29UL)                    /*!< PODR13 (Bit 29)                                       */
#define PORT2_PCNTR1_PODR13_Msk           (0x20000000UL)            /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR14_Pos           (30UL)                    /*!< PODR14 (Bit 30)                                       */
#define PORT2_PCNTR1_PODR14_Msk           (0x40000000UL)            /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR1_PODR15_Pos           (31UL)                    /*!< PODR15 (Bit 31)                                       */
#define PORT2_PCNTR1_PODR15_Msk           (0x80000000UL)            /*!< PODR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PODR  ========================================================== */
#define PORT2_PODR_PODR00_Pos             (0UL)                     /*!< PODR00 (Bit 0)                                        */
#define PORT2_PODR_PODR00_Msk             (0x1UL)                   /*!< PODR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR01_Pos             (1UL)                     /*!< PODR01 (Bit 1)                                        */
#define PORT2_PODR_PODR01_Msk             (0x2UL)                   /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR02_Pos             (2UL)                     /*!< PODR02 (Bit 2)                                        */
#define PORT2_PODR_PODR02_Msk             (0x4UL)                   /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR03_Pos             (3UL)                     /*!< PODR03 (Bit 3)                                        */
#define PORT2_PODR_PODR03_Msk             (0x8UL)                   /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR04_Pos             (4UL)                     /*!< PODR04 (Bit 4)                                        */
#define PORT2_PODR_PODR04_Msk             (0x10UL)                  /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR05_Pos             (5UL)                     /*!< PODR05 (Bit 5)                                        */
#define PORT2_PODR_PODR05_Msk             (0x20UL)                  /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR06_Pos             (6UL)                     /*!< PODR06 (Bit 6)                                        */
#define PORT2_PODR_PODR06_Msk             (0x40UL)                  /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR07_Pos             (7UL)                     /*!< PODR07 (Bit 7)                                        */
#define PORT2_PODR_PODR07_Msk             (0x80UL)                  /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR08_Pos             (8UL)                     /*!< PODR08 (Bit 8)                                        */
#define PORT2_PODR_PODR08_Msk             (0x100UL)                 /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR09_Pos             (9UL)                     /*!< PODR09 (Bit 9)                                        */
#define PORT2_PODR_PODR09_Msk             (0x200UL)                 /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR10_Pos             (10UL)                    /*!< PODR10 (Bit 10)                                       */
#define PORT2_PODR_PODR10_Msk             (0x400UL)                 /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR11_Pos             (11UL)                    /*!< PODR11 (Bit 11)                                       */
#define PORT2_PODR_PODR11_Msk             (0x800UL)                 /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR12_Pos             (12UL)                    /*!< PODR12 (Bit 12)                                       */
#define PORT2_PODR_PODR12_Msk             (0x1000UL)                /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR13_Pos             (13UL)                    /*!< PODR13 (Bit 13)                                       */
#define PORT2_PODR_PODR13_Msk             (0x2000UL)                /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR14_Pos             (14UL)                    /*!< PODR14 (Bit 14)                                       */
#define PORT2_PODR_PODR14_Msk             (0x4000UL)                /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PODR_PODR15_Pos             (15UL)                    /*!< PODR15 (Bit 15)                                       */
#define PORT2_PODR_PODR15_Msk             (0x8000UL)                /*!< PODR15 (Bitfield-Mask: 0x01)                          */
/* ==========================================================  PDR  ========================================================== */
#define PORT2_PDR_PDR00_Pos               (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT2_PDR_PDR00_Msk               (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR01_Pos               (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT2_PDR_PDR01_Msk               (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR02_Pos               (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT2_PDR_PDR02_Msk               (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR03_Pos               (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT2_PDR_PDR03_Msk               (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR04_Pos               (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT2_PDR_PDR04_Msk               (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR05_Pos               (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT2_PDR_PDR05_Msk               (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR06_Pos               (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT2_PDR_PDR06_Msk               (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR07_Pos               (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT2_PDR_PDR07_Msk               (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR08_Pos               (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT2_PDR_PDR08_Msk               (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR09_Pos               (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT2_PDR_PDR09_Msk               (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR10_Pos               (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT2_PDR_PDR10_Msk               (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR11_Pos               (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT2_PDR_PDR11_Msk               (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR12_Pos               (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT2_PDR_PDR12_Msk               (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR13_Pos               (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT2_PDR_PDR13_Msk               (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR14_Pos               (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT2_PDR_PDR14_Msk               (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT2_PDR_PDR15_Pos               (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT2_PDR_PDR15_Msk               (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
/* ========================================================  PCNTR2  ========================================================= */
#define PORT2_PCNTR2_PIDR00_Pos           (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT2_PCNTR2_PIDR00_Msk           (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR01_Pos           (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT2_PCNTR2_PIDR01_Msk           (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR02_Pos           (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT2_PCNTR2_PIDR02_Msk           (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR03_Pos           (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT2_PCNTR2_PIDR03_Msk           (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR04_Pos           (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT2_PCNTR2_PIDR04_Msk           (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR05_Pos           (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT2_PCNTR2_PIDR05_Msk           (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR06_Pos           (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT2_PCNTR2_PIDR06_Msk           (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR07_Pos           (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT2_PCNTR2_PIDR07_Msk           (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR08_Pos           (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT2_PCNTR2_PIDR08_Msk           (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR09_Pos           (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT2_PCNTR2_PIDR09_Msk           (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR10_Pos           (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT2_PCNTR2_PIDR10_Msk           (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR11_Pos           (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT2_PCNTR2_PIDR11_Msk           (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR12_Pos           (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT2_PCNTR2_PIDR12_Msk           (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR13_Pos           (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT2_PCNTR2_PIDR13_Msk           (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR14_Pos           (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT2_PCNTR2_PIDR14_Msk           (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_PIDR15_Pos           (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT2_PCNTR2_PIDR15_Msk           (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR00_Pos           (16UL)                    /*!< EIDR00 (Bit 16)                                       */
#define PORT2_PCNTR2_EIDR00_Msk           (0x10000UL)               /*!< EIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR01_Pos           (17UL)                    /*!< EIDR01 (Bit 17)                                       */
#define PORT2_PCNTR2_EIDR01_Msk           (0x20000UL)               /*!< EIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR02_Pos           (18UL)                    /*!< EIDR02 (Bit 18)                                       */
#define PORT2_PCNTR2_EIDR02_Msk           (0x40000UL)               /*!< EIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR03_Pos           (19UL)                    /*!< EIDR03 (Bit 19)                                       */
#define PORT2_PCNTR2_EIDR03_Msk           (0x80000UL)               /*!< EIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR04_Pos           (20UL)                    /*!< EIDR04 (Bit 20)                                       */
#define PORT2_PCNTR2_EIDR04_Msk           (0x100000UL)              /*!< EIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR05_Pos           (21UL)                    /*!< EIDR05 (Bit 21)                                       */
#define PORT2_PCNTR2_EIDR05_Msk           (0x200000UL)              /*!< EIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR06_Pos           (22UL)                    /*!< EIDR06 (Bit 22)                                       */
#define PORT2_PCNTR2_EIDR06_Msk           (0x400000UL)              /*!< EIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR07_Pos           (23UL)                    /*!< EIDR07 (Bit 23)                                       */
#define PORT2_PCNTR2_EIDR07_Msk           (0x800000UL)              /*!< EIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR08_Pos           (24UL)                    /*!< EIDR08 (Bit 24)                                       */
#define PORT2_PCNTR2_EIDR08_Msk           (0x1000000UL)             /*!< EIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR09_Pos           (25UL)                    /*!< EIDR09 (Bit 25)                                       */
#define PORT2_PCNTR2_EIDR09_Msk           (0x2000000UL)             /*!< EIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR10_Pos           (26UL)                    /*!< EIDR10 (Bit 26)                                       */
#define PORT2_PCNTR2_EIDR10_Msk           (0x4000000UL)             /*!< EIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR11_Pos           (27UL)                    /*!< EIDR11 (Bit 27)                                       */
#define PORT2_PCNTR2_EIDR11_Msk           (0x8000000UL)             /*!< EIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR12_Pos           (28UL)                    /*!< EIDR12 (Bit 28)                                       */
#define PORT2_PCNTR2_EIDR12_Msk           (0x10000000UL)            /*!< EIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR13_Pos           (29UL)                    /*!< EIDR13 (Bit 29)                                       */
#define PORT2_PCNTR2_EIDR13_Msk           (0x20000000UL)            /*!< EIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR14_Pos           (30UL)                    /*!< EIDR14 (Bit 30)                                       */
#define PORT2_PCNTR2_EIDR14_Msk           (0x40000000UL)            /*!< EIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR2_EIDR15_Pos           (31UL)                    /*!< EIDR15 (Bit 31)                                       */
#define PORT2_PCNTR2_EIDR15_Msk           (0x80000000UL)            /*!< EIDR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  EIDR  ========================================================== */
#define PORT2_EIDR_EIDR00_Pos             (0UL)                     /*!< EIDR00 (Bit 0)                                        */
#define PORT2_EIDR_EIDR00_Msk             (0x1UL)                   /*!< EIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR01_Pos             (1UL)                     /*!< EIDR01 (Bit 1)                                        */
#define PORT2_EIDR_EIDR01_Msk             (0x2UL)                   /*!< EIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR02_Pos             (2UL)                     /*!< EIDR02 (Bit 2)                                        */
#define PORT2_EIDR_EIDR02_Msk             (0x4UL)                   /*!< EIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR03_Pos             (3UL)                     /*!< EIDR03 (Bit 3)                                        */
#define PORT2_EIDR_EIDR03_Msk             (0x8UL)                   /*!< EIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR04_Pos             (4UL)                     /*!< EIDR04 (Bit 4)                                        */
#define PORT2_EIDR_EIDR04_Msk             (0x10UL)                  /*!< EIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR05_Pos             (5UL)                     /*!< EIDR05 (Bit 5)                                        */
#define PORT2_EIDR_EIDR05_Msk             (0x20UL)                  /*!< EIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR06_Pos             (6UL)                     /*!< EIDR06 (Bit 6)                                        */
#define PORT2_EIDR_EIDR06_Msk             (0x40UL)                  /*!< EIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR07_Pos             (7UL)                     /*!< EIDR07 (Bit 7)                                        */
#define PORT2_EIDR_EIDR07_Msk             (0x80UL)                  /*!< EIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR08_Pos             (8UL)                     /*!< EIDR08 (Bit 8)                                        */
#define PORT2_EIDR_EIDR08_Msk             (0x100UL)                 /*!< EIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR09_Pos             (9UL)                     /*!< EIDR09 (Bit 9)                                        */
#define PORT2_EIDR_EIDR09_Msk             (0x200UL)                 /*!< EIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR10_Pos             (10UL)                    /*!< EIDR10 (Bit 10)                                       */
#define PORT2_EIDR_EIDR10_Msk             (0x400UL)                 /*!< EIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR11_Pos             (11UL)                    /*!< EIDR11 (Bit 11)                                       */
#define PORT2_EIDR_EIDR11_Msk             (0x800UL)                 /*!< EIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR12_Pos             (12UL)                    /*!< EIDR12 (Bit 12)                                       */
#define PORT2_EIDR_EIDR12_Msk             (0x1000UL)                /*!< EIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR13_Pos             (13UL)                    /*!< EIDR13 (Bit 13)                                       */
#define PORT2_EIDR_EIDR13_Msk             (0x2000UL)                /*!< EIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR14_Pos             (14UL)                    /*!< EIDR14 (Bit 14)                                       */
#define PORT2_EIDR_EIDR14_Msk             (0x4000UL)                /*!< EIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_EIDR_EIDR15_Pos             (15UL)                    /*!< EIDR15 (Bit 15)                                       */
#define PORT2_EIDR_EIDR15_Msk             (0x8000UL)                /*!< EIDR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PIDR  ========================================================== */
#define PORT2_PIDR_PIDR00_Pos             (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT2_PIDR_PIDR00_Msk             (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR01_Pos             (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT2_PIDR_PIDR01_Msk             (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR02_Pos             (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT2_PIDR_PIDR02_Msk             (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR03_Pos             (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT2_PIDR_PIDR03_Msk             (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR04_Pos             (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT2_PIDR_PIDR04_Msk             (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR05_Pos             (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT2_PIDR_PIDR05_Msk             (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR06_Pos             (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT2_PIDR_PIDR06_Msk             (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR07_Pos             (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT2_PIDR_PIDR07_Msk             (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR08_Pos             (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT2_PIDR_PIDR08_Msk             (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR09_Pos             (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT2_PIDR_PIDR09_Msk             (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR10_Pos             (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT2_PIDR_PIDR10_Msk             (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR11_Pos             (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT2_PIDR_PIDR11_Msk             (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR12_Pos             (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT2_PIDR_PIDR12_Msk             (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR13_Pos             (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT2_PIDR_PIDR13_Msk             (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR14_Pos             (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT2_PIDR_PIDR14_Msk             (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PIDR_PIDR15_Pos             (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT2_PIDR_PIDR15_Msk             (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
/* ========================================================  PCNTR3  ========================================================= */
#define PORT2_PCNTR3_POSR00_Pos           (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT2_PCNTR3_POSR00_Msk           (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR01_Pos           (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT2_PCNTR3_POSR01_Msk           (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR02_Pos           (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT2_PCNTR3_POSR02_Msk           (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR03_Pos           (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT2_PCNTR3_POSR03_Msk           (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR04_Pos           (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT2_PCNTR3_POSR04_Msk           (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR05_Pos           (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT2_PCNTR3_POSR05_Msk           (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR06_Pos           (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT2_PCNTR3_POSR06_Msk           (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR07_Pos           (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT2_PCNTR3_POSR07_Msk           (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR08_Pos           (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT2_PCNTR3_POSR08_Msk           (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR09_Pos           (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT2_PCNTR3_POSR09_Msk           (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR10_Pos           (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT2_PCNTR3_POSR10_Msk           (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR11_Pos           (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT2_PCNTR3_POSR11_Msk           (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR12_Pos           (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT2_PCNTR3_POSR12_Msk           (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR13_Pos           (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT2_PCNTR3_POSR13_Msk           (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR14_Pos           (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT2_PCNTR3_POSR14_Msk           (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_POSR15_Pos           (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT2_PCNTR3_POSR15_Msk           (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR00_Pos           (16UL)                    /*!< PORR00 (Bit 16)                                       */
#define PORT2_PCNTR3_PORR00_Msk           (0x10000UL)               /*!< PORR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR01_Pos           (17UL)                    /*!< PORR01 (Bit 17)                                       */
#define PORT2_PCNTR3_PORR01_Msk           (0x20000UL)               /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR02_Pos           (18UL)                    /*!< PORR02 (Bit 18)                                       */
#define PORT2_PCNTR3_PORR02_Msk           (0x40000UL)               /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR03_Pos           (19UL)                    /*!< PORR03 (Bit 19)                                       */
#define PORT2_PCNTR3_PORR03_Msk           (0x80000UL)               /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR04_Pos           (20UL)                    /*!< PORR04 (Bit 20)                                       */
#define PORT2_PCNTR3_PORR04_Msk           (0x100000UL)              /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR05_Pos           (21UL)                    /*!< PORR05 (Bit 21)                                       */
#define PORT2_PCNTR3_PORR05_Msk           (0x200000UL)              /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR06_Pos           (22UL)                    /*!< PORR06 (Bit 22)                                       */
#define PORT2_PCNTR3_PORR06_Msk           (0x400000UL)              /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR07_Pos           (23UL)                    /*!< PORR07 (Bit 23)                                       */
#define PORT2_PCNTR3_PORR07_Msk           (0x800000UL)              /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR08_Pos           (24UL)                    /*!< PORR08 (Bit 24)                                       */
#define PORT2_PCNTR3_PORR08_Msk           (0x1000000UL)             /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR09_Pos           (25UL)                    /*!< PORR09 (Bit 25)                                       */
#define PORT2_PCNTR3_PORR09_Msk           (0x2000000UL)             /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR10_Pos           (26UL)                    /*!< PORR10 (Bit 26)                                       */
#define PORT2_PCNTR3_PORR10_Msk           (0x4000000UL)             /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR11_Pos           (27UL)                    /*!< PORR11 (Bit 27)                                       */
#define PORT2_PCNTR3_PORR11_Msk           (0x8000000UL)             /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR12_Pos           (28UL)                    /*!< PORR12 (Bit 28)                                       */
#define PORT2_PCNTR3_PORR12_Msk           (0x10000000UL)            /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR13_Pos           (29UL)                    /*!< PORR13 (Bit 29)                                       */
#define PORT2_PCNTR3_PORR13_Msk           (0x20000000UL)            /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR14_Pos           (30UL)                    /*!< PORR14 (Bit 30)                                       */
#define PORT2_PCNTR3_PORR14_Msk           (0x40000000UL)            /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR3_PORR15_Pos           (31UL)                    /*!< PORR15 (Bit 31)                                       */
#define PORT2_PCNTR3_PORR15_Msk           (0x80000000UL)            /*!< PORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PORR  ========================================================== */
#define PORT2_PORR_PORR00_Pos             (0UL)                     /*!< PORR00 (Bit 0)                                        */
#define PORT2_PORR_PORR00_Msk             (0x1UL)                   /*!< PORR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR01_Pos             (1UL)                     /*!< PORR01 (Bit 1)                                        */
#define PORT2_PORR_PORR01_Msk             (0x2UL)                   /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR02_Pos             (2UL)                     /*!< PORR02 (Bit 2)                                        */
#define PORT2_PORR_PORR02_Msk             (0x4UL)                   /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR03_Pos             (3UL)                     /*!< PORR03 (Bit 3)                                        */
#define PORT2_PORR_PORR03_Msk             (0x8UL)                   /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR04_Pos             (4UL)                     /*!< PORR04 (Bit 4)                                        */
#define PORT2_PORR_PORR04_Msk             (0x10UL)                  /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR05_Pos             (5UL)                     /*!< PORR05 (Bit 5)                                        */
#define PORT2_PORR_PORR05_Msk             (0x20UL)                  /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR06_Pos             (6UL)                     /*!< PORR06 (Bit 6)                                        */
#define PORT2_PORR_PORR06_Msk             (0x40UL)                  /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR07_Pos             (7UL)                     /*!< PORR07 (Bit 7)                                        */
#define PORT2_PORR_PORR07_Msk             (0x80UL)                  /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR08_Pos             (8UL)                     /*!< PORR08 (Bit 8)                                        */
#define PORT2_PORR_PORR08_Msk             (0x100UL)                 /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR09_Pos             (9UL)                     /*!< PORR09 (Bit 9)                                        */
#define PORT2_PORR_PORR09_Msk             (0x200UL)                 /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR10_Pos             (10UL)                    /*!< PORR10 (Bit 10)                                       */
#define PORT2_PORR_PORR10_Msk             (0x400UL)                 /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR11_Pos             (11UL)                    /*!< PORR11 (Bit 11)                                       */
#define PORT2_PORR_PORR11_Msk             (0x800UL)                 /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR12_Pos             (12UL)                    /*!< PORR12 (Bit 12)                                       */
#define PORT2_PORR_PORR12_Msk             (0x1000UL)                /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR13_Pos             (13UL)                    /*!< PORR13 (Bit 13)                                       */
#define PORT2_PORR_PORR13_Msk             (0x2000UL)                /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR14_Pos             (14UL)                    /*!< PORR14 (Bit 14)                                       */
#define PORT2_PORR_PORR14_Msk             (0x4000UL)                /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PORR_PORR15_Pos             (15UL)                    /*!< PORR15 (Bit 15)                                       */
#define PORT2_PORR_PORR15_Msk             (0x8000UL)                /*!< PORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  POSR  ========================================================== */
#define PORT2_POSR_POSR00_Pos             (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT2_POSR_POSR00_Msk             (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR01_Pos             (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT2_POSR_POSR01_Msk             (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR02_Pos             (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT2_POSR_POSR02_Msk             (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR03_Pos             (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT2_POSR_POSR03_Msk             (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR04_Pos             (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT2_POSR_POSR04_Msk             (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR05_Pos             (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT2_POSR_POSR05_Msk             (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR06_Pos             (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT2_POSR_POSR06_Msk             (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR07_Pos             (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT2_POSR_POSR07_Msk             (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR08_Pos             (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT2_POSR_POSR08_Msk             (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR09_Pos             (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT2_POSR_POSR09_Msk             (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR10_Pos             (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT2_POSR_POSR10_Msk             (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR11_Pos             (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT2_POSR_POSR11_Msk             (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR12_Pos             (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT2_POSR_POSR12_Msk             (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR13_Pos             (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT2_POSR_POSR13_Msk             (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR14_Pos             (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT2_POSR_POSR14_Msk             (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_POSR_POSR15_Pos             (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT2_POSR_POSR15_Msk             (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */
/* ========================================================  PCNTR4  ========================================================= */
#define PORT2_PCNTR4_EOSR00_Pos           (0UL)                     /*!< EOSR00 (Bit 0)                                        */
#define PORT2_PCNTR4_EOSR00_Msk           (0x1UL)                   /*!< EOSR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR01_Pos           (1UL)                     /*!< EOSR01 (Bit 1)                                        */
#define PORT2_PCNTR4_EOSR01_Msk           (0x2UL)                   /*!< EOSR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR02_Pos           (2UL)                     /*!< EOSR02 (Bit 2)                                        */
#define PORT2_PCNTR4_EOSR02_Msk           (0x4UL)                   /*!< EOSR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR03_Pos           (3UL)                     /*!< EOSR03 (Bit 3)                                        */
#define PORT2_PCNTR4_EOSR03_Msk           (0x8UL)                   /*!< EOSR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR04_Pos           (4UL)                     /*!< EOSR04 (Bit 4)                                        */
#define PORT2_PCNTR4_EOSR04_Msk           (0x10UL)                  /*!< EOSR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR05_Pos           (5UL)                     /*!< EOSR05 (Bit 5)                                        */
#define PORT2_PCNTR4_EOSR05_Msk           (0x20UL)                  /*!< EOSR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR06_Pos           (6UL)                     /*!< EOSR06 (Bit 6)                                        */
#define PORT2_PCNTR4_EOSR06_Msk           (0x40UL)                  /*!< EOSR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR07_Pos           (7UL)                     /*!< EOSR07 (Bit 7)                                        */
#define PORT2_PCNTR4_EOSR07_Msk           (0x80UL)                  /*!< EOSR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR08_Pos           (8UL)                     /*!< EOSR08 (Bit 8)                                        */
#define PORT2_PCNTR4_EOSR08_Msk           (0x100UL)                 /*!< EOSR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR09_Pos           (9UL)                     /*!< EOSR09 (Bit 9)                                        */
#define PORT2_PCNTR4_EOSR09_Msk           (0x200UL)                 /*!< EOSR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR10_Pos           (10UL)                    /*!< EOSR10 (Bit 10)                                       */
#define PORT2_PCNTR4_EOSR10_Msk           (0x400UL)                 /*!< EOSR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR11_Pos           (11UL)                    /*!< EOSR11 (Bit 11)                                       */
#define PORT2_PCNTR4_EOSR11_Msk           (0x800UL)                 /*!< EOSR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR12_Pos           (12UL)                    /*!< EOSR12 (Bit 12)                                       */
#define PORT2_PCNTR4_EOSR12_Msk           (0x1000UL)                /*!< EOSR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR13_Pos           (13UL)                    /*!< EOSR13 (Bit 13)                                       */
#define PORT2_PCNTR4_EOSR13_Msk           (0x2000UL)                /*!< EOSR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR14_Pos           (14UL)                    /*!< EOSR14 (Bit 14)                                       */
#define PORT2_PCNTR4_EOSR14_Msk           (0x4000UL)                /*!< EOSR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EOSR15_Pos           (15UL)                    /*!< EOSR15 (Bit 15)                                       */
#define PORT2_PCNTR4_EOSR15_Msk           (0x8000UL)                /*!< EOSR15 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR00_Pos           (16UL)                    /*!< EORR00 (Bit 16)                                       */
#define PORT2_PCNTR4_EORR00_Msk           (0x10000UL)               /*!< EORR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR01_Pos           (17UL)                    /*!< EORR01 (Bit 17)                                       */
#define PORT2_PCNTR4_EORR01_Msk           (0x20000UL)               /*!< EORR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR02_Pos           (18UL)                    /*!< EORR02 (Bit 18)                                       */
#define PORT2_PCNTR4_EORR02_Msk           (0x40000UL)               /*!< EORR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR03_Pos           (19UL)                    /*!< EORR03 (Bit 19)                                       */
#define PORT2_PCNTR4_EORR03_Msk           (0x80000UL)               /*!< EORR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR04_Pos           (20UL)                    /*!< EORR04 (Bit 20)                                       */
#define PORT2_PCNTR4_EORR04_Msk           (0x100000UL)              /*!< EORR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR05_Pos           (21UL)                    /*!< EORR05 (Bit 21)                                       */
#define PORT2_PCNTR4_EORR05_Msk           (0x200000UL)              /*!< EORR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR06_Pos           (22UL)                    /*!< EORR06 (Bit 22)                                       */
#define PORT2_PCNTR4_EORR06_Msk           (0x400000UL)              /*!< EORR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR07_Pos           (23UL)                    /*!< EORR07 (Bit 23)                                       */
#define PORT2_PCNTR4_EORR07_Msk           (0x800000UL)              /*!< EORR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR08_Pos           (24UL)                    /*!< EORR08 (Bit 24)                                       */
#define PORT2_PCNTR4_EORR08_Msk           (0x1000000UL)             /*!< EORR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR09_Pos           (25UL)                    /*!< EORR09 (Bit 25)                                       */
#define PORT2_PCNTR4_EORR09_Msk           (0x2000000UL)             /*!< EORR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR10_Pos           (26UL)                    /*!< EORR10 (Bit 26)                                       */
#define PORT2_PCNTR4_EORR10_Msk           (0x4000000UL)             /*!< EORR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR11_Pos           (27UL)                    /*!< EORR11 (Bit 27)                                       */
#define PORT2_PCNTR4_EORR11_Msk           (0x8000000UL)             /*!< EORR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR12_Pos           (28UL)                    /*!< EORR12 (Bit 28)                                       */
#define PORT2_PCNTR4_EORR12_Msk           (0x10000000UL)            /*!< EORR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR13_Pos           (29UL)                    /*!< EORR13 (Bit 29)                                       */
#define PORT2_PCNTR4_EORR13_Msk           (0x20000000UL)            /*!< EORR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR14_Pos           (30UL)                    /*!< EORR14 (Bit 30)                                       */
#define PORT2_PCNTR4_EORR14_Msk           (0x40000000UL)            /*!< EORR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_PCNTR4_EORR15_Pos           (31UL)                    /*!< EORR15 (Bit 31)                                       */
#define PORT2_PCNTR4_EORR15_Msk           (0x80000000UL)            /*!< EORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  EORR  ========================================================== */
#define PORT2_EORR_EORR00_Pos             (0UL)                     /*!< EORR00 (Bit 0)                                        */
#define PORT2_EORR_EORR00_Msk             (0x1UL)                   /*!< EORR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR01_Pos             (1UL)                     /*!< EORR01 (Bit 1)                                        */
#define PORT2_EORR_EORR01_Msk             (0x2UL)                   /*!< EORR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR02_Pos             (2UL)                     /*!< EORR02 (Bit 2)                                        */
#define PORT2_EORR_EORR02_Msk             (0x4UL)                   /*!< EORR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR03_Pos             (3UL)                     /*!< EORR03 (Bit 3)                                        */
#define PORT2_EORR_EORR03_Msk             (0x8UL)                   /*!< EORR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR04_Pos             (4UL)                     /*!< EORR04 (Bit 4)                                        */
#define PORT2_EORR_EORR04_Msk             (0x10UL)                  /*!< EORR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR05_Pos             (5UL)                     /*!< EORR05 (Bit 5)                                        */
#define PORT2_EORR_EORR05_Msk             (0x20UL)                  /*!< EORR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR06_Pos             (6UL)                     /*!< EORR06 (Bit 6)                                        */
#define PORT2_EORR_EORR06_Msk             (0x40UL)                  /*!< EORR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR07_Pos             (7UL)                     /*!< EORR07 (Bit 7)                                        */
#define PORT2_EORR_EORR07_Msk             (0x80UL)                  /*!< EORR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR08_Pos             (8UL)                     /*!< EORR08 (Bit 8)                                        */
#define PORT2_EORR_EORR08_Msk             (0x100UL)                 /*!< EORR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR09_Pos             (9UL)                     /*!< EORR09 (Bit 9)                                        */
#define PORT2_EORR_EORR09_Msk             (0x200UL)                 /*!< EORR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR10_Pos             (10UL)                    /*!< EORR10 (Bit 10)                                       */
#define PORT2_EORR_EORR10_Msk             (0x400UL)                 /*!< EORR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR11_Pos             (11UL)                    /*!< EORR11 (Bit 11)                                       */
#define PORT2_EORR_EORR11_Msk             (0x800UL)                 /*!< EORR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR12_Pos             (12UL)                    /*!< EORR12 (Bit 12)                                       */
#define PORT2_EORR_EORR12_Msk             (0x1000UL)                /*!< EORR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR13_Pos             (13UL)                    /*!< EORR13 (Bit 13)                                       */
#define PORT2_EORR_EORR13_Msk             (0x2000UL)                /*!< EORR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR14_Pos             (14UL)                    /*!< EORR14 (Bit 14)                                       */
#define PORT2_EORR_EORR14_Msk             (0x4000UL)                /*!< EORR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_EORR_EORR15_Pos             (15UL)                    /*!< EORR15 (Bit 15)                                       */
#define PORT2_EORR_EORR15_Msk             (0x8000UL)                /*!< EORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  EOSR  ========================================================== */
#define PORT2_EOSR_EOSR00_Pos             (0UL)                     /*!< EOSR00 (Bit 0)                                        */
#define PORT2_EOSR_EOSR00_Msk             (0x1UL)                   /*!< EOSR00 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR01_Pos             (1UL)                     /*!< EOSR01 (Bit 1)                                        */
#define PORT2_EOSR_EOSR01_Msk             (0x2UL)                   /*!< EOSR01 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR02_Pos             (2UL)                     /*!< EOSR02 (Bit 2)                                        */
#define PORT2_EOSR_EOSR02_Msk             (0x4UL)                   /*!< EOSR02 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR03_Pos             (3UL)                     /*!< EOSR03 (Bit 3)                                        */
#define PORT2_EOSR_EOSR03_Msk             (0x8UL)                   /*!< EOSR03 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR04_Pos             (4UL)                     /*!< EOSR04 (Bit 4)                                        */
#define PORT2_EOSR_EOSR04_Msk             (0x10UL)                  /*!< EOSR04 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR05_Pos             (5UL)                     /*!< EOSR05 (Bit 5)                                        */
#define PORT2_EOSR_EOSR05_Msk             (0x20UL)                  /*!< EOSR05 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR06_Pos             (6UL)                     /*!< EOSR06 (Bit 6)                                        */
#define PORT2_EOSR_EOSR06_Msk             (0x40UL)                  /*!< EOSR06 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR07_Pos             (7UL)                     /*!< EOSR07 (Bit 7)                                        */
#define PORT2_EOSR_EOSR07_Msk             (0x80UL)                  /*!< EOSR07 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR08_Pos             (8UL)                     /*!< EOSR08 (Bit 8)                                        */
#define PORT2_EOSR_EOSR08_Msk             (0x100UL)                 /*!< EOSR08 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR09_Pos             (9UL)                     /*!< EOSR09 (Bit 9)                                        */
#define PORT2_EOSR_EOSR09_Msk             (0x200UL)                 /*!< EOSR09 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR10_Pos             (10UL)                    /*!< EOSR10 (Bit 10)                                       */
#define PORT2_EOSR_EOSR10_Msk             (0x400UL)                 /*!< EOSR10 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR11_Pos             (11UL)                    /*!< EOSR11 (Bit 11)                                       */
#define PORT2_EOSR_EOSR11_Msk             (0x800UL)                 /*!< EOSR11 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR12_Pos             (12UL)                    /*!< EOSR12 (Bit 12)                                       */
#define PORT2_EOSR_EOSR12_Msk             (0x1000UL)                /*!< EOSR12 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR13_Pos             (13UL)                    /*!< EOSR13 (Bit 13)                                       */
#define PORT2_EOSR_EOSR13_Msk             (0x2000UL)                /*!< EOSR13 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR14_Pos             (14UL)                    /*!< EOSR14 (Bit 14)                                       */
#define PORT2_EOSR_EOSR14_Msk             (0x4000UL)                /*!< EOSR14 (Bitfield-Mask: 0x01)                          */
#define PORT2_EOSR_EOSR15_Pos             (15UL)                    /*!< EOSR15 (Bit 15)                                       */
#define PORT2_EOSR_EOSR15_Msk             (0x8000UL)                /*!< EOSR15 (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           PORT3                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  PCNTR1  ========================================================= */
#define PORT3_PCNTR1_PDR00_Pos            (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT3_PCNTR1_PDR00_Msk            (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR01_Pos            (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT3_PCNTR1_PDR01_Msk            (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR02_Pos            (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT3_PCNTR1_PDR02_Msk            (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR03_Pos            (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT3_PCNTR1_PDR03_Msk            (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR04_Pos            (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT3_PCNTR1_PDR04_Msk            (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR05_Pos            (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT3_PCNTR1_PDR05_Msk            (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR06_Pos            (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT3_PCNTR1_PDR06_Msk            (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR07_Pos            (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT3_PCNTR1_PDR07_Msk            (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR08_Pos            (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT3_PCNTR1_PDR08_Msk            (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR09_Pos            (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT3_PCNTR1_PDR09_Msk            (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR10_Pos            (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT3_PCNTR1_PDR10_Msk            (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR11_Pos            (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT3_PCNTR1_PDR11_Msk            (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR12_Pos            (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT3_PCNTR1_PDR12_Msk            (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR13_Pos            (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT3_PCNTR1_PDR13_Msk            (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR14_Pos            (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT3_PCNTR1_PDR14_Msk            (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PDR15_Pos            (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT3_PCNTR1_PDR15_Msk            (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
#define PORT3_PCNTR1_PODR00_Pos           (16UL)                    /*!< PODR00 (Bit 16)                                       */
#define PORT3_PCNTR1_PODR00_Msk           (0x10000UL)               /*!< PODR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR01_Pos           (17UL)                    /*!< PODR01 (Bit 17)                                       */
#define PORT3_PCNTR1_PODR01_Msk           (0x20000UL)               /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR02_Pos           (18UL)                    /*!< PODR02 (Bit 18)                                       */
#define PORT3_PCNTR1_PODR02_Msk           (0x40000UL)               /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR03_Pos           (19UL)                    /*!< PODR03 (Bit 19)                                       */
#define PORT3_PCNTR1_PODR03_Msk           (0x80000UL)               /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR04_Pos           (20UL)                    /*!< PODR04 (Bit 20)                                       */
#define PORT3_PCNTR1_PODR04_Msk           (0x100000UL)              /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR05_Pos           (21UL)                    /*!< PODR05 (Bit 21)                                       */
#define PORT3_PCNTR1_PODR05_Msk           (0x200000UL)              /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR06_Pos           (22UL)                    /*!< PODR06 (Bit 22)                                       */
#define PORT3_PCNTR1_PODR06_Msk           (0x400000UL)              /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR07_Pos           (23UL)                    /*!< PODR07 (Bit 23)                                       */
#define PORT3_PCNTR1_PODR07_Msk           (0x800000UL)              /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR08_Pos           (24UL)                    /*!< PODR08 (Bit 24)                                       */
#define PORT3_PCNTR1_PODR08_Msk           (0x1000000UL)             /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR09_Pos           (25UL)                    /*!< PODR09 (Bit 25)                                       */
#define PORT3_PCNTR1_PODR09_Msk           (0x2000000UL)             /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR10_Pos           (26UL)                    /*!< PODR10 (Bit 26)                                       */
#define PORT3_PCNTR1_PODR10_Msk           (0x4000000UL)             /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR11_Pos           (27UL)                    /*!< PODR11 (Bit 27)                                       */
#define PORT3_PCNTR1_PODR11_Msk           (0x8000000UL)             /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR12_Pos           (28UL)                    /*!< PODR12 (Bit 28)                                       */
#define PORT3_PCNTR1_PODR12_Msk           (0x10000000UL)            /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR13_Pos           (29UL)                    /*!< PODR13 (Bit 29)                                       */
#define PORT3_PCNTR1_PODR13_Msk           (0x20000000UL)            /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR14_Pos           (30UL)                    /*!< PODR14 (Bit 30)                                       */
#define PORT3_PCNTR1_PODR14_Msk           (0x40000000UL)            /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR1_PODR15_Pos           (31UL)                    /*!< PODR15 (Bit 31)                                       */
#define PORT3_PCNTR1_PODR15_Msk           (0x80000000UL)            /*!< PODR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PODR  ========================================================== */
#define PORT3_PODR_PODR00_Pos             (0UL)                     /*!< PODR00 (Bit 0)                                        */
#define PORT3_PODR_PODR00_Msk             (0x1UL)                   /*!< PODR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR01_Pos             (1UL)                     /*!< PODR01 (Bit 1)                                        */
#define PORT3_PODR_PODR01_Msk             (0x2UL)                   /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR02_Pos             (2UL)                     /*!< PODR02 (Bit 2)                                        */
#define PORT3_PODR_PODR02_Msk             (0x4UL)                   /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR03_Pos             (3UL)                     /*!< PODR03 (Bit 3)                                        */
#define PORT3_PODR_PODR03_Msk             (0x8UL)                   /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR04_Pos             (4UL)                     /*!< PODR04 (Bit 4)                                        */
#define PORT3_PODR_PODR04_Msk             (0x10UL)                  /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR05_Pos             (5UL)                     /*!< PODR05 (Bit 5)                                        */
#define PORT3_PODR_PODR05_Msk             (0x20UL)                  /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR06_Pos             (6UL)                     /*!< PODR06 (Bit 6)                                        */
#define PORT3_PODR_PODR06_Msk             (0x40UL)                  /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR07_Pos             (7UL)                     /*!< PODR07 (Bit 7)                                        */
#define PORT3_PODR_PODR07_Msk             (0x80UL)                  /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR08_Pos             (8UL)                     /*!< PODR08 (Bit 8)                                        */
#define PORT3_PODR_PODR08_Msk             (0x100UL)                 /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR09_Pos             (9UL)                     /*!< PODR09 (Bit 9)                                        */
#define PORT3_PODR_PODR09_Msk             (0x200UL)                 /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR10_Pos             (10UL)                    /*!< PODR10 (Bit 10)                                       */
#define PORT3_PODR_PODR10_Msk             (0x400UL)                 /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR11_Pos             (11UL)                    /*!< PODR11 (Bit 11)                                       */
#define PORT3_PODR_PODR11_Msk             (0x800UL)                 /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR12_Pos             (12UL)                    /*!< PODR12 (Bit 12)                                       */
#define PORT3_PODR_PODR12_Msk             (0x1000UL)                /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR13_Pos             (13UL)                    /*!< PODR13 (Bit 13)                                       */
#define PORT3_PODR_PODR13_Msk             (0x2000UL)                /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR14_Pos             (14UL)                    /*!< PODR14 (Bit 14)                                       */
#define PORT3_PODR_PODR14_Msk             (0x4000UL)                /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_PODR_PODR15_Pos             (15UL)                    /*!< PODR15 (Bit 15)                                       */
#define PORT3_PODR_PODR15_Msk             (0x8000UL)                /*!< PODR15 (Bitfield-Mask: 0x01)                          */
/* ==========================================================  PDR  ========================================================== */
#define PORT3_PDR_PDR00_Pos               (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT3_PDR_PDR00_Msk               (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR01_Pos               (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT3_PDR_PDR01_Msk               (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR02_Pos               (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT3_PDR_PDR02_Msk               (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR03_Pos               (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT3_PDR_PDR03_Msk               (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR04_Pos               (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT3_PDR_PDR04_Msk               (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR05_Pos               (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT3_PDR_PDR05_Msk               (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR06_Pos               (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT3_PDR_PDR06_Msk               (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR07_Pos               (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT3_PDR_PDR07_Msk               (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR08_Pos               (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT3_PDR_PDR08_Msk               (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR09_Pos               (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT3_PDR_PDR09_Msk               (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR10_Pos               (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT3_PDR_PDR10_Msk               (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR11_Pos               (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT3_PDR_PDR11_Msk               (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR12_Pos               (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT3_PDR_PDR12_Msk               (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR13_Pos               (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT3_PDR_PDR13_Msk               (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR14_Pos               (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT3_PDR_PDR14_Msk               (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT3_PDR_PDR15_Pos               (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT3_PDR_PDR15_Msk               (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
/* ========================================================  PCNTR2  ========================================================= */
#define PORT3_PCNTR2_PIDR00_Pos           (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT3_PCNTR2_PIDR00_Msk           (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR01_Pos           (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT3_PCNTR2_PIDR01_Msk           (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR02_Pos           (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT3_PCNTR2_PIDR02_Msk           (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR03_Pos           (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT3_PCNTR2_PIDR03_Msk           (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR04_Pos           (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT3_PCNTR2_PIDR04_Msk           (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR05_Pos           (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT3_PCNTR2_PIDR05_Msk           (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR06_Pos           (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT3_PCNTR2_PIDR06_Msk           (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR07_Pos           (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT3_PCNTR2_PIDR07_Msk           (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR08_Pos           (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT3_PCNTR2_PIDR08_Msk           (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR09_Pos           (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT3_PCNTR2_PIDR09_Msk           (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR10_Pos           (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT3_PCNTR2_PIDR10_Msk           (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR11_Pos           (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT3_PCNTR2_PIDR11_Msk           (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR12_Pos           (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT3_PCNTR2_PIDR12_Msk           (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR13_Pos           (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT3_PCNTR2_PIDR13_Msk           (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR14_Pos           (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT3_PCNTR2_PIDR14_Msk           (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_PIDR15_Pos           (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT3_PCNTR2_PIDR15_Msk           (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR00_Pos           (16UL)                    /*!< EIDR00 (Bit 16)                                       */
#define PORT3_PCNTR2_EIDR00_Msk           (0x10000UL)               /*!< EIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR01_Pos           (17UL)                    /*!< EIDR01 (Bit 17)                                       */
#define PORT3_PCNTR2_EIDR01_Msk           (0x20000UL)               /*!< EIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR02_Pos           (18UL)                    /*!< EIDR02 (Bit 18)                                       */
#define PORT3_PCNTR2_EIDR02_Msk           (0x40000UL)               /*!< EIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR03_Pos           (19UL)                    /*!< EIDR03 (Bit 19)                                       */
#define PORT3_PCNTR2_EIDR03_Msk           (0x80000UL)               /*!< EIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR04_Pos           (20UL)                    /*!< EIDR04 (Bit 20)                                       */
#define PORT3_PCNTR2_EIDR04_Msk           (0x100000UL)              /*!< EIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR05_Pos           (21UL)                    /*!< EIDR05 (Bit 21)                                       */
#define PORT3_PCNTR2_EIDR05_Msk           (0x200000UL)              /*!< EIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR06_Pos           (22UL)                    /*!< EIDR06 (Bit 22)                                       */
#define PORT3_PCNTR2_EIDR06_Msk           (0x400000UL)              /*!< EIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR07_Pos           (23UL)                    /*!< EIDR07 (Bit 23)                                       */
#define PORT3_PCNTR2_EIDR07_Msk           (0x800000UL)              /*!< EIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR08_Pos           (24UL)                    /*!< EIDR08 (Bit 24)                                       */
#define PORT3_PCNTR2_EIDR08_Msk           (0x1000000UL)             /*!< EIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR09_Pos           (25UL)                    /*!< EIDR09 (Bit 25)                                       */
#define PORT3_PCNTR2_EIDR09_Msk           (0x2000000UL)             /*!< EIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR10_Pos           (26UL)                    /*!< EIDR10 (Bit 26)                                       */
#define PORT3_PCNTR2_EIDR10_Msk           (0x4000000UL)             /*!< EIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR11_Pos           (27UL)                    /*!< EIDR11 (Bit 27)                                       */
#define PORT3_PCNTR2_EIDR11_Msk           (0x8000000UL)             /*!< EIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR12_Pos           (28UL)                    /*!< EIDR12 (Bit 28)                                       */
#define PORT3_PCNTR2_EIDR12_Msk           (0x10000000UL)            /*!< EIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR13_Pos           (29UL)                    /*!< EIDR13 (Bit 29)                                       */
#define PORT3_PCNTR2_EIDR13_Msk           (0x20000000UL)            /*!< EIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR14_Pos           (30UL)                    /*!< EIDR14 (Bit 30)                                       */
#define PORT3_PCNTR2_EIDR14_Msk           (0x40000000UL)            /*!< EIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR2_EIDR15_Pos           (31UL)                    /*!< EIDR15 (Bit 31)                                       */
#define PORT3_PCNTR2_EIDR15_Msk           (0x80000000UL)            /*!< EIDR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  EIDR  ========================================================== */
#define PORT3_EIDR_EIDR00_Pos             (0UL)                     /*!< EIDR00 (Bit 0)                                        */
#define PORT3_EIDR_EIDR00_Msk             (0x1UL)                   /*!< EIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR01_Pos             (1UL)                     /*!< EIDR01 (Bit 1)                                        */
#define PORT3_EIDR_EIDR01_Msk             (0x2UL)                   /*!< EIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR02_Pos             (2UL)                     /*!< EIDR02 (Bit 2)                                        */
#define PORT3_EIDR_EIDR02_Msk             (0x4UL)                   /*!< EIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR03_Pos             (3UL)                     /*!< EIDR03 (Bit 3)                                        */
#define PORT3_EIDR_EIDR03_Msk             (0x8UL)                   /*!< EIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR04_Pos             (4UL)                     /*!< EIDR04 (Bit 4)                                        */
#define PORT3_EIDR_EIDR04_Msk             (0x10UL)                  /*!< EIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR05_Pos             (5UL)                     /*!< EIDR05 (Bit 5)                                        */
#define PORT3_EIDR_EIDR05_Msk             (0x20UL)                  /*!< EIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR06_Pos             (6UL)                     /*!< EIDR06 (Bit 6)                                        */
#define PORT3_EIDR_EIDR06_Msk             (0x40UL)                  /*!< EIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR07_Pos             (7UL)                     /*!< EIDR07 (Bit 7)                                        */
#define PORT3_EIDR_EIDR07_Msk             (0x80UL)                  /*!< EIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR08_Pos             (8UL)                     /*!< EIDR08 (Bit 8)                                        */
#define PORT3_EIDR_EIDR08_Msk             (0x100UL)                 /*!< EIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR09_Pos             (9UL)                     /*!< EIDR09 (Bit 9)                                        */
#define PORT3_EIDR_EIDR09_Msk             (0x200UL)                 /*!< EIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR10_Pos             (10UL)                    /*!< EIDR10 (Bit 10)                                       */
#define PORT3_EIDR_EIDR10_Msk             (0x400UL)                 /*!< EIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR11_Pos             (11UL)                    /*!< EIDR11 (Bit 11)                                       */
#define PORT3_EIDR_EIDR11_Msk             (0x800UL)                 /*!< EIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR12_Pos             (12UL)                    /*!< EIDR12 (Bit 12)                                       */
#define PORT3_EIDR_EIDR12_Msk             (0x1000UL)                /*!< EIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR13_Pos             (13UL)                    /*!< EIDR13 (Bit 13)                                       */
#define PORT3_EIDR_EIDR13_Msk             (0x2000UL)                /*!< EIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR14_Pos             (14UL)                    /*!< EIDR14 (Bit 14)                                       */
#define PORT3_EIDR_EIDR14_Msk             (0x4000UL)                /*!< EIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_EIDR_EIDR15_Pos             (15UL)                    /*!< EIDR15 (Bit 15)                                       */
#define PORT3_EIDR_EIDR15_Msk             (0x8000UL)                /*!< EIDR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PIDR  ========================================================== */
#define PORT3_PIDR_PIDR00_Pos             (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT3_PIDR_PIDR00_Msk             (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR01_Pos             (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT3_PIDR_PIDR01_Msk             (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR02_Pos             (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT3_PIDR_PIDR02_Msk             (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR03_Pos             (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT3_PIDR_PIDR03_Msk             (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR04_Pos             (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT3_PIDR_PIDR04_Msk             (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR05_Pos             (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT3_PIDR_PIDR05_Msk             (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR06_Pos             (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT3_PIDR_PIDR06_Msk             (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR07_Pos             (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT3_PIDR_PIDR07_Msk             (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR08_Pos             (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT3_PIDR_PIDR08_Msk             (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR09_Pos             (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT3_PIDR_PIDR09_Msk             (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR10_Pos             (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT3_PIDR_PIDR10_Msk             (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR11_Pos             (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT3_PIDR_PIDR11_Msk             (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR12_Pos             (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT3_PIDR_PIDR12_Msk             (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR13_Pos             (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT3_PIDR_PIDR13_Msk             (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR14_Pos             (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT3_PIDR_PIDR14_Msk             (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_PIDR_PIDR15_Pos             (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT3_PIDR_PIDR15_Msk             (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
/* ========================================================  PCNTR3  ========================================================= */
#define PORT3_PCNTR3_POSR00_Pos           (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT3_PCNTR3_POSR00_Msk           (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR01_Pos           (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT3_PCNTR3_POSR01_Msk           (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR02_Pos           (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT3_PCNTR3_POSR02_Msk           (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR03_Pos           (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT3_PCNTR3_POSR03_Msk           (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR04_Pos           (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT3_PCNTR3_POSR04_Msk           (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR05_Pos           (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT3_PCNTR3_POSR05_Msk           (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR06_Pos           (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT3_PCNTR3_POSR06_Msk           (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR07_Pos           (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT3_PCNTR3_POSR07_Msk           (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR08_Pos           (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT3_PCNTR3_POSR08_Msk           (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR09_Pos           (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT3_PCNTR3_POSR09_Msk           (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR10_Pos           (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT3_PCNTR3_POSR10_Msk           (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR11_Pos           (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT3_PCNTR3_POSR11_Msk           (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR12_Pos           (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT3_PCNTR3_POSR12_Msk           (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR13_Pos           (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT3_PCNTR3_POSR13_Msk           (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR14_Pos           (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT3_PCNTR3_POSR14_Msk           (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_POSR15_Pos           (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT3_PCNTR3_POSR15_Msk           (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR00_Pos           (16UL)                    /*!< PORR00 (Bit 16)                                       */
#define PORT3_PCNTR3_PORR00_Msk           (0x10000UL)               /*!< PORR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR01_Pos           (17UL)                    /*!< PORR01 (Bit 17)                                       */
#define PORT3_PCNTR3_PORR01_Msk           (0x20000UL)               /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR02_Pos           (18UL)                    /*!< PORR02 (Bit 18)                                       */
#define PORT3_PCNTR3_PORR02_Msk           (0x40000UL)               /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR03_Pos           (19UL)                    /*!< PORR03 (Bit 19)                                       */
#define PORT3_PCNTR3_PORR03_Msk           (0x80000UL)               /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR04_Pos           (20UL)                    /*!< PORR04 (Bit 20)                                       */
#define PORT3_PCNTR3_PORR04_Msk           (0x100000UL)              /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR05_Pos           (21UL)                    /*!< PORR05 (Bit 21)                                       */
#define PORT3_PCNTR3_PORR05_Msk           (0x200000UL)              /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR06_Pos           (22UL)                    /*!< PORR06 (Bit 22)                                       */
#define PORT3_PCNTR3_PORR06_Msk           (0x400000UL)              /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR07_Pos           (23UL)                    /*!< PORR07 (Bit 23)                                       */
#define PORT3_PCNTR3_PORR07_Msk           (0x800000UL)              /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR08_Pos           (24UL)                    /*!< PORR08 (Bit 24)                                       */
#define PORT3_PCNTR3_PORR08_Msk           (0x1000000UL)             /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR09_Pos           (25UL)                    /*!< PORR09 (Bit 25)                                       */
#define PORT3_PCNTR3_PORR09_Msk           (0x2000000UL)             /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR10_Pos           (26UL)                    /*!< PORR10 (Bit 26)                                       */
#define PORT3_PCNTR3_PORR10_Msk           (0x4000000UL)             /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR11_Pos           (27UL)                    /*!< PORR11 (Bit 27)                                       */
#define PORT3_PCNTR3_PORR11_Msk           (0x8000000UL)             /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR12_Pos           (28UL)                    /*!< PORR12 (Bit 28)                                       */
#define PORT3_PCNTR3_PORR12_Msk           (0x10000000UL)            /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR13_Pos           (29UL)                    /*!< PORR13 (Bit 29)                                       */
#define PORT3_PCNTR3_PORR13_Msk           (0x20000000UL)            /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR14_Pos           (30UL)                    /*!< PORR14 (Bit 30)                                       */
#define PORT3_PCNTR3_PORR14_Msk           (0x40000000UL)            /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR3_PORR15_Pos           (31UL)                    /*!< PORR15 (Bit 31)                                       */
#define PORT3_PCNTR3_PORR15_Msk           (0x80000000UL)            /*!< PORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PORR  ========================================================== */
#define PORT3_PORR_PORR00_Pos             (0UL)                     /*!< PORR00 (Bit 0)                                        */
#define PORT3_PORR_PORR00_Msk             (0x1UL)                   /*!< PORR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR01_Pos             (1UL)                     /*!< PORR01 (Bit 1)                                        */
#define PORT3_PORR_PORR01_Msk             (0x2UL)                   /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR02_Pos             (2UL)                     /*!< PORR02 (Bit 2)                                        */
#define PORT3_PORR_PORR02_Msk             (0x4UL)                   /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR03_Pos             (3UL)                     /*!< PORR03 (Bit 3)                                        */
#define PORT3_PORR_PORR03_Msk             (0x8UL)                   /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR04_Pos             (4UL)                     /*!< PORR04 (Bit 4)                                        */
#define PORT3_PORR_PORR04_Msk             (0x10UL)                  /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR05_Pos             (5UL)                     /*!< PORR05 (Bit 5)                                        */
#define PORT3_PORR_PORR05_Msk             (0x20UL)                  /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR06_Pos             (6UL)                     /*!< PORR06 (Bit 6)                                        */
#define PORT3_PORR_PORR06_Msk             (0x40UL)                  /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR07_Pos             (7UL)                     /*!< PORR07 (Bit 7)                                        */
#define PORT3_PORR_PORR07_Msk             (0x80UL)                  /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR08_Pos             (8UL)                     /*!< PORR08 (Bit 8)                                        */
#define PORT3_PORR_PORR08_Msk             (0x100UL)                 /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR09_Pos             (9UL)                     /*!< PORR09 (Bit 9)                                        */
#define PORT3_PORR_PORR09_Msk             (0x200UL)                 /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR10_Pos             (10UL)                    /*!< PORR10 (Bit 10)                                       */
#define PORT3_PORR_PORR10_Msk             (0x400UL)                 /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR11_Pos             (11UL)                    /*!< PORR11 (Bit 11)                                       */
#define PORT3_PORR_PORR11_Msk             (0x800UL)                 /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR12_Pos             (12UL)                    /*!< PORR12 (Bit 12)                                       */
#define PORT3_PORR_PORR12_Msk             (0x1000UL)                /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR13_Pos             (13UL)                    /*!< PORR13 (Bit 13)                                       */
#define PORT3_PORR_PORR13_Msk             (0x2000UL)                /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR14_Pos             (14UL)                    /*!< PORR14 (Bit 14)                                       */
#define PORT3_PORR_PORR14_Msk             (0x4000UL)                /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_PORR_PORR15_Pos             (15UL)                    /*!< PORR15 (Bit 15)                                       */
#define PORT3_PORR_PORR15_Msk             (0x8000UL)                /*!< PORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  POSR  ========================================================== */
#define PORT3_POSR_POSR00_Pos             (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT3_POSR_POSR00_Msk             (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR01_Pos             (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT3_POSR_POSR01_Msk             (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR02_Pos             (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT3_POSR_POSR02_Msk             (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR03_Pos             (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT3_POSR_POSR03_Msk             (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR04_Pos             (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT3_POSR_POSR04_Msk             (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR05_Pos             (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT3_POSR_POSR05_Msk             (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR06_Pos             (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT3_POSR_POSR06_Msk             (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR07_Pos             (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT3_POSR_POSR07_Msk             (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR08_Pos             (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT3_POSR_POSR08_Msk             (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR09_Pos             (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT3_POSR_POSR09_Msk             (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR10_Pos             (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT3_POSR_POSR10_Msk             (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR11_Pos             (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT3_POSR_POSR11_Msk             (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR12_Pos             (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT3_POSR_POSR12_Msk             (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR13_Pos             (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT3_POSR_POSR13_Msk             (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR14_Pos             (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT3_POSR_POSR14_Msk             (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_POSR_POSR15_Pos             (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT3_POSR_POSR15_Msk             (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */
/* ========================================================  PCNTR4  ========================================================= */
#define PORT3_PCNTR4_EOSR00_Pos           (0UL)                     /*!< EOSR00 (Bit 0)                                        */
#define PORT3_PCNTR4_EOSR00_Msk           (0x1UL)                   /*!< EOSR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR01_Pos           (1UL)                     /*!< EOSR01 (Bit 1)                                        */
#define PORT3_PCNTR4_EOSR01_Msk           (0x2UL)                   /*!< EOSR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR02_Pos           (2UL)                     /*!< EOSR02 (Bit 2)                                        */
#define PORT3_PCNTR4_EOSR02_Msk           (0x4UL)                   /*!< EOSR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR03_Pos           (3UL)                     /*!< EOSR03 (Bit 3)                                        */
#define PORT3_PCNTR4_EOSR03_Msk           (0x8UL)                   /*!< EOSR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR04_Pos           (4UL)                     /*!< EOSR04 (Bit 4)                                        */
#define PORT3_PCNTR4_EOSR04_Msk           (0x10UL)                  /*!< EOSR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR05_Pos           (5UL)                     /*!< EOSR05 (Bit 5)                                        */
#define PORT3_PCNTR4_EOSR05_Msk           (0x20UL)                  /*!< EOSR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR06_Pos           (6UL)                     /*!< EOSR06 (Bit 6)                                        */
#define PORT3_PCNTR4_EOSR06_Msk           (0x40UL)                  /*!< EOSR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR07_Pos           (7UL)                     /*!< EOSR07 (Bit 7)                                        */
#define PORT3_PCNTR4_EOSR07_Msk           (0x80UL)                  /*!< EOSR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR08_Pos           (8UL)                     /*!< EOSR08 (Bit 8)                                        */
#define PORT3_PCNTR4_EOSR08_Msk           (0x100UL)                 /*!< EOSR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR09_Pos           (9UL)                     /*!< EOSR09 (Bit 9)                                        */
#define PORT3_PCNTR4_EOSR09_Msk           (0x200UL)                 /*!< EOSR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR10_Pos           (10UL)                    /*!< EOSR10 (Bit 10)                                       */
#define PORT3_PCNTR4_EOSR10_Msk           (0x400UL)                 /*!< EOSR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR11_Pos           (11UL)                    /*!< EOSR11 (Bit 11)                                       */
#define PORT3_PCNTR4_EOSR11_Msk           (0x800UL)                 /*!< EOSR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR12_Pos           (12UL)                    /*!< EOSR12 (Bit 12)                                       */
#define PORT3_PCNTR4_EOSR12_Msk           (0x1000UL)                /*!< EOSR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR13_Pos           (13UL)                    /*!< EOSR13 (Bit 13)                                       */
#define PORT3_PCNTR4_EOSR13_Msk           (0x2000UL)                /*!< EOSR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR14_Pos           (14UL)                    /*!< EOSR14 (Bit 14)                                       */
#define PORT3_PCNTR4_EOSR14_Msk           (0x4000UL)                /*!< EOSR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EOSR15_Pos           (15UL)                    /*!< EOSR15 (Bit 15)                                       */
#define PORT3_PCNTR4_EOSR15_Msk           (0x8000UL)                /*!< EOSR15 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR00_Pos           (16UL)                    /*!< EORR00 (Bit 16)                                       */
#define PORT3_PCNTR4_EORR00_Msk           (0x10000UL)               /*!< EORR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR01_Pos           (17UL)                    /*!< EORR01 (Bit 17)                                       */
#define PORT3_PCNTR4_EORR01_Msk           (0x20000UL)               /*!< EORR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR02_Pos           (18UL)                    /*!< EORR02 (Bit 18)                                       */
#define PORT3_PCNTR4_EORR02_Msk           (0x40000UL)               /*!< EORR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR03_Pos           (19UL)                    /*!< EORR03 (Bit 19)                                       */
#define PORT3_PCNTR4_EORR03_Msk           (0x80000UL)               /*!< EORR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR04_Pos           (20UL)                    /*!< EORR04 (Bit 20)                                       */
#define PORT3_PCNTR4_EORR04_Msk           (0x100000UL)              /*!< EORR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR05_Pos           (21UL)                    /*!< EORR05 (Bit 21)                                       */
#define PORT3_PCNTR4_EORR05_Msk           (0x200000UL)              /*!< EORR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR06_Pos           (22UL)                    /*!< EORR06 (Bit 22)                                       */
#define PORT3_PCNTR4_EORR06_Msk           (0x400000UL)              /*!< EORR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR07_Pos           (23UL)                    /*!< EORR07 (Bit 23)                                       */
#define PORT3_PCNTR4_EORR07_Msk           (0x800000UL)              /*!< EORR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR08_Pos           (24UL)                    /*!< EORR08 (Bit 24)                                       */
#define PORT3_PCNTR4_EORR08_Msk           (0x1000000UL)             /*!< EORR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR09_Pos           (25UL)                    /*!< EORR09 (Bit 25)                                       */
#define PORT3_PCNTR4_EORR09_Msk           (0x2000000UL)             /*!< EORR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR10_Pos           (26UL)                    /*!< EORR10 (Bit 26)                                       */
#define PORT3_PCNTR4_EORR10_Msk           (0x4000000UL)             /*!< EORR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR11_Pos           (27UL)                    /*!< EORR11 (Bit 27)                                       */
#define PORT3_PCNTR4_EORR11_Msk           (0x8000000UL)             /*!< EORR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR12_Pos           (28UL)                    /*!< EORR12 (Bit 28)                                       */
#define PORT3_PCNTR4_EORR12_Msk           (0x10000000UL)            /*!< EORR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR13_Pos           (29UL)                    /*!< EORR13 (Bit 29)                                       */
#define PORT3_PCNTR4_EORR13_Msk           (0x20000000UL)            /*!< EORR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR14_Pos           (30UL)                    /*!< EORR14 (Bit 30)                                       */
#define PORT3_PCNTR4_EORR14_Msk           (0x40000000UL)            /*!< EORR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_PCNTR4_EORR15_Pos           (31UL)                    /*!< EORR15 (Bit 31)                                       */
#define PORT3_PCNTR4_EORR15_Msk           (0x80000000UL)            /*!< EORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  EORR  ========================================================== */
#define PORT3_EORR_EORR00_Pos             (0UL)                     /*!< EORR00 (Bit 0)                                        */
#define PORT3_EORR_EORR00_Msk             (0x1UL)                   /*!< EORR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR01_Pos             (1UL)                     /*!< EORR01 (Bit 1)                                        */
#define PORT3_EORR_EORR01_Msk             (0x2UL)                   /*!< EORR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR02_Pos             (2UL)                     /*!< EORR02 (Bit 2)                                        */
#define PORT3_EORR_EORR02_Msk             (0x4UL)                   /*!< EORR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR03_Pos             (3UL)                     /*!< EORR03 (Bit 3)                                        */
#define PORT3_EORR_EORR03_Msk             (0x8UL)                   /*!< EORR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR04_Pos             (4UL)                     /*!< EORR04 (Bit 4)                                        */
#define PORT3_EORR_EORR04_Msk             (0x10UL)                  /*!< EORR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR05_Pos             (5UL)                     /*!< EORR05 (Bit 5)                                        */
#define PORT3_EORR_EORR05_Msk             (0x20UL)                  /*!< EORR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR06_Pos             (6UL)                     /*!< EORR06 (Bit 6)                                        */
#define PORT3_EORR_EORR06_Msk             (0x40UL)                  /*!< EORR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR07_Pos             (7UL)                     /*!< EORR07 (Bit 7)                                        */
#define PORT3_EORR_EORR07_Msk             (0x80UL)                  /*!< EORR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR08_Pos             (8UL)                     /*!< EORR08 (Bit 8)                                        */
#define PORT3_EORR_EORR08_Msk             (0x100UL)                 /*!< EORR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR09_Pos             (9UL)                     /*!< EORR09 (Bit 9)                                        */
#define PORT3_EORR_EORR09_Msk             (0x200UL)                 /*!< EORR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR10_Pos             (10UL)                    /*!< EORR10 (Bit 10)                                       */
#define PORT3_EORR_EORR10_Msk             (0x400UL)                 /*!< EORR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR11_Pos             (11UL)                    /*!< EORR11 (Bit 11)                                       */
#define PORT3_EORR_EORR11_Msk             (0x800UL)                 /*!< EORR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR12_Pos             (12UL)                    /*!< EORR12 (Bit 12)                                       */
#define PORT3_EORR_EORR12_Msk             (0x1000UL)                /*!< EORR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR13_Pos             (13UL)                    /*!< EORR13 (Bit 13)                                       */
#define PORT3_EORR_EORR13_Msk             (0x2000UL)                /*!< EORR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR14_Pos             (14UL)                    /*!< EORR14 (Bit 14)                                       */
#define PORT3_EORR_EORR14_Msk             (0x4000UL)                /*!< EORR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_EORR_EORR15_Pos             (15UL)                    /*!< EORR15 (Bit 15)                                       */
#define PORT3_EORR_EORR15_Msk             (0x8000UL)                /*!< EORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  EOSR  ========================================================== */
#define PORT3_EOSR_EOSR00_Pos             (0UL)                     /*!< EOSR00 (Bit 0)                                        */
#define PORT3_EOSR_EOSR00_Msk             (0x1UL)                   /*!< EOSR00 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR01_Pos             (1UL)                     /*!< EOSR01 (Bit 1)                                        */
#define PORT3_EOSR_EOSR01_Msk             (0x2UL)                   /*!< EOSR01 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR02_Pos             (2UL)                     /*!< EOSR02 (Bit 2)                                        */
#define PORT3_EOSR_EOSR02_Msk             (0x4UL)                   /*!< EOSR02 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR03_Pos             (3UL)                     /*!< EOSR03 (Bit 3)                                        */
#define PORT3_EOSR_EOSR03_Msk             (0x8UL)                   /*!< EOSR03 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR04_Pos             (4UL)                     /*!< EOSR04 (Bit 4)                                        */
#define PORT3_EOSR_EOSR04_Msk             (0x10UL)                  /*!< EOSR04 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR05_Pos             (5UL)                     /*!< EOSR05 (Bit 5)                                        */
#define PORT3_EOSR_EOSR05_Msk             (0x20UL)                  /*!< EOSR05 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR06_Pos             (6UL)                     /*!< EOSR06 (Bit 6)                                        */
#define PORT3_EOSR_EOSR06_Msk             (0x40UL)                  /*!< EOSR06 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR07_Pos             (7UL)                     /*!< EOSR07 (Bit 7)                                        */
#define PORT3_EOSR_EOSR07_Msk             (0x80UL)                  /*!< EOSR07 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR08_Pos             (8UL)                     /*!< EOSR08 (Bit 8)                                        */
#define PORT3_EOSR_EOSR08_Msk             (0x100UL)                 /*!< EOSR08 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR09_Pos             (9UL)                     /*!< EOSR09 (Bit 9)                                        */
#define PORT3_EOSR_EOSR09_Msk             (0x200UL)                 /*!< EOSR09 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR10_Pos             (10UL)                    /*!< EOSR10 (Bit 10)                                       */
#define PORT3_EOSR_EOSR10_Msk             (0x400UL)                 /*!< EOSR10 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR11_Pos             (11UL)                    /*!< EOSR11 (Bit 11)                                       */
#define PORT3_EOSR_EOSR11_Msk             (0x800UL)                 /*!< EOSR11 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR12_Pos             (12UL)                    /*!< EOSR12 (Bit 12)                                       */
#define PORT3_EOSR_EOSR12_Msk             (0x1000UL)                /*!< EOSR12 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR13_Pos             (13UL)                    /*!< EOSR13 (Bit 13)                                       */
#define PORT3_EOSR_EOSR13_Msk             (0x2000UL)                /*!< EOSR13 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR14_Pos             (14UL)                    /*!< EOSR14 (Bit 14)                                       */
#define PORT3_EOSR_EOSR14_Msk             (0x4000UL)                /*!< EOSR14 (Bitfield-Mask: 0x01)                          */
#define PORT3_EOSR_EOSR15_Pos             (15UL)                    /*!< EOSR15 (Bit 15)                                       */
#define PORT3_EOSR_EOSR15_Msk             (0x8000UL)                /*!< EOSR15 (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           PORT4                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  PCNTR1  ========================================================= */
#define PORT4_PCNTR1_PDR00_Pos            (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT4_PCNTR1_PDR00_Msk            (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR01_Pos            (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT4_PCNTR1_PDR01_Msk            (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR02_Pos            (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT4_PCNTR1_PDR02_Msk            (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR03_Pos            (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT4_PCNTR1_PDR03_Msk            (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR04_Pos            (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT4_PCNTR1_PDR04_Msk            (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR05_Pos            (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT4_PCNTR1_PDR05_Msk            (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR06_Pos            (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT4_PCNTR1_PDR06_Msk            (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR07_Pos            (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT4_PCNTR1_PDR07_Msk            (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR08_Pos            (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT4_PCNTR1_PDR08_Msk            (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR09_Pos            (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT4_PCNTR1_PDR09_Msk            (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR10_Pos            (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT4_PCNTR1_PDR10_Msk            (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR11_Pos            (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT4_PCNTR1_PDR11_Msk            (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR12_Pos            (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT4_PCNTR1_PDR12_Msk            (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR13_Pos            (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT4_PCNTR1_PDR13_Msk            (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR14_Pos            (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT4_PCNTR1_PDR14_Msk            (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PDR15_Pos            (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT4_PCNTR1_PDR15_Msk            (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
#define PORT4_PCNTR1_PODR00_Pos           (16UL)                    /*!< PODR00 (Bit 16)                                       */
#define PORT4_PCNTR1_PODR00_Msk           (0x10000UL)               /*!< PODR00 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR01_Pos           (17UL)                    /*!< PODR01 (Bit 17)                                       */
#define PORT4_PCNTR1_PODR01_Msk           (0x20000UL)               /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR02_Pos           (18UL)                    /*!< PODR02 (Bit 18)                                       */
#define PORT4_PCNTR1_PODR02_Msk           (0x40000UL)               /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR03_Pos           (19UL)                    /*!< PODR03 (Bit 19)                                       */
#define PORT4_PCNTR1_PODR03_Msk           (0x80000UL)               /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR04_Pos           (20UL)                    /*!< PODR04 (Bit 20)                                       */
#define PORT4_PCNTR1_PODR04_Msk           (0x100000UL)              /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR05_Pos           (21UL)                    /*!< PODR05 (Bit 21)                                       */
#define PORT4_PCNTR1_PODR05_Msk           (0x200000UL)              /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR06_Pos           (22UL)                    /*!< PODR06 (Bit 22)                                       */
#define PORT4_PCNTR1_PODR06_Msk           (0x400000UL)              /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR07_Pos           (23UL)                    /*!< PODR07 (Bit 23)                                       */
#define PORT4_PCNTR1_PODR07_Msk           (0x800000UL)              /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR08_Pos           (24UL)                    /*!< PODR08 (Bit 24)                                       */
#define PORT4_PCNTR1_PODR08_Msk           (0x1000000UL)             /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR09_Pos           (25UL)                    /*!< PODR09 (Bit 25)                                       */
#define PORT4_PCNTR1_PODR09_Msk           (0x2000000UL)             /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR10_Pos           (26UL)                    /*!< PODR10 (Bit 26)                                       */
#define PORT4_PCNTR1_PODR10_Msk           (0x4000000UL)             /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR11_Pos           (27UL)                    /*!< PODR11 (Bit 27)                                       */
#define PORT4_PCNTR1_PODR11_Msk           (0x8000000UL)             /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR12_Pos           (28UL)                    /*!< PODR12 (Bit 28)                                       */
#define PORT4_PCNTR1_PODR12_Msk           (0x10000000UL)            /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR13_Pos           (29UL)                    /*!< PODR13 (Bit 29)                                       */
#define PORT4_PCNTR1_PODR13_Msk           (0x20000000UL)            /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR14_Pos           (30UL)                    /*!< PODR14 (Bit 30)                                       */
#define PORT4_PCNTR1_PODR14_Msk           (0x40000000UL)            /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR1_PODR15_Pos           (31UL)                    /*!< PODR15 (Bit 31)                                       */
#define PORT4_PCNTR1_PODR15_Msk           (0x80000000UL)            /*!< PODR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PODR  ========================================================== */
#define PORT4_PODR_PODR00_Pos             (0UL)                     /*!< PODR00 (Bit 0)                                        */
#define PORT4_PODR_PODR00_Msk             (0x1UL)                   /*!< PODR00 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR01_Pos             (1UL)                     /*!< PODR01 (Bit 1)                                        */
#define PORT4_PODR_PODR01_Msk             (0x2UL)                   /*!< PODR01 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR02_Pos             (2UL)                     /*!< PODR02 (Bit 2)                                        */
#define PORT4_PODR_PODR02_Msk             (0x4UL)                   /*!< PODR02 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR03_Pos             (3UL)                     /*!< PODR03 (Bit 3)                                        */
#define PORT4_PODR_PODR03_Msk             (0x8UL)                   /*!< PODR03 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR04_Pos             (4UL)                     /*!< PODR04 (Bit 4)                                        */
#define PORT4_PODR_PODR04_Msk             (0x10UL)                  /*!< PODR04 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR05_Pos             (5UL)                     /*!< PODR05 (Bit 5)                                        */
#define PORT4_PODR_PODR05_Msk             (0x20UL)                  /*!< PODR05 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR06_Pos             (6UL)                     /*!< PODR06 (Bit 6)                                        */
#define PORT4_PODR_PODR06_Msk             (0x40UL)                  /*!< PODR06 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR07_Pos             (7UL)                     /*!< PODR07 (Bit 7)                                        */
#define PORT4_PODR_PODR07_Msk             (0x80UL)                  /*!< PODR07 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR08_Pos             (8UL)                     /*!< PODR08 (Bit 8)                                        */
#define PORT4_PODR_PODR08_Msk             (0x100UL)                 /*!< PODR08 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR09_Pos             (9UL)                     /*!< PODR09 (Bit 9)                                        */
#define PORT4_PODR_PODR09_Msk             (0x200UL)                 /*!< PODR09 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR10_Pos             (10UL)                    /*!< PODR10 (Bit 10)                                       */
#define PORT4_PODR_PODR10_Msk             (0x400UL)                 /*!< PODR10 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR11_Pos             (11UL)                    /*!< PODR11 (Bit 11)                                       */
#define PORT4_PODR_PODR11_Msk             (0x800UL)                 /*!< PODR11 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR12_Pos             (12UL)                    /*!< PODR12 (Bit 12)                                       */
#define PORT4_PODR_PODR12_Msk             (0x1000UL)                /*!< PODR12 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR13_Pos             (13UL)                    /*!< PODR13 (Bit 13)                                       */
#define PORT4_PODR_PODR13_Msk             (0x2000UL)                /*!< PODR13 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR14_Pos             (14UL)                    /*!< PODR14 (Bit 14)                                       */
#define PORT4_PODR_PODR14_Msk             (0x4000UL)                /*!< PODR14 (Bitfield-Mask: 0x01)                          */
#define PORT4_PODR_PODR15_Pos             (15UL)                    /*!< PODR15 (Bit 15)                                       */
#define PORT4_PODR_PODR15_Msk             (0x8000UL)                /*!< PODR15 (Bitfield-Mask: 0x01)                          */
/* ==========================================================  PDR  ========================================================== */
#define PORT4_PDR_PDR00_Pos               (0UL)                     /*!< PDR00 (Bit 0)                                         */
#define PORT4_PDR_PDR00_Msk               (0x1UL)                   /*!< PDR00 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR01_Pos               (1UL)                     /*!< PDR01 (Bit 1)                                         */
#define PORT4_PDR_PDR01_Msk               (0x2UL)                   /*!< PDR01 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR02_Pos               (2UL)                     /*!< PDR02 (Bit 2)                                         */
#define PORT4_PDR_PDR02_Msk               (0x4UL)                   /*!< PDR02 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR03_Pos               (3UL)                     /*!< PDR03 (Bit 3)                                         */
#define PORT4_PDR_PDR03_Msk               (0x8UL)                   /*!< PDR03 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR04_Pos               (4UL)                     /*!< PDR04 (Bit 4)                                         */
#define PORT4_PDR_PDR04_Msk               (0x10UL)                  /*!< PDR04 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR05_Pos               (5UL)                     /*!< PDR05 (Bit 5)                                         */
#define PORT4_PDR_PDR05_Msk               (0x20UL)                  /*!< PDR05 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR06_Pos               (6UL)                     /*!< PDR06 (Bit 6)                                         */
#define PORT4_PDR_PDR06_Msk               (0x40UL)                  /*!< PDR06 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR07_Pos               (7UL)                     /*!< PDR07 (Bit 7)                                         */
#define PORT4_PDR_PDR07_Msk               (0x80UL)                  /*!< PDR07 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR08_Pos               (8UL)                     /*!< PDR08 (Bit 8)                                         */
#define PORT4_PDR_PDR08_Msk               (0x100UL)                 /*!< PDR08 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR09_Pos               (9UL)                     /*!< PDR09 (Bit 9)                                         */
#define PORT4_PDR_PDR09_Msk               (0x200UL)                 /*!< PDR09 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR10_Pos               (10UL)                    /*!< PDR10 (Bit 10)                                        */
#define PORT4_PDR_PDR10_Msk               (0x400UL)                 /*!< PDR10 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR11_Pos               (11UL)                    /*!< PDR11 (Bit 11)                                        */
#define PORT4_PDR_PDR11_Msk               (0x800UL)                 /*!< PDR11 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR12_Pos               (12UL)                    /*!< PDR12 (Bit 12)                                        */
#define PORT4_PDR_PDR12_Msk               (0x1000UL)                /*!< PDR12 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR13_Pos               (13UL)                    /*!< PDR13 (Bit 13)                                        */
#define PORT4_PDR_PDR13_Msk               (0x2000UL)                /*!< PDR13 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR14_Pos               (14UL)                    /*!< PDR14 (Bit 14)                                        */
#define PORT4_PDR_PDR14_Msk               (0x4000UL)                /*!< PDR14 (Bitfield-Mask: 0x01)                           */
#define PORT4_PDR_PDR15_Pos               (15UL)                    /*!< PDR15 (Bit 15)                                        */
#define PORT4_PDR_PDR15_Msk               (0x8000UL)                /*!< PDR15 (Bitfield-Mask: 0x01)                           */
/* ========================================================  PCNTR2  ========================================================= */
#define PORT4_PCNTR2_PIDR00_Pos           (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT4_PCNTR2_PIDR00_Msk           (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR01_Pos           (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT4_PCNTR2_PIDR01_Msk           (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR02_Pos           (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT4_PCNTR2_PIDR02_Msk           (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR03_Pos           (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT4_PCNTR2_PIDR03_Msk           (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR04_Pos           (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT4_PCNTR2_PIDR04_Msk           (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR05_Pos           (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT4_PCNTR2_PIDR05_Msk           (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR06_Pos           (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT4_PCNTR2_PIDR06_Msk           (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR07_Pos           (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT4_PCNTR2_PIDR07_Msk           (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR08_Pos           (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT4_PCNTR2_PIDR08_Msk           (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR09_Pos           (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT4_PCNTR2_PIDR09_Msk           (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR10_Pos           (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT4_PCNTR2_PIDR10_Msk           (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR11_Pos           (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT4_PCNTR2_PIDR11_Msk           (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR12_Pos           (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT4_PCNTR2_PIDR12_Msk           (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR13_Pos           (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT4_PCNTR2_PIDR13_Msk           (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR14_Pos           (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT4_PCNTR2_PIDR14_Msk           (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR2_PIDR15_Pos           (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT4_PCNTR2_PIDR15_Msk           (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PIDR  ========================================================== */
#define PORT4_PIDR_PIDR00_Pos             (0UL)                     /*!< PIDR00 (Bit 0)                                        */
#define PORT4_PIDR_PIDR00_Msk             (0x1UL)                   /*!< PIDR00 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR01_Pos             (1UL)                     /*!< PIDR01 (Bit 1)                                        */
#define PORT4_PIDR_PIDR01_Msk             (0x2UL)                   /*!< PIDR01 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR02_Pos             (2UL)                     /*!< PIDR02 (Bit 2)                                        */
#define PORT4_PIDR_PIDR02_Msk             (0x4UL)                   /*!< PIDR02 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR03_Pos             (3UL)                     /*!< PIDR03 (Bit 3)                                        */
#define PORT4_PIDR_PIDR03_Msk             (0x8UL)                   /*!< PIDR03 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR04_Pos             (4UL)                     /*!< PIDR04 (Bit 4)                                        */
#define PORT4_PIDR_PIDR04_Msk             (0x10UL)                  /*!< PIDR04 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR05_Pos             (5UL)                     /*!< PIDR05 (Bit 5)                                        */
#define PORT4_PIDR_PIDR05_Msk             (0x20UL)                  /*!< PIDR05 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR06_Pos             (6UL)                     /*!< PIDR06 (Bit 6)                                        */
#define PORT4_PIDR_PIDR06_Msk             (0x40UL)                  /*!< PIDR06 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR07_Pos             (7UL)                     /*!< PIDR07 (Bit 7)                                        */
#define PORT4_PIDR_PIDR07_Msk             (0x80UL)                  /*!< PIDR07 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR08_Pos             (8UL)                     /*!< PIDR08 (Bit 8)                                        */
#define PORT4_PIDR_PIDR08_Msk             (0x100UL)                 /*!< PIDR08 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR09_Pos             (9UL)                     /*!< PIDR09 (Bit 9)                                        */
#define PORT4_PIDR_PIDR09_Msk             (0x200UL)                 /*!< PIDR09 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR10_Pos             (10UL)                    /*!< PIDR10 (Bit 10)                                       */
#define PORT4_PIDR_PIDR10_Msk             (0x400UL)                 /*!< PIDR10 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR11_Pos             (11UL)                    /*!< PIDR11 (Bit 11)                                       */
#define PORT4_PIDR_PIDR11_Msk             (0x800UL)                 /*!< PIDR11 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR12_Pos             (12UL)                    /*!< PIDR12 (Bit 12)                                       */
#define PORT4_PIDR_PIDR12_Msk             (0x1000UL)                /*!< PIDR12 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR13_Pos             (13UL)                    /*!< PIDR13 (Bit 13)                                       */
#define PORT4_PIDR_PIDR13_Msk             (0x2000UL)                /*!< PIDR13 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR14_Pos             (14UL)                    /*!< PIDR14 (Bit 14)                                       */
#define PORT4_PIDR_PIDR14_Msk             (0x4000UL)                /*!< PIDR14 (Bitfield-Mask: 0x01)                          */
#define PORT4_PIDR_PIDR15_Pos             (15UL)                    /*!< PIDR15 (Bit 15)                                       */
#define PORT4_PIDR_PIDR15_Msk             (0x8000UL)                /*!< PIDR15 (Bitfield-Mask: 0x01)                          */
/* ========================================================  PCNTR3  ========================================================= */
#define PORT4_PCNTR3_POSR00_Pos           (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT4_PCNTR3_POSR00_Msk           (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR01_Pos           (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT4_PCNTR3_POSR01_Msk           (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR02_Pos           (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT4_PCNTR3_POSR02_Msk           (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR03_Pos           (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT4_PCNTR3_POSR03_Msk           (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR04_Pos           (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT4_PCNTR3_POSR04_Msk           (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR05_Pos           (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT4_PCNTR3_POSR05_Msk           (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR06_Pos           (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT4_PCNTR3_POSR06_Msk           (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR07_Pos           (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT4_PCNTR3_POSR07_Msk           (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR08_Pos           (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT4_PCNTR3_POSR08_Msk           (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR09_Pos           (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT4_PCNTR3_POSR09_Msk           (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR10_Pos           (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT4_PCNTR3_POSR10_Msk           (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR11_Pos           (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT4_PCNTR3_POSR11_Msk           (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR12_Pos           (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT4_PCNTR3_POSR12_Msk           (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR13_Pos           (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT4_PCNTR3_POSR13_Msk           (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR14_Pos           (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT4_PCNTR3_POSR14_Msk           (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_POSR15_Pos           (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT4_PCNTR3_POSR15_Msk           (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR00_Pos           (16UL)                    /*!< PORR00 (Bit 16)                                       */
#define PORT4_PCNTR3_PORR00_Msk           (0x10000UL)               /*!< PORR00 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR01_Pos           (17UL)                    /*!< PORR01 (Bit 17)                                       */
#define PORT4_PCNTR3_PORR01_Msk           (0x20000UL)               /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR02_Pos           (18UL)                    /*!< PORR02 (Bit 18)                                       */
#define PORT4_PCNTR3_PORR02_Msk           (0x40000UL)               /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR03_Pos           (19UL)                    /*!< PORR03 (Bit 19)                                       */
#define PORT4_PCNTR3_PORR03_Msk           (0x80000UL)               /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR04_Pos           (20UL)                    /*!< PORR04 (Bit 20)                                       */
#define PORT4_PCNTR3_PORR04_Msk           (0x100000UL)              /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR05_Pos           (21UL)                    /*!< PORR05 (Bit 21)                                       */
#define PORT4_PCNTR3_PORR05_Msk           (0x200000UL)              /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR06_Pos           (22UL)                    /*!< PORR06 (Bit 22)                                       */
#define PORT4_PCNTR3_PORR06_Msk           (0x400000UL)              /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR07_Pos           (23UL)                    /*!< PORR07 (Bit 23)                                       */
#define PORT4_PCNTR3_PORR07_Msk           (0x800000UL)              /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR08_Pos           (24UL)                    /*!< PORR08 (Bit 24)                                       */
#define PORT4_PCNTR3_PORR08_Msk           (0x1000000UL)             /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR09_Pos           (25UL)                    /*!< PORR09 (Bit 25)                                       */
#define PORT4_PCNTR3_PORR09_Msk           (0x2000000UL)             /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR10_Pos           (26UL)                    /*!< PORR10 (Bit 26)                                       */
#define PORT4_PCNTR3_PORR10_Msk           (0x4000000UL)             /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR11_Pos           (27UL)                    /*!< PORR11 (Bit 27)                                       */
#define PORT4_PCNTR3_PORR11_Msk           (0x8000000UL)             /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR12_Pos           (28UL)                    /*!< PORR12 (Bit 28)                                       */
#define PORT4_PCNTR3_PORR12_Msk           (0x10000000UL)            /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR13_Pos           (29UL)                    /*!< PORR13 (Bit 29)                                       */
#define PORT4_PCNTR3_PORR13_Msk           (0x20000000UL)            /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR14_Pos           (30UL)                    /*!< PORR14 (Bit 30)                                       */
#define PORT4_PCNTR3_PORR14_Msk           (0x40000000UL)            /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT4_PCNTR3_PORR15_Pos           (31UL)                    /*!< PORR15 (Bit 31)                                       */
#define PORT4_PCNTR3_PORR15_Msk           (0x80000000UL)            /*!< PORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  PORR  ========================================================== */
#define PORT4_PORR_PORR00_Pos             (0UL)                     /*!< PORR00 (Bit 0)                                        */
#define PORT4_PORR_PORR00_Msk             (0x1UL)                   /*!< PORR00 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR01_Pos             (1UL)                     /*!< PORR01 (Bit 1)                                        */
#define PORT4_PORR_PORR01_Msk             (0x2UL)                   /*!< PORR01 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR02_Pos             (2UL)                     /*!< PORR02 (Bit 2)                                        */
#define PORT4_PORR_PORR02_Msk             (0x4UL)                   /*!< PORR02 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR03_Pos             (3UL)                     /*!< PORR03 (Bit 3)                                        */
#define PORT4_PORR_PORR03_Msk             (0x8UL)                   /*!< PORR03 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR04_Pos             (4UL)                     /*!< PORR04 (Bit 4)                                        */
#define PORT4_PORR_PORR04_Msk             (0x10UL)                  /*!< PORR04 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR05_Pos             (5UL)                     /*!< PORR05 (Bit 5)                                        */
#define PORT4_PORR_PORR05_Msk             (0x20UL)                  /*!< PORR05 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR06_Pos             (6UL)                     /*!< PORR06 (Bit 6)                                        */
#define PORT4_PORR_PORR06_Msk             (0x40UL)                  /*!< PORR06 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR07_Pos             (7UL)                     /*!< PORR07 (Bit 7)                                        */
#define PORT4_PORR_PORR07_Msk             (0x80UL)                  /*!< PORR07 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR08_Pos             (8UL)                     /*!< PORR08 (Bit 8)                                        */
#define PORT4_PORR_PORR08_Msk             (0x100UL)                 /*!< PORR08 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR09_Pos             (9UL)                     /*!< PORR09 (Bit 9)                                        */
#define PORT4_PORR_PORR09_Msk             (0x200UL)                 /*!< PORR09 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR10_Pos             (10UL)                    /*!< PORR10 (Bit 10)                                       */
#define PORT4_PORR_PORR10_Msk             (0x400UL)                 /*!< PORR10 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR11_Pos             (11UL)                    /*!< PORR11 (Bit 11)                                       */
#define PORT4_PORR_PORR11_Msk             (0x800UL)                 /*!< PORR11 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR12_Pos             (12UL)                    /*!< PORR12 (Bit 12)                                       */
#define PORT4_PORR_PORR12_Msk             (0x1000UL)                /*!< PORR12 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR13_Pos             (13UL)                    /*!< PORR13 (Bit 13)                                       */
#define PORT4_PORR_PORR13_Msk             (0x2000UL)                /*!< PORR13 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR14_Pos             (14UL)                    /*!< PORR14 (Bit 14)                                       */
#define PORT4_PORR_PORR14_Msk             (0x4000UL)                /*!< PORR14 (Bitfield-Mask: 0x01)                          */
#define PORT4_PORR_PORR15_Pos             (15UL)                    /*!< PORR15 (Bit 15)                                       */
#define PORT4_PORR_PORR15_Msk             (0x8000UL)                /*!< PORR15 (Bitfield-Mask: 0x01)                          */
/* =========================================================  POSR  ========================================================== */
#define PORT4_POSR_POSR00_Pos             (0UL)                     /*!< POSR00 (Bit 0)                                        */
#define PORT4_POSR_POSR00_Msk             (0x1UL)                   /*!< POSR00 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR01_Pos             (1UL)                     /*!< POSR01 (Bit 1)                                        */
#define PORT4_POSR_POSR01_Msk             (0x2UL)                   /*!< POSR01 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR02_Pos             (2UL)                     /*!< POSR02 (Bit 2)                                        */
#define PORT4_POSR_POSR02_Msk             (0x4UL)                   /*!< POSR02 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR03_Pos             (3UL)                     /*!< POSR03 (Bit 3)                                        */
#define PORT4_POSR_POSR03_Msk             (0x8UL)                   /*!< POSR03 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR04_Pos             (4UL)                     /*!< POSR04 (Bit 4)                                        */
#define PORT4_POSR_POSR04_Msk             (0x10UL)                  /*!< POSR04 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR05_Pos             (5UL)                     /*!< POSR05 (Bit 5)                                        */
#define PORT4_POSR_POSR05_Msk             (0x20UL)                  /*!< POSR05 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR06_Pos             (6UL)                     /*!< POSR06 (Bit 6)                                        */
#define PORT4_POSR_POSR06_Msk             (0x40UL)                  /*!< POSR06 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR07_Pos             (7UL)                     /*!< POSR07 (Bit 7)                                        */
#define PORT4_POSR_POSR07_Msk             (0x80UL)                  /*!< POSR07 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR08_Pos             (8UL)                     /*!< POSR08 (Bit 8)                                        */
#define PORT4_POSR_POSR08_Msk             (0x100UL)                 /*!< POSR08 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR09_Pos             (9UL)                     /*!< POSR09 (Bit 9)                                        */
#define PORT4_POSR_POSR09_Msk             (0x200UL)                 /*!< POSR09 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR10_Pos             (10UL)                    /*!< POSR10 (Bit 10)                                       */
#define PORT4_POSR_POSR10_Msk             (0x400UL)                 /*!< POSR10 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR11_Pos             (11UL)                    /*!< POSR11 (Bit 11)                                       */
#define PORT4_POSR_POSR11_Msk             (0x800UL)                 /*!< POSR11 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR12_Pos             (12UL)                    /*!< POSR12 (Bit 12)                                       */
#define PORT4_POSR_POSR12_Msk             (0x1000UL)                /*!< POSR12 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR13_Pos             (13UL)                    /*!< POSR13 (Bit 13)                                       */
#define PORT4_POSR_POSR13_Msk             (0x2000UL)                /*!< POSR13 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR14_Pos             (14UL)                    /*!< POSR14 (Bit 14)                                       */
#define PORT4_POSR_POSR14_Msk             (0x4000UL)                /*!< POSR14 (Bitfield-Mask: 0x01)                          */
#define PORT4_POSR_POSR15_Pos             (15UL)                    /*!< POSR15 (Bit 15)                                       */
#define PORT4_POSR_POSR15_Msk             (0x8000UL)                /*!< POSR15 (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                            PFS                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  P000PFS  ======================================================== */
#define PFS_P000PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P000PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P000PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P000PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P000PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P000PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P000PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P000PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P000PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P000PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P000PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P000PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P000PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P000PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P000PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P000PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P000PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P000PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P000PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P000PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P001PFS  ======================================================== */
#define PFS_P001PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P001PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P001PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P001PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P001PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P001PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P001PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P001PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P001PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P001PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P001PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P001PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P001PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P001PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P001PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P001PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P001PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P001PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P001PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P001PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P002PFS  ======================================================== */
#define PFS_P002PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P002PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P002PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P002PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P002PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P002PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P002PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P002PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P002PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P002PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P002PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P002PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P002PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P002PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P002PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P002PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P002PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P002PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P002PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P002PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P003PFS  ======================================================== */
#define PFS_P003PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P003PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P003PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P003PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P003PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P003PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P003PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P003PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P003PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P003PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P003PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P003PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P003PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P003PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P003PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P003PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P003PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P003PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P003PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P003PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P004PFS  ======================================================== */
#define PFS_P004PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P004PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P004PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P004PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P004PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P004PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P004PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P004PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P004PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P004PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P004PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P004PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P004PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P004PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P004PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P004PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P004PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P004PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P004PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P004PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P005PFS  ======================================================== */
#define PFS_P005PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P005PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P005PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P005PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P005PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P005PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P005PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P005PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P005PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P005PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P005PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P005PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P005PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P005PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P005PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P005PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P005PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P005PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P005PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P005PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P006PFS  ======================================================== */
#define PFS_P006PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P006PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P006PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P006PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P006PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P006PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P006PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P006PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P006PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P006PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P006PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P006PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P006PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P006PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P006PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P006PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P006PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P006PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P006PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P006PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P007PFS  ======================================================== */
#define PFS_P007PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P007PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P007PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P007PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P007PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P007PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P007PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P007PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P007PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P007PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P007PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P007PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P007PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P007PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P007PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P007PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P007PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P007PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P007PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P007PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P010PFS  ======================================================== */
#define PFS_P010PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P010PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P010PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P010PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P010PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P010PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P010PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P010PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P010PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P010PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P010PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P010PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P010PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P010PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P010PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P010PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P010PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P010PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P010PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P010PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P011PFS  ======================================================== */
#define PFS_P011PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P011PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P011PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P011PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P011PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P011PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P011PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P011PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P011PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P011PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P011PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P011PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P011PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P011PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P011PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P011PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P011PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P011PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P011PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P011PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P012PFS  ======================================================== */
#define PFS_P012PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P012PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P012PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P012PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P012PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P012PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P012PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P012PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P012PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P012PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P012PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P012PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P012PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P012PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P012PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P012PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P012PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P012PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P012PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P012PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P013PFS  ======================================================== */
#define PFS_P013PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P013PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P013PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P013PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P013PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P013PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P013PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P013PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P013PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P013PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P013PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P013PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P013PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P013PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P013PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P013PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P013PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P013PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P013PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P013PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P014PFS  ======================================================== */
#define PFS_P014PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P014PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P014PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P014PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P014PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P014PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P014PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P014PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P014PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P014PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P014PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P014PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P014PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P014PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P014PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P014PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P014PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P014PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P014PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P014PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P015PFS  ======================================================== */
#define PFS_P015PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P015PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P015PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P015PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P015PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P015PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P015PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P015PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P015PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P015PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P015PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P015PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P015PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P015PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P015PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P015PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P015PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P015PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P015PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P015PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P100PFS  ======================================================== */
#define PFS_P100PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P100PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P100PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P100PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P100PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P100PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P100PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P100PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P100PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P100PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P100PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P100PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P100PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P100PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P100PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P100PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P100PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P100PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P100PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P100PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P101PFS  ======================================================== */
#define PFS_P101PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P101PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P101PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P101PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P101PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P101PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P101PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P101PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P101PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P101PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P101PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P101PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P101PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P101PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P101PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P101PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P101PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P101PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P101PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P101PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P102PFS  ======================================================== */
#define PFS_P102PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P102PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P102PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P102PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P102PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P102PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P102PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P102PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P102PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P102PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P102PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P102PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P102PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P102PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P102PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P102PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P102PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P102PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P102PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P102PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P103PFS  ======================================================== */
#define PFS_P103PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P103PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P103PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P103PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P103PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P103PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P103PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P103PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P103PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P103PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P103PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P103PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P103PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P103PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P103PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P103PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P103PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P103PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P103PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P103PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P104PFS  ======================================================== */
#define PFS_P104PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P104PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P104PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P104PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P104PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P104PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P104PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P104PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P104PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P104PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P104PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P104PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P104PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P104PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P104PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P104PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P104PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P104PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P104PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P104PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P105PFS  ======================================================== */
#define PFS_P105PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P105PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P105PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P105PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P105PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P105PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P105PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P105PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P105PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P105PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P105PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P105PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P105PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P105PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P105PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P105PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P105PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P105PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P105PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P105PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P106PFS  ======================================================== */
#define PFS_P106PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P106PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P106PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P106PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P106PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P106PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P106PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P106PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P106PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P106PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P106PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P106PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P106PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P106PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P106PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P106PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P106PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P106PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P106PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P106PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P107PFS  ======================================================== */
#define PFS_P107PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P107PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P107PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P107PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P107PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P107PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P107PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P107PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P107PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P107PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P107PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P107PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P107PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P107PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P107PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P107PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P107PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P107PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P107PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P107PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P108PFS  ======================================================== */
#define PFS_P108PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P108PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P108PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P108PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P108PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P108PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P108PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P108PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P108PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P108PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P108PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P108PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P108PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P108PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P108PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P108PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P108PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P108PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P108PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P108PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P109PFS  ======================================================== */
#define PFS_P109PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P109PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P109PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P109PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P109PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P109PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P109PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P109PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P109PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P109PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P109PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P109PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P109PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P109PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P109PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P109PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P109PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P109PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P109PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P109PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P110PFS  ======================================================== */
#define PFS_P110PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P110PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P110PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P110PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P110PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P110PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P110PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P110PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P110PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P110PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P110PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P110PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P110PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P110PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P110PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P110PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P110PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P110PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P110PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P110PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P111PFS  ======================================================== */
#define PFS_P111PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P111PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P111PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P111PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P111PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P111PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P111PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P111PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P111PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P111PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P111PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P111PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P111PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P111PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P111PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P111PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P111PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P111PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P111PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P111PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P112PFS  ======================================================== */
#define PFS_P112PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P112PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P112PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P112PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P112PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P112PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P112PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P112PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P112PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P112PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P112PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P112PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P112PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P112PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P112PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P112PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P112PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P112PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P112PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P112PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P113PFS  ======================================================== */
#define PFS_P113PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P113PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P113PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P113PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P113PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P113PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P113PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P113PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P113PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P113PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P113PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P113PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P113PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P113PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P113PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P113PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P113PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P113PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P113PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P113PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P200PFS  ======================================================== */
#define PFS_P200PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P200PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P200PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P200PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P200PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P200PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P200PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P200PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P200PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P200PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P200PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P200PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P200PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P200PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P200PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P200PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P200PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P200PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P200PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P200PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P200PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P200PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P201PFS  ======================================================== */
#define PFS_P201PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P201PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P201PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P201PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P201PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P201PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P201PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P201PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P201PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P201PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P201PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P201PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P201PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P201PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P201PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P201PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P201PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P201PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P201PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P201PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P201PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P201PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P202PFS  ======================================================== */
#define PFS_P202PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P202PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P202PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P202PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P202PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P202PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P202PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P202PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P202PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P202PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P202PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P202PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P202PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P202PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P202PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P202PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P202PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P202PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P202PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P202PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P202PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P202PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P203PFS  ======================================================== */
#define PFS_P203PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P203PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P203PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P203PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P203PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P203PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P203PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P203PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P203PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P203PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P203PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P203PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P203PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P203PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P203PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P203PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P203PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P203PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P203PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P203PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P203PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P203PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P204PFS  ======================================================== */
#define PFS_P204PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P204PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P204PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P204PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P204PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P204PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P204PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P204PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P204PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P204PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P204PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P204PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P204PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P204PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P204PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P204PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P204PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P204PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P204PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P204PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P204PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P204PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P205PFS  ======================================================== */
#define PFS_P205PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P205PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P205PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P205PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P205PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P205PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P205PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P205PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P205PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P205PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P205PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P205PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P205PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P205PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P205PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P205PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P205PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P205PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P205PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P205PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P205PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P205PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P207PFS  ======================================================== */
#define PFS_P207PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P207PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P207PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P207PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P207PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P207PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P207PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P207PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P207PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P207PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P207PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P207PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P207PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P207PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P207PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P207PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P207PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P207PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P207PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P207PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P207PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P207PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P208PFS  ======================================================== */
#define PFS_P208PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P208PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P208PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P208PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P208PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P208PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P208PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P208PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P208PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P208PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P208PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P208PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P208PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P208PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P208PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P208PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P208PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P208PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P208PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P208PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P208PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P208PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P209PFS  ======================================================== */
#define PFS_P209PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P209PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P209PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P209PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P209PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P209PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P209PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P209PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P209PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P209PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P209PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P209PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P209PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P209PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P209PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P209PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P209PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P209PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P209PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P209PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P209PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P209PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P210PFS  ======================================================== */
#define PFS_P210PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P210PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P210PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P210PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P210PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P210PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P210PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P210PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P210PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P210PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P210PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P210PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P210PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P210PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P210PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P210PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P210PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P210PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P210PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P210PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P210PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P210PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P300PFS  ======================================================== */
#define PFS_P300PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P300PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P300PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P300PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P300PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P300PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P300PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P300PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P300PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P300PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P300PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P300PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P300PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P300PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P300PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P300PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P300PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P300PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P300PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P300PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P300PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P300PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P301PFS  ======================================================== */
#define PFS_P301PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P301PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P301PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P301PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P301PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P301PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P301PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P301PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P301PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P301PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P301PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P301PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P301PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P301PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P301PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P301PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P301PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P301PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P301PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P301PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P301PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P301PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P302PFS  ======================================================== */
#define PFS_P302PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P302PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P302PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P302PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P302PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P302PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P302PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P302PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P302PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P302PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P302PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P302PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P302PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P302PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P302PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P302PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P302PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P302PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P302PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P302PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P302PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P302PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P314PFS  ======================================================== */
#define PFS_P314PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P314PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P314PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P314PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P314PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P314PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P314PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P314PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P314PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P314PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P314PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P314PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P314PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P314PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P314PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P314PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P314PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P314PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P314PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P314PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P314PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P314PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P315PFS  ======================================================== */
#define PFS_P315PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P315PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P315PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P315PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P315PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P315PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P315PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P315PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P315PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P315PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P315PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P315PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P315PFS_EOFR_Pos              (12UL)                    /*!< EOFR (Bit 12)                                         */
#define PFS_P315PFS_EOFR_Msk              (0x3000UL)                /*!< EOFR (Bitfield-Mask: 0x03)                            */
#define PFS_P315PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P315PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P315PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P315PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P315PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P315PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P315PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P315PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P409PFS  ======================================================== */
#define PFS_P409PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P409PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P409PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P409PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P409PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P409PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P409PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P409PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P409PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P409PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P409PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P409PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P409PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P409PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P409PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P409PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P409PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P409PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P409PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P409PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P410PFS  ======================================================== */
#define PFS_P410PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P410PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P410PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P410PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P410PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P410PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P410PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P410PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P410PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P410PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P410PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P410PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P410PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P410PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P410PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P410PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P410PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P410PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P410PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P410PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P411PFS  ======================================================== */
#define PFS_P411PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P411PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P411PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P411PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P411PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P411PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P411PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P411PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P411PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P411PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P411PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P411PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P411PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P411PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P411PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P411PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P411PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P411PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P411PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P411PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P412PFS  ======================================================== */
#define PFS_P412PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P412PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P412PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P412PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P412PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P412PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P412PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P412PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P412PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P412PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P412PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P412PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P412PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P412PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P412PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P412PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P412PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P412PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P412PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P412PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P413PFS  ======================================================== */
#define PFS_P413PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P413PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P413PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P413PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P413PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P413PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P413PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P413PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P413PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P413PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P413PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P413PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P413PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P413PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P413PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P413PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P413PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P413PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P413PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P413PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P500PFS  ======================================================== */
#define PFS_P500PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P500PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P500PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P500PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P500PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P500PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P500PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P500PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P500PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P500PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P500PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P500PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P500PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P500PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P500PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P500PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P500PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P500PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P500PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P500PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P501PFS  ======================================================== */
#define PFS_P501PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P501PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P501PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P501PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P501PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P501PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P501PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P501PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P501PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P501PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P501PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P501PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P501PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P501PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P501PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P501PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P501PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P501PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P501PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P501PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P508PFS  ======================================================== */
#define PFS_P508PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P508PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P508PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P508PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P508PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P508PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P508PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P508PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P508PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P508PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P508PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P508PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P508PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P508PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P508PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P508PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P508PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P508PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P508PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P508PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P509PFS  ======================================================== */
#define PFS_P509PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P509PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P509PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P509PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P509PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P509PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P509PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P509PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P509PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P509PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P509PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P509PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P509PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P509PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P509PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P509PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P509PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P509PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P509PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P509PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P510PFS  ======================================================== */
#define PFS_P510PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P510PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P510PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P510PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P510PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P510PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P510PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P510PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P510PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P510PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P510PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P510PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P510PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P510PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P510PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P510PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P510PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P510PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P510PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P510PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P511PFS  ======================================================== */
#define PFS_P511PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P511PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P511PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P511PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P511PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P511PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P511PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P511PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P511PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P511PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P511PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P511PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P511PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P511PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P511PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P511PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P511PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P511PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P511PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P511PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P600PFS  ======================================================== */
#define PFS_P600PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P600PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P600PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P600PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P600PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P600PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P600PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P600PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P600PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P600PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P600PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P600PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P600PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P600PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P600PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P600PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P600PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P600PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P600PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P600PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P601PFS  ======================================================== */
#define PFS_P601PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P601PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P601PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P601PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P601PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P601PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P601PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P601PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P601PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P601PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P601PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P601PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P601PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P601PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P601PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P601PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P601PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P601PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P601PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P601PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P602PFS  ======================================================== */
#define PFS_P602PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P602PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P602PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P602PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P602PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P602PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P602PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P602PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P602PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P602PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P602PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P602PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P602PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P602PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P602PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P602PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P602PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P602PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P602PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P602PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P603PFS  ======================================================== */
#define PFS_P603PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P603PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P603PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P603PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P603PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P603PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P603PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P603PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P603PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P603PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P603PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P603PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P603PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P603PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P603PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P603PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P603PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P603PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P603PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P603PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P604PFS  ======================================================== */
#define PFS_P604PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P604PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P604PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P604PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P604PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P604PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P604PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P604PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P604PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P604PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P604PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P604PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P604PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P604PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P604PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P604PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P604PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P604PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P604PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P604PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P700PFS  ======================================================== */
#define PFS_P700PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P700PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P700PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P700PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P700PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P700PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P700PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P700PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P700PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P700PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P700PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P700PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P700PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P700PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P700PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P700PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P700PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P700PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P700PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P700PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P701PFS  ======================================================== */
#define PFS_P701PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P701PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P701PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P701PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P701PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P701PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P701PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P701PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P701PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P701PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P701PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P701PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P701PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P701PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P701PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P701PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P701PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P701PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P701PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P701PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P702PFS  ======================================================== */
#define PFS_P702PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P702PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P702PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P702PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P702PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P702PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P702PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P702PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P702PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P702PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P702PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P702PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P702PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P702PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P702PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P702PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P702PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P702PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P702PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P702PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P703PFS  ======================================================== */
#define PFS_P703PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P703PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P703PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P703PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P703PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P703PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P703PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P703PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P703PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P703PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P703PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P703PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P703PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P703PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P703PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P703PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P703PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P703PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P703PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P703PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P704PFS  ======================================================== */
#define PFS_P704PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P704PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P704PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P704PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P704PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P704PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P704PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P704PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P704PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P704PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P704PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P704PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P704PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P704PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P704PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P704PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P704PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P704PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P704PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P704PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P806PFS  ======================================================== */
#define PFS_P806PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P806PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P806PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P806PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P806PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P806PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P806PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P806PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P806PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P806PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P806PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P806PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P806PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P806PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P806PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P806PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P806PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P806PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P806PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P806PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P807PFS  ======================================================== */
#define PFS_P807PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P807PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P807PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P807PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P807PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P807PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P807PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P807PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P807PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P807PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P807PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P807PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P807PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P807PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P807PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P807PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P807PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P807PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P807PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P807PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P808PFS  ======================================================== */
#define PFS_P808PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P808PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P808PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P808PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P808PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P808PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P808PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P808PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P808PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P808PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P808PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P808PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P808PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P808PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P808PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P808PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P808PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P808PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P808PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P808PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P809PFS  ======================================================== */
#define PFS_P809PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P809PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P809PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P809PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P809PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P809PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P809PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P809PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P809PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P809PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P809PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P809PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P809PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P809PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P809PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P809PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P809PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P809PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P809PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P809PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P810PFS  ======================================================== */
#define PFS_P810PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P810PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P810PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P810PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P810PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P810PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P810PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P810PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P810PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P810PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P810PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P810PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P810PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P810PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P810PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P810PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P810PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P810PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P810PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P810PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P811PFS  ======================================================== */
#define PFS_P811PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P811PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P811PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P811PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P811PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P811PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P811PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P811PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P811PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P811PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P811PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P811PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P811PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P811PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P811PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P811PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P811PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P811PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P811PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P811PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P812PFS  ======================================================== */
#define PFS_P812PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P812PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P812PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P812PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P812PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P812PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P812PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P812PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P812PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P812PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P812PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P812PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P812PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P812PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P812PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P812PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P812PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P812PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P812PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P812PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P813PFS  ======================================================== */
#define PFS_P813PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P813PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P813PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P813PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P813PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P813PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P813PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P813PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P813PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P813PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P813PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P813PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P813PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P813PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P813PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P813PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P813PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P813PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P813PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P813PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P814PFS  ======================================================== */
#define PFS_P814PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P814PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P814PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P814PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P814PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P814PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P814PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P814PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P814PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P814PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P814PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P814PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P814PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P814PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P814PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P814PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P814PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P814PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P814PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P814PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* ========================================================  P815PFS  ======================================================== */
#define PFS_P815PFS_PODR_Pos              (0UL)                     /*!< PODR (Bit 0)                                          */
#define PFS_P815PFS_PODR_Msk              (0x1UL)                   /*!< PODR (Bitfield-Mask: 0x01)                            */
#define PFS_P815PFS_PIDR_Pos              (1UL)                     /*!< PIDR (Bit 1)                                          */
#define PFS_P815PFS_PIDR_Msk              (0x2UL)                   /*!< PIDR (Bitfield-Mask: 0x01)                            */
#define PFS_P815PFS_PDR_Pos               (2UL)                     /*!< PDR (Bit 2)                                           */
#define PFS_P815PFS_PDR_Msk               (0x4UL)                   /*!< PDR (Bitfield-Mask: 0x01)                             */
#define PFS_P815PFS_PUCR_Pos              (4UL)                     /*!< PUCR (Bit 4)                                          */
#define PFS_P815PFS_PUCR_Msk              (0x10UL)                  /*!< PUCR (Bitfield-Mask: 0x01)                            */
#define PFS_P815PFS_NCODR_Pos             (6UL)                     /*!< NCODR (Bit 6)                                         */
#define PFS_P815PFS_NCODR_Msk             (0x40UL)                  /*!< NCODR (Bitfield-Mask: 0x01)                           */
#define PFS_P815PFS_DSCR_Pos              (10UL)                    /*!< DSCR (Bit 10)                                         */
#define PFS_P815PFS_DSCR_Msk              (0x400UL)                 /*!< DSCR (Bitfield-Mask: 0x01)                            */
#define PFS_P815PFS_ISEL_Pos              (14UL)                    /*!< ISEL (Bit 14)                                         */
#define PFS_P815PFS_ISEL_Msk              (0x4000UL)                /*!< ISEL (Bitfield-Mask: 0x01)                            */
#define PFS_P815PFS_ASEL_Pos              (15UL)                    /*!< ASEL (Bit 15)                                         */
#define PFS_P815PFS_ASEL_Msk              (0x8000UL)                /*!< ASEL (Bitfield-Mask: 0x01)                            */
#define PFS_P815PFS_PMR_Pos               (16UL)                    /*!< PMR (Bit 16)                                          */
#define PFS_P815PFS_PMR_Msk               (0x10000UL)               /*!< PMR (Bitfield-Mask: 0x01)                             */
#define PFS_P815PFS_PSEL_Pos              (24UL)                    /*!< PSEL (Bit 24)                                         */
#define PFS_P815PFS_PSEL_Msk              (0x1f000000UL)            /*!< PSEL (Bitfield-Mask: 0x1f)                            */
/* =========================================================  PWPR  ========================================================== */
#define PFS_PWPR_PFSWE_Pos                (6UL)                     /*!< PFSWE (Bit 6)                                         */
#define PFS_PWPR_PFSWE_Msk                (0x40UL)                  /*!< PFSWE (Bitfield-Mask: 0x01)                           */
#define PFS_PWPR_B0WI_Pos                 (7UL)                     /*!< B0WI (Bit 7)                                          */
#define PFS_PWPR_B0WI_Msk                 (0x80UL)                  /*!< B0WI (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                            ELC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  ELCR  ========================================================== */
#define ELC_ELCR_ELCON_Pos                (7UL)                     /*!< ELCON (Bit 7)                                         */
#define ELC_ELCR_ELCON_Msk                (0x80UL)                  /*!< ELCON (Bitfield-Mask: 0x01)                           */
/* ========================================================  ELSEGR0  ======================================================== */
#define ELC_ELSEGR0_SEG_Pos               (0UL)                     /*!< SEG (Bit 0)                                           */
#define ELC_ELSEGR0_SEG_Msk               (0x1UL)                   /*!< SEG (Bitfield-Mask: 0x01)                             */
#define ELC_ELSEGR0_WE_Pos                (6UL)                     /*!< WE (Bit 6)                                            */
#define ELC_ELSEGR0_WE_Msk                (0x40UL)                  /*!< WE (Bitfield-Mask: 0x01)                              */
#define ELC_ELSEGR0_WI_Pos                (7UL)                     /*!< WI (Bit 7)                                            */
#define ELC_ELSEGR0_WI_Msk                (0x80UL)                  /*!< WI (Bitfield-Mask: 0x01)                              */
/* ========================================================  ELSEGR1  ======================================================== */
#define ELC_ELSEGR1_SEG_Pos               (0UL)                     /*!< SEG (Bit 0)                                           */
#define ELC_ELSEGR1_SEG_Msk               (0x1UL)                   /*!< SEG (Bitfield-Mask: 0x01)                             */
#define ELC_ELSEGR1_WE_Pos                (6UL)                     /*!< WE (Bit 6)                                            */
#define ELC_ELSEGR1_WE_Msk                (0x40UL)                  /*!< WE (Bitfield-Mask: 0x01)                              */
#define ELC_ELSEGR1_WI_Pos                (7UL)                     /*!< WI (Bit 7)                                            */
#define ELC_ELSEGR1_WI_Msk                (0x80UL)                  /*!< WI (Bitfield-Mask: 0x01)                              */
/* =========================================================  ELOPA  ========================================================= */
#define ELC_ELOPA_TMR0MD_Pos              (0UL)                     /*!< TMR0MD (Bit 0)                                        */
#define ELC_ELOPA_TMR0MD_Msk              (0x3UL)                   /*!< TMR0MD (Bitfield-Mask: 0x03)                          */
#define ELC_ELOPA_TMR1MD_Pos              (2UL)                     /*!< TMR1MD (Bit 2)                                        */
#define ELC_ELOPA_TMR1MD_Msk              (0xcUL)                   /*!< TMR1MD (Bitfield-Mask: 0x03)                          */
/* =========================================================  ELSR0  ========================================================= */
#define ELC_ELSR0_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR0_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* =========================================================  ELSR1  ========================================================= */
#define ELC_ELSR1_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR1_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* =========================================================  ELSR2  ========================================================= */
#define ELC_ELSR2_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR2_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* =========================================================  ELSR3  ========================================================= */
#define ELC_ELSR3_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR3_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* =========================================================  ELSR6  ========================================================= */
#define ELC_ELSR6_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR6_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* =========================================================  ELSR7  ========================================================= */
#define ELC_ELSR7_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR7_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* =========================================================  ELSR8  ========================================================= */
#define ELC_ELSR8_ELS_Pos                 (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR8_ELS_Msk                 (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* ========================================================  ELSR14  ========================================================= */
#define ELC_ELSR14_ELS_Pos                (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR14_ELS_Msk                (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* ========================================================  ELSR15  ========================================================= */
#define ELC_ELSR15_ELS_Pos                (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR15_ELS_Msk                (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* ========================================================  ELSR18  ========================================================= */
#define ELC_ELSR18_ELS_Pos                (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR18_ELS_Msk                (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */
/* ========================================================  ELSR19  ========================================================= */
#define ELC_ELSR19_ELS_Pos                (0UL)                     /*!< ELS (Bit 0)                                           */
#define ELC_ELSR19_ELS_Msk                (0xffUL)                  /*!< ELS (Bitfield-Mask: 0xff)                             */


/* =========================================================================================================================== */
/* ================                                           SCI2                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  SMR  ========================================================== */
#define SCI2_SMR_CKS_Pos                  (0UL)                     /*!< CKS (Bit 0)                                           */
#define SCI2_SMR_CKS_Msk                  (0x3UL)                   /*!< CKS (Bitfield-Mask: 0x03)                             */
#define SCI2_SMR_MP_Pos                   (2UL)                     /*!< MP (Bit 2)                                            */
#define SCI2_SMR_MP_Msk                   (0x4UL)                   /*!< MP (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_STOP_Pos                 (3UL)                     /*!< STOP (Bit 3)                                          */
#define SCI2_SMR_STOP_Msk                 (0x8UL)                   /*!< STOP (Bitfield-Mask: 0x01)                            */
#define SCI2_SMR_PM_Pos                   (4UL)                     /*!< PM (Bit 4)                                            */
#define SCI2_SMR_PM_Msk                   (0x10UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_PE_Pos                   (5UL)                     /*!< PE (Bit 5)                                            */
#define SCI2_SMR_PE_Msk                   (0x20UL)                  /*!< PE (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_CHR_Pos                  (6UL)                     /*!< CHR (Bit 6)                                           */
#define SCI2_SMR_CHR_Msk                  (0x40UL)                  /*!< CHR (Bitfield-Mask: 0x01)                             */
#define SCI2_SMR_CM_Pos                   (7UL)                     /*!< CM (Bit 7)                                            */
#define SCI2_SMR_CM_Msk                   (0x80UL)                  /*!< CM (Bitfield-Mask: 0x01)                              */
/* =======================================================  SMR_SMCI  ======================================================== */
#define SCI2_SMR_SMCI_CKS_Pos             (0UL)                     /*!< CKS (Bit 0)                                           */
#define SCI2_SMR_SMCI_CKS_Msk             (0x3UL)                   /*!< CKS (Bitfield-Mask: 0x03)                             */
#define SCI2_SMR_SMCI_BCP_Pos             (2UL)                     /*!< BCP (Bit 2)                                           */
#define SCI2_SMR_SMCI_BCP_Msk             (0xcUL)                   /*!< BCP (Bitfield-Mask: 0x03)                             */
#define SCI2_SMR_SMCI_PM_Pos              (4UL)                     /*!< PM (Bit 4)                                            */
#define SCI2_SMR_SMCI_PM_Msk              (0x10UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_SMCI_PE_Pos              (5UL)                     /*!< PE (Bit 5)                                            */
#define SCI2_SMR_SMCI_PE_Msk              (0x20UL)                  /*!< PE (Bitfield-Mask: 0x01)                              */
#define SCI2_SMR_SMCI_BLK_Pos             (6UL)                     /*!< BLK (Bit 6)                                           */
#define SCI2_SMR_SMCI_BLK_Msk             (0x40UL)                  /*!< BLK (Bitfield-Mask: 0x01)                             */
#define SCI2_SMR_SMCI_GM_Pos              (7UL)                     /*!< GM (Bit 7)                                            */
#define SCI2_SMR_SMCI_GM_Msk              (0x80UL)                  /*!< GM (Bitfield-Mask: 0x01)                              */
/* ==========================================================  BRR  ========================================================== */
/* ==========================================================  SCR  ========================================================== */
#define SCI2_SCR_CKE_Pos                  (0UL)                     /*!< CKE (Bit 0)                                           */
#define SCI2_SCR_CKE_Msk                  (0x3UL)                   /*!< CKE (Bitfield-Mask: 0x03)                             */
#define SCI2_SCR_TEIE_Pos                 (2UL)                     /*!< TEIE (Bit 2)                                          */
#define SCI2_SCR_TEIE_Msk                 (0x4UL)                   /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define SCI2_SCR_MPIE_Pos                 (3UL)                     /*!< MPIE (Bit 3)                                          */
#define SCI2_SCR_MPIE_Msk                 (0x8UL)                   /*!< MPIE (Bitfield-Mask: 0x01)                            */
#define SCI2_SCR_RE_Pos                   (4UL)                     /*!< RE (Bit 4)                                            */
#define SCI2_SCR_RE_Msk                   (0x10UL)                  /*!< RE (Bitfield-Mask: 0x01)                              */
#define SCI2_SCR_TE_Pos                   (5UL)                     /*!< TE (Bit 5)                                            */
#define SCI2_SCR_TE_Msk                   (0x20UL)                  /*!< TE (Bitfield-Mask: 0x01)                              */
#define SCI2_SCR_RIE_Pos                  (6UL)                     /*!< RIE (Bit 6)                                           */
#define SCI2_SCR_RIE_Msk                  (0x40UL)                  /*!< RIE (Bitfield-Mask: 0x01)                             */
#define SCI2_SCR_TIE_Pos                  (7UL)                     /*!< TIE (Bit 7)                                           */
#define SCI2_SCR_TIE_Msk                  (0x80UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
/* =======================================================  SCR_SMCI  ======================================================== */
#define SCI2_SCR_SMCI_CKE_Pos             (0UL)                     /*!< CKE (Bit 0)                                           */
#define SCI2_SCR_SMCI_CKE_Msk             (0x3UL)                   /*!< CKE (Bitfield-Mask: 0x03)                             */
#define SCI2_SCR_SMCI_TEIE_Pos            (2UL)                     /*!< TEIE (Bit 2)                                          */
#define SCI2_SCR_SMCI_TEIE_Msk            (0x4UL)                   /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define SCI2_SCR_SMCI_MPIE_Pos            (3UL)                     /*!< MPIE (Bit 3)                                          */
#define SCI2_SCR_SMCI_MPIE_Msk            (0x8UL)                   /*!< MPIE (Bitfield-Mask: 0x01)                            */
#define SCI2_SCR_SMCI_RE_Pos              (4UL)                     /*!< RE (Bit 4)                                            */
#define SCI2_SCR_SMCI_RE_Msk              (0x10UL)                  /*!< RE (Bitfield-Mask: 0x01)                              */
#define SCI2_SCR_SMCI_TE_Pos              (5UL)                     /*!< TE (Bit 5)                                            */
#define SCI2_SCR_SMCI_TE_Msk              (0x20UL)                  /*!< TE (Bitfield-Mask: 0x01)                              */
#define SCI2_SCR_SMCI_RIE_Pos             (6UL)                     /*!< RIE (Bit 6)                                           */
#define SCI2_SCR_SMCI_RIE_Msk             (0x40UL)                  /*!< RIE (Bitfield-Mask: 0x01)                             */
#define SCI2_SCR_SMCI_TIE_Pos             (7UL)                     /*!< TIE (Bit 7)                                           */
#define SCI2_SCR_SMCI_TIE_Msk             (0x80UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
/* ==========================================================  TDR  ========================================================== */
/* ==========================================================  SSR  ========================================================== */
#define SCI2_SSR_MPBT_Pos                 (0UL)                     /*!< MPBT (Bit 0)                                          */
#define SCI2_SSR_MPBT_Msk                 (0x1UL)                   /*!< MPBT (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_MPB_Pos                  (1UL)                     /*!< MPB (Bit 1)                                           */
#define SCI2_SSR_MPB_Msk                  (0x2UL)                   /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_TEND_Pos                 (2UL)                     /*!< TEND (Bit 2)                                          */
#define SCI2_SSR_TEND_Msk                 (0x4UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_PER_Pos                  (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI2_SSR_PER_Msk                  (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_FER_Pos                  (4UL)                     /*!< FER (Bit 4)                                           */
#define SCI2_SSR_FER_Msk                  (0x10UL)                  /*!< FER (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_ORER_Pos                 (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI2_SSR_ORER_Msk                 (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_RDRF_Pos                 (6UL)                     /*!< RDRF (Bit 6)                                          */
#define SCI2_SSR_RDRF_Msk                 (0x40UL)                  /*!< RDRF (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_TDRE_Pos                 (7UL)                     /*!< TDRE (Bit 7)                                          */
#define SCI2_SSR_TDRE_Msk                 (0x80UL)                  /*!< TDRE (Bitfield-Mask: 0x01)                            */
/* =======================================================  SSR_SMCI  ======================================================== */
#define SCI2_SSR_SMCI_MPBT_Pos            (0UL)                     /*!< MPBT (Bit 0)                                          */
#define SCI2_SSR_SMCI_MPBT_Msk            (0x1UL)                   /*!< MPBT (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_SMCI_MPB_Pos             (1UL)                     /*!< MPB (Bit 1)                                           */
#define SCI2_SSR_SMCI_MPB_Msk             (0x2UL)                   /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_SMCI_TEND_Pos            (2UL)                     /*!< TEND (Bit 2)                                          */
#define SCI2_SSR_SMCI_TEND_Msk            (0x4UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_SMCI_PER_Pos             (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI2_SSR_SMCI_PER_Msk             (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_SMCI_ERS_Pos             (4UL)                     /*!< ERS (Bit 4)                                           */
#define SCI2_SSR_SMCI_ERS_Msk             (0x10UL)                  /*!< ERS (Bitfield-Mask: 0x01)                             */
#define SCI2_SSR_SMCI_ORER_Pos            (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI2_SSR_SMCI_ORER_Msk            (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_SMCI_RDRF_Pos            (6UL)                     /*!< RDRF (Bit 6)                                          */
#define SCI2_SSR_SMCI_RDRF_Msk            (0x40UL)                  /*!< RDRF (Bitfield-Mask: 0x01)                            */
#define SCI2_SSR_SMCI_TDRE_Pos            (7UL)                     /*!< TDRE (Bit 7)                                          */
#define SCI2_SSR_SMCI_TDRE_Msk            (0x80UL)                  /*!< TDRE (Bitfield-Mask: 0x01)                            */
/* ==========================================================  RDR  ========================================================== */
/* =========================================================  SCMR  ========================================================== */
#define SCI2_SCMR_SMIF_Pos                (0UL)                     /*!< SMIF (Bit 0)                                          */
#define SCI2_SCMR_SMIF_Msk                (0x1UL)                   /*!< SMIF (Bitfield-Mask: 0x01)                            */
#define SCI2_SCMR_SINV_Pos                (2UL)                     /*!< SINV (Bit 2)                                          */
#define SCI2_SCMR_SINV_Msk                (0x4UL)                   /*!< SINV (Bitfield-Mask: 0x01)                            */
#define SCI2_SCMR_SDIR_Pos                (3UL)                     /*!< SDIR (Bit 3)                                          */
#define SCI2_SCMR_SDIR_Msk                (0x8UL)                   /*!< SDIR (Bitfield-Mask: 0x01)                            */
#define SCI2_SCMR_CHR1_Pos                (4UL)                     /*!< CHR1 (Bit 4)                                          */
#define SCI2_SCMR_CHR1_Msk                (0x10UL)                  /*!< CHR1 (Bitfield-Mask: 0x01)                            */
#define SCI2_SCMR_BCP2_Pos                (7UL)                     /*!< BCP2 (Bit 7)                                          */
#define SCI2_SCMR_BCP2_Msk                (0x80UL)                  /*!< BCP2 (Bitfield-Mask: 0x01)                            */
/* =========================================================  SEMR  ========================================================== */
#define SCI2_SEMR_BRME_Pos                (2UL)                     /*!< BRME (Bit 2)                                          */
#define SCI2_SEMR_BRME_Msk                (0x4UL)                   /*!< BRME (Bitfield-Mask: 0x01)                            */
#define SCI2_SEMR_ABCSE_Pos               (3UL)                     /*!< ABCSE (Bit 3)                                         */
#define SCI2_SEMR_ABCSE_Msk               (0x8UL)                   /*!< ABCSE (Bitfield-Mask: 0x01)                           */
#define SCI2_SEMR_ABCS_Pos                (4UL)                     /*!< ABCS (Bit 4)                                          */
#define SCI2_SEMR_ABCS_Msk                (0x10UL)                  /*!< ABCS (Bitfield-Mask: 0x01)                            */
#define SCI2_SEMR_NFEN_Pos                (5UL)                     /*!< NFEN (Bit 5)                                          */
#define SCI2_SEMR_NFEN_Msk                (0x20UL)                  /*!< NFEN (Bitfield-Mask: 0x01)                            */
#define SCI2_SEMR_BGDM_Pos                (6UL)                     /*!< BGDM (Bit 6)                                          */
#define SCI2_SEMR_BGDM_Msk                (0x40UL)                  /*!< BGDM (Bitfield-Mask: 0x01)                            */
#define SCI2_SEMR_RXDESEL_Pos             (7UL)                     /*!< RXDESEL (Bit 7)                                       */
#define SCI2_SEMR_RXDESEL_Msk             (0x80UL)                  /*!< RXDESEL (Bitfield-Mask: 0x01)                         */
/* =========================================================  SNFR  ========================================================== */
#define SCI2_SNFR_NFCS_Pos                (0UL)                     /*!< NFCS (Bit 0)                                          */
#define SCI2_SNFR_NFCS_Msk                (0x7UL)                   /*!< NFCS (Bitfield-Mask: 0x07)                            */
/* =========================================================  SIMR1  ========================================================= */
#define SCI2_SIMR1_IICM_Pos               (0UL)                     /*!< IICM (Bit 0)                                          */
#define SCI2_SIMR1_IICM_Msk               (0x1UL)                   /*!< IICM (Bitfield-Mask: 0x01)                            */
#define SCI2_SIMR1_IICDL_Pos              (3UL)                     /*!< IICDL (Bit 3)                                         */
#define SCI2_SIMR1_IICDL_Msk              (0xf8UL)                  /*!< IICDL (Bitfield-Mask: 0x1f)                           */
/* =========================================================  SIMR2  ========================================================= */
#define SCI2_SIMR2_IICINTM_Pos            (0UL)                     /*!< IICINTM (Bit 0)                                       */
#define SCI2_SIMR2_IICINTM_Msk            (0x1UL)                   /*!< IICINTM (Bitfield-Mask: 0x01)                         */
#define SCI2_SIMR2_IICCSC_Pos             (1UL)                     /*!< IICCSC (Bit 1)                                        */
#define SCI2_SIMR2_IICCSC_Msk             (0x2UL)                   /*!< IICCSC (Bitfield-Mask: 0x01)                          */
#define SCI2_SIMR2_IICACKT_Pos            (5UL)                     /*!< IICACKT (Bit 5)                                       */
#define SCI2_SIMR2_IICACKT_Msk            (0x20UL)                  /*!< IICACKT (Bitfield-Mask: 0x01)                         */
/* =========================================================  SIMR3  ========================================================= */
#define SCI2_SIMR3_IICSTAREQ_Pos          (0UL)                     /*!< IICSTAREQ (Bit 0)                                     */
#define SCI2_SIMR3_IICSTAREQ_Msk          (0x1UL)                   /*!< IICSTAREQ (Bitfield-Mask: 0x01)                       */
#define SCI2_SIMR3_IICRSTAREQ_Pos         (1UL)                     /*!< IICRSTAREQ (Bit 1)                                    */
#define SCI2_SIMR3_IICRSTAREQ_Msk         (0x2UL)                   /*!< IICRSTAREQ (Bitfield-Mask: 0x01)                      */
#define SCI2_SIMR3_IICSTPREQ_Pos          (2UL)                     /*!< IICSTPREQ (Bit 2)                                     */
#define SCI2_SIMR3_IICSTPREQ_Msk          (0x4UL)                   /*!< IICSTPREQ (Bitfield-Mask: 0x01)                       */
#define SCI2_SIMR3_IICSTIF_Pos            (3UL)                     /*!< IICSTIF (Bit 3)                                       */
#define SCI2_SIMR3_IICSTIF_Msk            (0x8UL)                   /*!< IICSTIF (Bitfield-Mask: 0x01)                         */
#define SCI2_SIMR3_IICSDAS_Pos            (4UL)                     /*!< IICSDAS (Bit 4)                                       */
#define SCI2_SIMR3_IICSDAS_Msk            (0x30UL)                  /*!< IICSDAS (Bitfield-Mask: 0x03)                         */
#define SCI2_SIMR3_IICSCLS_Pos            (6UL)                     /*!< IICSCLS (Bit 6)                                       */
#define SCI2_SIMR3_IICSCLS_Msk            (0xc0UL)                  /*!< IICSCLS (Bitfield-Mask: 0x03)                         */
/* =========================================================  SISR  ========================================================== */
#define SCI2_SISR_IICACKR_Pos             (0UL)                     /*!< IICACKR (Bit 0)                                       */
#define SCI2_SISR_IICACKR_Msk             (0x1UL)                   /*!< IICACKR (Bitfield-Mask: 0x01)                         */
/* =========================================================  SPMR  ========================================================== */
#define SCI2_SPMR_SSE_Pos                 (0UL)                     /*!< SSE (Bit 0)                                           */
#define SCI2_SPMR_SSE_Msk                 (0x1UL)                   /*!< SSE (Bitfield-Mask: 0x01)                             */
#define SCI2_SPMR_CTSE_Pos                (1UL)                     /*!< CTSE (Bit 1)                                          */
#define SCI2_SPMR_CTSE_Msk                (0x2UL)                   /*!< CTSE (Bitfield-Mask: 0x01)                            */
#define SCI2_SPMR_MSS_Pos                 (2UL)                     /*!< MSS (Bit 2)                                           */
#define SCI2_SPMR_MSS_Msk                 (0x4UL)                   /*!< MSS (Bitfield-Mask: 0x01)                             */
#define SCI2_SPMR_MFF_Pos                 (4UL)                     /*!< MFF (Bit 4)                                           */
#define SCI2_SPMR_MFF_Msk                 (0x10UL)                  /*!< MFF (Bitfield-Mask: 0x01)                             */
#define SCI2_SPMR_CKPOL_Pos               (6UL)                     /*!< CKPOL (Bit 6)                                         */
#define SCI2_SPMR_CKPOL_Msk               (0x40UL)                  /*!< CKPOL (Bitfield-Mask: 0x01)                           */
#define SCI2_SPMR_CKPH_Pos                (7UL)                     /*!< CKPH (Bit 7)                                          */
#define SCI2_SPMR_CKPH_Msk                (0x80UL)                  /*!< CKPH (Bitfield-Mask: 0x01)                            */
/* =========================================================  TDRHL  ========================================================= */
#define SCI2_TDRHL_TDAT_Pos               (0UL)                     /*!< TDAT (Bit 0)                                          */
#define SCI2_TDRHL_TDAT_Msk               (0x1ffUL)                 /*!< TDAT (Bitfield-Mask: 0x1ff)                           */
/* =========================================================  RDRHL  ========================================================= */
#define SCI2_RDRHL_RDAT_Pos               (0UL)                     /*!< RDAT (Bit 0)                                          */
#define SCI2_RDRHL_RDAT_Msk               (0x1ffUL)                 /*!< RDAT (Bitfield-Mask: 0x1ff)                           */
/* =========================================================  MDDR  ========================================================== */
/* =========================================================  DCCR  ========================================================== */
#define SCI2_DCCR_DCMF_Pos                (0UL)                     /*!< DCMF (Bit 0)                                          */
#define SCI2_DCCR_DCMF_Msk                (0x1UL)                   /*!< DCMF (Bitfield-Mask: 0x01)                            */
#define SCI2_DCCR_DPER_Pos                (3UL)                     /*!< DPER (Bit 3)                                          */
#define SCI2_DCCR_DPER_Msk                (0x8UL)                   /*!< DPER (Bitfield-Mask: 0x01)                            */
#define SCI2_DCCR_DFER_Pos                (4UL)                     /*!< DFER (Bit 4)                                          */
#define SCI2_DCCR_DFER_Msk                (0x10UL)                  /*!< DFER (Bitfield-Mask: 0x01)                            */
#define SCI2_DCCR_IDSEL_Pos               (6UL)                     /*!< IDSEL (Bit 6)                                         */
#define SCI2_DCCR_IDSEL_Msk               (0x40UL)                  /*!< IDSEL (Bitfield-Mask: 0x01)                           */
#define SCI2_DCCR_DCME_Pos                (7UL)                     /*!< DCME (Bit 7)                                          */
#define SCI2_DCCR_DCME_Msk                (0x80UL)                  /*!< DCME (Bitfield-Mask: 0x01)                            */
/* ==========================================================  CDR  ========================================================== */
#define SCI2_CDR_CMPD_Pos                 (0UL)                     /*!< CMPD (Bit 0)                                          */
#define SCI2_CDR_CMPD_Msk                 (0x1ffUL)                 /*!< CMPD (Bitfield-Mask: 0x1ff)                           */
/* =========================================================  SPTR  ========================================================== */
#define SCI2_SPTR_RXDMON_Pos              (0UL)                     /*!< RXDMON (Bit 0)                                        */
#define SCI2_SPTR_RXDMON_Msk              (0x1UL)                   /*!< RXDMON (Bitfield-Mask: 0x01)                          */
#define SCI2_SPTR_SPB2DT_Pos              (1UL)                     /*!< SPB2DT (Bit 1)                                        */
#define SCI2_SPTR_SPB2DT_Msk              (0x2UL)                   /*!< SPB2DT (Bitfield-Mask: 0x01)                          */
#define SCI2_SPTR_SPB2IO_Pos              (2UL)                     /*!< SPB2IO (Bit 2)                                        */
#define SCI2_SPTR_SPB2IO_Msk              (0x4UL)                   /*!< SPB2IO (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                            POE                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  POEGGA  ========================================================= */
#define POE_POEGGA_PIDF_Pos               (0UL)                     /*!< PIDF (Bit 0)                                          */
#define POE_POEGGA_PIDF_Msk               (0x1UL)                   /*!< PIDF (Bitfield-Mask: 0x01)                            */
#define POE_POEGGA_IOCF_Pos               (1UL)                     /*!< IOCF (Bit 1)                                          */
#define POE_POEGGA_IOCF_Msk               (0x2UL)                   /*!< IOCF (Bitfield-Mask: 0x01)                            */
#define POE_POEGGA_OSTPF_Pos              (2UL)                     /*!< OSTPF (Bit 2)                                         */
#define POE_POEGGA_OSTPF_Msk              (0x4UL)                   /*!< OSTPF (Bitfield-Mask: 0x01)                           */
#define POE_POEGGA_SSF_Pos                (3UL)                     /*!< SSF (Bit 3)                                           */
#define POE_POEGGA_SSF_Msk                (0x8UL)                   /*!< SSF (Bitfield-Mask: 0x01)                             */
#define POE_POEGGA_PIDE_Pos               (4UL)                     /*!< PIDE (Bit 4)                                          */
#define POE_POEGGA_PIDE_Msk               (0x10UL)                  /*!< PIDE (Bitfield-Mask: 0x01)                            */
#define POE_POEGGA_IOCE_Pos               (5UL)                     /*!< IOCE (Bit 5)                                          */
#define POE_POEGGA_IOCE_Msk               (0x20UL)                  /*!< IOCE (Bitfield-Mask: 0x01)                            */
#define POE_POEGGA_OSTPE_Pos              (6UL)                     /*!< OSTPE (Bit 6)                                         */
#define POE_POEGGA_OSTPE_Msk              (0x40UL)                  /*!< OSTPE (Bitfield-Mask: 0x01)                           */
#define POE_POEGGA_ST_Pos                 (16UL)                    /*!< ST (Bit 16)                                           */
#define POE_POEGGA_ST_Msk                 (0x10000UL)               /*!< ST (Bitfield-Mask: 0x01)                              */
#define POE_POEGGA_INV_Pos                (28UL)                    /*!< INV (Bit 28)                                          */
#define POE_POEGGA_INV_Msk                (0x10000000UL)            /*!< INV (Bitfield-Mask: 0x01)                             */
#define POE_POEGGA_NFEN_Pos               (29UL)                    /*!< NFEN (Bit 29)                                         */
#define POE_POEGGA_NFEN_Msk               (0x20000000UL)            /*!< NFEN (Bitfield-Mask: 0x01)                            */
#define POE_POEGGA_NFCS_Pos               (30UL)                    /*!< NFCS (Bit 30)                                         */
#define POE_POEGGA_NFCS_Msk               (0xc0000000UL)            /*!< NFCS (Bitfield-Mask: 0x03)                            */
/* ========================================================  POEGGB  ========================================================= */
#define POE_POEGGB_PIDF_Pos               (0UL)                     /*!< PIDF (Bit 0)                                          */
#define POE_POEGGB_PIDF_Msk               (0x1UL)                   /*!< PIDF (Bitfield-Mask: 0x01)                            */
#define POE_POEGGB_IOCF_Pos               (1UL)                     /*!< IOCF (Bit 1)                                          */
#define POE_POEGGB_IOCF_Msk               (0x2UL)                   /*!< IOCF (Bitfield-Mask: 0x01)                            */
#define POE_POEGGB_OSTPF_Pos              (2UL)                     /*!< OSTPF (Bit 2)                                         */
#define POE_POEGGB_OSTPF_Msk              (0x4UL)                   /*!< OSTPF (Bitfield-Mask: 0x01)                           */
#define POE_POEGGB_SSF_Pos                (3UL)                     /*!< SSF (Bit 3)                                           */
#define POE_POEGGB_SSF_Msk                (0x8UL)                   /*!< SSF (Bitfield-Mask: 0x01)                             */
#define POE_POEGGB_PIDE_Pos               (4UL)                     /*!< PIDE (Bit 4)                                          */
#define POE_POEGGB_PIDE_Msk               (0x10UL)                  /*!< PIDE (Bitfield-Mask: 0x01)                            */
#define POE_POEGGB_IOCE_Pos               (5UL)                     /*!< IOCE (Bit 5)                                          */
#define POE_POEGGB_IOCE_Msk               (0x20UL)                  /*!< IOCE (Bitfield-Mask: 0x01)                            */
#define POE_POEGGB_OSTPE_Pos              (6UL)                     /*!< OSTPE (Bit 6)                                         */
#define POE_POEGGB_OSTPE_Msk              (0x40UL)                  /*!< OSTPE (Bitfield-Mask: 0x01)                           */
#define POE_POEGGB_ST_Pos                 (16UL)                    /*!< ST (Bit 16)                                           */
#define POE_POEGGB_ST_Msk                 (0x10000UL)               /*!< ST (Bitfield-Mask: 0x01)                              */
#define POE_POEGGB_INV_Pos                (28UL)                    /*!< INV (Bit 28)                                          */
#define POE_POEGGB_INV_Msk                (0x10000000UL)            /*!< INV (Bitfield-Mask: 0x01)                             */
#define POE_POEGGB_NFEN_Pos               (29UL)                    /*!< NFEN (Bit 29)                                         */
#define POE_POEGGB_NFEN_Msk               (0x20000000UL)            /*!< NFEN (Bitfield-Mask: 0x01)                            */
#define POE_POEGGB_NFCS_Pos               (30UL)                    /*!< NFCS (Bit 30)                                         */
#define POE_POEGGB_NFCS_Msk               (0xc0000000UL)            /*!< NFCS (Bitfield-Mask: 0x03)                            */


/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  R64CNT  ========================================================= */
#define RTC_R64CNT_F64HZ_Pos              (0UL)                     /*!< F64HZ (Bit 0)                                         */
#define RTC_R64CNT_F64HZ_Msk              (0x1UL)                   /*!< F64HZ (Bitfield-Mask: 0x01)                           */
#define RTC_R64CNT_F32HZ_Pos              (1UL)                     /*!< F32HZ (Bit 1)                                         */
#define RTC_R64CNT_F32HZ_Msk              (0x2UL)                   /*!< F32HZ (Bitfield-Mask: 0x01)                           */
#define RTC_R64CNT_F16HZ_Pos              (2UL)                     /*!< F16HZ (Bit 2)                                         */
#define RTC_R64CNT_F16HZ_Msk              (0x4UL)                   /*!< F16HZ (Bitfield-Mask: 0x01)                           */
#define RTC_R64CNT_F8HZ_Pos               (3UL)                     /*!< F8HZ (Bit 3)                                          */
#define RTC_R64CNT_F8HZ_Msk               (0x8UL)                   /*!< F8HZ (Bitfield-Mask: 0x01)                            */
#define RTC_R64CNT_F4HZ_Pos               (4UL)                     /*!< F4HZ (Bit 4)                                          */
#define RTC_R64CNT_F4HZ_Msk               (0x10UL)                  /*!< F4HZ (Bitfield-Mask: 0x01)                            */
#define RTC_R64CNT_F2HZ_Pos               (5UL)                     /*!< F2HZ (Bit 5)                                          */
#define RTC_R64CNT_F2HZ_Msk               (0x20UL)                  /*!< F2HZ (Bitfield-Mask: 0x01)                            */
#define RTC_R64CNT_F1HZ_Pos               (6UL)                     /*!< F1HZ (Bit 6)                                          */
#define RTC_R64CNT_F1HZ_Msk               (0x40UL)                  /*!< F1HZ (Bitfield-Mask: 0x01)                            */
/* =========================================================  BCNT0  ========================================================= */
#define RTC_BCNT0_BCNT_Pos                (0UL)                     /*!< BCNT (Bit 0)                                          */
#define RTC_BCNT0_BCNT_Msk                (0xffUL)                  /*!< BCNT (Bitfield-Mask: 0xff)                            */
/* =========================================================  BCNT1  ========================================================= */
#define RTC_BCNT1_BCNT_Pos                (0UL)                     /*!< BCNT (Bit 0)                                          */
#define RTC_BCNT1_BCNT_Msk                (0xffUL)                  /*!< BCNT (Bitfield-Mask: 0xff)                            */
/* =========================================================  BCNT2  ========================================================= */
#define RTC_BCNT2_BCNT_Pos                (0UL)                     /*!< BCNT (Bit 0)                                          */
#define RTC_BCNT2_BCNT_Msk                (0xffUL)                  /*!< BCNT (Bitfield-Mask: 0xff)                            */
/* =========================================================  BCNT3  ========================================================= */
#define RTC_BCNT3_BCNT_Pos                (0UL)                     /*!< BCNT (Bit 0)                                          */
#define RTC_BCNT3_BCNT_Msk                (0xffUL)                  /*!< BCNT (Bitfield-Mask: 0xff)                            */
/* ========================================================  RSECCNT  ======================================================== */
#define RTC_RSECCNT_SEC1_Pos              (0UL)                     /*!< SEC1 (Bit 0)                                          */
#define RTC_RSECCNT_SEC1_Msk              (0xfUL)                   /*!< SEC1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RSECCNT_SEC10_Pos             (4UL)                     /*!< SEC10 (Bit 4)                                         */
#define RTC_RSECCNT_SEC10_Msk             (0x70UL)                  /*!< SEC10 (Bitfield-Mask: 0x07)                           */
/* ========================================================  RMINCNT  ======================================================== */
#define RTC_RMINCNT_MIN1_Pos              (0UL)                     /*!< MIN1 (Bit 0)                                          */
#define RTC_RMINCNT_MIN1_Msk              (0xfUL)                   /*!< MIN1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RMINCNT_MIN10_Pos             (4UL)                     /*!< MIN10 (Bit 4)                                         */
#define RTC_RMINCNT_MIN10_Msk             (0x70UL)                  /*!< MIN10 (Bitfield-Mask: 0x07)                           */
/* ========================================================  RHRCNT  ========================================================= */
#define RTC_RHRCNT_HR1_Pos                (0UL)                     /*!< HR1 (Bit 0)                                           */
#define RTC_RHRCNT_HR1_Msk                (0xfUL)                   /*!< HR1 (Bitfield-Mask: 0x0f)                             */
#define RTC_RHRCNT_HR10_Pos               (4UL)                     /*!< HR10 (Bit 4)                                          */
#define RTC_RHRCNT_HR10_Msk               (0x30UL)                  /*!< HR10 (Bitfield-Mask: 0x03)                            */
#define RTC_RHRCNT_PM_Pos                 (6UL)                     /*!< PM (Bit 6)                                            */
#define RTC_RHRCNT_PM_Msk                 (0x40UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
/* ========================================================  RWKCNT  ========================================================= */
#define RTC_RWKCNT_DAYW_Pos               (0UL)                     /*!< DAYW (Bit 0)                                          */
#define RTC_RWKCNT_DAYW_Msk               (0x7UL)                   /*!< DAYW (Bitfield-Mask: 0x07)                            */
/* ========================================================  RDAYCNT  ======================================================== */
#define RTC_RDAYCNT_DATE1_Pos             (0UL)                     /*!< DATE1 (Bit 0)                                         */
#define RTC_RDAYCNT_DATE1_Msk             (0xfUL)                   /*!< DATE1 (Bitfield-Mask: 0x0f)                           */
#define RTC_RDAYCNT_DATE10_Pos            (4UL)                     /*!< DATE10 (Bit 4)                                        */
#define RTC_RDAYCNT_DATE10_Msk            (0x30UL)                  /*!< DATE10 (Bitfield-Mask: 0x03)                          */
/* ========================================================  RMONCNT  ======================================================== */
#define RTC_RMONCNT_MON1_Pos              (0UL)                     /*!< MON1 (Bit 0)                                          */
#define RTC_RMONCNT_MON1_Msk              (0xfUL)                   /*!< MON1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RMONCNT_MON10_Pos             (4UL)                     /*!< MON10 (Bit 4)                                         */
#define RTC_RMONCNT_MON10_Msk             (0x10UL)                  /*!< MON10 (Bitfield-Mask: 0x01)                           */
/* ========================================================  RYRCNT  ========================================================= */
#define RTC_RYRCNT_YR1_Pos                (0UL)                     /*!< YR1 (Bit 0)                                           */
#define RTC_RYRCNT_YR1_Msk                (0xfUL)                   /*!< YR1 (Bitfield-Mask: 0x0f)                             */
#define RTC_RYRCNT_YR10_Pos               (4UL)                     /*!< YR10 (Bit 4)                                          */
#define RTC_RYRCNT_YR10_Msk               (0xf0UL)                  /*!< YR10 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  BCNT0AR  ======================================================== */
#define RTC_BCNT0AR_BCNTAR_Pos            (0UL)                     /*!< BCNTAR (Bit 0)                                        */
#define RTC_BCNT0AR_BCNTAR_Msk            (0xffUL)                  /*!< BCNTAR (Bitfield-Mask: 0xff)                          */
/* ========================================================  BCNT1AR  ======================================================== */
#define RTC_BCNT1AR_BCNTAR_Pos            (0UL)                     /*!< BCNTAR (Bit 0)                                        */
#define RTC_BCNT1AR_BCNTAR_Msk            (0xffUL)                  /*!< BCNTAR (Bitfield-Mask: 0xff)                          */
/* ========================================================  BCNT2AR  ======================================================== */
#define RTC_BCNT2AR_BCNTAR_Pos            (0UL)                     /*!< BCNTAR (Bit 0)                                        */
#define RTC_BCNT2AR_BCNTAR_Msk            (0xffUL)                  /*!< BCNTAR (Bitfield-Mask: 0xff)                          */
/* ========================================================  BCNT3AR  ======================================================== */
#define RTC_BCNT3AR_BCNTAR_Pos            (0UL)                     /*!< BCNTAR (Bit 0)                                        */
#define RTC_BCNT3AR_BCNTAR_Msk            (0xffUL)                  /*!< BCNTAR (Bitfield-Mask: 0xff)                          */
/* ========================================================  RSECAR  ========================================================= */
#define RTC_RSECAR_SEC1_Pos               (0UL)                     /*!< SEC1 (Bit 0)                                          */
#define RTC_RSECAR_SEC1_Msk               (0xfUL)                   /*!< SEC1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RSECAR_SEC10_Pos              (4UL)                     /*!< SEC10 (Bit 4)                                         */
#define RTC_RSECAR_SEC10_Msk              (0x70UL)                  /*!< SEC10 (Bitfield-Mask: 0x07)                           */
#define RTC_RSECAR_ENB_Pos                (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RSECAR_ENB_Msk                (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
/* ========================================================  RMINAR  ========================================================= */
#define RTC_RMINAR_MIN1_Pos               (0UL)                     /*!< MIN1 (Bit 0)                                          */
#define RTC_RMINAR_MIN1_Msk               (0xfUL)                   /*!< MIN1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RMINAR_MIN10_Pos              (4UL)                     /*!< MIN10 (Bit 4)                                         */
#define RTC_RMINAR_MIN10_Msk              (0x70UL)                  /*!< MIN10 (Bitfield-Mask: 0x07)                           */
#define RTC_RMINAR_ENB_Pos                (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RMINAR_ENB_Msk                (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
/* =========================================================  RHRAR  ========================================================= */
#define RTC_RHRAR_HR1_Pos                 (0UL)                     /*!< HR1 (Bit 0)                                           */
#define RTC_RHRAR_HR1_Msk                 (0xfUL)                   /*!< HR1 (Bitfield-Mask: 0x0f)                             */
#define RTC_RHRAR_HR10_Pos                (4UL)                     /*!< HR10 (Bit 4)                                          */
#define RTC_RHRAR_HR10_Msk                (0x30UL)                  /*!< HR10 (Bitfield-Mask: 0x03)                            */
#define RTC_RHRAR_PM_Pos                  (6UL)                     /*!< PM (Bit 6)                                            */
#define RTC_RHRAR_PM_Msk                  (0x40UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define RTC_RHRAR_ENB_Pos                 (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RHRAR_ENB_Msk                 (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
/* =========================================================  RWKAR  ========================================================= */
#define RTC_RWKAR_DAYW_Pos                (0UL)                     /*!< DAYW (Bit 0)                                          */
#define RTC_RWKAR_DAYW_Msk                (0x7UL)                   /*!< DAYW (Bitfield-Mask: 0x07)                            */
#define RTC_RWKAR_ENB_Pos                 (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RWKAR_ENB_Msk                 (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
/* =======================================================  BCNT0AER  ======================================================== */
#define RTC_BCNT0AER_ENB_Pos              (0UL)                     /*!< ENB (Bit 0)                                           */
#define RTC_BCNT0AER_ENB_Msk              (0xffUL)                  /*!< ENB (Bitfield-Mask: 0xff)                             */
/* =======================================================  BCNT1AER  ======================================================== */
#define RTC_BCNT1AER_ENB_Pos              (0UL)                     /*!< ENB (Bit 0)                                           */
#define RTC_BCNT1AER_ENB_Msk              (0xffUL)                  /*!< ENB (Bitfield-Mask: 0xff)                             */
/* ========================================================  RDAYAR  ========================================================= */
#define RTC_RDAYAR_DATE1_Pos              (0UL)                     /*!< DATE1 (Bit 0)                                         */
#define RTC_RDAYAR_DATE1_Msk              (0xfUL)                   /*!< DATE1 (Bitfield-Mask: 0x0f)                           */
#define RTC_RDAYAR_DATE10_Pos             (4UL)                     /*!< DATE10 (Bit 4)                                        */
#define RTC_RDAYAR_DATE10_Msk             (0x30UL)                  /*!< DATE10 (Bitfield-Mask: 0x03)                          */
#define RTC_RDAYAR_ENB_Pos                (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RDAYAR_ENB_Msk                (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
/* ========================================================  RMONAR  ========================================================= */
#define RTC_RMONAR_MON1_Pos               (0UL)                     /*!< MON1 (Bit 0)                                          */
#define RTC_RMONAR_MON1_Msk               (0xfUL)                   /*!< MON1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RMONAR_MON10_Pos              (4UL)                     /*!< MON10 (Bit 4)                                         */
#define RTC_RMONAR_MON10_Msk              (0x10UL)                  /*!< MON10 (Bitfield-Mask: 0x01)                           */
#define RTC_RMONAR_ENB_Pos                (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RMONAR_ENB_Msk                (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
/* =======================================================  BCNT2AER  ======================================================== */
#define RTC_BCNT2AER_ENB_Pos              (0UL)                     /*!< ENB (Bit 0)                                           */
#define RTC_BCNT2AER_ENB_Msk              (0xffUL)                  /*!< ENB (Bitfield-Mask: 0xff)                             */
/* =========================================================  RYRAR  ========================================================= */
#define RTC_RYRAR_YR1_Pos                 (0UL)                     /*!< YR1 (Bit 0)                                           */
#define RTC_RYRAR_YR1_Msk                 (0xfUL)                   /*!< YR1 (Bitfield-Mask: 0x0f)                             */
#define RTC_RYRAR_YR10_Pos                (4UL)                     /*!< YR10 (Bit 4)                                          */
#define RTC_RYRAR_YR10_Msk                (0xf0UL)                  /*!< YR10 (Bitfield-Mask: 0x0f)                            */
/* =======================================================  BCNT3AER  ======================================================== */
#define RTC_BCNT3AER_ENB_Pos              (0UL)                     /*!< ENB (Bit 0)                                           */
#define RTC_BCNT3AER_ENB_Msk              (0xffUL)                  /*!< ENB (Bitfield-Mask: 0xff)                             */
/* ========================================================  RYRAREN  ======================================================== */
#define RTC_RYRAREN_ENB_Pos               (7UL)                     /*!< ENB (Bit 7)                                           */
#define RTC_RYRAREN_ENB_Msk               (0x80UL)                  /*!< ENB (Bitfield-Mask: 0x01)                             */
/* =========================================================  RCR1  ========================================================== */
#define RTC_RCR1_AIE_Pos                  (0UL)                     /*!< AIE (Bit 0)                                           */
#define RTC_RCR1_AIE_Msk                  (0x1UL)                   /*!< AIE (Bitfield-Mask: 0x01)                             */
#define RTC_RCR1_CIE_Pos                  (1UL)                     /*!< CIE (Bit 1)                                           */
#define RTC_RCR1_CIE_Msk                  (0x2UL)                   /*!< CIE (Bitfield-Mask: 0x01)                             */
#define RTC_RCR1_PIE_Pos                  (2UL)                     /*!< PIE (Bit 2)                                           */
#define RTC_RCR1_PIE_Msk                  (0x4UL)                   /*!< PIE (Bitfield-Mask: 0x01)                             */
#define RTC_RCR1_RTCOS_Pos                (3UL)                     /*!< RTCOS (Bit 3)                                         */
#define RTC_RCR1_RTCOS_Msk                (0x8UL)                   /*!< RTCOS (Bitfield-Mask: 0x01)                           */
#define RTC_RCR1_PES_Pos                  (4UL)                     /*!< PES (Bit 4)                                           */
#define RTC_RCR1_PES_Msk                  (0xf0UL)                  /*!< PES (Bitfield-Mask: 0x0f)                             */
/* =========================================================  RCR2  ========================================================== */
#define RTC_RCR2_START_Pos                (0UL)                     /*!< START (Bit 0)                                         */
#define RTC_RCR2_START_Msk                (0x1UL)                   /*!< START (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_RESET_Pos                (1UL)                     /*!< RESET (Bit 1)                                         */
#define RTC_RCR2_RESET_Msk                (0x2UL)                   /*!< RESET (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_ADJ30_Pos                (2UL)                     /*!< ADJ30 (Bit 2)                                         */
#define RTC_RCR2_ADJ30_Msk                (0x4UL)                   /*!< ADJ30 (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_RTCOE_Pos                (3UL)                     /*!< RTCOE (Bit 3)                                         */
#define RTC_RCR2_RTCOE_Msk                (0x8UL)                   /*!< RTCOE (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_AADJE_Pos                (4UL)                     /*!< AADJE (Bit 4)                                         */
#define RTC_RCR2_AADJE_Msk                (0x10UL)                  /*!< AADJE (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_AADJP_Pos                (5UL)                     /*!< AADJP (Bit 5)                                         */
#define RTC_RCR2_AADJP_Msk                (0x20UL)                  /*!< AADJP (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_HR24_Pos                 (6UL)                     /*!< HR24 (Bit 6)                                          */
#define RTC_RCR2_HR24_Msk                 (0x40UL)                  /*!< HR24 (Bitfield-Mask: 0x01)                            */
#define RTC_RCR2_CNTMD_Pos                (7UL)                     /*!< CNTMD (Bit 7)                                         */
#define RTC_RCR2_CNTMD_Msk                (0x80UL)                  /*!< CNTMD (Bitfield-Mask: 0x01)                           */
/* =======================================================  RCR2_BCNT  ======================================================= */
#define RTC_RCR2_BCNT_START_Pos           (0UL)                     /*!< START (Bit 0)                                         */
#define RTC_RCR2_BCNT_START_Msk           (0x1UL)                   /*!< START (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_BCNT_RESET_Pos           (1UL)                     /*!< RESET (Bit 1)                                         */
#define RTC_RCR2_BCNT_RESET_Msk           (0x2UL)                   /*!< RESET (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_BCNT_RTCOE_Pos           (3UL)                     /*!< RTCOE (Bit 3)                                         */
#define RTC_RCR2_BCNT_RTCOE_Msk           (0x8UL)                   /*!< RTCOE (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_BCNT_AADJE_Pos           (4UL)                     /*!< AADJE (Bit 4)                                         */
#define RTC_RCR2_BCNT_AADJE_Msk           (0x10UL)                  /*!< AADJE (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_BCNT_AADJP_Pos           (5UL)                     /*!< AADJP (Bit 5)                                         */
#define RTC_RCR2_BCNT_AADJP_Msk           (0x20UL)                  /*!< AADJP (Bitfield-Mask: 0x01)                           */
#define RTC_RCR2_BCNT_CNTMD_Pos           (7UL)                     /*!< CNTMD (Bit 7)                                         */
#define RTC_RCR2_BCNT_CNTMD_Msk           (0x80UL)                  /*!< CNTMD (Bitfield-Mask: 0x01)                           */
/* =========================================================  RCPE  ========================================================== */
#define RTC_RCPE_RTCEN_Pos                (0UL)                     /*!< RTCEN (Bit 0)                                         */
#define RTC_RCPE_RTCEN_Msk                (0x1UL)                   /*!< RTCEN (Bitfield-Mask: 0x01)                           */
/* =========================================================  RCR4  ========================================================== */
#define RTC_RCR4_RSKSTP_Pos               (1UL)                     /*!< RSKSTP (Bit 1)                                        */
#define RTC_RCR4_RSKSTP_Msk               (0x2UL)                   /*!< RSKSTP (Bitfield-Mask: 0x01)                          */
#define RTC_RCR4_R32KMD_Pos               (7UL)                     /*!< R32KMD (Bit 7)                                        */
#define RTC_RCR4_R32KMD_Msk               (0x80UL)                  /*!< R32KMD (Bitfield-Mask: 0x01)                          */
/* =========================================================  RADJ  ========================================================== */
#define RTC_RADJ_ADJ_Pos                  (0UL)                     /*!< ADJ (Bit 0)                                           */
#define RTC_RADJ_ADJ_Msk                  (0x3fUL)                  /*!< ADJ (Bitfield-Mask: 0x3f)                             */
#define RTC_RADJ_PMADJ_Pos                (6UL)                     /*!< PMADJ (Bit 6)                                         */
#define RTC_RADJ_PMADJ_Msk                (0xc0UL)                  /*!< PMADJ (Bitfield-Mask: 0x03)                           */
/* ========================================================  RTCCR0  ========================================================= */
#define RTC_RTCCR0_TCCT_Pos               (0UL)                     /*!< TCCT (Bit 0)                                          */
#define RTC_RTCCR0_TCCT_Msk               (0x3UL)                   /*!< TCCT (Bitfield-Mask: 0x03)                            */
#define RTC_RTCCR0_TCST_Pos               (2UL)                     /*!< TCST (Bit 2)                                          */
#define RTC_RTCCR0_TCST_Msk               (0x4UL)                   /*!< TCST (Bitfield-Mask: 0x01)                            */
#define RTC_RTCCR0_TCNF_Pos               (4UL)                     /*!< TCNF (Bit 4)                                          */
#define RTC_RTCCR0_TCNF_Msk               (0x30UL)                  /*!< TCNF (Bitfield-Mask: 0x03)                            */
#define RTC_RTCCR0_TCPSEL_Pos             (6UL)                     /*!< TCPSEL (Bit 6)                                        */
#define RTC_RTCCR0_TCPSEL_Msk             (0x40UL)                  /*!< TCPSEL (Bitfield-Mask: 0x01)                          */
#define RTC_RTCCR0_TCEN_Pos               (7UL)                     /*!< TCEN (Bit 7)                                          */
#define RTC_RTCCR0_TCEN_Msk               (0x80UL)                  /*!< TCEN (Bitfield-Mask: 0x01)                            */
/* ========================================================  RTCCR1  ========================================================= */
#define RTC_RTCCR1_TCCT_Pos               (0UL)                     /*!< TCCT (Bit 0)                                          */
#define RTC_RTCCR1_TCCT_Msk               (0x3UL)                   /*!< TCCT (Bitfield-Mask: 0x03)                            */
#define RTC_RTCCR1_TCST_Pos               (2UL)                     /*!< TCST (Bit 2)                                          */
#define RTC_RTCCR1_TCST_Msk               (0x4UL)                   /*!< TCST (Bitfield-Mask: 0x01)                            */
#define RTC_RTCCR1_TCNF_Pos               (4UL)                     /*!< TCNF (Bit 4)                                          */
#define RTC_RTCCR1_TCNF_Msk               (0x30UL)                  /*!< TCNF (Bitfield-Mask: 0x03)                            */
#define RTC_RTCCR1_TCPSEL_Pos             (6UL)                     /*!< TCPSEL (Bit 6)                                        */
#define RTC_RTCCR1_TCPSEL_Msk             (0x40UL)                  /*!< TCPSEL (Bitfield-Mask: 0x01)                          */
#define RTC_RTCCR1_TCEN_Pos               (7UL)                     /*!< TCEN (Bit 7)                                          */
#define RTC_RTCCR1_TCEN_Msk               (0x80UL)                  /*!< TCEN (Bitfield-Mask: 0x01)                            */
/* ========================================================  RTCCR2  ========================================================= */
#define RTC_RTCCR2_TCCT_Pos               (0UL)                     /*!< TCCT (Bit 0)                                          */
#define RTC_RTCCR2_TCCT_Msk               (0x3UL)                   /*!< TCCT (Bitfield-Mask: 0x03)                            */
#define RTC_RTCCR2_TCST_Pos               (2UL)                     /*!< TCST (Bit 2)                                          */
#define RTC_RTCCR2_TCST_Msk               (0x4UL)                   /*!< TCST (Bitfield-Mask: 0x01)                            */
#define RTC_RTCCR2_TCNF_Pos               (4UL)                     /*!< TCNF (Bit 4)                                          */
#define RTC_RTCCR2_TCNF_Msk               (0x30UL)                  /*!< TCNF (Bitfield-Mask: 0x03)                            */
#define RTC_RTCCR2_TCPSEL_Pos             (6UL)                     /*!< TCPSEL (Bit 6)                                        */
#define RTC_RTCCR2_TCPSEL_Msk             (0x40UL)                  /*!< TCPSEL (Bitfield-Mask: 0x01)                          */
#define RTC_RTCCR2_TCEN_Pos               (7UL)                     /*!< TCEN (Bit 7)                                          */
#define RTC_RTCCR2_TCEN_Msk               (0x80UL)                  /*!< TCEN (Bitfield-Mask: 0x01)                            */
/* =======================================================  BCNT0CP0  ======================================================== */
/* =======================================================  BCNT0CP1  ======================================================== */
/* =======================================================  BCNT0CP2  ======================================================== */
/* ========================================================  RSECCP0  ======================================================== */
#define RTC_RSECCP0_SEC1_Pos              (0UL)                     /*!< SEC1 (Bit 0)                                          */
#define RTC_RSECCP0_SEC1_Msk              (0xfUL)                   /*!< SEC1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RSECCP0_SEC10_Pos             (4UL)                     /*!< SEC10 (Bit 4)                                         */
#define RTC_RSECCP0_SEC10_Msk             (0x70UL)                  /*!< SEC10 (Bitfield-Mask: 0x07)                           */
/* ========================================================  RSECCP1  ======================================================== */
#define RTC_RSECCP1_SEC1_Pos              (0UL)                     /*!< SEC1 (Bit 0)                                          */
#define RTC_RSECCP1_SEC1_Msk              (0xfUL)                   /*!< SEC1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RSECCP1_SEC10_Pos             (4UL)                     /*!< SEC10 (Bit 4)                                         */
#define RTC_RSECCP1_SEC10_Msk             (0x70UL)                  /*!< SEC10 (Bitfield-Mask: 0x07)                           */
/* ========================================================  RSECCP2  ======================================================== */
#define RTC_RSECCP2_SEC1_Pos              (0UL)                     /*!< SEC1 (Bit 0)                                          */
#define RTC_RSECCP2_SEC1_Msk              (0xfUL)                   /*!< SEC1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RSECCP2_SEC10_Pos             (4UL)                     /*!< SEC10 (Bit 4)                                         */
#define RTC_RSECCP2_SEC10_Msk             (0x70UL)                  /*!< SEC10 (Bitfield-Mask: 0x07)                           */
/* =======================================================  BCNT1CP0  ======================================================== */
/* =======================================================  BCNT1CP1  ======================================================== */
/* =======================================================  BCNT1CP2  ======================================================== */
/* ========================================================  RMINCP0  ======================================================== */
#define RTC_RMINCP0_MIN1_Pos              (0UL)                     /*!< MIN1 (Bit 0)                                          */
#define RTC_RMINCP0_MIN1_Msk              (0xfUL)                   /*!< MIN1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RMINCP0_MIN10_Pos             (4UL)                     /*!< MIN10 (Bit 4)                                         */
#define RTC_RMINCP0_MIN10_Msk             (0x70UL)                  /*!< MIN10 (Bitfield-Mask: 0x07)                           */
/* ========================================================  RMINCP1  ======================================================== */
#define RTC_RMINCP1_MIN1_Pos              (0UL)                     /*!< MIN1 (Bit 0)                                          */
#define RTC_RMINCP1_MIN1_Msk              (0xfUL)                   /*!< MIN1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RMINCP1_MIN10_Pos             (4UL)                     /*!< MIN10 (Bit 4)                                         */
#define RTC_RMINCP1_MIN10_Msk             (0x70UL)                  /*!< MIN10 (Bitfield-Mask: 0x07)                           */
/* ========================================================  RMINCP2  ======================================================== */
#define RTC_RMINCP2_MIN1_Pos              (0UL)                     /*!< MIN1 (Bit 0)                                          */
#define RTC_RMINCP2_MIN1_Msk              (0xfUL)                   /*!< MIN1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RMINCP2_MIN10_Pos             (4UL)                     /*!< MIN10 (Bit 4)                                         */
#define RTC_RMINCP2_MIN10_Msk             (0x70UL)                  /*!< MIN10 (Bitfield-Mask: 0x07)                           */
/* =======================================================  BCNT2CP0  ======================================================== */
/* =======================================================  BCNT2CP1  ======================================================== */
/* =======================================================  BCNT2CP2  ======================================================== */
/* ========================================================  RHRCP0  ========================================================= */
#define RTC_RHRCP0_HR1_Pos                (0UL)                     /*!< HR1 (Bit 0)                                           */
#define RTC_RHRCP0_HR1_Msk                (0xfUL)                   /*!< HR1 (Bitfield-Mask: 0x0f)                             */
#define RTC_RHRCP0_HR10_Pos               (4UL)                     /*!< HR10 (Bit 4)                                          */
#define RTC_RHRCP0_HR10_Msk               (0x30UL)                  /*!< HR10 (Bitfield-Mask: 0x03)                            */
#define RTC_RHRCP0_PM_Pos                 (6UL)                     /*!< PM (Bit 6)                                            */
#define RTC_RHRCP0_PM_Msk                 (0x40UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
/* ========================================================  RHRCP1  ========================================================= */
#define RTC_RHRCP1_HR1_Pos                (0UL)                     /*!< HR1 (Bit 0)                                           */
#define RTC_RHRCP1_HR1_Msk                (0xfUL)                   /*!< HR1 (Bitfield-Mask: 0x0f)                             */
#define RTC_RHRCP1_HR10_Pos               (4UL)                     /*!< HR10 (Bit 4)                                          */
#define RTC_RHRCP1_HR10_Msk               (0x30UL)                  /*!< HR10 (Bitfield-Mask: 0x03)                            */
#define RTC_RHRCP1_PM_Pos                 (6UL)                     /*!< PM (Bit 6)                                            */
#define RTC_RHRCP1_PM_Msk                 (0x40UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
/* ========================================================  RHRCP2  ========================================================= */
#define RTC_RHRCP2_HR1_Pos                (0UL)                     /*!< HR1 (Bit 0)                                           */
#define RTC_RHRCP2_HR1_Msk                (0xfUL)                   /*!< HR1 (Bitfield-Mask: 0x0f)                             */
#define RTC_RHRCP2_HR10_Pos               (4UL)                     /*!< HR10 (Bit 4)                                          */
#define RTC_RHRCP2_HR10_Msk               (0x30UL)                  /*!< HR10 (Bitfield-Mask: 0x03)                            */
#define RTC_RHRCP2_PM_Pos                 (6UL)                     /*!< PM (Bit 6)                                            */
#define RTC_RHRCP2_PM_Msk                 (0x40UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
/* =======================================================  BCNT3CP0  ======================================================== */
/* =======================================================  BCNT3CP1  ======================================================== */
/* =======================================================  BCNT3CP2  ======================================================== */
/* ========================================================  RDAYCP0  ======================================================== */
#define RTC_RDAYCP0_DATE1_Pos             (0UL)                     /*!< DATE1 (Bit 0)                                         */
#define RTC_RDAYCP0_DATE1_Msk             (0xfUL)                   /*!< DATE1 (Bitfield-Mask: 0x0f)                           */
#define RTC_RDAYCP0_DATE10_Pos            (4UL)                     /*!< DATE10 (Bit 4)                                        */
#define RTC_RDAYCP0_DATE10_Msk            (0x30UL)                  /*!< DATE10 (Bitfield-Mask: 0x03)                          */
/* ========================================================  RDAYCP1  ======================================================== */
#define RTC_RDAYCP1_DATE1_Pos             (0UL)                     /*!< DATE1 (Bit 0)                                         */
#define RTC_RDAYCP1_DATE1_Msk             (0xfUL)                   /*!< DATE1 (Bitfield-Mask: 0x0f)                           */
#define RTC_RDAYCP1_DATE10_Pos            (4UL)                     /*!< DATE10 (Bit 4)                                        */
#define RTC_RDAYCP1_DATE10_Msk            (0x30UL)                  /*!< DATE10 (Bitfield-Mask: 0x03)                          */
/* ========================================================  RDAYCP2  ======================================================== */
#define RTC_RDAYCP2_DATE1_Pos             (0UL)                     /*!< DATE1 (Bit 0)                                         */
#define RTC_RDAYCP2_DATE1_Msk             (0xfUL)                   /*!< DATE1 (Bitfield-Mask: 0x0f)                           */
#define RTC_RDAYCP2_DATE10_Pos            (4UL)                     /*!< DATE10 (Bit 4)                                        */
#define RTC_RDAYCP2_DATE10_Msk            (0x30UL)                  /*!< DATE10 (Bitfield-Mask: 0x03)                          */
/* ========================================================  RMONCP0  ======================================================== */
#define RTC_RMONCP0_MON1_Pos              (0UL)                     /*!< MON1 (Bit 0)                                          */
#define RTC_RMONCP0_MON1_Msk              (0xfUL)                   /*!< MON1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RMONCP0_MON10_Pos             (4UL)                     /*!< MON10 (Bit 4)                                         */
#define RTC_RMONCP0_MON10_Msk             (0x10UL)                  /*!< MON10 (Bitfield-Mask: 0x01)                           */
/* ========================================================  RMONCP1  ======================================================== */
#define RTC_RMONCP1_MON1_Pos              (0UL)                     /*!< MON1 (Bit 0)                                          */
#define RTC_RMONCP1_MON1_Msk              (0xfUL)                   /*!< MON1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RMONCP1_MON10_Pos             (4UL)                     /*!< MON10 (Bit 4)                                         */
#define RTC_RMONCP1_MON10_Msk             (0x10UL)                  /*!< MON10 (Bitfield-Mask: 0x01)                           */
/* ========================================================  RMONCP2  ======================================================== */
#define RTC_RMONCP2_MON1_Pos              (0UL)                     /*!< MON1 (Bit 0)                                          */
#define RTC_RMONCP2_MON1_Msk              (0xfUL)                   /*!< MON1 (Bitfield-Mask: 0x0f)                            */
#define RTC_RMONCP2_MON10_Pos             (4UL)                     /*!< MON10 (Bit 4)                                         */
#define RTC_RMONCP2_MON10_Msk             (0x10UL)                  /*!< MON10 (Bitfield-Mask: 0x01)                           */


/* =========================================================================================================================== */
/* ================                                            WDT                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  WDTRR  ========================================================= */
/* =========================================================  WDTCR  ========================================================= */
#define WDT_WDTCR_TOPS_Pos                (0UL)                     /*!< TOPS (Bit 0)                                          */
#define WDT_WDTCR_TOPS_Msk                (0x3UL)                   /*!< TOPS (Bitfield-Mask: 0x03)                            */
#define WDT_WDTCR_CKS_Pos                 (4UL)                     /*!< CKS (Bit 4)                                           */
#define WDT_WDTCR_CKS_Msk                 (0xf0UL)                  /*!< CKS (Bitfield-Mask: 0x0f)                             */
#define WDT_WDTCR_RPES_Pos                (8UL)                     /*!< RPES (Bit 8)                                          */
#define WDT_WDTCR_RPES_Msk                (0x300UL)                 /*!< RPES (Bitfield-Mask: 0x03)                            */
#define WDT_WDTCR_RPSS_Pos                (12UL)                    /*!< RPSS (Bit 12)                                         */
#define WDT_WDTCR_RPSS_Msk                (0x3000UL)                /*!< RPSS (Bitfield-Mask: 0x03)                            */
/* =========================================================  WDTSR  ========================================================= */
#define WDT_WDTSR_CNTVAL_Pos              (0UL)                     /*!< CNTVAL (Bit 0)                                        */
#define WDT_WDTSR_CNTVAL_Msk              (0x3fffUL)                /*!< CNTVAL (Bitfield-Mask: 0x3fff)                        */
#define WDT_WDTSR_UNDFF_Pos               (14UL)                    /*!< UNDFF (Bit 14)                                        */
#define WDT_WDTSR_UNDFF_Msk               (0x4000UL)                /*!< UNDFF (Bitfield-Mask: 0x01)                           */
#define WDT_WDTSR_REFEF_Pos               (15UL)                    /*!< REFEF (Bit 15)                                        */
#define WDT_WDTSR_REFEF_Msk               (0x8000UL)                /*!< REFEF (Bitfield-Mask: 0x01)                           */
/* ========================================================  WDTRCR  ========================================================= */
#define WDT_WDTRCR_RSTIRQS_Pos            (7UL)                     /*!< RSTIRQS (Bit 7)                                       */
#define WDT_WDTRCR_RSTIRQS_Msk            (0x80UL)                  /*!< RSTIRQS (Bitfield-Mask: 0x01)                         */
/* =======================================================  WDTCSTPR  ======================================================== */
#define WDT_WDTCSTPR_SLCSTP_Pos           (7UL)                     /*!< SLCSTP (Bit 7)                                        */
#define WDT_WDTCSTPR_SLCSTP_Msk           (0x80UL)                  /*!< SLCSTP (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           IWDT                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  IWDTRR  ========================================================= */
/* ========================================================  IWDTSR  ========================================================= */
#define IWDT_IWDTSR_CNTVAL_Pos            (0UL)                     /*!< CNTVAL (Bit 0)                                        */
#define IWDT_IWDTSR_CNTVAL_Msk            (0x3fffUL)                /*!< CNTVAL (Bitfield-Mask: 0x3fff)                        */
#define IWDT_IWDTSR_UNDFF_Pos             (14UL)                    /*!< UNDFF (Bit 14)                                        */
#define IWDT_IWDTSR_UNDFF_Msk             (0x4000UL)                /*!< UNDFF (Bitfield-Mask: 0x01)                           */
#define IWDT_IWDTSR_REFEF_Pos             (15UL)                    /*!< REFEF (Bit 15)                                        */
#define IWDT_IWDTSR_REFEF_Msk             (0x8000UL)                /*!< REFEF (Bitfield-Mask: 0x01)                           */


/* =========================================================================================================================== */
/* ================                                            CAC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CACR0  ========================================================= */
#define CAC_CACR0_CFME_Pos                (0UL)                     /*!< CFME (Bit 0)                                          */
#define CAC_CACR0_CFME_Msk                (0x1UL)                   /*!< CFME (Bitfield-Mask: 0x01)                            */
/* =========================================================  CACR1  ========================================================= */
#define CAC_CACR1_CACREFE_Pos             (0UL)                     /*!< CACREFE (Bit 0)                                       */
#define CAC_CACR1_CACREFE_Msk             (0x1UL)                   /*!< CACREFE (Bitfield-Mask: 0x01)                         */
#define CAC_CACR1_FMCS_Pos                (1UL)                     /*!< FMCS (Bit 1)                                          */
#define CAC_CACR1_FMCS_Msk                (0xeUL)                   /*!< FMCS (Bitfield-Mask: 0x07)                            */
#define CAC_CACR1_TCSS_Pos                (4UL)                     /*!< TCSS (Bit 4)                                          */
#define CAC_CACR1_TCSS_Msk                (0x30UL)                  /*!< TCSS (Bitfield-Mask: 0x03)                            */
#define CAC_CACR1_EDGES_Pos               (6UL)                     /*!< EDGES (Bit 6)                                         */
#define CAC_CACR1_EDGES_Msk               (0xc0UL)                  /*!< EDGES (Bitfield-Mask: 0x03)                           */
/* =========================================================  CACR2  ========================================================= */
#define CAC_CACR2_RPS_Pos                 (0UL)                     /*!< RPS (Bit 0)                                           */
#define CAC_CACR2_RPS_Msk                 (0x1UL)                   /*!< RPS (Bitfield-Mask: 0x01)                             */
#define CAC_CACR2_RSCS_Pos                (1UL)                     /*!< RSCS (Bit 1)                                          */
#define CAC_CACR2_RSCS_Msk                (0xeUL)                   /*!< RSCS (Bitfield-Mask: 0x07)                            */
#define CAC_CACR2_RCDS_Pos                (4UL)                     /*!< RCDS (Bit 4)                                          */
#define CAC_CACR2_RCDS_Msk                (0x30UL)                  /*!< RCDS (Bitfield-Mask: 0x03)                            */
#define CAC_CACR2_DFS_Pos                 (6UL)                     /*!< DFS (Bit 6)                                           */
#define CAC_CACR2_DFS_Msk                 (0xc0UL)                  /*!< DFS (Bitfield-Mask: 0x03)                             */
/* =========================================================  CAICR  ========================================================= */
#define CAC_CAICR_FERRIE_Pos              (0UL)                     /*!< FERRIE (Bit 0)                                        */
#define CAC_CAICR_FERRIE_Msk              (0x1UL)                   /*!< FERRIE (Bitfield-Mask: 0x01)                          */
#define CAC_CAICR_MENDIE_Pos              (1UL)                     /*!< MENDIE (Bit 1)                                        */
#define CAC_CAICR_MENDIE_Msk              (0x2UL)                   /*!< MENDIE (Bitfield-Mask: 0x01)                          */
#define CAC_CAICR_OVFIE_Pos               (2UL)                     /*!< OVFIE (Bit 2)                                         */
#define CAC_CAICR_OVFIE_Msk               (0x4UL)                   /*!< OVFIE (Bitfield-Mask: 0x01)                           */
#define CAC_CAICR_FERRFCL_Pos             (4UL)                     /*!< FERRFCL (Bit 4)                                       */
#define CAC_CAICR_FERRFCL_Msk             (0x10UL)                  /*!< FERRFCL (Bitfield-Mask: 0x01)                         */
#define CAC_CAICR_MENDFCL_Pos             (5UL)                     /*!< MENDFCL (Bit 5)                                       */
#define CAC_CAICR_MENDFCL_Msk             (0x20UL)                  /*!< MENDFCL (Bitfield-Mask: 0x01)                         */
#define CAC_CAICR_OVFFCL_Pos              (6UL)                     /*!< OVFFCL (Bit 6)                                        */
#define CAC_CAICR_OVFFCL_Msk              (0x40UL)                  /*!< OVFFCL (Bitfield-Mask: 0x01)                          */
/* =========================================================  CASTR  ========================================================= */
#define CAC_CASTR_FERRF_Pos               (0UL)                     /*!< FERRF (Bit 0)                                         */
#define CAC_CASTR_FERRF_Msk               (0x1UL)                   /*!< FERRF (Bitfield-Mask: 0x01)                           */
#define CAC_CASTR_MENDF_Pos               (1UL)                     /*!< MENDF (Bit 1)                                         */
#define CAC_CASTR_MENDF_Msk               (0x2UL)                   /*!< MENDF (Bitfield-Mask: 0x01)                           */
#define CAC_CASTR_OVFF_Pos                (2UL)                     /*!< OVFF (Bit 2)                                          */
#define CAC_CASTR_OVFF_Msk                (0x4UL)                   /*!< OVFF (Bitfield-Mask: 0x01)                            */
/* ========================================================  CAULVR  ========================================================= */
/* ========================================================  CALLVR  ========================================================= */
/* ========================================================  CACNTBR  ======================================================== */


/* =========================================================================================================================== */
/* ================                                           MSTP                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  MSTPCRB  ======================================================== */
#define MSTP_MSTPCRB_MSTPB5_Pos           (5UL)                     /*!< MSTPB5 (Bit 5)                                        */
#define MSTP_MSTPCRB_MSTPB5_Msk           (0x20UL)                  /*!< MSTPB5 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRB_MSTPB6_Pos           (6UL)                     /*!< MSTPB6 (Bit 6)                                        */
#define MSTP_MSTPCRB_MSTPB6_Msk           (0x40UL)                  /*!< MSTPB6 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRB_MSTPB8_Pos           (8UL)                     /*!< MSTPB8 (Bit 8)                                        */
#define MSTP_MSTPCRB_MSTPB8_Msk           (0x100UL)                 /*!< MSTPB8 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRB_MSTPB9_Pos           (9UL)                     /*!< MSTPB9 (Bit 9)                                        */
#define MSTP_MSTPCRB_MSTPB9_Msk           (0x200UL)                 /*!< MSTPB9 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRB_MSTPB18_Pos          (18UL)                    /*!< MSTPB18 (Bit 18)                                      */
#define MSTP_MSTPCRB_MSTPB18_Msk          (0x40000UL)               /*!< MSTPB18 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB19_Pos          (19UL)                    /*!< MSTPB19 (Bit 19)                                      */
#define MSTP_MSTPCRB_MSTPB19_Msk          (0x80000UL)               /*!< MSTPB19 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB22_Pos          (22UL)                    /*!< MSTPB22 (Bit 22)                                      */
#define MSTP_MSTPCRB_MSTPB22_Msk          (0x400000UL)              /*!< MSTPB22 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB26_Pos          (26UL)                    /*!< MSTPB26 (Bit 26)                                      */
#define MSTP_MSTPCRB_MSTPB26_Msk          (0x4000000UL)             /*!< MSTPB26 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB27_Pos          (27UL)                    /*!< MSTPB27 (Bit 27)                                      */
#define MSTP_MSTPCRB_MSTPB27_Msk          (0x8000000UL)             /*!< MSTPB27 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB28_Pos          (28UL)                    /*!< MSTPB28 (Bit 28)                                      */
#define MSTP_MSTPCRB_MSTPB28_Msk          (0x10000000UL)            /*!< MSTPB28 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB29_Pos          (29UL)                    /*!< MSTPB29 (Bit 29)                                      */
#define MSTP_MSTPCRB_MSTPB29_Msk          (0x20000000UL)            /*!< MSTPB29 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB30_Pos          (30UL)                    /*!< MSTPB30 (Bit 30)                                      */
#define MSTP_MSTPCRB_MSTPB30_Msk          (0x40000000UL)            /*!< MSTPB30 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRB_MSTPB31_Pos          (31UL)                    /*!< MSTPB31 (Bit 31)                                      */
#define MSTP_MSTPCRB_MSTPB31_Msk          (0x80000000UL)            /*!< MSTPB31 (Bitfield-Mask: 0x01)                         */
/* ========================================================  MSTPCRC  ======================================================== */
#define MSTP_MSTPCRC_MSTPC0_Pos           (0UL)                     /*!< MSTPC0 (Bit 0)                                        */
#define MSTP_MSTPCRC_MSTPC0_Msk           (0x1UL)                   /*!< MSTPC0 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRC_MSTPC1_Pos           (1UL)                     /*!< MSTPC1 (Bit 1)                                        */
#define MSTP_MSTPCRC_MSTPC1_Msk           (0x2UL)                   /*!< MSTPC1 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRC_MSTPC13_Pos          (13UL)                    /*!< MSTPC13 (Bit 13)                                      */
#define MSTP_MSTPCRC_MSTPC13_Msk          (0x2000UL)                /*!< MSTPC13 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC14_Pos          (14UL)                    /*!< MSTPC14 (Bit 14)                                      */
#define MSTP_MSTPCRC_MSTPC14_Msk          (0x4000UL)                /*!< MSTPC14 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC15_Pos          (15UL)                    /*!< MSTPC15 (Bit 15)                                      */
#define MSTP_MSTPCRC_MSTPC15_Msk          (0x8000UL)                /*!< MSTPC15 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC22_Pos          (22UL)                    /*!< MSTPC22 (Bit 22)                                      */
#define MSTP_MSTPCRC_MSTPC22_Msk          (0x400000UL)              /*!< MSTPC22 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC25_Pos          (25UL)                    /*!< MSTPC25 (Bit 25)                                      */
#define MSTP_MSTPCRC_MSTPC25_Msk          (0x2000000UL)             /*!< MSTPC25 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC26_Pos          (26UL)                    /*!< MSTPC26 (Bit 26)                                      */
#define MSTP_MSTPCRC_MSTPC26_Msk          (0x4000000UL)             /*!< MSTPC26 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRC_MSTPC31_Pos          (31UL)                    /*!< MSTPC31 (Bit 31)                                      */
#define MSTP_MSTPCRC_MSTPC31_Msk          (0x80000000UL)            /*!< MSTPC31 (Bitfield-Mask: 0x01)                         */
/* ========================================================  MSTPCRD  ======================================================== */
#define MSTP_MSTPCRD_MSTPD0_Pos           (0UL)                     /*!< MSTPD0 (Bit 0)                                        */
#define MSTP_MSTPCRD_MSTPD0_Msk           (0x1UL)                   /*!< MSTPD0 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD1_Pos           (1UL)                     /*!< MSTPD1 (Bit 1)                                        */
#define MSTP_MSTPCRD_MSTPD1_Msk           (0x2UL)                   /*!< MSTPD1 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD2_Pos           (2UL)                     /*!< MSTPD2 (Bit 2)                                        */
#define MSTP_MSTPCRD_MSTPD2_Msk           (0x4UL)                   /*!< MSTPD2 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD3_Pos           (3UL)                     /*!< MSTPD3 (Bit 3)                                        */
#define MSTP_MSTPCRD_MSTPD3_Msk           (0x8UL)                   /*!< MSTPD3 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD5_Pos           (5UL)                     /*!< MSTPD5 (Bit 5)                                        */
#define MSTP_MSTPCRD_MSTPD5_Msk           (0x20UL)                  /*!< MSTPD5 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD6_Pos           (6UL)                     /*!< MSTPD6 (Bit 6)                                        */
#define MSTP_MSTPCRD_MSTPD6_Msk           (0x40UL)                  /*!< MSTPD6 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD7_Pos           (7UL)                     /*!< MSTPD7 (Bit 7)                                        */
#define MSTP_MSTPCRD_MSTPD7_Msk           (0x80UL)                  /*!< MSTPD7 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD9_Pos           (9UL)                     /*!< MSTPD9 (Bit 9)                                        */
#define MSTP_MSTPCRD_MSTPD9_Msk           (0x200UL)                 /*!< MSTPD9 (Bitfield-Mask: 0x01)                          */
#define MSTP_MSTPCRD_MSTPD10_Pos          (10UL)                    /*!< MSTPD10 (Bit 10)                                      */
#define MSTP_MSTPCRD_MSTPD10_Msk          (0x400UL)                 /*!< MSTPD10 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD11_Pos          (11UL)                    /*!< MSTPD11 (Bit 11)                                      */
#define MSTP_MSTPCRD_MSTPD11_Msk          (0x800UL)                 /*!< MSTPD11 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD12_Pos          (12UL)                    /*!< MSTPD12 (Bit 12)                                      */
#define MSTP_MSTPCRD_MSTPD12_Msk          (0x1000UL)                /*!< MSTPD12 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD13_Pos          (13UL)                    /*!< MSTPD13 (Bit 13)                                      */
#define MSTP_MSTPCRD_MSTPD13_Msk          (0x2000UL)                /*!< MSTPD13 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD14_Pos          (14UL)                    /*!< MSTPD14 (Bit 14)                                      */
#define MSTP_MSTPCRD_MSTPD14_Msk          (0x4000UL)                /*!< MSTPD14 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD16_Pos          (16UL)                    /*!< MSTPD16 (Bit 16)                                      */
#define MSTP_MSTPCRD_MSTPD16_Msk          (0x10000UL)               /*!< MSTPD16 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD17_Pos          (17UL)                    /*!< MSTPD17 (Bit 17)                                      */
#define MSTP_MSTPCRD_MSTPD17_Msk          (0x20000UL)               /*!< MSTPD17 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD18_Pos          (18UL)                    /*!< MSTPD18 (Bit 18)                                      */
#define MSTP_MSTPCRD_MSTPD18_Msk          (0x40000UL)               /*!< MSTPD18 (Bitfield-Mask: 0x01)                         */
#define MSTP_MSTPCRD_MSTPD22_Pos          (22UL)                    /*!< MSTPD22 (Bit 22)                                      */
#define MSTP_MSTPCRD_MSTPD22_Msk          (0x400000UL)              /*!< MSTPD22 (Bitfield-Mask: 0x01)                         */


/* =========================================================================================================================== */
/* ================                                           TMR0                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  TCR  ========================================================== */
#define TMR0_TCR_CCLR_Pos                 (3UL)                     /*!< CCLR (Bit 3)                                          */
#define TMR0_TCR_CCLR_Msk                 (0x18UL)                  /*!< CCLR (Bitfield-Mask: 0x03)                            */
#define TMR0_TCR_OVIE_Pos                 (5UL)                     /*!< OVIE (Bit 5)                                          */
#define TMR0_TCR_OVIE_Msk                 (0x20UL)                  /*!< OVIE (Bitfield-Mask: 0x01)                            */
#define TMR0_TCR_CMIEA_Pos                (6UL)                     /*!< CMIEA (Bit 6)                                         */
#define TMR0_TCR_CMIEA_Msk                (0x40UL)                  /*!< CMIEA (Bitfield-Mask: 0x01)                           */
#define TMR0_TCR_CMIEB_Pos                (7UL)                     /*!< CMIEB (Bit 7)                                         */
#define TMR0_TCR_CMIEB_Msk                (0x80UL)                  /*!< CMIEB (Bitfield-Mask: 0x01)                           */
/* =========================================================  TCSR  ========================================================== */
#define TMR0_TCSR_OSA_Pos                 (0UL)                     /*!< OSA (Bit 0)                                           */
#define TMR0_TCSR_OSA_Msk                 (0x3UL)                   /*!< OSA (Bitfield-Mask: 0x03)                             */
#define TMR0_TCSR_OSB_Pos                 (2UL)                     /*!< OSB (Bit 2)                                           */
#define TMR0_TCSR_OSB_Msk                 (0xcUL)                   /*!< OSB (Bitfield-Mask: 0x03)                             */
#define TMR0_TCSR_ADTE_Pos                (4UL)                     /*!< ADTE (Bit 4)                                          */
#define TMR0_TCSR_ADTE_Msk                (0x10UL)                  /*!< ADTE (Bitfield-Mask: 0x01)                            */
/* =========================================================  TCORA  ========================================================= */
/* =========================================================  TCORB  ========================================================= */
/* =========================================================  TCNT  ========================================================== */
/* =========================================================  TCCR  ========================================================== */
#define TMR0_TCCR_CKS_Pos                 (0UL)                     /*!< CKS (Bit 0)                                           */
#define TMR0_TCCR_CKS_Msk                 (0x7UL)                   /*!< CKS (Bitfield-Mask: 0x07)                             */
#define TMR0_TCCR_CSS_Pos                 (3UL)                     /*!< CSS (Bit 3)                                           */
#define TMR0_TCCR_CSS_Msk                 (0x18UL)                  /*!< CSS (Bitfield-Mask: 0x03)                             */
#define TMR0_TCCR_TMRIS_Pos               (7UL)                     /*!< TMRIS (Bit 7)                                         */
#define TMR0_TCCR_TMRIS_Msk               (0x80UL)                  /*!< TMRIS (Bitfield-Mask: 0x01)                           */


/* =========================================================================================================================== */
/* ================                                           TMR1                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  TCR  ========================================================== */
#define TMR1_TCR_CCLR_Pos                 (3UL)                     /*!< CCLR (Bit 3)                                          */
#define TMR1_TCR_CCLR_Msk                 (0x18UL)                  /*!< CCLR (Bitfield-Mask: 0x03)                            */
#define TMR1_TCR_OVIE_Pos                 (5UL)                     /*!< OVIE (Bit 5)                                          */
#define TMR1_TCR_OVIE_Msk                 (0x20UL)                  /*!< OVIE (Bitfield-Mask: 0x01)                            */
#define TMR1_TCR_CMIEA_Pos                (6UL)                     /*!< CMIEA (Bit 6)                                         */
#define TMR1_TCR_CMIEA_Msk                (0x40UL)                  /*!< CMIEA (Bitfield-Mask: 0x01)                           */
#define TMR1_TCR_CMIEB_Pos                (7UL)                     /*!< CMIEB (Bit 7)                                         */
#define TMR1_TCR_CMIEB_Msk                (0x80UL)                  /*!< CMIEB (Bitfield-Mask: 0x01)                           */
/* =========================================================  TCSR  ========================================================== */
#define TMR1_TCSR_OSA_Pos                 (0UL)                     /*!< OSA (Bit 0)                                           */
#define TMR1_TCSR_OSA_Msk                 (0x3UL)                   /*!< OSA (Bitfield-Mask: 0x03)                             */
#define TMR1_TCSR_OSB_Pos                 (2UL)                     /*!< OSB (Bit 2)                                           */
#define TMR1_TCSR_OSB_Msk                 (0xcUL)                   /*!< OSB (Bitfield-Mask: 0x03)                             */
/* =========================================================  TCORA  ========================================================= */
/* =========================================================  TCORB  ========================================================= */
/* =========================================================  TCNT  ========================================================== */
/* =========================================================  TCCR  ========================================================== */
#define TMR1_TCCR_CKS_Pos                 (0UL)                     /*!< CKS (Bit 0)                                           */
#define TMR1_TCCR_CKS_Msk                 (0x7UL)                   /*!< CKS (Bitfield-Mask: 0x07)                             */
#define TMR1_TCCR_CSS_Pos                 (3UL)                     /*!< CSS (Bit 3)                                           */
#define TMR1_TCCR_CSS_Msk                 (0x18UL)                  /*!< CSS (Bitfield-Mask: 0x03)                             */
#define TMR1_TCCR_TMRIS_Pos               (7UL)                     /*!< TMRIS (Bit 7)                                         */
#define TMR1_TCCR_TMRIS_Msk               (0x80UL)                  /*!< TMRIS (Bitfield-Mask: 0x01)                           */


/* =========================================================================================================================== */
/* ================                                           IIC0                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  ICCR1  ========================================================= */
#define IIC0_ICCR1_SDAI_Pos               (0UL)                     /*!< SDAI (Bit 0)                                          */
#define IIC0_ICCR1_SDAI_Msk               (0x1UL)                   /*!< SDAI (Bitfield-Mask: 0x01)                            */
#define IIC0_ICCR1_SCLI_Pos               (1UL)                     /*!< SCLI (Bit 1)                                          */
#define IIC0_ICCR1_SCLI_Msk               (0x2UL)                   /*!< SCLI (Bitfield-Mask: 0x01)                            */
#define IIC0_ICCR1_SDAO_Pos               (2UL)                     /*!< SDAO (Bit 2)                                          */
#define IIC0_ICCR1_SDAO_Msk               (0x4UL)                   /*!< SDAO (Bitfield-Mask: 0x01)                            */
#define IIC0_ICCR1_SCLO_Pos               (3UL)                     /*!< SCLO (Bit 3)                                          */
#define IIC0_ICCR1_SCLO_Msk               (0x8UL)                   /*!< SCLO (Bitfield-Mask: 0x01)                            */
#define IIC0_ICCR1_SOWP_Pos               (4UL)                     /*!< SOWP (Bit 4)                                          */
#define IIC0_ICCR1_SOWP_Msk               (0x10UL)                  /*!< SOWP (Bitfield-Mask: 0x01)                            */
#define IIC0_ICCR1_CLO_Pos                (5UL)                     /*!< CLO (Bit 5)                                           */
#define IIC0_ICCR1_CLO_Msk                (0x20UL)                  /*!< CLO (Bitfield-Mask: 0x01)                             */
#define IIC0_ICCR1_IICRST_Pos             (6UL)                     /*!< IICRST (Bit 6)                                        */
#define IIC0_ICCR1_IICRST_Msk             (0x40UL)                  /*!< IICRST (Bitfield-Mask: 0x01)                          */
#define IIC0_ICCR1_ICE_Pos                (7UL)                     /*!< ICE (Bit 7)                                           */
#define IIC0_ICCR1_ICE_Msk                (0x80UL)                  /*!< ICE (Bitfield-Mask: 0x01)                             */
/* =========================================================  ICCR2  ========================================================= */
#define IIC0_ICCR2_ST_Pos                 (1UL)                     /*!< ST (Bit 1)                                            */
#define IIC0_ICCR2_ST_Msk                 (0x2UL)                   /*!< ST (Bitfield-Mask: 0x01)                              */
#define IIC0_ICCR2_RS_Pos                 (2UL)                     /*!< RS (Bit 2)                                            */
#define IIC0_ICCR2_RS_Msk                 (0x4UL)                   /*!< RS (Bitfield-Mask: 0x01)                              */
#define IIC0_ICCR2_SP_Pos                 (3UL)                     /*!< SP (Bit 3)                                            */
#define IIC0_ICCR2_SP_Msk                 (0x8UL)                   /*!< SP (Bitfield-Mask: 0x01)                              */
#define IIC0_ICCR2_TRS_Pos                (5UL)                     /*!< TRS (Bit 5)                                           */
#define IIC0_ICCR2_TRS_Msk                (0x20UL)                  /*!< TRS (Bitfield-Mask: 0x01)                             */
#define IIC0_ICCR2_MST_Pos                (6UL)                     /*!< MST (Bit 6)                                           */
#define IIC0_ICCR2_MST_Msk                (0x40UL)                  /*!< MST (Bitfield-Mask: 0x01)                             */
#define IIC0_ICCR2_BBSY_Pos               (7UL)                     /*!< BBSY (Bit 7)                                          */
#define IIC0_ICCR2_BBSY_Msk               (0x80UL)                  /*!< BBSY (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICMR1  ========================================================= */
#define IIC0_ICMR1_BC_Pos                 (0UL)                     /*!< BC (Bit 0)                                            */
#define IIC0_ICMR1_BC_Msk                 (0x7UL)                   /*!< BC (Bitfield-Mask: 0x07)                              */
#define IIC0_ICMR1_BCWP_Pos               (3UL)                     /*!< BCWP (Bit 3)                                          */
#define IIC0_ICMR1_BCWP_Msk               (0x8UL)                   /*!< BCWP (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR1_CKS_Pos                (4UL)                     /*!< CKS (Bit 4)                                           */
#define IIC0_ICMR1_CKS_Msk                (0x70UL)                  /*!< CKS (Bitfield-Mask: 0x07)                             */
#define IIC0_ICMR1_MTWP_Pos               (7UL)                     /*!< MTWP (Bit 7)                                          */
#define IIC0_ICMR1_MTWP_Msk               (0x80UL)                  /*!< MTWP (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICMR2  ========================================================= */
#define IIC0_ICMR2_TMOS_Pos               (0UL)                     /*!< TMOS (Bit 0)                                          */
#define IIC0_ICMR2_TMOS_Msk               (0x1UL)                   /*!< TMOS (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR2_TMOL_Pos               (1UL)                     /*!< TMOL (Bit 1)                                          */
#define IIC0_ICMR2_TMOL_Msk               (0x2UL)                   /*!< TMOL (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR2_TMOH_Pos               (2UL)                     /*!< TMOH (Bit 2)                                          */
#define IIC0_ICMR2_TMOH_Msk               (0x4UL)                   /*!< TMOH (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR2_SDDL_Pos               (4UL)                     /*!< SDDL (Bit 4)                                          */
#define IIC0_ICMR2_SDDL_Msk               (0x70UL)                  /*!< SDDL (Bitfield-Mask: 0x07)                            */
#define IIC0_ICMR2_DLCS_Pos               (7UL)                     /*!< DLCS (Bit 7)                                          */
#define IIC0_ICMR2_DLCS_Msk               (0x80UL)                  /*!< DLCS (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICMR3  ========================================================= */
#define IIC0_ICMR3_NF_Pos                 (0UL)                     /*!< NF (Bit 0)                                            */
#define IIC0_ICMR3_NF_Msk                 (0x3UL)                   /*!< NF (Bitfield-Mask: 0x03)                              */
#define IIC0_ICMR3_ACKBR_Pos              (2UL)                     /*!< ACKBR (Bit 2)                                         */
#define IIC0_ICMR3_ACKBR_Msk              (0x4UL)                   /*!< ACKBR (Bitfield-Mask: 0x01)                           */
#define IIC0_ICMR3_ACKBT_Pos              (3UL)                     /*!< ACKBT (Bit 3)                                         */
#define IIC0_ICMR3_ACKBT_Msk              (0x8UL)                   /*!< ACKBT (Bitfield-Mask: 0x01)                           */
#define IIC0_ICMR3_ACKWP_Pos              (4UL)                     /*!< ACKWP (Bit 4)                                         */
#define IIC0_ICMR3_ACKWP_Msk              (0x10UL)                  /*!< ACKWP (Bitfield-Mask: 0x01)                           */
#define IIC0_ICMR3_RDRFS_Pos              (5UL)                     /*!< RDRFS (Bit 5)                                         */
#define IIC0_ICMR3_RDRFS_Msk              (0x20UL)                  /*!< RDRFS (Bitfield-Mask: 0x01)                           */
#define IIC0_ICMR3_WAIT_Pos               (6UL)                     /*!< WAIT (Bit 6)                                          */
#define IIC0_ICMR3_WAIT_Msk               (0x40UL)                  /*!< WAIT (Bitfield-Mask: 0x01)                            */
#define IIC0_ICMR3_SMBS_Pos               (7UL)                     /*!< SMBS (Bit 7)                                          */
#define IIC0_ICMR3_SMBS_Msk               (0x80UL)                  /*!< SMBS (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICFER  ========================================================= */
#define IIC0_ICFER_TMOE_Pos               (0UL)                     /*!< TMOE (Bit 0)                                          */
#define IIC0_ICFER_TMOE_Msk               (0x1UL)                   /*!< TMOE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICFER_MALE_Pos               (1UL)                     /*!< MALE (Bit 1)                                          */
#define IIC0_ICFER_MALE_Msk               (0x2UL)                   /*!< MALE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICFER_NALE_Pos               (2UL)                     /*!< NALE (Bit 2)                                          */
#define IIC0_ICFER_NALE_Msk               (0x4UL)                   /*!< NALE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICFER_SALE_Pos               (3UL)                     /*!< SALE (Bit 3)                                          */
#define IIC0_ICFER_SALE_Msk               (0x8UL)                   /*!< SALE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICFER_NACKE_Pos              (4UL)                     /*!< NACKE (Bit 4)                                         */
#define IIC0_ICFER_NACKE_Msk              (0x10UL)                  /*!< NACKE (Bitfield-Mask: 0x01)                           */
#define IIC0_ICFER_NFE_Pos                (5UL)                     /*!< NFE (Bit 5)                                           */
#define IIC0_ICFER_NFE_Msk                (0x20UL)                  /*!< NFE (Bitfield-Mask: 0x01)                             */
#define IIC0_ICFER_SCLE_Pos               (6UL)                     /*!< SCLE (Bit 6)                                          */
#define IIC0_ICFER_SCLE_Msk               (0x40UL)                  /*!< SCLE (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICSER  ========================================================= */
#define IIC0_ICSER_SAR0E_Pos              (0UL)                     /*!< SAR0E (Bit 0)                                         */
#define IIC0_ICSER_SAR0E_Msk              (0x1UL)                   /*!< SAR0E (Bitfield-Mask: 0x01)                           */
#define IIC0_ICSER_SAR1E_Pos              (1UL)                     /*!< SAR1E (Bit 1)                                         */
#define IIC0_ICSER_SAR1E_Msk              (0x2UL)                   /*!< SAR1E (Bitfield-Mask: 0x01)                           */
#define IIC0_ICSER_SAR2E_Pos              (2UL)                     /*!< SAR2E (Bit 2)                                         */
#define IIC0_ICSER_SAR2E_Msk              (0x4UL)                   /*!< SAR2E (Bitfield-Mask: 0x01)                           */
#define IIC0_ICSER_GCAE_Pos               (3UL)                     /*!< GCAE (Bit 3)                                          */
#define IIC0_ICSER_GCAE_Msk               (0x8UL)                   /*!< GCAE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSER_DIDE_Pos               (5UL)                     /*!< DIDE (Bit 5)                                          */
#define IIC0_ICSER_DIDE_Msk               (0x20UL)                  /*!< DIDE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSER_HOAE_Pos               (7UL)                     /*!< HOAE (Bit 7)                                          */
#define IIC0_ICSER_HOAE_Msk               (0x80UL)                  /*!< HOAE (Bitfield-Mask: 0x01)                            */
/* =========================================================  ICIER  ========================================================= */
#define IIC0_ICIER_TMOIE_Pos              (0UL)                     /*!< TMOIE (Bit 0)                                         */
#define IIC0_ICIER_TMOIE_Msk              (0x1UL)                   /*!< TMOIE (Bitfield-Mask: 0x01)                           */
#define IIC0_ICIER_ALIE_Pos               (1UL)                     /*!< ALIE (Bit 1)                                          */
#define IIC0_ICIER_ALIE_Msk               (0x2UL)                   /*!< ALIE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICIER_STIE_Pos               (2UL)                     /*!< STIE (Bit 2)                                          */
#define IIC0_ICIER_STIE_Msk               (0x4UL)                   /*!< STIE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICIER_SPIE_Pos               (3UL)                     /*!< SPIE (Bit 3)                                          */
#define IIC0_ICIER_SPIE_Msk               (0x8UL)                   /*!< SPIE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICIER_NAKIE_Pos              (4UL)                     /*!< NAKIE (Bit 4)                                         */
#define IIC0_ICIER_NAKIE_Msk              (0x10UL)                  /*!< NAKIE (Bitfield-Mask: 0x01)                           */
#define IIC0_ICIER_RIE_Pos                (5UL)                     /*!< RIE (Bit 5)                                           */
#define IIC0_ICIER_RIE_Msk                (0x20UL)                  /*!< RIE (Bitfield-Mask: 0x01)                             */
#define IIC0_ICIER_TEIE_Pos               (6UL)                     /*!< TEIE (Bit 6)                                          */
#define IIC0_ICIER_TEIE_Msk               (0x40UL)                  /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define IIC0_ICIER_TIE_Pos                (7UL)                     /*!< TIE (Bit 7)                                           */
#define IIC0_ICIER_TIE_Msk                (0x80UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
/* =========================================================  ICSR1  ========================================================= */
#define IIC0_ICSR1_AAS0_Pos               (0UL)                     /*!< AAS0 (Bit 0)                                          */
#define IIC0_ICSR1_AAS0_Msk               (0x1UL)                   /*!< AAS0 (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR1_AAS1_Pos               (1UL)                     /*!< AAS1 (Bit 1)                                          */
#define IIC0_ICSR1_AAS1_Msk               (0x2UL)                   /*!< AAS1 (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR1_AAS2_Pos               (2UL)                     /*!< AAS2 (Bit 2)                                          */
#define IIC0_ICSR1_AAS2_Msk               (0x4UL)                   /*!< AAS2 (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR1_GCA_Pos                (3UL)                     /*!< GCA (Bit 3)                                           */
#define IIC0_ICSR1_GCA_Msk                (0x8UL)                   /*!< GCA (Bitfield-Mask: 0x01)                             */
#define IIC0_ICSR1_DID_Pos                (5UL)                     /*!< DID (Bit 5)                                           */
#define IIC0_ICSR1_DID_Msk                (0x20UL)                  /*!< DID (Bitfield-Mask: 0x01)                             */
#define IIC0_ICSR1_HOA_Pos                (7UL)                     /*!< HOA (Bit 7)                                           */
#define IIC0_ICSR1_HOA_Msk                (0x80UL)                  /*!< HOA (Bitfield-Mask: 0x01)                             */
/* =========================================================  ICSR2  ========================================================= */
#define IIC0_ICSR2_TMOF_Pos               (0UL)                     /*!< TMOF (Bit 0)                                          */
#define IIC0_ICSR2_TMOF_Msk               (0x1UL)                   /*!< TMOF (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR2_AL_Pos                 (1UL)                     /*!< AL (Bit 1)                                            */
#define IIC0_ICSR2_AL_Msk                 (0x2UL)                   /*!< AL (Bitfield-Mask: 0x01)                              */
#define IIC0_ICSR2_START_Pos              (2UL)                     /*!< START (Bit 2)                                         */
#define IIC0_ICSR2_START_Msk              (0x4UL)                   /*!< START (Bitfield-Mask: 0x01)                           */
#define IIC0_ICSR2_STOP_Pos               (3UL)                     /*!< STOP (Bit 3)                                          */
#define IIC0_ICSR2_STOP_Msk               (0x8UL)                   /*!< STOP (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR2_NACKF_Pos              (4UL)                     /*!< NACKF (Bit 4)                                         */
#define IIC0_ICSR2_NACKF_Msk              (0x10UL)                  /*!< NACKF (Bitfield-Mask: 0x01)                           */
#define IIC0_ICSR2_RDRF_Pos               (5UL)                     /*!< RDRF (Bit 5)                                          */
#define IIC0_ICSR2_RDRF_Msk               (0x20UL)                  /*!< RDRF (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR2_TEND_Pos               (6UL)                     /*!< TEND (Bit 6)                                          */
#define IIC0_ICSR2_TEND_Msk               (0x40UL)                  /*!< TEND (Bitfield-Mask: 0x01)                            */
#define IIC0_ICSR2_TDRE_Pos               (7UL)                     /*!< TDRE (Bit 7)                                          */
#define IIC0_ICSR2_TDRE_Msk               (0x80UL)                  /*!< TDRE (Bitfield-Mask: 0x01)                            */
/* =========================================================  SARL0  ========================================================= */
#define IIC0_SARL0_SVA0_Pos               (0UL)                     /*!< SVA0 (Bit 0)                                          */
#define IIC0_SARL0_SVA0_Msk               (0x1UL)                   /*!< SVA0 (Bitfield-Mask: 0x01)                            */
#define IIC0_SARL0_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARL0_SVA_Msk                (0xfeUL)                  /*!< SVA (Bitfield-Mask: 0x7f)                             */
/* =========================================================  SARL1  ========================================================= */
#define IIC0_SARL1_SVA0_Pos               (0UL)                     /*!< SVA0 (Bit 0)                                          */
#define IIC0_SARL1_SVA0_Msk               (0x1UL)                   /*!< SVA0 (Bitfield-Mask: 0x01)                            */
#define IIC0_SARL1_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARL1_SVA_Msk                (0xfeUL)                  /*!< SVA (Bitfield-Mask: 0x7f)                             */
/* =========================================================  SARL2  ========================================================= */
#define IIC0_SARL2_SVA0_Pos               (0UL)                     /*!< SVA0 (Bit 0)                                          */
#define IIC0_SARL2_SVA0_Msk               (0x1UL)                   /*!< SVA0 (Bitfield-Mask: 0x01)                            */
#define IIC0_SARL2_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARL2_SVA_Msk                (0xfeUL)                  /*!< SVA (Bitfield-Mask: 0x7f)                             */
/* =========================================================  SARU0  ========================================================= */
#define IIC0_SARU0_FS_Pos                 (0UL)                     /*!< FS (Bit 0)                                            */
#define IIC0_SARU0_FS_Msk                 (0x1UL)                   /*!< FS (Bitfield-Mask: 0x01)                              */
#define IIC0_SARU0_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARU0_SVA_Msk                (0x6UL)                   /*!< SVA (Bitfield-Mask: 0x03)                             */
/* =========================================================  SARU1  ========================================================= */
#define IIC0_SARU1_FS_Pos                 (0UL)                     /*!< FS (Bit 0)                                            */
#define IIC0_SARU1_FS_Msk                 (0x1UL)                   /*!< FS (Bitfield-Mask: 0x01)                              */
#define IIC0_SARU1_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARU1_SVA_Msk                (0x6UL)                   /*!< SVA (Bitfield-Mask: 0x03)                             */
/* =========================================================  SARU2  ========================================================= */
#define IIC0_SARU2_FS_Pos                 (0UL)                     /*!< FS (Bit 0)                                            */
#define IIC0_SARU2_FS_Msk                 (0x1UL)                   /*!< FS (Bitfield-Mask: 0x01)                              */
#define IIC0_SARU2_SVA_Pos                (1UL)                     /*!< SVA (Bit 1)                                           */
#define IIC0_SARU2_SVA_Msk                (0x6UL)                   /*!< SVA (Bitfield-Mask: 0x03)                             */
/* =========================================================  ICBRL  ========================================================= */
#define IIC0_ICBRL_BRL_Pos                (0UL)                     /*!< BRL (Bit 0)                                           */
#define IIC0_ICBRL_BRL_Msk                (0x1fUL)                  /*!< BRL (Bitfield-Mask: 0x1f)                             */
/* =========================================================  ICBRH  ========================================================= */
#define IIC0_ICBRH_BRH_Pos                (0UL)                     /*!< BRH (Bit 0)                                           */
#define IIC0_ICBRH_BRH_Msk                (0x1fUL)                  /*!< BRH (Bitfield-Mask: 0x1f)                             */
/* =========================================================  ICDRT  ========================================================= */
/* =========================================================  ICDRR  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            DOC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DOCR  ========================================================== */
#define DOC_DOCR_OMS_Pos                  (0UL)                     /*!< OMS (Bit 0)                                           */
#define DOC_DOCR_OMS_Msk                  (0x3UL)                   /*!< OMS (Bitfield-Mask: 0x03)                             */
#define DOC_DOCR_DCSEL_Pos                (2UL)                     /*!< DCSEL (Bit 2)                                         */
#define DOC_DOCR_DCSEL_Msk                (0x4UL)                   /*!< DCSEL (Bitfield-Mask: 0x01)                           */
#define DOC_DOCR_DOPCF_Pos                (5UL)                     /*!< DOPCF (Bit 5)                                         */
#define DOC_DOCR_DOPCF_Msk                (0x20UL)                  /*!< DOPCF (Bitfield-Mask: 0x01)                           */
#define DOC_DOCR_DOPCFCL_Pos              (6UL)                     /*!< DOPCFCL (Bit 6)                                       */
#define DOC_DOCR_DOPCFCL_Msk              (0x40UL)                  /*!< DOPCFCL (Bitfield-Mask: 0x01)                         */
/* =========================================================  DODIR  ========================================================= */
/* =========================================================  DODSR  ========================================================= */


/* =========================================================================================================================== */
/* ================                                          GPT320                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  GTWP  ========================================================== */
#define GPT320_GTWP_WP_Pos                (0UL)                     /*!< WP (Bit 0)                                            */
#define GPT320_GTWP_WP_Msk                (0x1UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
#define GPT320_GTWP_PRKEY_Pos             (8UL)                     /*!< PRKEY (Bit 8)                                         */
#define GPT320_GTWP_PRKEY_Msk             (0xff00UL)                /*!< PRKEY (Bitfield-Mask: 0xff)                           */
/* =========================================================  GTSTR  ========================================================= */
#define GPT320_GTSTR_CSTRT0_Pos           (0UL)                     /*!< CSTRT0 (Bit 0)                                        */
#define GPT320_GTSTR_CSTRT0_Msk           (0x1UL)                   /*!< CSTRT0 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTR_CSTRT1_Pos           (1UL)                     /*!< CSTRT1 (Bit 1)                                        */
#define GPT320_GTSTR_CSTRT1_Msk           (0x2UL)                   /*!< CSTRT1 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTR_CSTRT2_Pos           (2UL)                     /*!< CSTRT2 (Bit 2)                                        */
#define GPT320_GTSTR_CSTRT2_Msk           (0x4UL)                   /*!< CSTRT2 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTR_CSTRT3_Pos           (3UL)                     /*!< CSTRT3 (Bit 3)                                        */
#define GPT320_GTSTR_CSTRT3_Msk           (0x8UL)                   /*!< CSTRT3 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTR_CSTRT4_Pos           (4UL)                     /*!< CSTRT4 (Bit 4)                                        */
#define GPT320_GTSTR_CSTRT4_Msk           (0x10UL)                  /*!< CSTRT4 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTR_CSTRT5_Pos           (5UL)                     /*!< CSTRT5 (Bit 5)                                        */
#define GPT320_GTSTR_CSTRT5_Msk           (0x20UL)                  /*!< CSTRT5 (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTSTP  ========================================================= */
#define GPT320_GTSTP_CSTOP0_Pos           (0UL)                     /*!< CSTOP0 (Bit 0)                                        */
#define GPT320_GTSTP_CSTOP0_Msk           (0x1UL)                   /*!< CSTOP0 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTP_CSTOP1_Pos           (1UL)                     /*!< CSTOP1 (Bit 1)                                        */
#define GPT320_GTSTP_CSTOP1_Msk           (0x2UL)                   /*!< CSTOP1 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTP_CSTOP2_Pos           (2UL)                     /*!< CSTOP2 (Bit 2)                                        */
#define GPT320_GTSTP_CSTOP2_Msk           (0x4UL)                   /*!< CSTOP2 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTP_CSTOP3_Pos           (3UL)                     /*!< CSTOP3 (Bit 3)                                        */
#define GPT320_GTSTP_CSTOP3_Msk           (0x8UL)                   /*!< CSTOP3 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTP_CSTOP4_Pos           (4UL)                     /*!< CSTOP4 (Bit 4)                                        */
#define GPT320_GTSTP_CSTOP4_Msk           (0x10UL)                  /*!< CSTOP4 (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSTP_CSTOP5_Pos           (5UL)                     /*!< CSTOP5 (Bit 5)                                        */
#define GPT320_GTSTP_CSTOP5_Msk           (0x20UL)                  /*!< CSTOP5 (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTCLR  ========================================================= */
#define GPT320_GTCLR_CCLR0_Pos            (0UL)                     /*!< CCLR0 (Bit 0)                                         */
#define GPT320_GTCLR_CCLR0_Msk            (0x1UL)                   /*!< CCLR0 (Bitfield-Mask: 0x01)                           */
#define GPT320_GTCLR_CCLR1_Pos            (1UL)                     /*!< CCLR1 (Bit 1)                                         */
#define GPT320_GTCLR_CCLR1_Msk            (0x2UL)                   /*!< CCLR1 (Bitfield-Mask: 0x01)                           */
#define GPT320_GTCLR_CCLR2_Pos            (2UL)                     /*!< CCLR2 (Bit 2)                                         */
#define GPT320_GTCLR_CCLR2_Msk            (0x4UL)                   /*!< CCLR2 (Bitfield-Mask: 0x01)                           */
#define GPT320_GTCLR_CCLR3_Pos            (3UL)                     /*!< CCLR3 (Bit 3)                                         */
#define GPT320_GTCLR_CCLR3_Msk            (0x8UL)                   /*!< CCLR3 (Bitfield-Mask: 0x01)                           */
#define GPT320_GTCLR_CCLR4_Pos            (4UL)                     /*!< CCLR4 (Bit 4)                                         */
#define GPT320_GTCLR_CCLR4_Msk            (0x10UL)                  /*!< CCLR4 (Bitfield-Mask: 0x01)                           */
#define GPT320_GTCLR_CCLR5_Pos            (5UL)                     /*!< CCLR5 (Bit 5)                                         */
#define GPT320_GTCLR_CCLR5_Msk            (0x20UL)                  /*!< CCLR5 (Bitfield-Mask: 0x01)                           */
/* =========================================================  GTSSR  ========================================================= */
#define GPT320_GTSSR_SSGTRGAR_Pos         (0UL)                     /*!< SSGTRGAR (Bit 0)                                      */
#define GPT320_GTSSR_SSGTRGAR_Msk         (0x1UL)                   /*!< SSGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTSSR_SSGTRGAF_Pos         (1UL)                     /*!< SSGTRGAF (Bit 1)                                      */
#define GPT320_GTSSR_SSGTRGAF_Msk         (0x2UL)                   /*!< SSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTSSR_SSGTRGBR_Pos         (2UL)                     /*!< SSGTRGBR (Bit 2)                                      */
#define GPT320_GTSSR_SSGTRGBR_Msk         (0x4UL)                   /*!< SSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTSSR_SSGTRGBF_Pos         (3UL)                     /*!< SSGTRGBF (Bit 3)                                      */
#define GPT320_GTSSR_SSGTRGBF_Msk         (0x8UL)                   /*!< SSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTSSR_SSCARBL_Pos          (8UL)                     /*!< SSCARBL (Bit 8)                                       */
#define GPT320_GTSSR_SSCARBL_Msk          (0x100UL)                 /*!< SSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCARBH_Pos          (9UL)                     /*!< SSCARBH (Bit 9)                                       */
#define GPT320_GTSSR_SSCARBH_Msk          (0x200UL)                 /*!< SSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCAFBL_Pos          (10UL)                    /*!< SSCAFBL (Bit 10)                                      */
#define GPT320_GTSSR_SSCAFBL_Msk          (0x400UL)                 /*!< SSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCAFBH_Pos          (11UL)                    /*!< SSCAFBH (Bit 11)                                      */
#define GPT320_GTSSR_SSCAFBH_Msk          (0x800UL)                 /*!< SSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCBRAL_Pos          (12UL)                    /*!< SSCBRAL (Bit 12)                                      */
#define GPT320_GTSSR_SSCBRAL_Msk          (0x1000UL)                /*!< SSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCBRAH_Pos          (13UL)                    /*!< SSCBRAH (Bit 13)                                      */
#define GPT320_GTSSR_SSCBRAH_Msk          (0x2000UL)                /*!< SSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCBFAL_Pos          (14UL)                    /*!< SSCBFAL (Bit 14)                                      */
#define GPT320_GTSSR_SSCBFAL_Msk          (0x4000UL)                /*!< SSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSCBFAH_Pos          (15UL)                    /*!< SSCBFAH (Bit 15)                                      */
#define GPT320_GTSSR_SSCBFAH_Msk          (0x8000UL)                /*!< SSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTSSR_SSELCA_Pos           (16UL)                    /*!< SSELCA (Bit 16)                                       */
#define GPT320_GTSSR_SSELCA_Msk           (0x10000UL)               /*!< SSELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSSR_SSELCB_Pos           (17UL)                    /*!< SSELCB (Bit 17)                                       */
#define GPT320_GTSSR_SSELCB_Msk           (0x20000UL)               /*!< SSELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSSR_SSELCC_Pos           (18UL)                    /*!< SSELCC (Bit 18)                                       */
#define GPT320_GTSSR_SSELCC_Msk           (0x40000UL)               /*!< SSELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSSR_SSELCD_Pos           (19UL)                    /*!< SSELCD (Bit 19)                                       */
#define GPT320_GTSSR_SSELCD_Msk           (0x80000UL)               /*!< SSELCD (Bitfield-Mask: 0x01)                          */
#define GPT320_GTSSR_CSTRT_Pos            (31UL)                    /*!< CSTRT (Bit 31)                                        */
#define GPT320_GTSSR_CSTRT_Msk            (0x80000000UL)            /*!< CSTRT (Bitfield-Mask: 0x01)                           */
/* =========================================================  GTPSR  ========================================================= */
#define GPT320_GTPSR_PSGTRGAR_Pos         (0UL)                     /*!< PSGTRGAR (Bit 0)                                      */
#define GPT320_GTPSR_PSGTRGAR_Msk         (0x1UL)                   /*!< PSGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTPSR_PSGTRGAF_Pos         (1UL)                     /*!< PSGTRGAF (Bit 1)                                      */
#define GPT320_GTPSR_PSGTRGAF_Msk         (0x2UL)                   /*!< PSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTPSR_PSGTRGBR_Pos         (2UL)                     /*!< PSGTRGBR (Bit 2)                                      */
#define GPT320_GTPSR_PSGTRGBR_Msk         (0x4UL)                   /*!< PSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTPSR_PSGTRGBF_Pos         (3UL)                     /*!< PSGTRGBF (Bit 3)                                      */
#define GPT320_GTPSR_PSGTRGBF_Msk         (0x8UL)                   /*!< PSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTPSR_PSCARBL_Pos          (8UL)                     /*!< PSCARBL (Bit 8)                                       */
#define GPT320_GTPSR_PSCARBL_Msk          (0x100UL)                 /*!< PSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCARBH_Pos          (9UL)                     /*!< PSCARBH (Bit 9)                                       */
#define GPT320_GTPSR_PSCARBH_Msk          (0x200UL)                 /*!< PSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCAFBL_Pos          (10UL)                    /*!< PSCAFBL (Bit 10)                                      */
#define GPT320_GTPSR_PSCAFBL_Msk          (0x400UL)                 /*!< PSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCAFBH_Pos          (11UL)                    /*!< PSCAFBH (Bit 11)                                      */
#define GPT320_GTPSR_PSCAFBH_Msk          (0x800UL)                 /*!< PSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCBRAL_Pos          (12UL)                    /*!< PSCBRAL (Bit 12)                                      */
#define GPT320_GTPSR_PSCBRAL_Msk          (0x1000UL)                /*!< PSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCBRAH_Pos          (13UL)                    /*!< PSCBRAH (Bit 13)                                      */
#define GPT320_GTPSR_PSCBRAH_Msk          (0x2000UL)                /*!< PSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCBFAL_Pos          (14UL)                    /*!< PSCBFAL (Bit 14)                                      */
#define GPT320_GTPSR_PSCBFAL_Msk          (0x4000UL)                /*!< PSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSCBFAH_Pos          (15UL)                    /*!< PSCBFAH (Bit 15)                                      */
#define GPT320_GTPSR_PSCBFAH_Msk          (0x8000UL)                /*!< PSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTPSR_PSELCA_Pos           (16UL)                    /*!< PSELCA (Bit 16)                                       */
#define GPT320_GTPSR_PSELCA_Msk           (0x10000UL)               /*!< PSELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTPSR_PSELCB_Pos           (17UL)                    /*!< PSELCB (Bit 17)                                       */
#define GPT320_GTPSR_PSELCB_Msk           (0x20000UL)               /*!< PSELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTPSR_PSELCC_Pos           (18UL)                    /*!< PSELCC (Bit 18)                                       */
#define GPT320_GTPSR_PSELCC_Msk           (0x40000UL)               /*!< PSELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTPSR_PSELCD_Pos           (19UL)                    /*!< PSELCD (Bit 19)                                       */
#define GPT320_GTPSR_PSELCD_Msk           (0x80000UL)               /*!< PSELCD (Bitfield-Mask: 0x01)                          */
#define GPT320_GTPSR_CSTOP_Pos            (31UL)                    /*!< CSTOP (Bit 31)                                        */
#define GPT320_GTPSR_CSTOP_Msk            (0x80000000UL)            /*!< CSTOP (Bitfield-Mask: 0x01)                           */
/* =========================================================  GTCSR  ========================================================= */
#define GPT320_GTCSR_CSGTRGAR_Pos         (0UL)                     /*!< CSGTRGAR (Bit 0)                                      */
#define GPT320_GTCSR_CSGTRGAR_Msk         (0x1UL)                   /*!< CSGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTCSR_CSGTRGAF_Pos         (1UL)                     /*!< CSGTRGAF (Bit 1)                                      */
#define GPT320_GTCSR_CSGTRGAF_Msk         (0x2UL)                   /*!< CSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTCSR_CSGTRGBR_Pos         (2UL)                     /*!< CSGTRGBR (Bit 2)                                      */
#define GPT320_GTCSR_CSGTRGBR_Msk         (0x4UL)                   /*!< CSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTCSR_CSGTRGBF_Pos         (3UL)                     /*!< CSGTRGBF (Bit 3)                                      */
#define GPT320_GTCSR_CSGTRGBF_Msk         (0x8UL)                   /*!< CSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTCSR_CSCARBL_Pos          (8UL)                     /*!< CSCARBL (Bit 8)                                       */
#define GPT320_GTCSR_CSCARBL_Msk          (0x100UL)                 /*!< CSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCARBH_Pos          (9UL)                     /*!< CSCARBH (Bit 9)                                       */
#define GPT320_GTCSR_CSCARBH_Msk          (0x200UL)                 /*!< CSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCAFBL_Pos          (10UL)                    /*!< CSCAFBL (Bit 10)                                      */
#define GPT320_GTCSR_CSCAFBL_Msk          (0x400UL)                 /*!< CSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCAFBH_Pos          (11UL)                    /*!< CSCAFBH (Bit 11)                                      */
#define GPT320_GTCSR_CSCAFBH_Msk          (0x800UL)                 /*!< CSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCBRAL_Pos          (12UL)                    /*!< CSCBRAL (Bit 12)                                      */
#define GPT320_GTCSR_CSCBRAL_Msk          (0x1000UL)                /*!< CSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCBRAH_Pos          (13UL)                    /*!< CSCBRAH (Bit 13)                                      */
#define GPT320_GTCSR_CSCBRAH_Msk          (0x2000UL)                /*!< CSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCBFAL_Pos          (14UL)                    /*!< CSCBFAL (Bit 14)                                      */
#define GPT320_GTCSR_CSCBFAL_Msk          (0x4000UL)                /*!< CSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSCBFAH_Pos          (15UL)                    /*!< CSCBFAH (Bit 15)                                      */
#define GPT320_GTCSR_CSCBFAH_Msk          (0x8000UL)                /*!< CSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTCSR_CSELCA_Pos           (16UL)                    /*!< CSELCA (Bit 16)                                       */
#define GPT320_GTCSR_CSELCA_Msk           (0x10000UL)               /*!< CSELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTCSR_CSELCB_Pos           (17UL)                    /*!< CSELCB (Bit 17)                                       */
#define GPT320_GTCSR_CSELCB_Msk           (0x20000UL)               /*!< CSELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTCSR_CSELCC_Pos           (18UL)                    /*!< CSELCC (Bit 18)                                       */
#define GPT320_GTCSR_CSELCC_Msk           (0x40000UL)               /*!< CSELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTCSR_CSELCD_Pos           (19UL)                    /*!< CSELCD (Bit 19)                                       */
#define GPT320_GTCSR_CSELCD_Msk           (0x80000UL)               /*!< CSELCD (Bitfield-Mask: 0x01)                          */
#define GPT320_GTCSR_CCLR_Pos             (31UL)                    /*!< CCLR (Bit 31)                                         */
#define GPT320_GTCSR_CCLR_Msk             (0x80000000UL)            /*!< CCLR (Bitfield-Mask: 0x01)                            */
/* ========================================================  GTUPSR  ========================================================= */
#define GPT320_GTUPSR_USGTRGAR_Pos        (0UL)                     /*!< USGTRGAR (Bit 0)                                      */
#define GPT320_GTUPSR_USGTRGAR_Msk        (0x1UL)                   /*!< USGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTUPSR_USGTRGAF_Pos        (1UL)                     /*!< USGTRGAF (Bit 1)                                      */
#define GPT320_GTUPSR_USGTRGAF_Msk        (0x2UL)                   /*!< USGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTUPSR_USGTRGBR_Pos        (2UL)                     /*!< USGTRGBR (Bit 2)                                      */
#define GPT320_GTUPSR_USGTRGBR_Msk        (0x4UL)                   /*!< USGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTUPSR_USGTRGBF_Pos        (3UL)                     /*!< USGTRGBF (Bit 3)                                      */
#define GPT320_GTUPSR_USGTRGBF_Msk        (0x8UL)                   /*!< USGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTUPSR_USCARBL_Pos         (8UL)                     /*!< USCARBL (Bit 8)                                       */
#define GPT320_GTUPSR_USCARBL_Msk         (0x100UL)                 /*!< USCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCARBH_Pos         (9UL)                     /*!< USCARBH (Bit 9)                                       */
#define GPT320_GTUPSR_USCARBH_Msk         (0x200UL)                 /*!< USCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCAFBL_Pos         (10UL)                    /*!< USCAFBL (Bit 10)                                      */
#define GPT320_GTUPSR_USCAFBL_Msk         (0x400UL)                 /*!< USCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCAFBH_Pos         (11UL)                    /*!< USCAFBH (Bit 11)                                      */
#define GPT320_GTUPSR_USCAFBH_Msk         (0x800UL)                 /*!< USCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCBRAL_Pos         (12UL)                    /*!< USCBRAL (Bit 12)                                      */
#define GPT320_GTUPSR_USCBRAL_Msk         (0x1000UL)                /*!< USCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCBRAH_Pos         (13UL)                    /*!< USCBRAH (Bit 13)                                      */
#define GPT320_GTUPSR_USCBRAH_Msk         (0x2000UL)                /*!< USCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCBFAL_Pos         (14UL)                    /*!< USCBFAL (Bit 14)                                      */
#define GPT320_GTUPSR_USCBFAL_Msk         (0x4000UL)                /*!< USCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USCBFAH_Pos         (15UL)                    /*!< USCBFAH (Bit 15)                                      */
#define GPT320_GTUPSR_USCBFAH_Msk         (0x8000UL)                /*!< USCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTUPSR_USELCA_Pos          (16UL)                    /*!< USELCA (Bit 16)                                       */
#define GPT320_GTUPSR_USELCA_Msk          (0x10000UL)               /*!< USELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUPSR_USELCB_Pos          (17UL)                    /*!< USELCB (Bit 17)                                       */
#define GPT320_GTUPSR_USELCB_Msk          (0x20000UL)               /*!< USELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUPSR_USELCC_Pos          (18UL)                    /*!< USELCC (Bit 18)                                       */
#define GPT320_GTUPSR_USELCC_Msk          (0x40000UL)               /*!< USELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUPSR_USELCD_Pos          (19UL)                    /*!< USELCD (Bit 19)                                       */
#define GPT320_GTUPSR_USELCD_Msk          (0x80000UL)               /*!< USELCD (Bitfield-Mask: 0x01)                          */
/* ========================================================  GTDNSR  ========================================================= */
#define GPT320_GTDNSR_DSGTRGAR_Pos        (0UL)                     /*!< DSGTRGAR (Bit 0)                                      */
#define GPT320_GTDNSR_DSGTRGAR_Msk        (0x1UL)                   /*!< DSGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTDNSR_DSGTRGAF_Pos        (1UL)                     /*!< DSGTRGAF (Bit 1)                                      */
#define GPT320_GTDNSR_DSGTRGAF_Msk        (0x2UL)                   /*!< DSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTDNSR_DSGTRGBR_Pos        (2UL)                     /*!< DSGTRGBR (Bit 2)                                      */
#define GPT320_GTDNSR_DSGTRGBR_Msk        (0x4UL)                   /*!< DSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTDNSR_DSGTRGBF_Pos        (3UL)                     /*!< DSGTRGBF (Bit 3)                                      */
#define GPT320_GTDNSR_DSGTRGBF_Msk        (0x8UL)                   /*!< DSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTDNSR_DSCARBL_Pos         (8UL)                     /*!< DSCARBL (Bit 8)                                       */
#define GPT320_GTDNSR_DSCARBL_Msk         (0x100UL)                 /*!< DSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCARBH_Pos         (9UL)                     /*!< DSCARBH (Bit 9)                                       */
#define GPT320_GTDNSR_DSCARBH_Msk         (0x200UL)                 /*!< DSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCAFBL_Pos         (10UL)                    /*!< DSCAFBL (Bit 10)                                      */
#define GPT320_GTDNSR_DSCAFBL_Msk         (0x400UL)                 /*!< DSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCAFBH_Pos         (11UL)                    /*!< DSCAFBH (Bit 11)                                      */
#define GPT320_GTDNSR_DSCAFBH_Msk         (0x800UL)                 /*!< DSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCBRAL_Pos         (12UL)                    /*!< DSCBRAL (Bit 12)                                      */
#define GPT320_GTDNSR_DSCBRAL_Msk         (0x1000UL)                /*!< DSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCBRAH_Pos         (13UL)                    /*!< DSCBRAH (Bit 13)                                      */
#define GPT320_GTDNSR_DSCBRAH_Msk         (0x2000UL)                /*!< DSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCBFAL_Pos         (14UL)                    /*!< DSCBFAL (Bit 14)                                      */
#define GPT320_GTDNSR_DSCBFAL_Msk         (0x4000UL)                /*!< DSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSCBFAH_Pos         (15UL)                    /*!< DSCBFAH (Bit 15)                                      */
#define GPT320_GTDNSR_DSCBFAH_Msk         (0x8000UL)                /*!< DSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTDNSR_DSELCA_Pos          (16UL)                    /*!< DSELCA (Bit 16)                                       */
#define GPT320_GTDNSR_DSELCA_Msk          (0x10000UL)               /*!< DSELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTDNSR_DSELCB_Pos          (17UL)                    /*!< DSELCB (Bit 17)                                       */
#define GPT320_GTDNSR_DSELCB_Msk          (0x20000UL)               /*!< DSELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTDNSR_DSELCC_Pos          (18UL)                    /*!< DSELCC (Bit 18)                                       */
#define GPT320_GTDNSR_DSELCC_Msk          (0x40000UL)               /*!< DSELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTDNSR_DSELCD_Pos          (19UL)                    /*!< DSELCD (Bit 19)                                       */
#define GPT320_GTDNSR_DSELCD_Msk          (0x80000UL)               /*!< DSELCD (Bitfield-Mask: 0x01)                          */
/* ========================================================  GTICASR  ======================================================== */
#define GPT320_GTICASR_ASGTRGAR_Pos       (0UL)                     /*!< ASGTRGAR (Bit 0)                                      */
#define GPT320_GTICASR_ASGTRGAR_Msk       (0x1UL)                   /*!< ASGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICASR_ASGTRGAF_Pos       (1UL)                     /*!< ASGTRGAF (Bit 1)                                      */
#define GPT320_GTICASR_ASGTRGAF_Msk       (0x2UL)                   /*!< ASGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICASR_ASGTRGBR_Pos       (2UL)                     /*!< ASGTRGBR (Bit 2)                                      */
#define GPT320_GTICASR_ASGTRGBR_Msk       (0x4UL)                   /*!< ASGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICASR_ASGTRGBF_Pos       (3UL)                     /*!< ASGTRGBF (Bit 3)                                      */
#define GPT320_GTICASR_ASGTRGBF_Msk       (0x8UL)                   /*!< ASGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICASR_ASCARBL_Pos        (8UL)                     /*!< ASCARBL (Bit 8)                                       */
#define GPT320_GTICASR_ASCARBL_Msk        (0x100UL)                 /*!< ASCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCARBH_Pos        (9UL)                     /*!< ASCARBH (Bit 9)                                       */
#define GPT320_GTICASR_ASCARBH_Msk        (0x200UL)                 /*!< ASCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCAFBL_Pos        (10UL)                    /*!< ASCAFBL (Bit 10)                                      */
#define GPT320_GTICASR_ASCAFBL_Msk        (0x400UL)                 /*!< ASCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCAFBH_Pos        (11UL)                    /*!< ASCAFBH (Bit 11)                                      */
#define GPT320_GTICASR_ASCAFBH_Msk        (0x800UL)                 /*!< ASCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCBRAL_Pos        (12UL)                    /*!< ASCBRAL (Bit 12)                                      */
#define GPT320_GTICASR_ASCBRAL_Msk        (0x1000UL)                /*!< ASCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCBRAH_Pos        (13UL)                    /*!< ASCBRAH (Bit 13)                                      */
#define GPT320_GTICASR_ASCBRAH_Msk        (0x2000UL)                /*!< ASCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCBFAL_Pos        (14UL)                    /*!< ASCBFAL (Bit 14)                                      */
#define GPT320_GTICASR_ASCBFAL_Msk        (0x4000UL)                /*!< ASCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASCBFAH_Pos        (15UL)                    /*!< ASCBFAH (Bit 15)                                      */
#define GPT320_GTICASR_ASCBFAH_Msk        (0x8000UL)                /*!< ASCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICASR_ASELCA_Pos         (16UL)                    /*!< ASELCA (Bit 16)                                       */
#define GPT320_GTICASR_ASELCA_Msk         (0x10000UL)               /*!< ASELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICASR_ASELCB_Pos         (17UL)                    /*!< ASELCB (Bit 17)                                       */
#define GPT320_GTICASR_ASELCB_Msk         (0x20000UL)               /*!< ASELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICASR_ASELCC_Pos         (18UL)                    /*!< ASELCC (Bit 18)                                       */
#define GPT320_GTICASR_ASELCC_Msk         (0x40000UL)               /*!< ASELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICASR_ASELCD_Pos         (19UL)                    /*!< ASELCD (Bit 19)                                       */
#define GPT320_GTICASR_ASELCD_Msk         (0x80000UL)               /*!< ASELCD (Bitfield-Mask: 0x01)                          */
/* ========================================================  GTICBSR  ======================================================== */
#define GPT320_GTICBSR_BSGTRGAR_Pos       (0UL)                     /*!< BSGTRGAR (Bit 0)                                      */
#define GPT320_GTICBSR_BSGTRGAR_Msk       (0x1UL)                   /*!< BSGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICBSR_BSGTRGAF_Pos       (1UL)                     /*!< BSGTRGAF (Bit 1)                                      */
#define GPT320_GTICBSR_BSGTRGAF_Msk       (0x2UL)                   /*!< BSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICBSR_BSGTRGBR_Pos       (2UL)                     /*!< BSGTRGBR (Bit 2)                                      */
#define GPT320_GTICBSR_BSGTRGBR_Msk       (0x4UL)                   /*!< BSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICBSR_BSGTRGBF_Pos       (3UL)                     /*!< BSGTRGBF (Bit 3)                                      */
#define GPT320_GTICBSR_BSGTRGBF_Msk       (0x8UL)                   /*!< BSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT320_GTICBSR_BSCARBL_Pos        (8UL)                     /*!< BSCARBL (Bit 8)                                       */
#define GPT320_GTICBSR_BSCARBL_Msk        (0x100UL)                 /*!< BSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCARBH_Pos        (9UL)                     /*!< BSCARBH (Bit 9)                                       */
#define GPT320_GTICBSR_BSCARBH_Msk        (0x200UL)                 /*!< BSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCAFBL_Pos        (10UL)                    /*!< BSCAFBL (Bit 10)                                      */
#define GPT320_GTICBSR_BSCAFBL_Msk        (0x400UL)                 /*!< BSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCAFBH_Pos        (11UL)                    /*!< BSCAFBH (Bit 11)                                      */
#define GPT320_GTICBSR_BSCAFBH_Msk        (0x800UL)                 /*!< BSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCBRAL_Pos        (12UL)                    /*!< BSCBRAL (Bit 12)                                      */
#define GPT320_GTICBSR_BSCBRAL_Msk        (0x1000UL)                /*!< BSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCBRAH_Pos        (13UL)                    /*!< BSCBRAH (Bit 13)                                      */
#define GPT320_GTICBSR_BSCBRAH_Msk        (0x2000UL)                /*!< BSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCBFAL_Pos        (14UL)                    /*!< BSCBFAL (Bit 14)                                      */
#define GPT320_GTICBSR_BSCBFAL_Msk        (0x4000UL)                /*!< BSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSCBFAH_Pos        (15UL)                    /*!< BSCBFAH (Bit 15)                                      */
#define GPT320_GTICBSR_BSCBFAH_Msk        (0x8000UL)                /*!< BSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT320_GTICBSR_BSELCA_Pos         (16UL)                    /*!< BSELCA (Bit 16)                                       */
#define GPT320_GTICBSR_BSELCA_Msk         (0x10000UL)               /*!< BSELCA (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICBSR_BSELCB_Pos         (17UL)                    /*!< BSELCB (Bit 17)                                       */
#define GPT320_GTICBSR_BSELCB_Msk         (0x20000UL)               /*!< BSELCB (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICBSR_BSELCC_Pos         (18UL)                    /*!< BSELCC (Bit 18)                                       */
#define GPT320_GTICBSR_BSELCC_Msk         (0x40000UL)               /*!< BSELCC (Bitfield-Mask: 0x01)                          */
#define GPT320_GTICBSR_BSELCD_Pos         (19UL)                    /*!< BSELCD (Bit 19)                                       */
#define GPT320_GTICBSR_BSELCD_Msk         (0x80000UL)               /*!< BSELCD (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTCR  ========================================================== */
#define GPT320_GTCR_CST_Pos               (0UL)                     /*!< CST (Bit 0)                                           */
#define GPT320_GTCR_CST_Msk               (0x1UL)                   /*!< CST (Bitfield-Mask: 0x01)                             */
#define GPT320_GTCR_MD_Pos                (16UL)                    /*!< MD (Bit 16)                                           */
#define GPT320_GTCR_MD_Msk                (0x70000UL)               /*!< MD (Bitfield-Mask: 0x07)                              */
#define GPT320_GTCR_TPCS_Pos              (24UL)                    /*!< TPCS (Bit 24)                                         */
#define GPT320_GTCR_TPCS_Msk              (0x7000000UL)             /*!< TPCS (Bitfield-Mask: 0x07)                            */
/* =======================================================  GTUDDTYC  ======================================================== */
#define GPT320_GTUDDTYC_UD_Pos            (0UL)                     /*!< UD (Bit 0)                                            */
#define GPT320_GTUDDTYC_UD_Msk            (0x1UL)                   /*!< UD (Bitfield-Mask: 0x01)                              */
#define GPT320_GTUDDTYC_UDF_Pos           (1UL)                     /*!< UDF (Bit 1)                                           */
#define GPT320_GTUDDTYC_UDF_Msk           (0x2UL)                   /*!< UDF (Bitfield-Mask: 0x01)                             */
#define GPT320_GTUDDTYC_OADTY_Pos         (16UL)                    /*!< OADTY (Bit 16)                                        */
#define GPT320_GTUDDTYC_OADTY_Msk         (0x30000UL)               /*!< OADTY (Bitfield-Mask: 0x03)                           */
#define GPT320_GTUDDTYC_OADTYF_Pos        (18UL)                    /*!< OADTYF (Bit 18)                                       */
#define GPT320_GTUDDTYC_OADTYF_Msk        (0x40000UL)               /*!< OADTYF (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUDDTYC_OADTYR_Pos        (19UL)                    /*!< OADTYR (Bit 19)                                       */
#define GPT320_GTUDDTYC_OADTYR_Msk        (0x80000UL)               /*!< OADTYR (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUDDTYC_OBDTY_Pos         (24UL)                    /*!< OBDTY (Bit 24)                                        */
#define GPT320_GTUDDTYC_OBDTY_Msk         (0x3000000UL)             /*!< OBDTY (Bitfield-Mask: 0x03)                           */
#define GPT320_GTUDDTYC_OBDTYF_Pos        (26UL)                    /*!< OBDTYF (Bit 26)                                       */
#define GPT320_GTUDDTYC_OBDTYF_Msk        (0x4000000UL)             /*!< OBDTYF (Bitfield-Mask: 0x01)                          */
#define GPT320_GTUDDTYC_OBDTYR_Pos        (27UL)                    /*!< OBDTYR (Bit 27)                                       */
#define GPT320_GTUDDTYC_OBDTYR_Msk        (0x8000000UL)             /*!< OBDTYR (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTIOR  ========================================================= */
#define GPT320_GTIOR_GTIOA_Pos            (0UL)                     /*!< GTIOA (Bit 0)                                         */
#define GPT320_GTIOR_GTIOA_Msk            (0x1fUL)                  /*!< GTIOA (Bitfield-Mask: 0x1f)                           */
#define GPT320_GTIOR_OADFLT_Pos           (6UL)                     /*!< OADFLT (Bit 6)                                        */
#define GPT320_GTIOR_OADFLT_Msk           (0x40UL)                  /*!< OADFLT (Bitfield-Mask: 0x01)                          */
#define GPT320_GTIOR_OAHLD_Pos            (7UL)                     /*!< OAHLD (Bit 7)                                         */
#define GPT320_GTIOR_OAHLD_Msk            (0x80UL)                  /*!< OAHLD (Bitfield-Mask: 0x01)                           */
#define GPT320_GTIOR_OAE_Pos              (8UL)                     /*!< OAE (Bit 8)                                           */
#define GPT320_GTIOR_OAE_Msk              (0x100UL)                 /*!< OAE (Bitfield-Mask: 0x01)                             */
#define GPT320_GTIOR_OADF_Pos             (9UL)                     /*!< OADF (Bit 9)                                          */
#define GPT320_GTIOR_OADF_Msk             (0x600UL)                 /*!< OADF (Bitfield-Mask: 0x03)                            */
#define GPT320_GTIOR_NFAEN_Pos            (13UL)                    /*!< NFAEN (Bit 13)                                        */
#define GPT320_GTIOR_NFAEN_Msk            (0x2000UL)                /*!< NFAEN (Bitfield-Mask: 0x01)                           */
#define GPT320_GTIOR_NFCSA_Pos            (14UL)                    /*!< NFCSA (Bit 14)                                        */
#define GPT320_GTIOR_NFCSA_Msk            (0xc000UL)                /*!< NFCSA (Bitfield-Mask: 0x03)                           */
#define GPT320_GTIOR_GTIOB_Pos            (16UL)                    /*!< GTIOB (Bit 16)                                        */
#define GPT320_GTIOR_GTIOB_Msk            (0x1f0000UL)              /*!< GTIOB (Bitfield-Mask: 0x1f)                           */
#define GPT320_GTIOR_OBDFLT_Pos           (22UL)                    /*!< OBDFLT (Bit 22)                                       */
#define GPT320_GTIOR_OBDFLT_Msk           (0x400000UL)              /*!< OBDFLT (Bitfield-Mask: 0x01)                          */
#define GPT320_GTIOR_OBHLD_Pos            (23UL)                    /*!< OBHLD (Bit 23)                                        */
#define GPT320_GTIOR_OBHLD_Msk            (0x800000UL)              /*!< OBHLD (Bitfield-Mask: 0x01)                           */
#define GPT320_GTIOR_OBE_Pos              (24UL)                    /*!< OBE (Bit 24)                                          */
#define GPT320_GTIOR_OBE_Msk              (0x1000000UL)             /*!< OBE (Bitfield-Mask: 0x01)                             */
#define GPT320_GTIOR_OBDF_Pos             (25UL)                    /*!< OBDF (Bit 25)                                         */
#define GPT320_GTIOR_OBDF_Msk             (0x6000000UL)             /*!< OBDF (Bitfield-Mask: 0x03)                            */
#define GPT320_GTIOR_NFBEN_Pos            (29UL)                    /*!< NFBEN (Bit 29)                                        */
#define GPT320_GTIOR_NFBEN_Msk            (0x20000000UL)            /*!< NFBEN (Bitfield-Mask: 0x01)                           */
#define GPT320_GTIOR_NFCSB_Pos            (30UL)                    /*!< NFCSB (Bit 30)                                        */
#define GPT320_GTIOR_NFCSB_Msk            (0xc0000000UL)            /*!< NFCSB (Bitfield-Mask: 0x03)                           */
/* ========================================================  GTINTAD  ======================================================== */
#define GPT320_GTINTAD_GRP_Pos            (24UL)                    /*!< GRP (Bit 24)                                          */
#define GPT320_GTINTAD_GRP_Msk            (0x3000000UL)             /*!< GRP (Bitfield-Mask: 0x03)                             */
#define GPT320_GTINTAD_GRPABH_Pos         (29UL)                    /*!< GRPABH (Bit 29)                                       */
#define GPT320_GTINTAD_GRPABH_Msk         (0x20000000UL)            /*!< GRPABH (Bitfield-Mask: 0x01)                          */
#define GPT320_GTINTAD_GRPABL_Pos         (30UL)                    /*!< GRPABL (Bit 30)                                       */
#define GPT320_GTINTAD_GRPABL_Msk         (0x40000000UL)            /*!< GRPABL (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTST  ========================================================== */
#define GPT320_GTST_TCFA_Pos              (0UL)                     /*!< TCFA (Bit 0)                                          */
#define GPT320_GTST_TCFA_Msk              (0x1UL)                   /*!< TCFA (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFB_Pos              (1UL)                     /*!< TCFB (Bit 1)                                          */
#define GPT320_GTST_TCFB_Msk              (0x2UL)                   /*!< TCFB (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFC_Pos              (2UL)                     /*!< TCFC (Bit 2)                                          */
#define GPT320_GTST_TCFC_Msk              (0x4UL)                   /*!< TCFC (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFD_Pos              (3UL)                     /*!< TCFD (Bit 3)                                          */
#define GPT320_GTST_TCFD_Msk              (0x8UL)                   /*!< TCFD (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFE_Pos              (4UL)                     /*!< TCFE (Bit 4)                                          */
#define GPT320_GTST_TCFE_Msk              (0x10UL)                  /*!< TCFE (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFF_Pos              (5UL)                     /*!< TCFF (Bit 5)                                          */
#define GPT320_GTST_TCFF_Msk              (0x20UL)                  /*!< TCFF (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_TCFPO_Pos             (6UL)                     /*!< TCFPO (Bit 6)                                         */
#define GPT320_GTST_TCFPO_Msk             (0x40UL)                  /*!< TCFPO (Bitfield-Mask: 0x01)                           */
#define GPT320_GTST_TCFPU_Pos             (7UL)                     /*!< TCFPU (Bit 7)                                         */
#define GPT320_GTST_TCFPU_Msk             (0x80UL)                  /*!< TCFPU (Bitfield-Mask: 0x01)                           */
#define GPT320_GTST_TUCF_Pos              (15UL)                    /*!< TUCF (Bit 15)                                         */
#define GPT320_GTST_TUCF_Msk              (0x8000UL)                /*!< TUCF (Bitfield-Mask: 0x01)                            */
#define GPT320_GTST_ODF_Pos               (24UL)                    /*!< ODF (Bit 24)                                          */
#define GPT320_GTST_ODF_Msk               (0x1000000UL)             /*!< ODF (Bitfield-Mask: 0x01)                             */
#define GPT320_GTST_OABHF_Pos             (29UL)                    /*!< OABHF (Bit 29)                                        */
#define GPT320_GTST_OABHF_Msk             (0x20000000UL)            /*!< OABHF (Bitfield-Mask: 0x01)                           */
#define GPT320_GTST_OABLF_Pos             (30UL)                    /*!< OABLF (Bit 30)                                        */
#define GPT320_GTST_OABLF_Msk             (0x40000000UL)            /*!< OABLF (Bitfield-Mask: 0x01)                           */
/* =========================================================  GTBER  ========================================================= */
#define GPT320_GTBER_BD0_Pos              (0UL)                     /*!< BD0 (Bit 0)                                           */
#define GPT320_GTBER_BD0_Msk              (0x1UL)                   /*!< BD0 (Bitfield-Mask: 0x01)                             */
#define GPT320_GTBER_BD1_Pos              (1UL)                     /*!< BD1 (Bit 1)                                           */
#define GPT320_GTBER_BD1_Msk              (0x2UL)                   /*!< BD1 (Bitfield-Mask: 0x01)                             */
#define GPT320_GTBER_CCRA_Pos             (16UL)                    /*!< CCRA (Bit 16)                                         */
#define GPT320_GTBER_CCRA_Msk             (0x30000UL)               /*!< CCRA (Bitfield-Mask: 0x03)                            */
#define GPT320_GTBER_CCRB_Pos             (18UL)                    /*!< CCRB (Bit 18)                                         */
#define GPT320_GTBER_CCRB_Msk             (0xc0000UL)               /*!< CCRB (Bitfield-Mask: 0x03)                            */
#define GPT320_GTBER_PR_Pos               (20UL)                    /*!< PR (Bit 20)                                           */
#define GPT320_GTBER_PR_Msk               (0x300000UL)              /*!< PR (Bitfield-Mask: 0x03)                              */
#define GPT320_GTBER_CCRSWT_Pos           (22UL)                    /*!< CCRSWT (Bit 22)                                       */
#define GPT320_GTBER_CCRSWT_Msk           (0x400000UL)              /*!< CCRSWT (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTCNT  ========================================================= */
/* ========================================================  GTCCRA  ========================================================= */
/* ========================================================  GTCCRB  ========================================================= */
/* ========================================================  GTCCRC  ========================================================= */
/* ========================================================  GTCCRE  ========================================================= */
/* ========================================================  GTCCRD  ========================================================= */
/* ========================================================  GTCCRF  ========================================================= */
/* =========================================================  GTPR  ========================================================== */
/* =========================================================  GTPBR  ========================================================= */
/* ========================================================  GTDTCR  ========================================================= */
#define GPT320_GTDTCR_TDE_Pos             (0UL)                     /*!< TDE (Bit 0)                                           */
#define GPT320_GTDTCR_TDE_Msk             (0x1UL)                   /*!< TDE (Bitfield-Mask: 0x01)                             */
/* =========================================================  GTDVU  ========================================================= */


/* =========================================================================================================================== */
/* ================                                          GPT162                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  GTWP  ========================================================== */
#define GPT162_GTWP_WP_Pos                (0UL)                     /*!< WP (Bit 0)                                            */
#define GPT162_GTWP_WP_Msk                (0x1UL)                   /*!< WP (Bitfield-Mask: 0x01)                              */
#define GPT162_GTWP_PRKEY_Pos             (8UL)                     /*!< PRKEY (Bit 8)                                         */
#define GPT162_GTWP_PRKEY_Msk             (0xff00UL)                /*!< PRKEY (Bitfield-Mask: 0xff)                           */
/* =========================================================  GTSTR  ========================================================= */
#define GPT162_GTSTR_CSTRT0_Pos           (0UL)                     /*!< CSTRT0 (Bit 0)                                        */
#define GPT162_GTSTR_CSTRT0_Msk           (0x1UL)                   /*!< CSTRT0 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTR_CSTRT1_Pos           (1UL)                     /*!< CSTRT1 (Bit 1)                                        */
#define GPT162_GTSTR_CSTRT1_Msk           (0x2UL)                   /*!< CSTRT1 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTR_CSTRT2_Pos           (2UL)                     /*!< CSTRT2 (Bit 2)                                        */
#define GPT162_GTSTR_CSTRT2_Msk           (0x4UL)                   /*!< CSTRT2 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTR_CSTRT3_Pos           (3UL)                     /*!< CSTRT3 (Bit 3)                                        */
#define GPT162_GTSTR_CSTRT3_Msk           (0x8UL)                   /*!< CSTRT3 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTR_CSTRT4_Pos           (4UL)                     /*!< CSTRT4 (Bit 4)                                        */
#define GPT162_GTSTR_CSTRT4_Msk           (0x10UL)                  /*!< CSTRT4 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTR_CSTRT5_Pos           (5UL)                     /*!< CSTRT5 (Bit 5)                                        */
#define GPT162_GTSTR_CSTRT5_Msk           (0x20UL)                  /*!< CSTRT5 (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTSTP  ========================================================= */
#define GPT162_GTSTP_CSTOP0_Pos           (0UL)                     /*!< CSTOP0 (Bit 0)                                        */
#define GPT162_GTSTP_CSTOP0_Msk           (0x1UL)                   /*!< CSTOP0 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTP_CSTOP1_Pos           (1UL)                     /*!< CSTOP1 (Bit 1)                                        */
#define GPT162_GTSTP_CSTOP1_Msk           (0x2UL)                   /*!< CSTOP1 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTP_CSTOP2_Pos           (2UL)                     /*!< CSTOP2 (Bit 2)                                        */
#define GPT162_GTSTP_CSTOP2_Msk           (0x4UL)                   /*!< CSTOP2 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTP_CSTOP3_Pos           (3UL)                     /*!< CSTOP3 (Bit 3)                                        */
#define GPT162_GTSTP_CSTOP3_Msk           (0x8UL)                   /*!< CSTOP3 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTP_CSTOP4_Pos           (4UL)                     /*!< CSTOP4 (Bit 4)                                        */
#define GPT162_GTSTP_CSTOP4_Msk           (0x10UL)                  /*!< CSTOP4 (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSTP_CSTOP5_Pos           (5UL)                     /*!< CSTOP5 (Bit 5)                                        */
#define GPT162_GTSTP_CSTOP5_Msk           (0x20UL)                  /*!< CSTOP5 (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTCLR  ========================================================= */
#define GPT162_GTCLR_CCLR0_Pos            (0UL)                     /*!< CCLR0 (Bit 0)                                         */
#define GPT162_GTCLR_CCLR0_Msk            (0x1UL)                   /*!< CCLR0 (Bitfield-Mask: 0x01)                           */
#define GPT162_GTCLR_CCLR1_Pos            (1UL)                     /*!< CCLR1 (Bit 1)                                         */
#define GPT162_GTCLR_CCLR1_Msk            (0x2UL)                   /*!< CCLR1 (Bitfield-Mask: 0x01)                           */
#define GPT162_GTCLR_CCLR2_Pos            (2UL)                     /*!< CCLR2 (Bit 2)                                         */
#define GPT162_GTCLR_CCLR2_Msk            (0x4UL)                   /*!< CCLR2 (Bitfield-Mask: 0x01)                           */
#define GPT162_GTCLR_CCLR3_Pos            (3UL)                     /*!< CCLR3 (Bit 3)                                         */
#define GPT162_GTCLR_CCLR3_Msk            (0x8UL)                   /*!< CCLR3 (Bitfield-Mask: 0x01)                           */
#define GPT162_GTCLR_CCLR4_Pos            (4UL)                     /*!< CCLR4 (Bit 4)                                         */
#define GPT162_GTCLR_CCLR4_Msk            (0x10UL)                  /*!< CCLR4 (Bitfield-Mask: 0x01)                           */
#define GPT162_GTCLR_CCLR5_Pos            (5UL)                     /*!< CCLR5 (Bit 5)                                         */
#define GPT162_GTCLR_CCLR5_Msk            (0x20UL)                  /*!< CCLR5 (Bitfield-Mask: 0x01)                           */
/* =========================================================  GTSSR  ========================================================= */
#define GPT162_GTSSR_SSGTRGAR_Pos         (0UL)                     /*!< SSGTRGAR (Bit 0)                                      */
#define GPT162_GTSSR_SSGTRGAR_Msk         (0x1UL)                   /*!< SSGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTSSR_SSGTRGAF_Pos         (1UL)                     /*!< SSGTRGAF (Bit 1)                                      */
#define GPT162_GTSSR_SSGTRGAF_Msk         (0x2UL)                   /*!< SSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTSSR_SSGTRGBR_Pos         (2UL)                     /*!< SSGTRGBR (Bit 2)                                      */
#define GPT162_GTSSR_SSGTRGBR_Msk         (0x4UL)                   /*!< SSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTSSR_SSGTRGBF_Pos         (3UL)                     /*!< SSGTRGBF (Bit 3)                                      */
#define GPT162_GTSSR_SSGTRGBF_Msk         (0x8UL)                   /*!< SSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTSSR_SSCARBL_Pos          (8UL)                     /*!< SSCARBL (Bit 8)                                       */
#define GPT162_GTSSR_SSCARBL_Msk          (0x100UL)                 /*!< SSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCARBH_Pos          (9UL)                     /*!< SSCARBH (Bit 9)                                       */
#define GPT162_GTSSR_SSCARBH_Msk          (0x200UL)                 /*!< SSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCAFBL_Pos          (10UL)                    /*!< SSCAFBL (Bit 10)                                      */
#define GPT162_GTSSR_SSCAFBL_Msk          (0x400UL)                 /*!< SSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCAFBH_Pos          (11UL)                    /*!< SSCAFBH (Bit 11)                                      */
#define GPT162_GTSSR_SSCAFBH_Msk          (0x800UL)                 /*!< SSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCBRAL_Pos          (12UL)                    /*!< SSCBRAL (Bit 12)                                      */
#define GPT162_GTSSR_SSCBRAL_Msk          (0x1000UL)                /*!< SSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCBRAH_Pos          (13UL)                    /*!< SSCBRAH (Bit 13)                                      */
#define GPT162_GTSSR_SSCBRAH_Msk          (0x2000UL)                /*!< SSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCBFAL_Pos          (14UL)                    /*!< SSCBFAL (Bit 14)                                      */
#define GPT162_GTSSR_SSCBFAL_Msk          (0x4000UL)                /*!< SSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSCBFAH_Pos          (15UL)                    /*!< SSCBFAH (Bit 15)                                      */
#define GPT162_GTSSR_SSCBFAH_Msk          (0x8000UL)                /*!< SSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTSSR_SSELCA_Pos           (16UL)                    /*!< SSELCA (Bit 16)                                       */
#define GPT162_GTSSR_SSELCA_Msk           (0x10000UL)               /*!< SSELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSSR_SSELCB_Pos           (17UL)                    /*!< SSELCB (Bit 17)                                       */
#define GPT162_GTSSR_SSELCB_Msk           (0x20000UL)               /*!< SSELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSSR_SSELCC_Pos           (18UL)                    /*!< SSELCC (Bit 18)                                       */
#define GPT162_GTSSR_SSELCC_Msk           (0x40000UL)               /*!< SSELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSSR_SSELCD_Pos           (19UL)                    /*!< SSELCD (Bit 19)                                       */
#define GPT162_GTSSR_SSELCD_Msk           (0x80000UL)               /*!< SSELCD (Bitfield-Mask: 0x01)                          */
#define GPT162_GTSSR_CSTRT_Pos            (31UL)                    /*!< CSTRT (Bit 31)                                        */
#define GPT162_GTSSR_CSTRT_Msk            (0x80000000UL)            /*!< CSTRT (Bitfield-Mask: 0x01)                           */
/* =========================================================  GTPSR  ========================================================= */
#define GPT162_GTPSR_PSGTRGAR_Pos         (0UL)                     /*!< PSGTRGAR (Bit 0)                                      */
#define GPT162_GTPSR_PSGTRGAR_Msk         (0x1UL)                   /*!< PSGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTPSR_PSGTRGAF_Pos         (1UL)                     /*!< PSGTRGAF (Bit 1)                                      */
#define GPT162_GTPSR_PSGTRGAF_Msk         (0x2UL)                   /*!< PSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTPSR_PSGTRGBR_Pos         (2UL)                     /*!< PSGTRGBR (Bit 2)                                      */
#define GPT162_GTPSR_PSGTRGBR_Msk         (0x4UL)                   /*!< PSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTPSR_PSGTRGBF_Pos         (3UL)                     /*!< PSGTRGBF (Bit 3)                                      */
#define GPT162_GTPSR_PSGTRGBF_Msk         (0x8UL)                   /*!< PSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTPSR_PSCARBL_Pos          (8UL)                     /*!< PSCARBL (Bit 8)                                       */
#define GPT162_GTPSR_PSCARBL_Msk          (0x100UL)                 /*!< PSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCARBH_Pos          (9UL)                     /*!< PSCARBH (Bit 9)                                       */
#define GPT162_GTPSR_PSCARBH_Msk          (0x200UL)                 /*!< PSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCAFBL_Pos          (10UL)                    /*!< PSCAFBL (Bit 10)                                      */
#define GPT162_GTPSR_PSCAFBL_Msk          (0x400UL)                 /*!< PSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCAFBH_Pos          (11UL)                    /*!< PSCAFBH (Bit 11)                                      */
#define GPT162_GTPSR_PSCAFBH_Msk          (0x800UL)                 /*!< PSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCBRAL_Pos          (12UL)                    /*!< PSCBRAL (Bit 12)                                      */
#define GPT162_GTPSR_PSCBRAL_Msk          (0x1000UL)                /*!< PSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCBRAH_Pos          (13UL)                    /*!< PSCBRAH (Bit 13)                                      */
#define GPT162_GTPSR_PSCBRAH_Msk          (0x2000UL)                /*!< PSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCBFAL_Pos          (14UL)                    /*!< PSCBFAL (Bit 14)                                      */
#define GPT162_GTPSR_PSCBFAL_Msk          (0x4000UL)                /*!< PSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSCBFAH_Pos          (15UL)                    /*!< PSCBFAH (Bit 15)                                      */
#define GPT162_GTPSR_PSCBFAH_Msk          (0x8000UL)                /*!< PSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTPSR_PSELCA_Pos           (16UL)                    /*!< PSELCA (Bit 16)                                       */
#define GPT162_GTPSR_PSELCA_Msk           (0x10000UL)               /*!< PSELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTPSR_PSELCB_Pos           (17UL)                    /*!< PSELCB (Bit 17)                                       */
#define GPT162_GTPSR_PSELCB_Msk           (0x20000UL)               /*!< PSELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTPSR_PSELCC_Pos           (18UL)                    /*!< PSELCC (Bit 18)                                       */
#define GPT162_GTPSR_PSELCC_Msk           (0x40000UL)               /*!< PSELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTPSR_PSELCD_Pos           (19UL)                    /*!< PSELCD (Bit 19)                                       */
#define GPT162_GTPSR_PSELCD_Msk           (0x80000UL)               /*!< PSELCD (Bitfield-Mask: 0x01)                          */
#define GPT162_GTPSR_CSTOP_Pos            (31UL)                    /*!< CSTOP (Bit 31)                                        */
#define GPT162_GTPSR_CSTOP_Msk            (0x80000000UL)            /*!< CSTOP (Bitfield-Mask: 0x01)                           */
/* =========================================================  GTCSR  ========================================================= */
#define GPT162_GTCSR_CSGTRGAR_Pos         (0UL)                     /*!< CSGTRGAR (Bit 0)                                      */
#define GPT162_GTCSR_CSGTRGAR_Msk         (0x1UL)                   /*!< CSGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTCSR_CSGTRGAF_Pos         (1UL)                     /*!< CSGTRGAF (Bit 1)                                      */
#define GPT162_GTCSR_CSGTRGAF_Msk         (0x2UL)                   /*!< CSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTCSR_CSGTRGBR_Pos         (2UL)                     /*!< CSGTRGBR (Bit 2)                                      */
#define GPT162_GTCSR_CSGTRGBR_Msk         (0x4UL)                   /*!< CSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTCSR_CSGTRGBF_Pos         (3UL)                     /*!< CSGTRGBF (Bit 3)                                      */
#define GPT162_GTCSR_CSGTRGBF_Msk         (0x8UL)                   /*!< CSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTCSR_CSCARBL_Pos          (8UL)                     /*!< CSCARBL (Bit 8)                                       */
#define GPT162_GTCSR_CSCARBL_Msk          (0x100UL)                 /*!< CSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCARBH_Pos          (9UL)                     /*!< CSCARBH (Bit 9)                                       */
#define GPT162_GTCSR_CSCARBH_Msk          (0x200UL)                 /*!< CSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCAFBL_Pos          (10UL)                    /*!< CSCAFBL (Bit 10)                                      */
#define GPT162_GTCSR_CSCAFBL_Msk          (0x400UL)                 /*!< CSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCAFBH_Pos          (11UL)                    /*!< CSCAFBH (Bit 11)                                      */
#define GPT162_GTCSR_CSCAFBH_Msk          (0x800UL)                 /*!< CSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCBRAL_Pos          (12UL)                    /*!< CSCBRAL (Bit 12)                                      */
#define GPT162_GTCSR_CSCBRAL_Msk          (0x1000UL)                /*!< CSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCBRAH_Pos          (13UL)                    /*!< CSCBRAH (Bit 13)                                      */
#define GPT162_GTCSR_CSCBRAH_Msk          (0x2000UL)                /*!< CSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCBFAL_Pos          (14UL)                    /*!< CSCBFAL (Bit 14)                                      */
#define GPT162_GTCSR_CSCBFAL_Msk          (0x4000UL)                /*!< CSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSCBFAH_Pos          (15UL)                    /*!< CSCBFAH (Bit 15)                                      */
#define GPT162_GTCSR_CSCBFAH_Msk          (0x8000UL)                /*!< CSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTCSR_CSELCA_Pos           (16UL)                    /*!< CSELCA (Bit 16)                                       */
#define GPT162_GTCSR_CSELCA_Msk           (0x10000UL)               /*!< CSELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTCSR_CSELCB_Pos           (17UL)                    /*!< CSELCB (Bit 17)                                       */
#define GPT162_GTCSR_CSELCB_Msk           (0x20000UL)               /*!< CSELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTCSR_CSELCC_Pos           (18UL)                    /*!< CSELCC (Bit 18)                                       */
#define GPT162_GTCSR_CSELCC_Msk           (0x40000UL)               /*!< CSELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTCSR_CSELCD_Pos           (19UL)                    /*!< CSELCD (Bit 19)                                       */
#define GPT162_GTCSR_CSELCD_Msk           (0x80000UL)               /*!< CSELCD (Bitfield-Mask: 0x01)                          */
#define GPT162_GTCSR_CCLR_Pos             (31UL)                    /*!< CCLR (Bit 31)                                         */
#define GPT162_GTCSR_CCLR_Msk             (0x80000000UL)            /*!< CCLR (Bitfield-Mask: 0x01)                            */
/* ========================================================  GTUPSR  ========================================================= */
#define GPT162_GTUPSR_USGTRGAR_Pos        (0UL)                     /*!< USGTRGAR (Bit 0)                                      */
#define GPT162_GTUPSR_USGTRGAR_Msk        (0x1UL)                   /*!< USGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTUPSR_USGTRGAF_Pos        (1UL)                     /*!< USGTRGAF (Bit 1)                                      */
#define GPT162_GTUPSR_USGTRGAF_Msk        (0x2UL)                   /*!< USGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTUPSR_USGTRGBR_Pos        (2UL)                     /*!< USGTRGBR (Bit 2)                                      */
#define GPT162_GTUPSR_USGTRGBR_Msk        (0x4UL)                   /*!< USGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTUPSR_USGTRGBF_Pos        (3UL)                     /*!< USGTRGBF (Bit 3)                                      */
#define GPT162_GTUPSR_USGTRGBF_Msk        (0x8UL)                   /*!< USGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTUPSR_USCARBL_Pos         (8UL)                     /*!< USCARBL (Bit 8)                                       */
#define GPT162_GTUPSR_USCARBL_Msk         (0x100UL)                 /*!< USCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCARBH_Pos         (9UL)                     /*!< USCARBH (Bit 9)                                       */
#define GPT162_GTUPSR_USCARBH_Msk         (0x200UL)                 /*!< USCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCAFBL_Pos         (10UL)                    /*!< USCAFBL (Bit 10)                                      */
#define GPT162_GTUPSR_USCAFBL_Msk         (0x400UL)                 /*!< USCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCAFBH_Pos         (11UL)                    /*!< USCAFBH (Bit 11)                                      */
#define GPT162_GTUPSR_USCAFBH_Msk         (0x800UL)                 /*!< USCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCBRAL_Pos         (12UL)                    /*!< USCBRAL (Bit 12)                                      */
#define GPT162_GTUPSR_USCBRAL_Msk         (0x1000UL)                /*!< USCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCBRAH_Pos         (13UL)                    /*!< USCBRAH (Bit 13)                                      */
#define GPT162_GTUPSR_USCBRAH_Msk         (0x2000UL)                /*!< USCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCBFAL_Pos         (14UL)                    /*!< USCBFAL (Bit 14)                                      */
#define GPT162_GTUPSR_USCBFAL_Msk         (0x4000UL)                /*!< USCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USCBFAH_Pos         (15UL)                    /*!< USCBFAH (Bit 15)                                      */
#define GPT162_GTUPSR_USCBFAH_Msk         (0x8000UL)                /*!< USCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTUPSR_USELCA_Pos          (16UL)                    /*!< USELCA (Bit 16)                                       */
#define GPT162_GTUPSR_USELCA_Msk          (0x10000UL)               /*!< USELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUPSR_USELCB_Pos          (17UL)                    /*!< USELCB (Bit 17)                                       */
#define GPT162_GTUPSR_USELCB_Msk          (0x20000UL)               /*!< USELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUPSR_USELCC_Pos          (18UL)                    /*!< USELCC (Bit 18)                                       */
#define GPT162_GTUPSR_USELCC_Msk          (0x40000UL)               /*!< USELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUPSR_USELCD_Pos          (19UL)                    /*!< USELCD (Bit 19)                                       */
#define GPT162_GTUPSR_USELCD_Msk          (0x80000UL)               /*!< USELCD (Bitfield-Mask: 0x01)                          */
/* ========================================================  GTDNSR  ========================================================= */
#define GPT162_GTDNSR_DSGTRGAR_Pos        (0UL)                     /*!< DSGTRGAR (Bit 0)                                      */
#define GPT162_GTDNSR_DSGTRGAR_Msk        (0x1UL)                   /*!< DSGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTDNSR_DSGTRGAF_Pos        (1UL)                     /*!< DSGTRGAF (Bit 1)                                      */
#define GPT162_GTDNSR_DSGTRGAF_Msk        (0x2UL)                   /*!< DSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTDNSR_DSGTRGBR_Pos        (2UL)                     /*!< DSGTRGBR (Bit 2)                                      */
#define GPT162_GTDNSR_DSGTRGBR_Msk        (0x4UL)                   /*!< DSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTDNSR_DSGTRGBF_Pos        (3UL)                     /*!< DSGTRGBF (Bit 3)                                      */
#define GPT162_GTDNSR_DSGTRGBF_Msk        (0x8UL)                   /*!< DSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTDNSR_DSCARBL_Pos         (8UL)                     /*!< DSCARBL (Bit 8)                                       */
#define GPT162_GTDNSR_DSCARBL_Msk         (0x100UL)                 /*!< DSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCARBH_Pos         (9UL)                     /*!< DSCARBH (Bit 9)                                       */
#define GPT162_GTDNSR_DSCARBH_Msk         (0x200UL)                 /*!< DSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCAFBL_Pos         (10UL)                    /*!< DSCAFBL (Bit 10)                                      */
#define GPT162_GTDNSR_DSCAFBL_Msk         (0x400UL)                 /*!< DSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCAFBH_Pos         (11UL)                    /*!< DSCAFBH (Bit 11)                                      */
#define GPT162_GTDNSR_DSCAFBH_Msk         (0x800UL)                 /*!< DSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCBRAL_Pos         (12UL)                    /*!< DSCBRAL (Bit 12)                                      */
#define GPT162_GTDNSR_DSCBRAL_Msk         (0x1000UL)                /*!< DSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCBRAH_Pos         (13UL)                    /*!< DSCBRAH (Bit 13)                                      */
#define GPT162_GTDNSR_DSCBRAH_Msk         (0x2000UL)                /*!< DSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCBFAL_Pos         (14UL)                    /*!< DSCBFAL (Bit 14)                                      */
#define GPT162_GTDNSR_DSCBFAL_Msk         (0x4000UL)                /*!< DSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSCBFAH_Pos         (15UL)                    /*!< DSCBFAH (Bit 15)                                      */
#define GPT162_GTDNSR_DSCBFAH_Msk         (0x8000UL)                /*!< DSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTDNSR_DSELCA_Pos          (16UL)                    /*!< DSELCA (Bit 16)                                       */
#define GPT162_GTDNSR_DSELCA_Msk          (0x10000UL)               /*!< DSELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTDNSR_DSELCB_Pos          (17UL)                    /*!< DSELCB (Bit 17)                                       */
#define GPT162_GTDNSR_DSELCB_Msk          (0x20000UL)               /*!< DSELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTDNSR_DSELCC_Pos          (18UL)                    /*!< DSELCC (Bit 18)                                       */
#define GPT162_GTDNSR_DSELCC_Msk          (0x40000UL)               /*!< DSELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTDNSR_DSELCD_Pos          (19UL)                    /*!< DSELCD (Bit 19)                                       */
#define GPT162_GTDNSR_DSELCD_Msk          (0x80000UL)               /*!< DSELCD (Bitfield-Mask: 0x01)                          */
/* ========================================================  GTICASR  ======================================================== */
#define GPT162_GTICASR_ASGTRGAR_Pos       (0UL)                     /*!< ASGTRGAR (Bit 0)                                      */
#define GPT162_GTICASR_ASGTRGAR_Msk       (0x1UL)                   /*!< ASGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICASR_ASGTRGAF_Pos       (1UL)                     /*!< ASGTRGAF (Bit 1)                                      */
#define GPT162_GTICASR_ASGTRGAF_Msk       (0x2UL)                   /*!< ASGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICASR_ASGTRGBR_Pos       (2UL)                     /*!< ASGTRGBR (Bit 2)                                      */
#define GPT162_GTICASR_ASGTRGBR_Msk       (0x4UL)                   /*!< ASGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICASR_ASGTRGBF_Pos       (3UL)                     /*!< ASGTRGBF (Bit 3)                                      */
#define GPT162_GTICASR_ASGTRGBF_Msk       (0x8UL)                   /*!< ASGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICASR_ASCARBL_Pos        (8UL)                     /*!< ASCARBL (Bit 8)                                       */
#define GPT162_GTICASR_ASCARBL_Msk        (0x100UL)                 /*!< ASCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCARBH_Pos        (9UL)                     /*!< ASCARBH (Bit 9)                                       */
#define GPT162_GTICASR_ASCARBH_Msk        (0x200UL)                 /*!< ASCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCAFBL_Pos        (10UL)                    /*!< ASCAFBL (Bit 10)                                      */
#define GPT162_GTICASR_ASCAFBL_Msk        (0x400UL)                 /*!< ASCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCAFBH_Pos        (11UL)                    /*!< ASCAFBH (Bit 11)                                      */
#define GPT162_GTICASR_ASCAFBH_Msk        (0x800UL)                 /*!< ASCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCBRAL_Pos        (12UL)                    /*!< ASCBRAL (Bit 12)                                      */
#define GPT162_GTICASR_ASCBRAL_Msk        (0x1000UL)                /*!< ASCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCBRAH_Pos        (13UL)                    /*!< ASCBRAH (Bit 13)                                      */
#define GPT162_GTICASR_ASCBRAH_Msk        (0x2000UL)                /*!< ASCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCBFAL_Pos        (14UL)                    /*!< ASCBFAL (Bit 14)                                      */
#define GPT162_GTICASR_ASCBFAL_Msk        (0x4000UL)                /*!< ASCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASCBFAH_Pos        (15UL)                    /*!< ASCBFAH (Bit 15)                                      */
#define GPT162_GTICASR_ASCBFAH_Msk        (0x8000UL)                /*!< ASCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICASR_ASELCA_Pos         (16UL)                    /*!< ASELCA (Bit 16)                                       */
#define GPT162_GTICASR_ASELCA_Msk         (0x10000UL)               /*!< ASELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICASR_ASELCB_Pos         (17UL)                    /*!< ASELCB (Bit 17)                                       */
#define GPT162_GTICASR_ASELCB_Msk         (0x20000UL)               /*!< ASELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICASR_ASELCC_Pos         (18UL)                    /*!< ASELCC (Bit 18)                                       */
#define GPT162_GTICASR_ASELCC_Msk         (0x40000UL)               /*!< ASELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICASR_ASELCD_Pos         (19UL)                    /*!< ASELCD (Bit 19)                                       */
#define GPT162_GTICASR_ASELCD_Msk         (0x80000UL)               /*!< ASELCD (Bitfield-Mask: 0x01)                          */
/* ========================================================  GTICBSR  ======================================================== */
#define GPT162_GTICBSR_BSGTRGAR_Pos       (0UL)                     /*!< BSGTRGAR (Bit 0)                                      */
#define GPT162_GTICBSR_BSGTRGAR_Msk       (0x1UL)                   /*!< BSGTRGAR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICBSR_BSGTRGAF_Pos       (1UL)                     /*!< BSGTRGAF (Bit 1)                                      */
#define GPT162_GTICBSR_BSGTRGAF_Msk       (0x2UL)                   /*!< BSGTRGAF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICBSR_BSGTRGBR_Pos       (2UL)                     /*!< BSGTRGBR (Bit 2)                                      */
#define GPT162_GTICBSR_BSGTRGBR_Msk       (0x4UL)                   /*!< BSGTRGBR (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICBSR_BSGTRGBF_Pos       (3UL)                     /*!< BSGTRGBF (Bit 3)                                      */
#define GPT162_GTICBSR_BSGTRGBF_Msk       (0x8UL)                   /*!< BSGTRGBF (Bitfield-Mask: 0x01)                        */
#define GPT162_GTICBSR_BSCARBL_Pos        (8UL)                     /*!< BSCARBL (Bit 8)                                       */
#define GPT162_GTICBSR_BSCARBL_Msk        (0x100UL)                 /*!< BSCARBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCARBH_Pos        (9UL)                     /*!< BSCARBH (Bit 9)                                       */
#define GPT162_GTICBSR_BSCARBH_Msk        (0x200UL)                 /*!< BSCARBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCAFBL_Pos        (10UL)                    /*!< BSCAFBL (Bit 10)                                      */
#define GPT162_GTICBSR_BSCAFBL_Msk        (0x400UL)                 /*!< BSCAFBL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCAFBH_Pos        (11UL)                    /*!< BSCAFBH (Bit 11)                                      */
#define GPT162_GTICBSR_BSCAFBH_Msk        (0x800UL)                 /*!< BSCAFBH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCBRAL_Pos        (12UL)                    /*!< BSCBRAL (Bit 12)                                      */
#define GPT162_GTICBSR_BSCBRAL_Msk        (0x1000UL)                /*!< BSCBRAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCBRAH_Pos        (13UL)                    /*!< BSCBRAH (Bit 13)                                      */
#define GPT162_GTICBSR_BSCBRAH_Msk        (0x2000UL)                /*!< BSCBRAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCBFAL_Pos        (14UL)                    /*!< BSCBFAL (Bit 14)                                      */
#define GPT162_GTICBSR_BSCBFAL_Msk        (0x4000UL)                /*!< BSCBFAL (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSCBFAH_Pos        (15UL)                    /*!< BSCBFAH (Bit 15)                                      */
#define GPT162_GTICBSR_BSCBFAH_Msk        (0x8000UL)                /*!< BSCBFAH (Bitfield-Mask: 0x01)                         */
#define GPT162_GTICBSR_BSELCA_Pos         (16UL)                    /*!< BSELCA (Bit 16)                                       */
#define GPT162_GTICBSR_BSELCA_Msk         (0x10000UL)               /*!< BSELCA (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICBSR_BSELCB_Pos         (17UL)                    /*!< BSELCB (Bit 17)                                       */
#define GPT162_GTICBSR_BSELCB_Msk         (0x20000UL)               /*!< BSELCB (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICBSR_BSELCC_Pos         (18UL)                    /*!< BSELCC (Bit 18)                                       */
#define GPT162_GTICBSR_BSELCC_Msk         (0x40000UL)               /*!< BSELCC (Bitfield-Mask: 0x01)                          */
#define GPT162_GTICBSR_BSELCD_Pos         (19UL)                    /*!< BSELCD (Bit 19)                                       */
#define GPT162_GTICBSR_BSELCD_Msk         (0x80000UL)               /*!< BSELCD (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTCR  ========================================================== */
#define GPT162_GTCR_CST_Pos               (0UL)                     /*!< CST (Bit 0)                                           */
#define GPT162_GTCR_CST_Msk               (0x1UL)                   /*!< CST (Bitfield-Mask: 0x01)                             */
#define GPT162_GTCR_MD_Pos                (16UL)                    /*!< MD (Bit 16)                                           */
#define GPT162_GTCR_MD_Msk                (0x70000UL)               /*!< MD (Bitfield-Mask: 0x07)                              */
#define GPT162_GTCR_TPCS_Pos              (24UL)                    /*!< TPCS (Bit 24)                                         */
#define GPT162_GTCR_TPCS_Msk              (0x7000000UL)             /*!< TPCS (Bitfield-Mask: 0x07)                            */
/* =======================================================  GTUDDTYC  ======================================================== */
#define GPT162_GTUDDTYC_UD_Pos            (0UL)                     /*!< UD (Bit 0)                                            */
#define GPT162_GTUDDTYC_UD_Msk            (0x1UL)                   /*!< UD (Bitfield-Mask: 0x01)                              */
#define GPT162_GTUDDTYC_UDF_Pos           (1UL)                     /*!< UDF (Bit 1)                                           */
#define GPT162_GTUDDTYC_UDF_Msk           (0x2UL)                   /*!< UDF (Bitfield-Mask: 0x01)                             */
#define GPT162_GTUDDTYC_OADTY_Pos         (16UL)                    /*!< OADTY (Bit 16)                                        */
#define GPT162_GTUDDTYC_OADTY_Msk         (0x30000UL)               /*!< OADTY (Bitfield-Mask: 0x03)                           */
#define GPT162_GTUDDTYC_OADTYF_Pos        (18UL)                    /*!< OADTYF (Bit 18)                                       */
#define GPT162_GTUDDTYC_OADTYF_Msk        (0x40000UL)               /*!< OADTYF (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUDDTYC_OADTYR_Pos        (19UL)                    /*!< OADTYR (Bit 19)                                       */
#define GPT162_GTUDDTYC_OADTYR_Msk        (0x80000UL)               /*!< OADTYR (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUDDTYC_OBDTY_Pos         (24UL)                    /*!< OBDTY (Bit 24)                                        */
#define GPT162_GTUDDTYC_OBDTY_Msk         (0x3000000UL)             /*!< OBDTY (Bitfield-Mask: 0x03)                           */
#define GPT162_GTUDDTYC_OBDTYF_Pos        (26UL)                    /*!< OBDTYF (Bit 26)                                       */
#define GPT162_GTUDDTYC_OBDTYF_Msk        (0x4000000UL)             /*!< OBDTYF (Bitfield-Mask: 0x01)                          */
#define GPT162_GTUDDTYC_OBDTYR_Pos        (27UL)                    /*!< OBDTYR (Bit 27)                                       */
#define GPT162_GTUDDTYC_OBDTYR_Msk        (0x8000000UL)             /*!< OBDTYR (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTIOR  ========================================================= */
#define GPT162_GTIOR_GTIOA_Pos            (0UL)                     /*!< GTIOA (Bit 0)                                         */
#define GPT162_GTIOR_GTIOA_Msk            (0x1fUL)                  /*!< GTIOA (Bitfield-Mask: 0x1f)                           */
#define GPT162_GTIOR_OADFLT_Pos           (6UL)                     /*!< OADFLT (Bit 6)                                        */
#define GPT162_GTIOR_OADFLT_Msk           (0x40UL)                  /*!< OADFLT (Bitfield-Mask: 0x01)                          */
#define GPT162_GTIOR_OAHLD_Pos            (7UL)                     /*!< OAHLD (Bit 7)                                         */
#define GPT162_GTIOR_OAHLD_Msk            (0x80UL)                  /*!< OAHLD (Bitfield-Mask: 0x01)                           */
#define GPT162_GTIOR_OAE_Pos              (8UL)                     /*!< OAE (Bit 8)                                           */
#define GPT162_GTIOR_OAE_Msk              (0x100UL)                 /*!< OAE (Bitfield-Mask: 0x01)                             */
#define GPT162_GTIOR_OADF_Pos             (9UL)                     /*!< OADF (Bit 9)                                          */
#define GPT162_GTIOR_OADF_Msk             (0x600UL)                 /*!< OADF (Bitfield-Mask: 0x03)                            */
#define GPT162_GTIOR_NFAEN_Pos            (13UL)                    /*!< NFAEN (Bit 13)                                        */
#define GPT162_GTIOR_NFAEN_Msk            (0x2000UL)                /*!< NFAEN (Bitfield-Mask: 0x01)                           */
#define GPT162_GTIOR_NFCSA_Pos            (14UL)                    /*!< NFCSA (Bit 14)                                        */
#define GPT162_GTIOR_NFCSA_Msk            (0xc000UL)                /*!< NFCSA (Bitfield-Mask: 0x03)                           */
#define GPT162_GTIOR_GTIOB_Pos            (16UL)                    /*!< GTIOB (Bit 16)                                        */
#define GPT162_GTIOR_GTIOB_Msk            (0x1f0000UL)              /*!< GTIOB (Bitfield-Mask: 0x1f)                           */
#define GPT162_GTIOR_OBDFLT_Pos           (22UL)                    /*!< OBDFLT (Bit 22)                                       */
#define GPT162_GTIOR_OBDFLT_Msk           (0x400000UL)              /*!< OBDFLT (Bitfield-Mask: 0x01)                          */
#define GPT162_GTIOR_OBHLD_Pos            (23UL)                    /*!< OBHLD (Bit 23)                                        */
#define GPT162_GTIOR_OBHLD_Msk            (0x800000UL)              /*!< OBHLD (Bitfield-Mask: 0x01)                           */
#define GPT162_GTIOR_OBE_Pos              (24UL)                    /*!< OBE (Bit 24)                                          */
#define GPT162_GTIOR_OBE_Msk              (0x1000000UL)             /*!< OBE (Bitfield-Mask: 0x01)                             */
#define GPT162_GTIOR_OBDF_Pos             (25UL)                    /*!< OBDF (Bit 25)                                         */
#define GPT162_GTIOR_OBDF_Msk             (0x6000000UL)             /*!< OBDF (Bitfield-Mask: 0x03)                            */
#define GPT162_GTIOR_NFBEN_Pos            (29UL)                    /*!< NFBEN (Bit 29)                                        */
#define GPT162_GTIOR_NFBEN_Msk            (0x20000000UL)            /*!< NFBEN (Bitfield-Mask: 0x01)                           */
#define GPT162_GTIOR_NFCSB_Pos            (30UL)                    /*!< NFCSB (Bit 30)                                        */
#define GPT162_GTIOR_NFCSB_Msk            (0xc0000000UL)            /*!< NFCSB (Bitfield-Mask: 0x03)                           */
/* ========================================================  GTINTAD  ======================================================== */
#define GPT162_GTINTAD_GRP_Pos            (24UL)                    /*!< GRP (Bit 24)                                          */
#define GPT162_GTINTAD_GRP_Msk            (0x3000000UL)             /*!< GRP (Bitfield-Mask: 0x03)                             */
#define GPT162_GTINTAD_GRPABH_Pos         (29UL)                    /*!< GRPABH (Bit 29)                                       */
#define GPT162_GTINTAD_GRPABH_Msk         (0x20000000UL)            /*!< GRPABH (Bitfield-Mask: 0x01)                          */
#define GPT162_GTINTAD_GRPABL_Pos         (30UL)                    /*!< GRPABL (Bit 30)                                       */
#define GPT162_GTINTAD_GRPABL_Msk         (0x40000000UL)            /*!< GRPABL (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTST  ========================================================== */
#define GPT162_GTST_TCFA_Pos              (0UL)                     /*!< TCFA (Bit 0)                                          */
#define GPT162_GTST_TCFA_Msk              (0x1UL)                   /*!< TCFA (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFB_Pos              (1UL)                     /*!< TCFB (Bit 1)                                          */
#define GPT162_GTST_TCFB_Msk              (0x2UL)                   /*!< TCFB (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFC_Pos              (2UL)                     /*!< TCFC (Bit 2)                                          */
#define GPT162_GTST_TCFC_Msk              (0x4UL)                   /*!< TCFC (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFD_Pos              (3UL)                     /*!< TCFD (Bit 3)                                          */
#define GPT162_GTST_TCFD_Msk              (0x8UL)                   /*!< TCFD (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFE_Pos              (4UL)                     /*!< TCFE (Bit 4)                                          */
#define GPT162_GTST_TCFE_Msk              (0x10UL)                  /*!< TCFE (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFF_Pos              (5UL)                     /*!< TCFF (Bit 5)                                          */
#define GPT162_GTST_TCFF_Msk              (0x20UL)                  /*!< TCFF (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_TCFPO_Pos             (6UL)                     /*!< TCFPO (Bit 6)                                         */
#define GPT162_GTST_TCFPO_Msk             (0x40UL)                  /*!< TCFPO (Bitfield-Mask: 0x01)                           */
#define GPT162_GTST_TCFPU_Pos             (7UL)                     /*!< TCFPU (Bit 7)                                         */
#define GPT162_GTST_TCFPU_Msk             (0x80UL)                  /*!< TCFPU (Bitfield-Mask: 0x01)                           */
#define GPT162_GTST_TUCF_Pos              (15UL)                    /*!< TUCF (Bit 15)                                         */
#define GPT162_GTST_TUCF_Msk              (0x8000UL)                /*!< TUCF (Bitfield-Mask: 0x01)                            */
#define GPT162_GTST_ODF_Pos               (24UL)                    /*!< ODF (Bit 24)                                          */
#define GPT162_GTST_ODF_Msk               (0x1000000UL)             /*!< ODF (Bitfield-Mask: 0x01)                             */
#define GPT162_GTST_OABHF_Pos             (29UL)                    /*!< OABHF (Bit 29)                                        */
#define GPT162_GTST_OABHF_Msk             (0x20000000UL)            /*!< OABHF (Bitfield-Mask: 0x01)                           */
#define GPT162_GTST_OABLF_Pos             (30UL)                    /*!< OABLF (Bit 30)                                        */
#define GPT162_GTST_OABLF_Msk             (0x40000000UL)            /*!< OABLF (Bitfield-Mask: 0x01)                           */
/* =========================================================  GTBER  ========================================================= */
#define GPT162_GTBER_BD0_Pos              (0UL)                     /*!< BD0 (Bit 0)                                           */
#define GPT162_GTBER_BD0_Msk              (0x1UL)                   /*!< BD0 (Bitfield-Mask: 0x01)                             */
#define GPT162_GTBER_BD1_Pos              (1UL)                     /*!< BD1 (Bit 1)                                           */
#define GPT162_GTBER_BD1_Msk              (0x2UL)                   /*!< BD1 (Bitfield-Mask: 0x01)                             */
#define GPT162_GTBER_CCRA_Pos             (16UL)                    /*!< CCRA (Bit 16)                                         */
#define GPT162_GTBER_CCRA_Msk             (0x30000UL)               /*!< CCRA (Bitfield-Mask: 0x03)                            */
#define GPT162_GTBER_CCRB_Pos             (18UL)                    /*!< CCRB (Bit 18)                                         */
#define GPT162_GTBER_CCRB_Msk             (0xc0000UL)               /*!< CCRB (Bitfield-Mask: 0x03)                            */
#define GPT162_GTBER_PR_Pos               (20UL)                    /*!< PR (Bit 20)                                           */
#define GPT162_GTBER_PR_Msk               (0x300000UL)              /*!< PR (Bitfield-Mask: 0x03)                              */
#define GPT162_GTBER_CCRSWT_Pos           (22UL)                    /*!< CCRSWT (Bit 22)                                       */
#define GPT162_GTBER_CCRSWT_Msk           (0x400000UL)              /*!< CCRSWT (Bitfield-Mask: 0x01)                          */
/* =========================================================  GTCNT  ========================================================= */
/* ========================================================  GTCCRA  ========================================================= */
/* ========================================================  GTCCRB  ========================================================= */
/* ========================================================  GTCCRC  ========================================================= */
/* ========================================================  GTCCRE  ========================================================= */
/* ========================================================  GTCCRD  ========================================================= */
/* ========================================================  GTCCRF  ========================================================= */
/* =========================================================  GTPR  ========================================================== */
/* =========================================================  GTPBR  ========================================================= */
/* ========================================================  GTDTCR  ========================================================= */
#define GPT162_GTDTCR_TDE_Pos             (0UL)                     /*!< TDE (Bit 0)                                           */
#define GPT162_GTDTCR_TDE_Msk             (0x1UL)                   /*!< TDE (Bitfield-Mask: 0x01)                             */
/* =========================================================  GTDVU  ========================================================= */


/* =========================================================================================================================== */
/* ================                                          GPT_OPS                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  OPSCR  ========================================================= */
#define GPT_OPS_OPSCR_UF_Pos              (0UL)                     /*!< UF (Bit 0)                                            */
#define GPT_OPS_OPSCR_UF_Msk              (0x1UL)                   /*!< UF (Bitfield-Mask: 0x01)                              */
#define GPT_OPS_OPSCR_VF_Pos              (1UL)                     /*!< VF (Bit 1)                                            */
#define GPT_OPS_OPSCR_VF_Msk              (0x2UL)                   /*!< VF (Bitfield-Mask: 0x01)                              */
#define GPT_OPS_OPSCR_WF_Pos              (2UL)                     /*!< WF (Bit 2)                                            */
#define GPT_OPS_OPSCR_WF_Msk              (0x4UL)                   /*!< WF (Bitfield-Mask: 0x01)                              */
#define GPT_OPS_OPSCR_U_Pos               (4UL)                     /*!< U (Bit 4)                                             */
#define GPT_OPS_OPSCR_U_Msk               (0x10UL)                  /*!< U (Bitfield-Mask: 0x01)                               */
#define GPT_OPS_OPSCR_V_Pos               (5UL)                     /*!< V (Bit 5)                                             */
#define GPT_OPS_OPSCR_V_Msk               (0x20UL)                  /*!< V (Bitfield-Mask: 0x01)                               */
#define GPT_OPS_OPSCR_W_Pos               (6UL)                     /*!< W (Bit 6)                                             */
#define GPT_OPS_OPSCR_W_Msk               (0x40UL)                  /*!< W (Bitfield-Mask: 0x01)                               */
#define GPT_OPS_OPSCR_EN_Pos              (8UL)                     /*!< EN (Bit 8)                                            */
#define GPT_OPS_OPSCR_EN_Msk              (0x100UL)                 /*!< EN (Bitfield-Mask: 0x01)                              */
#define GPT_OPS_OPSCR_FB_Pos              (16UL)                    /*!< FB (Bit 16)                                           */
#define GPT_OPS_OPSCR_FB_Msk              (0x10000UL)               /*!< FB (Bitfield-Mask: 0x01)                              */
#define GPT_OPS_OPSCR_P_Pos               (17UL)                    /*!< P (Bit 17)                                            */
#define GPT_OPS_OPSCR_P_Msk               (0x20000UL)               /*!< P (Bitfield-Mask: 0x01)                               */
#define GPT_OPS_OPSCR_N_Pos               (18UL)                    /*!< N (Bit 18)                                            */
#define GPT_OPS_OPSCR_N_Msk               (0x40000UL)               /*!< N (Bitfield-Mask: 0x01)                               */
#define GPT_OPS_OPSCR_INV_Pos             (19UL)                    /*!< INV (Bit 19)                                          */
#define GPT_OPS_OPSCR_INV_Msk             (0x80000UL)               /*!< INV (Bitfield-Mask: 0x01)                             */
#define GPT_OPS_OPSCR_RV_Pos              (20UL)                    /*!< RV (Bit 20)                                           */
#define GPT_OPS_OPSCR_RV_Msk              (0x100000UL)              /*!< RV (Bitfield-Mask: 0x01)                              */
#define GPT_OPS_OPSCR_ALIGN_Pos           (21UL)                    /*!< ALIGN (Bit 21)                                        */
#define GPT_OPS_OPSCR_ALIGN_Msk           (0x200000UL)              /*!< ALIGN (Bitfield-Mask: 0x01)                           */
#define GPT_OPS_OPSCR_GRP_Pos             (24UL)                    /*!< GRP (Bit 24)                                          */
#define GPT_OPS_OPSCR_GRP_Msk             (0x3000000UL)             /*!< GRP (Bitfield-Mask: 0x03)                             */
#define GPT_OPS_OPSCR_GODF_Pos            (26UL)                    /*!< GODF (Bit 26)                                         */
#define GPT_OPS_OPSCR_GODF_Msk            (0x4000000UL)             /*!< GODF (Bitfield-Mask: 0x01)                            */
#define GPT_OPS_OPSCR_NFEN_Pos            (29UL)                    /*!< NFEN (Bit 29)                                         */
#define GPT_OPS_OPSCR_NFEN_Msk            (0x20000000UL)            /*!< NFEN (Bitfield-Mask: 0x01)                            */
#define GPT_OPS_OPSCR_NFCS_Pos            (30UL)                    /*!< NFCS (Bit 30)                                         */
#define GPT_OPS_OPSCR_NFCS_Msk            (0xc0000000UL)            /*!< NFCS (Bitfield-Mask: 0x03)                            */


/* =========================================================================================================================== */
/* ================                                          ADC140                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  ADCSR  ========================================================= */
#define ADC140_ADCSR_DBLANS_Pos           (0UL)                     /*!< DBLANS (Bit 0)                                        */
#define ADC140_ADCSR_DBLANS_Msk           (0x1fUL)                  /*!< DBLANS (Bitfield-Mask: 0x1f)                          */
#define ADC140_ADCSR_GBADIE_Pos           (6UL)                     /*!< GBADIE (Bit 6)                                        */
#define ADC140_ADCSR_GBADIE_Msk           (0x40UL)                  /*!< GBADIE (Bitfield-Mask: 0x01)                          */
#define ADC140_ADCSR_DBLE_Pos             (7UL)                     /*!< DBLE (Bit 7)                                          */
#define ADC140_ADCSR_DBLE_Msk             (0x80UL)                  /*!< DBLE (Bitfield-Mask: 0x01)                            */
#define ADC140_ADCSR_EXTRG_Pos            (8UL)                     /*!< EXTRG (Bit 8)                                         */
#define ADC140_ADCSR_EXTRG_Msk            (0x100UL)                 /*!< EXTRG (Bitfield-Mask: 0x01)                           */
#define ADC140_ADCSR_TRGE_Pos             (9UL)                     /*!< TRGE (Bit 9)                                          */
#define ADC140_ADCSR_TRGE_Msk             (0x200UL)                 /*!< TRGE (Bitfield-Mask: 0x01)                            */
#define ADC140_ADCSR_ADIE_Pos             (12UL)                    /*!< ADIE (Bit 12)                                         */
#define ADC140_ADCSR_ADIE_Msk             (0x1000UL)                /*!< ADIE (Bitfield-Mask: 0x01)                            */
#define ADC140_ADCSR_ADCS_Pos             (13UL)                    /*!< ADCS (Bit 13)                                         */
#define ADC140_ADCSR_ADCS_Msk             (0x6000UL)                /*!< ADCS (Bitfield-Mask: 0x03)                            */
#define ADC140_ADCSR_ADST_Pos             (15UL)                    /*!< ADST (Bit 15)                                         */
#define ADC140_ADCSR_ADST_Msk             (0x8000UL)                /*!< ADST (Bitfield-Mask: 0x01)                            */
/* ========================================================  ADANSA0  ======================================================== */
#define ADC140_ADANSA0_ANSA00_Pos         (0UL)                     /*!< ANSA00 (Bit 0)                                        */
#define ADC140_ADANSA0_ANSA00_Msk         (0x1UL)                   /*!< ANSA00 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSA0_ANSA01_Pos         (1UL)                     /*!< ANSA01 (Bit 1)                                        */
#define ADC140_ADANSA0_ANSA01_Msk         (0x2UL)                   /*!< ANSA01 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSA0_ANSA02_Pos         (2UL)                     /*!< ANSA02 (Bit 2)                                        */
#define ADC140_ADANSA0_ANSA02_Msk         (0x4UL)                   /*!< ANSA02 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSA0_ANSA03_Pos         (3UL)                     /*!< ANSA03 (Bit 3)                                        */
#define ADC140_ADANSA0_ANSA03_Msk         (0x8UL)                   /*!< ANSA03 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSA0_ANSA04_Pos         (4UL)                     /*!< ANSA04 (Bit 4)                                        */
#define ADC140_ADANSA0_ANSA04_Msk         (0x10UL)                  /*!< ANSA04 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSA0_ANSA05_Pos         (5UL)                     /*!< ANSA05 (Bit 5)                                        */
#define ADC140_ADANSA0_ANSA05_Msk         (0x20UL)                  /*!< ANSA05 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSA0_ANSA06_Pos         (6UL)                     /*!< ANSA06 (Bit 6)                                        */
#define ADC140_ADANSA0_ANSA06_Msk         (0x40UL)                  /*!< ANSA06 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSA0_ANSA07_Pos         (7UL)                     /*!< ANSA07 (Bit 7)                                        */
#define ADC140_ADANSA0_ANSA07_Msk         (0x80UL)                  /*!< ANSA07 (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADANSA1  ======================================================== */
#define ADC140_ADANSA1_ANSA16_Pos         (0UL)                     /*!< ANSA16 (Bit 0)                                        */
#define ADC140_ADANSA1_ANSA16_Msk         (0x1UL)                   /*!< ANSA16 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSA1_ANSA17_Pos         (1UL)                     /*!< ANSA17 (Bit 1)                                        */
#define ADC140_ADANSA1_ANSA17_Msk         (0x2UL)                   /*!< ANSA17 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSA1_ANSA20_Pos         (4UL)                     /*!< ANSA20 (Bit 4)                                        */
#define ADC140_ADANSA1_ANSA20_Msk         (0x10UL)                  /*!< ANSA20 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSA1_ANSA21_Pos         (5UL)                     /*!< ANSA21 (Bit 5)                                        */
#define ADC140_ADANSA1_ANSA21_Msk         (0x20UL)                  /*!< ANSA21 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSA1_ANSA31_Pos         (15UL)                    /*!< ANSA31 (Bit 15)                                       */
#define ADC140_ADANSA1_ANSA31_Msk         (0x8000UL)                /*!< ANSA31 (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADADS0  ========================================================= */
#define ADC140_ADADS0_ADS00_Pos           (0UL)                     /*!< ADS00 (Bit 0)                                         */
#define ADC140_ADADS0_ADS00_Msk           (0x1UL)                   /*!< ADS00 (Bitfield-Mask: 0x01)                           */
#define ADC140_ADADS0_ADS01_Pos           (1UL)                     /*!< ADS01 (Bit 1)                                         */
#define ADC140_ADADS0_ADS01_Msk           (0x2UL)                   /*!< ADS01 (Bitfield-Mask: 0x01)                           */
#define ADC140_ADADS0_ADS02_Pos           (2UL)                     /*!< ADS02 (Bit 2)                                         */
#define ADC140_ADADS0_ADS02_Msk           (0x4UL)                   /*!< ADS02 (Bitfield-Mask: 0x01)                           */
#define ADC140_ADADS0_ADS03_Pos           (3UL)                     /*!< ADS03 (Bit 3)                                         */
#define ADC140_ADADS0_ADS03_Msk           (0x8UL)                   /*!< ADS03 (Bitfield-Mask: 0x01)                           */
#define ADC140_ADADS0_ADS04_Pos           (4UL)                     /*!< ADS04 (Bit 4)                                         */
#define ADC140_ADADS0_ADS04_Msk           (0x10UL)                  /*!< ADS04 (Bitfield-Mask: 0x01)                           */
#define ADC140_ADADS0_ADS05_Pos           (5UL)                     /*!< ADS05 (Bit 5)                                         */
#define ADC140_ADADS0_ADS05_Msk           (0x20UL)                  /*!< ADS05 (Bitfield-Mask: 0x01)                           */
#define ADC140_ADADS0_ADS06_Pos           (6UL)                     /*!< ADS06 (Bit 6)                                         */
#define ADC140_ADADS0_ADS06_Msk           (0x40UL)                  /*!< ADS06 (Bitfield-Mask: 0x01)                           */
#define ADC140_ADADS0_ADS07_Pos           (7UL)                     /*!< ADS07 (Bit 7)                                         */
#define ADC140_ADADS0_ADS07_Msk           (0x80UL)                  /*!< ADS07 (Bitfield-Mask: 0x01)                           */
/* ========================================================  ADADS1  ========================================================= */
#define ADC140_ADADS1_ADS16_Pos           (0UL)                     /*!< ADS16 (Bit 0)                                         */
#define ADC140_ADADS1_ADS16_Msk           (0x1UL)                   /*!< ADS16 (Bitfield-Mask: 0x01)                           */
#define ADC140_ADADS1_ADS17_Pos           (1UL)                     /*!< ADS17 (Bit 1)                                         */
#define ADC140_ADADS1_ADS17_Msk           (0x2UL)                   /*!< ADS17 (Bitfield-Mask: 0x01)                           */
#define ADC140_ADADS1_ADS20_Pos           (4UL)                     /*!< ADS20 (Bit 4)                                         */
#define ADC140_ADADS1_ADS20_Msk           (0x10UL)                  /*!< ADS20 (Bitfield-Mask: 0x01)                           */
#define ADC140_ADADS1_ADS21_Pos           (5UL)                     /*!< ADS21 (Bit 5)                                         */
#define ADC140_ADADS1_ADS21_Msk           (0x20UL)                  /*!< ADS21 (Bitfield-Mask: 0x01)                           */
#define ADC140_ADADS1_ADS31_Pos           (15UL)                    /*!< ADS31 (Bit 15)                                        */
#define ADC140_ADADS1_ADS31_Msk           (0x8000UL)                /*!< ADS31 (Bitfield-Mask: 0x01)                           */
/* =========================================================  ADADC  ========================================================= */
#define ADC140_ADADC_ADC_Pos              (0UL)                     /*!< ADC (Bit 0)                                           */
#define ADC140_ADADC_ADC_Msk              (0x7UL)                   /*!< ADC (Bitfield-Mask: 0x07)                             */
#define ADC140_ADADC_AVEE_Pos             (7UL)                     /*!< AVEE (Bit 7)                                          */
#define ADC140_ADADC_AVEE_Msk             (0x80UL)                  /*!< AVEE (Bitfield-Mask: 0x01)                            */
/* =========================================================  ADCER  ========================================================= */
#define ADC140_ADCER_ADPRC_Pos            (1UL)                     /*!< ADPRC (Bit 1)                                         */
#define ADC140_ADCER_ADPRC_Msk            (0x6UL)                   /*!< ADPRC (Bitfield-Mask: 0x03)                           */
#define ADC140_ADCER_ACE_Pos              (5UL)                     /*!< ACE (Bit 5)                                           */
#define ADC140_ADCER_ACE_Msk              (0x20UL)                  /*!< ACE (Bitfield-Mask: 0x01)                             */
#define ADC140_ADCER_DIAGVAL_Pos          (8UL)                     /*!< DIAGVAL (Bit 8)                                       */
#define ADC140_ADCER_DIAGVAL_Msk          (0x300UL)                 /*!< DIAGVAL (Bitfield-Mask: 0x03)                         */
#define ADC140_ADCER_DIAGLD_Pos           (10UL)                    /*!< DIAGLD (Bit 10)                                       */
#define ADC140_ADCER_DIAGLD_Msk           (0x400UL)                 /*!< DIAGLD (Bitfield-Mask: 0x01)                          */
#define ADC140_ADCER_DIAGM_Pos            (11UL)                    /*!< DIAGM (Bit 11)                                        */
#define ADC140_ADCER_DIAGM_Msk            (0x800UL)                 /*!< DIAGM (Bitfield-Mask: 0x01)                           */
#define ADC140_ADCER_ADRFMT_Pos           (15UL)                    /*!< ADRFMT (Bit 15)                                       */
#define ADC140_ADCER_ADRFMT_Msk           (0x8000UL)                /*!< ADRFMT (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADSTRGR  ======================================================== */
#define ADC140_ADSTRGR_TRSB_Pos           (0UL)                     /*!< TRSB (Bit 0)                                          */
#define ADC140_ADSTRGR_TRSB_Msk           (0x3fUL)                  /*!< TRSB (Bitfield-Mask: 0x3f)                            */
#define ADC140_ADSTRGR_TRSA_Pos           (8UL)                     /*!< TRSA (Bit 8)                                          */
#define ADC140_ADSTRGR_TRSA_Msk           (0x3f00UL)                /*!< TRSA (Bitfield-Mask: 0x3f)                            */
/* ========================================================  ADEXICR  ======================================================== */
#define ADC140_ADEXICR_TSSAD_Pos          (0UL)                     /*!< TSSAD (Bit 0)                                         */
#define ADC140_ADEXICR_TSSAD_Msk          (0x1UL)                   /*!< TSSAD (Bitfield-Mask: 0x01)                           */
#define ADC140_ADEXICR_TSSA_Pos           (8UL)                     /*!< TSSA (Bit 8)                                          */
#define ADC140_ADEXICR_TSSA_Msk           (0x100UL)                 /*!< TSSA (Bitfield-Mask: 0x01)                            */
#define ADC140_ADEXICR_TSSB_Pos           (10UL)                    /*!< TSSB (Bit 10)                                         */
#define ADC140_ADEXICR_TSSB_Msk           (0x400UL)                 /*!< TSSB (Bitfield-Mask: 0x01)                            */
/* ========================================================  ADANSB0  ======================================================== */
#define ADC140_ADANSB0_ANSB00_Pos         (0UL)                     /*!< ANSB00 (Bit 0)                                        */
#define ADC140_ADANSB0_ANSB00_Msk         (0x1UL)                   /*!< ANSB00 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSB0_ANSB01_Pos         (1UL)                     /*!< ANSB01 (Bit 1)                                        */
#define ADC140_ADANSB0_ANSB01_Msk         (0x2UL)                   /*!< ANSB01 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSB0_ANSB02_Pos         (2UL)                     /*!< ANSB02 (Bit 2)                                        */
#define ADC140_ADANSB0_ANSB02_Msk         (0x4UL)                   /*!< ANSB02 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSB0_ANSB03_Pos         (3UL)                     /*!< ANSB03 (Bit 3)                                        */
#define ADC140_ADANSB0_ANSB03_Msk         (0x8UL)                   /*!< ANSB03 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSB0_ANSB04_Pos         (4UL)                     /*!< ANSB04 (Bit 4)                                        */
#define ADC140_ADANSB0_ANSB04_Msk         (0x10UL)                  /*!< ANSB04 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSB0_ANSB05_Pos         (5UL)                     /*!< ANSB05 (Bit 5)                                        */
#define ADC140_ADANSB0_ANSB05_Msk         (0x20UL)                  /*!< ANSB05 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSB0_ANSB06_Pos         (6UL)                     /*!< ANSB06 (Bit 6)                                        */
#define ADC140_ADANSB0_ANSB06_Msk         (0x40UL)                  /*!< ANSB06 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSB0_ANSB07_Pos         (7UL)                     /*!< ANSB07 (Bit 7)                                        */
#define ADC140_ADANSB0_ANSB07_Msk         (0x80UL)                  /*!< ANSB07 (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADANSB1  ======================================================== */
#define ADC140_ADANSB1_ANSB16_Pos         (0UL)                     /*!< ANSB16 (Bit 0)                                        */
#define ADC140_ADANSB1_ANSB16_Msk         (0x1UL)                   /*!< ANSB16 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSB1_ANSB17_Pos         (1UL)                     /*!< ANSB17 (Bit 1)                                        */
#define ADC140_ADANSB1_ANSB17_Msk         (0x2UL)                   /*!< ANSB17 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSB1_ANSB20_Pos         (4UL)                     /*!< ANSB20 (Bit 4)                                        */
#define ADC140_ADANSB1_ANSB20_Msk         (0x10UL)                  /*!< ANSB20 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSB1_ANSB21_Pos         (5UL)                     /*!< ANSB21 (Bit 5)                                        */
#define ADC140_ADANSB1_ANSB21_Msk         (0x20UL)                  /*!< ANSB21 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSB1_ANSB31_Pos         (15UL)                    /*!< ANSB31 (Bit 15)                                       */
#define ADC140_ADANSB1_ANSB31_Msk         (0x8000UL)                /*!< ANSB31 (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADDBLDR  ======================================================== */
#define ADC140_ADDBLDR_ADDBLDR_Pos        (0UL)                     /*!< ADDBLDR (Bit 0)                                       */
#define ADC140_ADDBLDR_ADDBLDR_Msk        (0xffffUL)                /*!< ADDBLDR (Bitfield-Mask: 0xffff)                       */
/* ========================================================  ADTSDR  ========================================================= */
#define ADC140_ADTSDR_ADTSDR_Pos          (0UL)                     /*!< ADTSDR (Bit 0)                                        */
#define ADC140_ADTSDR_ADTSDR_Msk          (0xffffUL)                /*!< ADTSDR (Bitfield-Mask: 0xffff)                        */
/* =========================================================  ADRD  ========================================================== */
#define ADC140_ADRD_AD_Pos                (0UL)                     /*!< AD (Bit 0)                                            */
#define ADC140_ADRD_AD_Msk                (0x3fffUL)                /*!< AD (Bitfield-Mask: 0x3fff)                            */
#define ADC140_ADRD_DIAGST_Pos            (14UL)                    /*!< DIAGST (Bit 14)                                       */
#define ADC140_ADRD_DIAGST_Msk            (0xc000UL)                /*!< DIAGST (Bitfield-Mask: 0x03)                          */
/* =========================================================  ADDR0  ========================================================= */
#define ADC140_ADDR0_ADDRn_Pos            (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR0_ADDRn_Msk            (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* =========================================================  ADDR1  ========================================================= */
#define ADC140_ADDR1_ADDRn_Pos            (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR1_ADDRn_Msk            (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* =========================================================  ADDR2  ========================================================= */
#define ADC140_ADDR2_ADDRn_Pos            (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR2_ADDRn_Msk            (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* =========================================================  ADDR3  ========================================================= */
#define ADC140_ADDR3_ADDRn_Pos            (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR3_ADDRn_Msk            (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* =========================================================  ADDR4  ========================================================= */
#define ADC140_ADDR4_ADDRn_Pos            (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR4_ADDRn_Msk            (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* =========================================================  ADDR5  ========================================================= */
#define ADC140_ADDR5_ADDRn_Pos            (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR5_ADDRn_Msk            (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* =========================================================  ADDR6  ========================================================= */
#define ADC140_ADDR6_ADDRn_Pos            (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR6_ADDRn_Msk            (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* =========================================================  ADDR7  ========================================================= */
#define ADC140_ADDR7_ADDRn_Pos            (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR7_ADDRn_Msk            (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* ========================================================  ADDR16  ========================================================= */
#define ADC140_ADDR16_ADDRn_Pos           (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR16_ADDRn_Msk           (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* ========================================================  ADDR17  ========================================================= */
#define ADC140_ADDR17_ADDRn_Pos           (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR17_ADDRn_Msk           (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* ========================================================  ADDR20  ========================================================= */
#define ADC140_ADDR20_ADDRn_Pos           (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR20_ADDRn_Msk           (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* ========================================================  ADDR21  ========================================================= */
#define ADC140_ADDR21_ADDRn_Pos           (0UL)                     /*!< ADDRn (Bit 0)                                         */
#define ADC140_ADDR21_ADDRn_Msk           (0xffffUL)                /*!< ADDRn (Bitfield-Mask: 0xffff)                         */
/* ========================================================  ADVSCDR  ======================================================== */
#define ADC140_ADVSCDR_ADVSCDR_Pos        (0UL)                     /*!< ADVSCDR (Bit 0)                                       */
#define ADC140_ADVSCDR_ADVSCDR_Msk        (0xffffUL)                /*!< ADVSCDR (Bitfield-Mask: 0xffff)                       */
/* =======================================================  ADSCLKCR  ======================================================== */
#define ADC140_ADSCLKCR_SCLKEN_Pos        (0UL)                     /*!< SCLKEN (Bit 0)                                        */
#define ADC140_ADSCLKCR_SCLKEN_Msk        (0x1UL)                   /*!< SCLKEN (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADDISCR  ======================================================== */
#define ADC140_ADDISCR_ADNDIS_Pos         (0UL)                     /*!< ADNDIS (Bit 0)                                        */
#define ADC140_ADDISCR_ADNDIS_Msk         (0xfUL)                   /*!< ADNDIS (Bitfield-Mask: 0x0f)                          */
#define ADC140_ADDISCR_PCHG_Pos           (4UL)                     /*!< PCHG (Bit 4)                                          */
#define ADC140_ADDISCR_PCHG_Msk           (0x10UL)                  /*!< PCHG (Bitfield-Mask: 0x01)                            */
/* ========================================================  ADELCCR  ======================================================== */
#define ADC140_ADELCCR_ELCC_Pos           (0UL)                     /*!< ELCC (Bit 0)                                          */
#define ADC140_ADELCCR_ELCC_Msk           (0x3UL)                   /*!< ELCC (Bitfield-Mask: 0x03)                            */
#define ADC140_ADELCCR_GCELC_Pos          (2UL)                     /*!< GCELC (Bit 2)                                         */
#define ADC140_ADELCCR_GCELC_Msk          (0x4UL)                   /*!< GCELC (Bitfield-Mask: 0x01)                           */
/* ========================================================  ADGSPCR  ======================================================== */
#define ADC140_ADGSPCR_PGS_Pos            (0UL)                     /*!< PGS (Bit 0)                                           */
#define ADC140_ADGSPCR_PGS_Msk            (0x1UL)                   /*!< PGS (Bitfield-Mask: 0x01)                             */
#define ADC140_ADGSPCR_GBRSCN_Pos         (1UL)                     /*!< GBRSCN (Bit 1)                                        */
#define ADC140_ADGSPCR_GBRSCN_Msk         (0x2UL)                   /*!< GBRSCN (Bitfield-Mask: 0x01)                          */
#define ADC140_ADGSPCR_LGRRS_Pos          (14UL)                    /*!< LGRRS (Bit 14)                                        */
#define ADC140_ADGSPCR_LGRRS_Msk          (0x4000UL)                /*!< LGRRS (Bitfield-Mask: 0x01)                           */
#define ADC140_ADGSPCR_GBRP_Pos           (15UL)                    /*!< GBRP (Bit 15)                                         */
#define ADC140_ADGSPCR_GBRP_Msk           (0x8000UL)                /*!< GBRP (Bitfield-Mask: 0x01)                            */
/* ======================================================  ADHVREFCNT  ======================================================= */
#define ADC140_ADHVREFCNT_HVSEL_Pos       (0UL)                     /*!< HVSEL (Bit 0)                                         */
#define ADC140_ADHVREFCNT_HVSEL_Msk       (0x3UL)                   /*!< HVSEL (Bitfield-Mask: 0x03)                           */
#define ADC140_ADHVREFCNT_LVSEL_Pos       (4UL)                     /*!< LVSEL (Bit 4)                                         */
#define ADC140_ADHVREFCNT_LVSEL_Msk       (0x10UL)                  /*!< LVSEL (Bitfield-Mask: 0x01)                           */
/* =======================================================  ADWINMON  ======================================================== */
#define ADC140_ADWINMON_MONCOMB_Pos       (0UL)                     /*!< MONCOMB (Bit 0)                                       */
#define ADC140_ADWINMON_MONCOMB_Msk       (0x1UL)                   /*!< MONCOMB (Bitfield-Mask: 0x01)                         */
#define ADC140_ADWINMON_MONCMPA_Pos       (4UL)                     /*!< MONCMPA (Bit 4)                                       */
#define ADC140_ADWINMON_MONCMPA_Msk       (0x10UL)                  /*!< MONCMPA (Bitfield-Mask: 0x01)                         */
#define ADC140_ADWINMON_MONCMPB_Pos       (5UL)                     /*!< MONCMPB (Bit 5)                                       */
#define ADC140_ADWINMON_MONCMPB_Msk       (0x20UL)                  /*!< MONCMPB (Bitfield-Mask: 0x01)                         */
/* ========================================================  ADCMPCR  ======================================================== */
#define ADC140_ADCMPCR_CMPAB_Pos          (0UL)                     /*!< CMPAB (Bit 0)                                         */
#define ADC140_ADCMPCR_CMPAB_Msk          (0x3UL)                   /*!< CMPAB (Bitfield-Mask: 0x03)                           */
#define ADC140_ADCMPCR_CMPBE_Pos          (9UL)                     /*!< CMPBE (Bit 9)                                         */
#define ADC140_ADCMPCR_CMPBE_Msk          (0x200UL)                 /*!< CMPBE (Bitfield-Mask: 0x01)                           */
#define ADC140_ADCMPCR_CMPAE_Pos          (11UL)                    /*!< CMPAE (Bit 11)                                        */
#define ADC140_ADCMPCR_CMPAE_Msk          (0x800UL)                 /*!< CMPAE (Bitfield-Mask: 0x01)                           */
#define ADC140_ADCMPCR_CMPBIE_Pos         (13UL)                    /*!< CMPBIE (Bit 13)                                       */
#define ADC140_ADCMPCR_CMPBIE_Msk         (0x2000UL)                /*!< CMPBIE (Bitfield-Mask: 0x01)                          */
#define ADC140_ADCMPCR_WCMPE_Pos          (14UL)                    /*!< WCMPE (Bit 14)                                        */
#define ADC140_ADCMPCR_WCMPE_Msk          (0x4000UL)                /*!< WCMPE (Bitfield-Mask: 0x01)                           */
#define ADC140_ADCMPCR_CMPAIE_Pos         (15UL)                    /*!< CMPAIE (Bit 15)                                       */
#define ADC140_ADCMPCR_CMPAIE_Msk         (0x8000UL)                /*!< CMPAIE (Bitfield-Mask: 0x01)                          */
/* ======================================================  ADCMPANSER  ======================================================= */
#define ADC140_ADCMPANSER_CMPTSA_Pos      (0UL)                     /*!< CMPTSA (Bit 0)                                        */
#define ADC140_ADCMPANSER_CMPTSA_Msk      (0x1UL)                   /*!< CMPTSA (Bitfield-Mask: 0x01)                          */
/* =======================================================  ADCMPLER  ======================================================== */
#define ADC140_ADCMPLER_CMPLTSA_Pos       (0UL)                     /*!< CMPLTSA (Bit 0)                                       */
#define ADC140_ADCMPLER_CMPLTSA_Msk       (0x1UL)                   /*!< CMPLTSA (Bitfield-Mask: 0x01)                         */
/* ======================================================  ADCMPANSR0  ======================================================= */
#define ADC140_ADCMPANSR0_CMPCHA00_Pos    (0UL)                     /*!< CMPCHA00 (Bit 0)                                      */
#define ADC140_ADCMPANSR0_CMPCHA00_Msk    (0x1UL)                   /*!< CMPCHA00 (Bitfield-Mask: 0x01)                        */
#define ADC140_ADCMPANSR0_CMPCHA01_Pos    (1UL)                     /*!< CMPCHA01 (Bit 1)                                      */
#define ADC140_ADCMPANSR0_CMPCHA01_Msk    (0x2UL)                   /*!< CMPCHA01 (Bitfield-Mask: 0x01)                        */
#define ADC140_ADCMPANSR0_CMPCHA02_Pos    (2UL)                     /*!< CMPCHA02 (Bit 2)                                      */
#define ADC140_ADCMPANSR0_CMPCHA02_Msk    (0x4UL)                   /*!< CMPCHA02 (Bitfield-Mask: 0x01)                        */
#define ADC140_ADCMPANSR0_CMPCHA03_Pos    (3UL)                     /*!< CMPCHA03 (Bit 3)                                      */
#define ADC140_ADCMPANSR0_CMPCHA03_Msk    (0x8UL)                   /*!< CMPCHA03 (Bitfield-Mask: 0x01)                        */
#define ADC140_ADCMPANSR0_CMPCHA04_Pos    (4UL)                     /*!< CMPCHA04 (Bit 4)                                      */
#define ADC140_ADCMPANSR0_CMPCHA04_Msk    (0x10UL)                  /*!< CMPCHA04 (Bitfield-Mask: 0x01)                        */
#define ADC140_ADCMPANSR0_CMPCHA05_Pos    (5UL)                     /*!< CMPCHA05 (Bit 5)                                      */
#define ADC140_ADCMPANSR0_CMPCHA05_Msk    (0x20UL)                  /*!< CMPCHA05 (Bitfield-Mask: 0x01)                        */
#define ADC140_ADCMPANSR0_CMPCHA06_Pos    (6UL)                     /*!< CMPCHA06 (Bit 6)                                      */
#define ADC140_ADCMPANSR0_CMPCHA06_Msk    (0x40UL)                  /*!< CMPCHA06 (Bitfield-Mask: 0x01)                        */
#define ADC140_ADCMPANSR0_CMPCHA07_Pos    (7UL)                     /*!< CMPCHA07 (Bit 7)                                      */
#define ADC140_ADCMPANSR0_CMPCHA07_Msk    (0x80UL)                  /*!< CMPCHA07 (Bitfield-Mask: 0x01)                        */
/* ======================================================  ADCMPANSR1  ======================================================= */
#define ADC140_ADCMPANSR1_CMPCHA16_Pos    (0UL)                     /*!< CMPCHA16 (Bit 0)                                      */
#define ADC140_ADCMPANSR1_CMPCHA16_Msk    (0x1UL)                   /*!< CMPCHA16 (Bitfield-Mask: 0x01)                        */
#define ADC140_ADCMPANSR1_CMPCHA17_Pos    (1UL)                     /*!< CMPCHA17 (Bit 1)                                      */
#define ADC140_ADCMPANSR1_CMPCHA17_Msk    (0x2UL)                   /*!< CMPCHA17 (Bitfield-Mask: 0x01)                        */
#define ADC140_ADCMPANSR1_CMPCHA20_Pos    (4UL)                     /*!< CMPCHA20 (Bit 4)                                      */
#define ADC140_ADCMPANSR1_CMPCHA20_Msk    (0x10UL)                  /*!< CMPCHA20 (Bitfield-Mask: 0x01)                        */
#define ADC140_ADCMPANSR1_CMPCHA21_Pos    (5UL)                     /*!< CMPCHA21 (Bit 5)                                      */
#define ADC140_ADCMPANSR1_CMPCHA21_Msk    (0x20UL)                  /*!< CMPCHA21 (Bitfield-Mask: 0x01)                        */
#define ADC140_ADCMPANSR1_CMPCHA31_Pos    (15UL)                    /*!< CMPCHA31 (Bit 15)                                     */
#define ADC140_ADCMPANSR1_CMPCHA31_Msk    (0x8000UL)                /*!< CMPCHA31 (Bitfield-Mask: 0x01)                        */
/* =======================================================  ADCMPLR0  ======================================================== */
#define ADC140_ADCMPLR0_CMPLCHA00_Pos     (0UL)                     /*!< CMPLCHA00 (Bit 0)                                     */
#define ADC140_ADCMPLR0_CMPLCHA00_Msk     (0x1UL)                   /*!< CMPLCHA00 (Bitfield-Mask: 0x01)                       */
#define ADC140_ADCMPLR0_CMPLCHA01_Pos     (1UL)                     /*!< CMPLCHA01 (Bit 1)                                     */
#define ADC140_ADCMPLR0_CMPLCHA01_Msk     (0x2UL)                   /*!< CMPLCHA01 (Bitfield-Mask: 0x01)                       */
#define ADC140_ADCMPLR0_CMPLCHA02_Pos     (2UL)                     /*!< CMPLCHA02 (Bit 2)                                     */
#define ADC140_ADCMPLR0_CMPLCHA02_Msk     (0x4UL)                   /*!< CMPLCHA02 (Bitfield-Mask: 0x01)                       */
#define ADC140_ADCMPLR0_CMPLCHA03_Pos     (3UL)                     /*!< CMPLCHA03 (Bit 3)                                     */
#define ADC140_ADCMPLR0_CMPLCHA03_Msk     (0x8UL)                   /*!< CMPLCHA03 (Bitfield-Mask: 0x01)                       */
#define ADC140_ADCMPLR0_CMPLCHA04_Pos     (4UL)                     /*!< CMPLCHA04 (Bit 4)                                     */
#define ADC140_ADCMPLR0_CMPLCHA04_Msk     (0x10UL)                  /*!< CMPLCHA04 (Bitfield-Mask: 0x01)                       */
#define ADC140_ADCMPLR0_CMPLCHA05_Pos     (5UL)                     /*!< CMPLCHA05 (Bit 5)                                     */
#define ADC140_ADCMPLR0_CMPLCHA05_Msk     (0x20UL)                  /*!< CMPLCHA05 (Bitfield-Mask: 0x01)                       */
#define ADC140_ADCMPLR0_CMPLCHA06_Pos     (6UL)                     /*!< CMPLCHA06 (Bit 6)                                     */
#define ADC140_ADCMPLR0_CMPLCHA06_Msk     (0x40UL)                  /*!< CMPLCHA06 (Bitfield-Mask: 0x01)                       */
#define ADC140_ADCMPLR0_CMPLCHA07_Pos     (7UL)                     /*!< CMPLCHA07 (Bit 7)                                     */
#define ADC140_ADCMPLR0_CMPLCHA07_Msk     (0x80UL)                  /*!< CMPLCHA07 (Bitfield-Mask: 0x01)                       */
/* =======================================================  ADCMPLR1  ======================================================== */
#define ADC140_ADCMPLR1_CMPLCHA16_Pos     (0UL)                     /*!< CMPLCHA16 (Bit 0)                                     */
#define ADC140_ADCMPLR1_CMPLCHA16_Msk     (0x1UL)                   /*!< CMPLCHA16 (Bitfield-Mask: 0x01)                       */
#define ADC140_ADCMPLR1_CMPLCHA17_Pos     (1UL)                     /*!< CMPLCHA17 (Bit 1)                                     */
#define ADC140_ADCMPLR1_CMPLCHA17_Msk     (0x2UL)                   /*!< CMPLCHA17 (Bitfield-Mask: 0x01)                       */
#define ADC140_ADCMPLR1_CMPLCHA20_Pos     (4UL)                     /*!< CMPLCHA20 (Bit 4)                                     */
#define ADC140_ADCMPLR1_CMPLCHA20_Msk     (0x10UL)                  /*!< CMPLCHA20 (Bitfield-Mask: 0x01)                       */
#define ADC140_ADCMPLR1_CMPLCHA21_Pos     (5UL)                     /*!< CMPLCHA21 (Bit 5)                                     */
#define ADC140_ADCMPLR1_CMPLCHA21_Msk     (0x20UL)                  /*!< CMPLCHA21 (Bitfield-Mask: 0x01)                       */
#define ADC140_ADCMPLR1_CMPLCHA31_Pos     (15UL)                    /*!< CMPLCHA31 (Bit 15)                                    */
#define ADC140_ADCMPLR1_CMPLCHA31_Msk     (0x8000UL)                /*!< CMPLCHA31 (Bitfield-Mask: 0x01)                       */
/* =======================================================  ADCMPDR0  ======================================================== */
/* =======================================================  ADCMPDR1  ======================================================== */
/* =======================================================  ADCMPSR0  ======================================================== */
#define ADC140_ADCMPSR0_CMPSTCHA00_Pos    (0UL)                     /*!< CMPSTCHA00 (Bit 0)                                    */
#define ADC140_ADCMPSR0_CMPSTCHA00_Msk    (0x1UL)                   /*!< CMPSTCHA00 (Bitfield-Mask: 0x01)                      */
#define ADC140_ADCMPSR0_CMPSTCHA01_Pos    (1UL)                     /*!< CMPSTCHA01 (Bit 1)                                    */
#define ADC140_ADCMPSR0_CMPSTCHA01_Msk    (0x2UL)                   /*!< CMPSTCHA01 (Bitfield-Mask: 0x01)                      */
#define ADC140_ADCMPSR0_CMPSTCHA02_Pos    (2UL)                     /*!< CMPSTCHA02 (Bit 2)                                    */
#define ADC140_ADCMPSR0_CMPSTCHA02_Msk    (0x4UL)                   /*!< CMPSTCHA02 (Bitfield-Mask: 0x01)                      */
#define ADC140_ADCMPSR0_CMPSTCHA03_Pos    (3UL)                     /*!< CMPSTCHA03 (Bit 3)                                    */
#define ADC140_ADCMPSR0_CMPSTCHA03_Msk    (0x8UL)                   /*!< CMPSTCHA03 (Bitfield-Mask: 0x01)                      */
#define ADC140_ADCMPSR0_CMPSTCHA04_Pos    (4UL)                     /*!< CMPSTCHA04 (Bit 4)                                    */
#define ADC140_ADCMPSR0_CMPSTCHA04_Msk    (0x10UL)                  /*!< CMPSTCHA04 (Bitfield-Mask: 0x01)                      */
#define ADC140_ADCMPSR0_CMPSTCHA05_Pos    (5UL)                     /*!< CMPSTCHA05 (Bit 5)                                    */
#define ADC140_ADCMPSR0_CMPSTCHA05_Msk    (0x20UL)                  /*!< CMPSTCHA05 (Bitfield-Mask: 0x01)                      */
#define ADC140_ADCMPSR0_CMPSTCHA06_Pos    (6UL)                     /*!< CMPSTCHA06 (Bit 6)                                    */
#define ADC140_ADCMPSR0_CMPSTCHA06_Msk    (0x40UL)                  /*!< CMPSTCHA06 (Bitfield-Mask: 0x01)                      */
#define ADC140_ADCMPSR0_CMPSTCHA07_Pos    (7UL)                     /*!< CMPSTCHA07 (Bit 7)                                    */
#define ADC140_ADCMPSR0_CMPSTCHA07_Msk    (0x80UL)                  /*!< CMPSTCHA07 (Bitfield-Mask: 0x01)                      */
/* =======================================================  ADCMPSR1  ======================================================== */
#define ADC140_ADCMPSR1_CMPSTCHA16_Pos    (0UL)                     /*!< CMPSTCHA16 (Bit 0)                                    */
#define ADC140_ADCMPSR1_CMPSTCHA16_Msk    (0x1UL)                   /*!< CMPSTCHA16 (Bitfield-Mask: 0x01)                      */
#define ADC140_ADCMPSR1_CMPSTCHA17_Pos    (1UL)                     /*!< CMPSTCHA17 (Bit 1)                                    */
#define ADC140_ADCMPSR1_CMPSTCHA17_Msk    (0x2UL)                   /*!< CMPSTCHA17 (Bitfield-Mask: 0x01)                      */
#define ADC140_ADCMPSR1_CMPSTCHA20_Pos    (4UL)                     /*!< CMPSTCHA20 (Bit 4)                                    */
#define ADC140_ADCMPSR1_CMPSTCHA20_Msk    (0x10UL)                  /*!< CMPSTCHA20 (Bitfield-Mask: 0x01)                      */
#define ADC140_ADCMPSR1_CMPSTCHA21_Pos    (5UL)                     /*!< CMPSTCHA21 (Bit 5)                                    */
#define ADC140_ADCMPSR1_CMPSTCHA21_Msk    (0x20UL)                  /*!< CMPSTCHA21 (Bitfield-Mask: 0x01)                      */
#define ADC140_ADCMPSR1_CMPSTCHA31_Pos    (15UL)                    /*!< CMPSTCHA31 (Bit 15)                                   */
#define ADC140_ADCMPSR1_CMPSTCHA31_Msk    (0x8000UL)                /*!< CMPSTCHA31 (Bitfield-Mask: 0x01)                      */
/* =======================================================  ADCMPSER  ======================================================== */
#define ADC140_ADCMPSER_CMPSTTSA_Pos      (0UL)                     /*!< CMPSTTSA (Bit 0)                                      */
#define ADC140_ADCMPSER_CMPSTTSA_Msk      (0x1UL)                   /*!< CMPSTTSA (Bitfield-Mask: 0x01)                        */
/* =======================================================  ADCMPBNSR  ======================================================= */
#define ADC140_ADCMPBNSR_CMPCHB_Pos       (0UL)                     /*!< CMPCHB (Bit 0)                                        */
#define ADC140_ADCMPBNSR_CMPCHB_Msk       (0x3fUL)                  /*!< CMPCHB (Bitfield-Mask: 0x3f)                          */
#define ADC140_ADCMPBNSR_CMPLB_Pos        (7UL)                     /*!< CMPLB (Bit 7)                                         */
#define ADC140_ADCMPBNSR_CMPLB_Msk        (0x80UL)                  /*!< CMPLB (Bitfield-Mask: 0x01)                           */
/* =======================================================  ADWINLLB  ======================================================== */
/* =======================================================  ADWINULB  ======================================================== */
/* =======================================================  ADCMPBSR  ======================================================== */
#define ADC140_ADCMPBSR_CMPSTB_Pos        (0UL)                     /*!< CMPSTB (Bit 0)                                        */
#define ADC140_ADCMPBSR_CMPSTB_Msk        (0x1UL)                   /*!< CMPSTB (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADANSC0  ======================================================== */
#define ADC140_ADANSC0_ANSC00_Pos         (0UL)                     /*!< ANSC00 (Bit 0)                                        */
#define ADC140_ADANSC0_ANSC00_Msk         (0x1UL)                   /*!< ANSC00 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSC0_ANSC01_Pos         (1UL)                     /*!< ANSC01 (Bit 1)                                        */
#define ADC140_ADANSC0_ANSC01_Msk         (0x2UL)                   /*!< ANSC01 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSC0_ANSC02_Pos         (2UL)                     /*!< ANSC02 (Bit 2)                                        */
#define ADC140_ADANSC0_ANSC02_Msk         (0x4UL)                   /*!< ANSC02 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSC0_ANSC03_Pos         (3UL)                     /*!< ANSC03 (Bit 3)                                        */
#define ADC140_ADANSC0_ANSC03_Msk         (0x8UL)                   /*!< ANSC03 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSC0_ANSC04_Pos         (4UL)                     /*!< ANSC04 (Bit 4)                                        */
#define ADC140_ADANSC0_ANSC04_Msk         (0x10UL)                  /*!< ANSC04 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSC0_ANSC05_Pos         (5UL)                     /*!< ANSC05 (Bit 5)                                        */
#define ADC140_ADANSC0_ANSC05_Msk         (0x20UL)                  /*!< ANSC05 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSC0_ANSC06_Pos         (6UL)                     /*!< ANSC06 (Bit 6)                                        */
#define ADC140_ADANSC0_ANSC06_Msk         (0x40UL)                  /*!< ANSC06 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSC0_ANSC07_Pos         (7UL)                     /*!< ANSC07 (Bit 7)                                        */
#define ADC140_ADANSC0_ANSC07_Msk         (0x80UL)                  /*!< ANSC07 (Bitfield-Mask: 0x01)                          */
/* ========================================================  ADANSC1  ======================================================== */
#define ADC140_ADANSC1_ANSC16_Pos         (0UL)                     /*!< ANSC16 (Bit 0)                                        */
#define ADC140_ADANSC1_ANSC16_Msk         (0x1UL)                   /*!< ANSC16 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSC1_ANSC17_Pos         (1UL)                     /*!< ANSC17 (Bit 1)                                        */
#define ADC140_ADANSC1_ANSC17_Msk         (0x2UL)                   /*!< ANSC17 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSC1_ANSC20_Pos         (4UL)                     /*!< ANSC20 (Bit 4)                                        */
#define ADC140_ADANSC1_ANSC20_Msk         (0x10UL)                  /*!< ANSC20 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSC1_ANSC21_Pos         (5UL)                     /*!< ANSC21 (Bit 5)                                        */
#define ADC140_ADANSC1_ANSC21_Msk         (0x20UL)                  /*!< ANSC21 (Bitfield-Mask: 0x01)                          */
#define ADC140_ADANSC1_ANSC31_Pos         (15UL)                    /*!< ANSC31 (Bit 15)                                       */
#define ADC140_ADANSC1_ANSC31_Msk         (0x8000UL)                /*!< ANSC31 (Bitfield-Mask: 0x01)                          */
/* =======================================================  ADGCEXCR  ======================================================== */
#define ADC140_ADGCEXCR_TSSC_Pos          (0UL)                     /*!< TSSC (Bit 0)                                          */
#define ADC140_ADGCEXCR_TSSC_Msk          (0x1UL)                   /*!< TSSC (Bitfield-Mask: 0x01)                            */
/* =======================================================  ADGCTRGR  ======================================================== */
#define ADC140_ADGCTRGR_TRSC_Pos          (0UL)                     /*!< TRSC (Bit 0)                                          */
#define ADC140_ADGCTRGR_TRSC_Msk          (0x3fUL)                  /*!< TRSC (Bitfield-Mask: 0x3f)                            */
#define ADC140_ADGCTRGR_GCADIE_Pos        (6UL)                     /*!< GCADIE (Bit 6)                                        */
#define ADC140_ADGCTRGR_GCADIE_Msk        (0x40UL)                  /*!< GCADIE (Bitfield-Mask: 0x01)                          */
#define ADC140_ADGCTRGR_GRCE_Pos          (7UL)                     /*!< GRCE (Bit 7)                                          */
#define ADC140_ADGCTRGR_GRCE_Msk          (0x80UL)                  /*!< GRCE (Bitfield-Mask: 0x01)                            */
/* ========================================================  ADSSTRL  ======================================================== */
#define ADC140_ADSSTRL_SST_Pos            (0UL)                     /*!< SST (Bit 0)                                           */
#define ADC140_ADSSTRL_SST_Msk            (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTRT  ======================================================== */
#define ADC140_ADSSTRT_SST_Pos            (0UL)                     /*!< SST (Bit 0)                                           */
#define ADC140_ADSSTRT_SST_Msk            (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR0  ======================================================== */
#define ADC140_ADSSTR0_SST_Pos            (0UL)                     /*!< SST (Bit 0)                                           */
#define ADC140_ADSSTR0_SST_Msk            (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR1  ======================================================== */
#define ADC140_ADSSTR1_SST_Pos            (0UL)                     /*!< SST (Bit 0)                                           */
#define ADC140_ADSSTR1_SST_Msk            (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR2  ======================================================== */
#define ADC140_ADSSTR2_SST_Pos            (0UL)                     /*!< SST (Bit 0)                                           */
#define ADC140_ADSSTR2_SST_Msk            (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR3  ======================================================== */
#define ADC140_ADSSTR3_SST_Pos            (0UL)                     /*!< SST (Bit 0)                                           */
#define ADC140_ADSSTR3_SST_Msk            (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR4  ======================================================== */
#define ADC140_ADSSTR4_SST_Pos            (0UL)                     /*!< SST (Bit 0)                                           */
#define ADC140_ADSSTR4_SST_Msk            (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR5  ======================================================== */
#define ADC140_ADSSTR5_SST_Pos            (0UL)                     /*!< SST (Bit 0)                                           */
#define ADC140_ADSSTR5_SST_Msk            (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR6  ======================================================== */
#define ADC140_ADSSTR6_SST_Pos            (0UL)                     /*!< SST (Bit 0)                                           */
#define ADC140_ADSSTR6_SST_Msk            (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADSSTR7  ======================================================== */
#define ADC140_ADSSTR7_SST_Pos            (0UL)                     /*!< SST (Bit 0)                                           */
#define ADC140_ADSSTR7_SST_Msk            (0xffUL)                  /*!< SST (Bitfield-Mask: 0xff)                             */
/* ========================================================  ADCALC  ========================================================= */
#define ADC140_ADCALC_CALST_Pos           (7UL)                     /*!< CALST (Bit 7)                                         */
#define ADC140_ADCALC_CALST_Msk           (0x80UL)                  /*!< CALST (Bitfield-Mask: 0x01)                           */
/* ========================================================  ADEDCR0  ======================================================== */
#define ADC140_ADEDCR0_EDANC0_Pos         (0UL)                     /*!< EDANC0 (Bit 0)                                        */
#define ADC140_ADEDCR0_EDANC0_Msk         (0x3UL)                   /*!< EDANC0 (Bitfield-Mask: 0x03)                          */
#define ADC140_ADEDCR0_EDANC1_Pos         (4UL)                     /*!< EDANC1 (Bit 4)                                        */
#define ADC140_ADEDCR0_EDANC1_Msk         (0x30UL)                  /*!< EDANC1 (Bitfield-Mask: 0x03)                          */
#define ADC140_ADEDCR0_EDANC2_Pos         (8UL)                     /*!< EDANC2 (Bit 8)                                        */
#define ADC140_ADEDCR0_EDANC2_Msk         (0x300UL)                 /*!< EDANC2 (Bitfield-Mask: 0x03)                          */
#define ADC140_ADEDCR0_EDANC3_Pos         (12UL)                    /*!< EDANC3 (Bit 12)                                       */
#define ADC140_ADEDCR0_EDANC3_Msk         (0x3000UL)                /*!< EDANC3 (Bitfield-Mask: 0x03)                          */
/* ========================================================  ADEDCR1  ======================================================== */
#define ADC140_ADEDCR1_EDANC4_Pos         (0UL)                     /*!< EDANC4 (Bit 0)                                        */
#define ADC140_ADEDCR1_EDANC4_Msk         (0x3UL)                   /*!< EDANC4 (Bitfield-Mask: 0x03)                          */
#define ADC140_ADEDCR1_EDANC5_Pos         (4UL)                     /*!< EDANC5 (Bit 4)                                        */
#define ADC140_ADEDCR1_EDANC5_Msk         (0x30UL)                  /*!< EDANC5 (Bitfield-Mask: 0x03)                          */
#define ADC140_ADEDCR1_EDANC6_Pos         (8UL)                     /*!< EDANC6 (Bit 8)                                        */
#define ADC140_ADEDCR1_EDANC6_Msk         (0x300UL)                 /*!< EDANC6 (Bitfield-Mask: 0x03)                          */
#define ADC140_ADEDCR1_EDANC7_Pos         (12UL)                    /*!< EDANC7 (Bit 12)                                       */
#define ADC140_ADEDCR1_EDANC7_Msk         (0x3000UL)                /*!< EDANC7 (Bitfield-Mask: 0x03)                          */
/* ========================================================  ADEDCR4  ======================================================== */
#define ADC140_ADEDCR4_EDANC16_Pos        (0UL)                     /*!< EDANC16 (Bit 0)                                       */
#define ADC140_ADEDCR4_EDANC16_Msk        (0x3UL)                   /*!< EDANC16 (Bitfield-Mask: 0x03)                         */
#define ADC140_ADEDCR4_EDANC17_Pos        (4UL)                     /*!< EDANC17 (Bit 4)                                       */
#define ADC140_ADEDCR4_EDANC17_Msk        (0x30UL)                  /*!< EDANC17 (Bitfield-Mask: 0x03)                         */
/* ========================================================  ADEDCR5  ======================================================== */
#define ADC140_ADEDCR5_EDANC20_Pos        (0UL)                     /*!< EDANC20 (Bit 0)                                       */
#define ADC140_ADEDCR5_EDANC20_Msk        (0x3UL)                   /*!< EDANC20 (Bitfield-Mask: 0x03)                         */
#define ADC140_ADEDCR5_EDANC21_Pos        (4UL)                     /*!< EDANC21 (Bit 4)                                       */
#define ADC140_ADEDCR5_EDANC21_Msk        (0x30UL)                  /*!< EDANC21 (Bitfield-Mask: 0x03)                         */
/* ========================================================  ADEDCR7  ======================================================== */
#define ADC140_ADEDCR7_EDANC31_Pos        (12UL)                    /*!< EDANC31 (Bit 12)                                      */
#define ADC140_ADEDCR7_EDANC31_Msk        (0x3000UL)                /*!< EDANC31 (Bitfield-Mask: 0x03)                         */
/* =======================================================  ADEDEXCR  ======================================================== */
#define ADC140_ADEDEXCR_EDDIAGC_Pos       (0UL)                     /*!< EDDIAGC (Bit 0)                                       */
#define ADC140_ADEDEXCR_EDDIAGC_Msk       (0x3UL)                   /*!< EDDIAGC (Bitfield-Mask: 0x03)                         */
#define ADC140_ADEDEXCR_EDTSC_Pos         (4UL)                     /*!< EDTSC (Bit 4)                                         */
#define ADC140_ADEDEXCR_EDTSC_Msk         (0x30UL)                  /*!< EDTSC (Bitfield-Mask: 0x03)                           */
/* =======================================================  ADEDDMY0  ======================================================== */
#define ADC140_ADEDDMY0_EDDMY0_Pos        (0UL)                     /*!< EDDMY0 (Bit 0)                                        */
#define ADC140_ADEDDMY0_EDDMY0_Msk        (0x3fffUL)                /*!< EDDMY0 (Bitfield-Mask: 0x3fff)                        */
/* =======================================================  ADEDDMY1  ======================================================== */
#define ADC140_ADEDDMY1_EDDMY1_Pos        (0UL)                     /*!< EDDMY1 (Bit 0)                                        */
#define ADC140_ADEDDMY1_EDDMY1_Msk        (0x3fffUL)                /*!< EDDMY1 (Bitfield-Mask: 0x3fff)                        */
/* ========================================================  ADSCS0  ========================================================= */
#define ADC140_ADSCS0_SCS00_Pos           (0UL)                     /*!< SCS00 (Bit 0)                                         */
#define ADC140_ADSCS0_SCS00_Msk           (0x1fUL)                  /*!< SCS00 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS1  ========================================================= */
#define ADC140_ADSCS1_SCS01_Pos           (0UL)                     /*!< SCS01 (Bit 0)                                         */
#define ADC140_ADSCS1_SCS01_Msk           (0x1fUL)                  /*!< SCS01 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS2  ========================================================= */
#define ADC140_ADSCS2_SCS02_Pos           (0UL)                     /*!< SCS02 (Bit 0)                                         */
#define ADC140_ADSCS2_SCS02_Msk           (0x1fUL)                  /*!< SCS02 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS3  ========================================================= */
#define ADC140_ADSCS3_SCS03_Pos           (0UL)                     /*!< SCS03 (Bit 0)                                         */
#define ADC140_ADSCS3_SCS03_Msk           (0x1fUL)                  /*!< SCS03 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS4  ========================================================= */
#define ADC140_ADSCS4_SCS04_Pos           (0UL)                     /*!< SCS04 (Bit 0)                                         */
#define ADC140_ADSCS4_SCS04_Msk           (0x1fUL)                  /*!< SCS04 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS5  ========================================================= */
#define ADC140_ADSCS5_SCS05_Pos           (0UL)                     /*!< SCS05 (Bit 0)                                         */
#define ADC140_ADSCS5_SCS05_Msk           (0x1fUL)                  /*!< SCS05 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS6  ========================================================= */
#define ADC140_ADSCS6_SCS06_Pos           (0UL)                     /*!< SCS06 (Bit 0)                                         */
#define ADC140_ADSCS6_SCS06_Msk           (0x1fUL)                  /*!< SCS06 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS7  ========================================================= */
#define ADC140_ADSCS7_SCS07_Pos           (0UL)                     /*!< SCS07 (Bit 0)                                         */
#define ADC140_ADSCS7_SCS07_Msk           (0x1fUL)                  /*!< SCS07 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS16  ======================================================== */
#define ADC140_ADSCS16_SCS16_Pos          (0UL)                     /*!< SCS16 (Bit 0)                                         */
#define ADC140_ADSCS16_SCS16_Msk          (0x1fUL)                  /*!< SCS16 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS17  ======================================================== */
#define ADC140_ADSCS17_SCS17_Pos          (0UL)                     /*!< SCS17 (Bit 0)                                         */
#define ADC140_ADSCS17_SCS17_Msk          (0x1fUL)                  /*!< SCS17 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS20  ======================================================== */
#define ADC140_ADSCS20_SCS20_Pos          (0UL)                     /*!< SCS20 (Bit 0)                                         */
#define ADC140_ADSCS20_SCS20_Msk          (0x1fUL)                  /*!< SCS20 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS21  ======================================================== */
#define ADC140_ADSCS21_SCS21_Pos          (0UL)                     /*!< SCS21 (Bit 0)                                         */
#define ADC140_ADSCS21_SCS21_Msk          (0x1fUL)                  /*!< SCS21 (Bitfield-Mask: 0x1f)                           */
/* ========================================================  ADSCS31  ======================================================== */
#define ADC140_ADSCS31_SCS31_Pos          (0UL)                     /*!< SCS31 (Bit 0)                                         */
#define ADC140_ADSCS31_SCS31_Msk          (0x1fUL)                  /*!< SCS31 (Bitfield-Mask: 0x1f)                           */


/* =========================================================================================================================== */
/* ================                                            TSN                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  TSCR  ========================================================== */
#define TSN_TSCR_TSEN_Pos                 (7UL)                     /*!< TSEN (Bit 7)                                          */
#define TSN_TSCR_TSEN_Msk                 (0x80UL)                  /*!< TSEN (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           SCI0                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  SMR  ========================================================== */
#define SCI0_SMR_CKS_Pos                  (0UL)                     /*!< CKS (Bit 0)                                           */
#define SCI0_SMR_CKS_Msk                  (0x3UL)                   /*!< CKS (Bitfield-Mask: 0x03)                             */
#define SCI0_SMR_MP_Pos                   (2UL)                     /*!< MP (Bit 2)                                            */
#define SCI0_SMR_MP_Msk                   (0x4UL)                   /*!< MP (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_STOP_Pos                 (3UL)                     /*!< STOP (Bit 3)                                          */
#define SCI0_SMR_STOP_Msk                 (0x8UL)                   /*!< STOP (Bitfield-Mask: 0x01)                            */
#define SCI0_SMR_PM_Pos                   (4UL)                     /*!< PM (Bit 4)                                            */
#define SCI0_SMR_PM_Msk                   (0x10UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_PE_Pos                   (5UL)                     /*!< PE (Bit 5)                                            */
#define SCI0_SMR_PE_Msk                   (0x20UL)                  /*!< PE (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_CHR_Pos                  (6UL)                     /*!< CHR (Bit 6)                                           */
#define SCI0_SMR_CHR_Msk                  (0x40UL)                  /*!< CHR (Bitfield-Mask: 0x01)                             */
#define SCI0_SMR_CM_Pos                   (7UL)                     /*!< CM (Bit 7)                                            */
#define SCI0_SMR_CM_Msk                   (0x80UL)                  /*!< CM (Bitfield-Mask: 0x01)                              */
/* =======================================================  SMR_SMCI  ======================================================== */
#define SCI0_SMR_SMCI_CKS_Pos             (0UL)                     /*!< CKS (Bit 0)                                           */
#define SCI0_SMR_SMCI_CKS_Msk             (0x3UL)                   /*!< CKS (Bitfield-Mask: 0x03)                             */
#define SCI0_SMR_SMCI_BCP_Pos             (2UL)                     /*!< BCP (Bit 2)                                           */
#define SCI0_SMR_SMCI_BCP_Msk             (0xcUL)                   /*!< BCP (Bitfield-Mask: 0x03)                             */
#define SCI0_SMR_SMCI_PM_Pos              (4UL)                     /*!< PM (Bit 4)                                            */
#define SCI0_SMR_SMCI_PM_Msk              (0x10UL)                  /*!< PM (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_SMCI_PE_Pos              (5UL)                     /*!< PE (Bit 5)                                            */
#define SCI0_SMR_SMCI_PE_Msk              (0x20UL)                  /*!< PE (Bitfield-Mask: 0x01)                              */
#define SCI0_SMR_SMCI_BLK_Pos             (6UL)                     /*!< BLK (Bit 6)                                           */
#define SCI0_SMR_SMCI_BLK_Msk             (0x40UL)                  /*!< BLK (Bitfield-Mask: 0x01)                             */
#define SCI0_SMR_SMCI_GM_Pos              (7UL)                     /*!< GM (Bit 7)                                            */
#define SCI0_SMR_SMCI_GM_Msk              (0x80UL)                  /*!< GM (Bitfield-Mask: 0x01)                              */
/* ==========================================================  BRR  ========================================================== */
/* ==========================================================  SCR  ========================================================== */
#define SCI0_SCR_CKE_Pos                  (0UL)                     /*!< CKE (Bit 0)                                           */
#define SCI0_SCR_CKE_Msk                  (0x3UL)                   /*!< CKE (Bitfield-Mask: 0x03)                             */
#define SCI0_SCR_TEIE_Pos                 (2UL)                     /*!< TEIE (Bit 2)                                          */
#define SCI0_SCR_TEIE_Msk                 (0x4UL)                   /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define SCI0_SCR_MPIE_Pos                 (3UL)                     /*!< MPIE (Bit 3)                                          */
#define SCI0_SCR_MPIE_Msk                 (0x8UL)                   /*!< MPIE (Bitfield-Mask: 0x01)                            */
#define SCI0_SCR_RE_Pos                   (4UL)                     /*!< RE (Bit 4)                                            */
#define SCI0_SCR_RE_Msk                   (0x10UL)                  /*!< RE (Bitfield-Mask: 0x01)                              */
#define SCI0_SCR_TE_Pos                   (5UL)                     /*!< TE (Bit 5)                                            */
#define SCI0_SCR_TE_Msk                   (0x20UL)                  /*!< TE (Bitfield-Mask: 0x01)                              */
#define SCI0_SCR_RIE_Pos                  (6UL)                     /*!< RIE (Bit 6)                                           */
#define SCI0_SCR_RIE_Msk                  (0x40UL)                  /*!< RIE (Bitfield-Mask: 0x01)                             */
#define SCI0_SCR_TIE_Pos                  (7UL)                     /*!< TIE (Bit 7)                                           */
#define SCI0_SCR_TIE_Msk                  (0x80UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
/* =======================================================  SCR_SMCI  ======================================================== */
#define SCI0_SCR_SMCI_CKE_Pos             (0UL)                     /*!< CKE (Bit 0)                                           */
#define SCI0_SCR_SMCI_CKE_Msk             (0x3UL)                   /*!< CKE (Bitfield-Mask: 0x03)                             */
#define SCI0_SCR_SMCI_TEIE_Pos            (2UL)                     /*!< TEIE (Bit 2)                                          */
#define SCI0_SCR_SMCI_TEIE_Msk            (0x4UL)                   /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define SCI0_SCR_SMCI_MPIE_Pos            (3UL)                     /*!< MPIE (Bit 3)                                          */
#define SCI0_SCR_SMCI_MPIE_Msk            (0x8UL)                   /*!< MPIE (Bitfield-Mask: 0x01)                            */
#define SCI0_SCR_SMCI_RE_Pos              (4UL)                     /*!< RE (Bit 4)                                            */
#define SCI0_SCR_SMCI_RE_Msk              (0x10UL)                  /*!< RE (Bitfield-Mask: 0x01)                              */
#define SCI0_SCR_SMCI_TE_Pos              (5UL)                     /*!< TE (Bit 5)                                            */
#define SCI0_SCR_SMCI_TE_Msk              (0x20UL)                  /*!< TE (Bitfield-Mask: 0x01)                              */
#define SCI0_SCR_SMCI_RIE_Pos             (6UL)                     /*!< RIE (Bit 6)                                           */
#define SCI0_SCR_SMCI_RIE_Msk             (0x40UL)                  /*!< RIE (Bitfield-Mask: 0x01)                             */
#define SCI0_SCR_SMCI_TIE_Pos             (7UL)                     /*!< TIE (Bit 7)                                           */
#define SCI0_SCR_SMCI_TIE_Msk             (0x80UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
/* ==========================================================  TDR  ========================================================== */
/* ==========================================================  SSR  ========================================================== */
#define SCI0_SSR_MPBT_Pos                 (0UL)                     /*!< MPBT (Bit 0)                                          */
#define SCI0_SSR_MPBT_Msk                 (0x1UL)                   /*!< MPBT (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_MPB_Pos                  (1UL)                     /*!< MPB (Bit 1)                                           */
#define SCI0_SSR_MPB_Msk                  (0x2UL)                   /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_TEND_Pos                 (2UL)                     /*!< TEND (Bit 2)                                          */
#define SCI0_SSR_TEND_Msk                 (0x4UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_PER_Pos                  (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI0_SSR_PER_Msk                  (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_FER_Pos                  (4UL)                     /*!< FER (Bit 4)                                           */
#define SCI0_SSR_FER_Msk                  (0x10UL)                  /*!< FER (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_ORER_Pos                 (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI0_SSR_ORER_Msk                 (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_RDRF_Pos                 (6UL)                     /*!< RDRF (Bit 6)                                          */
#define SCI0_SSR_RDRF_Msk                 (0x40UL)                  /*!< RDRF (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_TDRE_Pos                 (7UL)                     /*!< TDRE (Bit 7)                                          */
#define SCI0_SSR_TDRE_Msk                 (0x80UL)                  /*!< TDRE (Bitfield-Mask: 0x01)                            */
/* =======================================================  SSR_FIFO  ======================================================== */
#define SCI0_SSR_FIFO_DR_Pos              (0UL)                     /*!< DR (Bit 0)                                            */
#define SCI0_SSR_FIFO_DR_Msk              (0x1UL)                   /*!< DR (Bitfield-Mask: 0x01)                              */
#define SCI0_SSR_FIFO_TEND_Pos            (2UL)                     /*!< TEND (Bit 2)                                          */
#define SCI0_SSR_FIFO_TEND_Msk            (0x4UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_FIFO_PER_Pos             (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI0_SSR_FIFO_PER_Msk             (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_FIFO_FER_Pos             (4UL)                     /*!< FER (Bit 4)                                           */
#define SCI0_SSR_FIFO_FER_Msk             (0x10UL)                  /*!< FER (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_FIFO_ORER_Pos            (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI0_SSR_FIFO_ORER_Msk            (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_FIFO_RDF_Pos             (6UL)                     /*!< RDF (Bit 6)                                           */
#define SCI0_SSR_FIFO_RDF_Msk             (0x40UL)                  /*!< RDF (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_FIFO_TDFE_Pos            (7UL)                     /*!< TDFE (Bit 7)                                          */
#define SCI0_SSR_FIFO_TDFE_Msk            (0x80UL)                  /*!< TDFE (Bitfield-Mask: 0x01)                            */
/* =======================================================  SSR_SMCI  ======================================================== */
#define SCI0_SSR_SMCI_MPBT_Pos            (0UL)                     /*!< MPBT (Bit 0)                                          */
#define SCI0_SSR_SMCI_MPBT_Msk            (0x1UL)                   /*!< MPBT (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_SMCI_MPB_Pos             (1UL)                     /*!< MPB (Bit 1)                                           */
#define SCI0_SSR_SMCI_MPB_Msk             (0x2UL)                   /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_SMCI_TEND_Pos            (2UL)                     /*!< TEND (Bit 2)                                          */
#define SCI0_SSR_SMCI_TEND_Msk            (0x4UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_SMCI_PER_Pos             (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI0_SSR_SMCI_PER_Msk             (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_SMCI_ERS_Pos             (4UL)                     /*!< ERS (Bit 4)                                           */
#define SCI0_SSR_SMCI_ERS_Msk             (0x10UL)                  /*!< ERS (Bitfield-Mask: 0x01)                             */
#define SCI0_SSR_SMCI_ORER_Pos            (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI0_SSR_SMCI_ORER_Msk            (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_SMCI_RDRF_Pos            (6UL)                     /*!< RDRF (Bit 6)                                          */
#define SCI0_SSR_SMCI_RDRF_Msk            (0x40UL)                  /*!< RDRF (Bitfield-Mask: 0x01)                            */
#define SCI0_SSR_SMCI_TDRE_Pos            (7UL)                     /*!< TDRE (Bit 7)                                          */
#define SCI0_SSR_SMCI_TDRE_Msk            (0x80UL)                  /*!< TDRE (Bitfield-Mask: 0x01)                            */
/* ==========================================================  RDR  ========================================================== */
/* =========================================================  SCMR  ========================================================== */
#define SCI0_SCMR_SMIF_Pos                (0UL)                     /*!< SMIF (Bit 0)                                          */
#define SCI0_SCMR_SMIF_Msk                (0x1UL)                   /*!< SMIF (Bitfield-Mask: 0x01)                            */
#define SCI0_SCMR_SINV_Pos                (2UL)                     /*!< SINV (Bit 2)                                          */
#define SCI0_SCMR_SINV_Msk                (0x4UL)                   /*!< SINV (Bitfield-Mask: 0x01)                            */
#define SCI0_SCMR_SDIR_Pos                (3UL)                     /*!< SDIR (Bit 3)                                          */
#define SCI0_SCMR_SDIR_Msk                (0x8UL)                   /*!< SDIR (Bitfield-Mask: 0x01)                            */
#define SCI0_SCMR_CHR1_Pos                (4UL)                     /*!< CHR1 (Bit 4)                                          */
#define SCI0_SCMR_CHR1_Msk                (0x10UL)                  /*!< CHR1 (Bitfield-Mask: 0x01)                            */
#define SCI0_SCMR_BCP2_Pos                (7UL)                     /*!< BCP2 (Bit 7)                                          */
#define SCI0_SCMR_BCP2_Msk                (0x80UL)                  /*!< BCP2 (Bitfield-Mask: 0x01)                            */
/* =========================================================  SEMR  ========================================================== */
#define SCI0_SEMR_BRME_Pos                (2UL)                     /*!< BRME (Bit 2)                                          */
#define SCI0_SEMR_BRME_Msk                (0x4UL)                   /*!< BRME (Bitfield-Mask: 0x01)                            */
#define SCI0_SEMR_ABCSE_Pos               (3UL)                     /*!< ABCSE (Bit 3)                                         */
#define SCI0_SEMR_ABCSE_Msk               (0x8UL)                   /*!< ABCSE (Bitfield-Mask: 0x01)                           */
#define SCI0_SEMR_ABCS_Pos                (4UL)                     /*!< ABCS (Bit 4)                                          */
#define SCI0_SEMR_ABCS_Msk                (0x10UL)                  /*!< ABCS (Bitfield-Mask: 0x01)                            */
#define SCI0_SEMR_NFEN_Pos                (5UL)                     /*!< NFEN (Bit 5)                                          */
#define SCI0_SEMR_NFEN_Msk                (0x20UL)                  /*!< NFEN (Bitfield-Mask: 0x01)                            */
#define SCI0_SEMR_BGDM_Pos                (6UL)                     /*!< BGDM (Bit 6)                                          */
#define SCI0_SEMR_BGDM_Msk                (0x40UL)                  /*!< BGDM (Bitfield-Mask: 0x01)                            */
#define SCI0_SEMR_RXDESEL_Pos             (7UL)                     /*!< RXDESEL (Bit 7)                                       */
#define SCI0_SEMR_RXDESEL_Msk             (0x80UL)                  /*!< RXDESEL (Bitfield-Mask: 0x01)                         */
/* =========================================================  SNFR  ========================================================== */
#define SCI0_SNFR_NFCS_Pos                (0UL)                     /*!< NFCS (Bit 0)                                          */
#define SCI0_SNFR_NFCS_Msk                (0x7UL)                   /*!< NFCS (Bitfield-Mask: 0x07)                            */
/* =========================================================  SIMR1  ========================================================= */
#define SCI0_SIMR1_IICM_Pos               (0UL)                     /*!< IICM (Bit 0)                                          */
#define SCI0_SIMR1_IICM_Msk               (0x1UL)                   /*!< IICM (Bitfield-Mask: 0x01)                            */
#define SCI0_SIMR1_IICDL_Pos              (3UL)                     /*!< IICDL (Bit 3)                                         */
#define SCI0_SIMR1_IICDL_Msk              (0xf8UL)                  /*!< IICDL (Bitfield-Mask: 0x1f)                           */
/* =========================================================  SIMR2  ========================================================= */
#define SCI0_SIMR2_IICINTM_Pos            (0UL)                     /*!< IICINTM (Bit 0)                                       */
#define SCI0_SIMR2_IICINTM_Msk            (0x1UL)                   /*!< IICINTM (Bitfield-Mask: 0x01)                         */
#define SCI0_SIMR2_IICCSC_Pos             (1UL)                     /*!< IICCSC (Bit 1)                                        */
#define SCI0_SIMR2_IICCSC_Msk             (0x2UL)                   /*!< IICCSC (Bitfield-Mask: 0x01)                          */
#define SCI0_SIMR2_IICACKT_Pos            (5UL)                     /*!< IICACKT (Bit 5)                                       */
#define SCI0_SIMR2_IICACKT_Msk            (0x20UL)                  /*!< IICACKT (Bitfield-Mask: 0x01)                         */
/* =========================================================  SIMR3  ========================================================= */
#define SCI0_SIMR3_IICSTAREQ_Pos          (0UL)                     /*!< IICSTAREQ (Bit 0)                                     */
#define SCI0_SIMR3_IICSTAREQ_Msk          (0x1UL)                   /*!< IICSTAREQ (Bitfield-Mask: 0x01)                       */
#define SCI0_SIMR3_IICRSTAREQ_Pos         (1UL)                     /*!< IICRSTAREQ (Bit 1)                                    */
#define SCI0_SIMR3_IICRSTAREQ_Msk         (0x2UL)                   /*!< IICRSTAREQ (Bitfield-Mask: 0x01)                      */
#define SCI0_SIMR3_IICSTPREQ_Pos          (2UL)                     /*!< IICSTPREQ (Bit 2)                                     */
#define SCI0_SIMR3_IICSTPREQ_Msk          (0x4UL)                   /*!< IICSTPREQ (Bitfield-Mask: 0x01)                       */
#define SCI0_SIMR3_IICSTIF_Pos            (3UL)                     /*!< IICSTIF (Bit 3)                                       */
#define SCI0_SIMR3_IICSTIF_Msk            (0x8UL)                   /*!< IICSTIF (Bitfield-Mask: 0x01)                         */
#define SCI0_SIMR3_IICSDAS_Pos            (4UL)                     /*!< IICSDAS (Bit 4)                                       */
#define SCI0_SIMR3_IICSDAS_Msk            (0x30UL)                  /*!< IICSDAS (Bitfield-Mask: 0x03)                         */
#define SCI0_SIMR3_IICSCLS_Pos            (6UL)                     /*!< IICSCLS (Bit 6)                                       */
#define SCI0_SIMR3_IICSCLS_Msk            (0xc0UL)                  /*!< IICSCLS (Bitfield-Mask: 0x03)                         */
/* =========================================================  SISR  ========================================================== */
#define SCI0_SISR_IICACKR_Pos             (0UL)                     /*!< IICACKR (Bit 0)                                       */
#define SCI0_SISR_IICACKR_Msk             (0x1UL)                   /*!< IICACKR (Bitfield-Mask: 0x01)                         */
/* =========================================================  SPMR  ========================================================== */
#define SCI0_SPMR_SSE_Pos                 (0UL)                     /*!< SSE (Bit 0)                                           */
#define SCI0_SPMR_SSE_Msk                 (0x1UL)                   /*!< SSE (Bitfield-Mask: 0x01)                             */
#define SCI0_SPMR_CTSE_Pos                (1UL)                     /*!< CTSE (Bit 1)                                          */
#define SCI0_SPMR_CTSE_Msk                (0x2UL)                   /*!< CTSE (Bitfield-Mask: 0x01)                            */
#define SCI0_SPMR_MSS_Pos                 (2UL)                     /*!< MSS (Bit 2)                                           */
#define SCI0_SPMR_MSS_Msk                 (0x4UL)                   /*!< MSS (Bitfield-Mask: 0x01)                             */
#define SCI0_SPMR_MFF_Pos                 (4UL)                     /*!< MFF (Bit 4)                                           */
#define SCI0_SPMR_MFF_Msk                 (0x10UL)                  /*!< MFF (Bitfield-Mask: 0x01)                             */
#define SCI0_SPMR_CKPOL_Pos               (6UL)                     /*!< CKPOL (Bit 6)                                         */
#define SCI0_SPMR_CKPOL_Msk               (0x40UL)                  /*!< CKPOL (Bitfield-Mask: 0x01)                           */
#define SCI0_SPMR_CKPH_Pos                (7UL)                     /*!< CKPH (Bit 7)                                          */
#define SCI0_SPMR_CKPH_Msk                (0x80UL)                  /*!< CKPH (Bitfield-Mask: 0x01)                            */
/* ========================================================  FTDRHL  ========================================================= */
#define SCI0_FTDRHL_TDAT_Pos              (0UL)                     /*!< TDAT (Bit 0)                                          */
#define SCI0_FTDRHL_TDAT_Msk              (0x1ffUL)                 /*!< TDAT (Bitfield-Mask: 0x1ff)                           */
#define SCI0_FTDRHL_MPBT_Pos              (9UL)                     /*!< MPBT (Bit 9)                                          */
#define SCI0_FTDRHL_MPBT_Msk              (0x200UL)                 /*!< MPBT (Bitfield-Mask: 0x01)                            */
/* =========================================================  TDRHL  ========================================================= */
#define SCI0_TDRHL_TDAT_Pos               (0UL)                     /*!< TDAT (Bit 0)                                          */
#define SCI0_TDRHL_TDAT_Msk               (0x1ffUL)                 /*!< TDAT (Bitfield-Mask: 0x1ff)                           */
/* =========================================================  FTDRH  ========================================================= */
#define SCI0_FTDRH_MPBT_Pos               (1UL)                     /*!< MPBT (Bit 1)                                          */
#define SCI0_FTDRH_MPBT_Msk               (0x2UL)                   /*!< MPBT (Bitfield-Mask: 0x01)                            */
/* =========================================================  FTDRL  ========================================================= */
#define SCI0_FTDRL_TDAT_Pos               (0UL)                     /*!< TDAT (Bit 0)                                          */
#define SCI0_FTDRL_TDAT_Msk               (0xffUL)                  /*!< TDAT (Bitfield-Mask: 0xff)                            */
/* ========================================================  FRDRHL  ========================================================= */
#define SCI0_FRDRHL_RDAT_Pos              (0UL)                     /*!< RDAT (Bit 0)                                          */
#define SCI0_FRDRHL_RDAT_Msk              (0x1ffUL)                 /*!< RDAT (Bitfield-Mask: 0x1ff)                           */
#define SCI0_FRDRHL_MPB_Pos               (9UL)                     /*!< MPB (Bit 9)                                           */
#define SCI0_FRDRHL_MPB_Msk               (0x200UL)                 /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRHL_DR_Pos                (10UL)                    /*!< DR (Bit 10)                                           */
#define SCI0_FRDRHL_DR_Msk                (0x400UL)                 /*!< DR (Bitfield-Mask: 0x01)                              */
#define SCI0_FRDRHL_PER_Pos               (11UL)                    /*!< PER (Bit 11)                                          */
#define SCI0_FRDRHL_PER_Msk               (0x800UL)                 /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRHL_FER_Pos               (12UL)                    /*!< FER (Bit 12)                                          */
#define SCI0_FRDRHL_FER_Msk               (0x1000UL)                /*!< FER (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRHL_ORER_Pos              (13UL)                    /*!< ORER (Bit 13)                                         */
#define SCI0_FRDRHL_ORER_Msk              (0x2000UL)                /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI0_FRDRHL_RDF_Pos               (14UL)                    /*!< RDF (Bit 14)                                          */
#define SCI0_FRDRHL_RDF_Msk               (0x4000UL)                /*!< RDF (Bitfield-Mask: 0x01)                             */
/* =========================================================  RDRHL  ========================================================= */
#define SCI0_RDRHL_RDAT_Pos               (0UL)                     /*!< RDAT (Bit 0)                                          */
#define SCI0_RDRHL_RDAT_Msk               (0x1ffUL)                 /*!< RDAT (Bitfield-Mask: 0x1ff)                           */
/* =========================================================  FRDRH  ========================================================= */
#define SCI0_FRDRH_MPB_Pos                (1UL)                     /*!< MPB (Bit 1)                                           */
#define SCI0_FRDRH_MPB_Msk                (0x2UL)                   /*!< MPB (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRH_DR_Pos                 (2UL)                     /*!< DR (Bit 2)                                            */
#define SCI0_FRDRH_DR_Msk                 (0x4UL)                   /*!< DR (Bitfield-Mask: 0x01)                              */
#define SCI0_FRDRH_PER_Pos                (3UL)                     /*!< PER (Bit 3)                                           */
#define SCI0_FRDRH_PER_Msk                (0x8UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRH_FER_Pos                (4UL)                     /*!< FER (Bit 4)                                           */
#define SCI0_FRDRH_FER_Msk                (0x10UL)                  /*!< FER (Bitfield-Mask: 0x01)                             */
#define SCI0_FRDRH_ORER_Pos               (5UL)                     /*!< ORER (Bit 5)                                          */
#define SCI0_FRDRH_ORER_Msk               (0x20UL)                  /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI0_FRDRH_RDF_Pos                (6UL)                     /*!< RDF (Bit 6)                                           */
#define SCI0_FRDRH_RDF_Msk                (0x40UL)                  /*!< RDF (Bitfield-Mask: 0x01)                             */
/* =========================================================  FRDRL  ========================================================= */
#define SCI0_FRDRL_RDAT_Pos               (0UL)                     /*!< RDAT (Bit 0)                                          */
#define SCI0_FRDRL_RDAT_Msk               (0xffUL)                  /*!< RDAT (Bitfield-Mask: 0xff)                            */
/* =========================================================  MDDR  ========================================================== */
/* =========================================================  DCCR  ========================================================== */
#define SCI0_DCCR_DCMF_Pos                (0UL)                     /*!< DCMF (Bit 0)                                          */
#define SCI0_DCCR_DCMF_Msk                (0x1UL)                   /*!< DCMF (Bitfield-Mask: 0x01)                            */
#define SCI0_DCCR_DPER_Pos                (3UL)                     /*!< DPER (Bit 3)                                          */
#define SCI0_DCCR_DPER_Msk                (0x8UL)                   /*!< DPER (Bitfield-Mask: 0x01)                            */
#define SCI0_DCCR_DFER_Pos                (4UL)                     /*!< DFER (Bit 4)                                          */
#define SCI0_DCCR_DFER_Msk                (0x10UL)                  /*!< DFER (Bitfield-Mask: 0x01)                            */
#define SCI0_DCCR_IDSEL_Pos               (6UL)                     /*!< IDSEL (Bit 6)                                         */
#define SCI0_DCCR_IDSEL_Msk               (0x40UL)                  /*!< IDSEL (Bitfield-Mask: 0x01)                           */
#define SCI0_DCCR_DCME_Pos                (7UL)                     /*!< DCME (Bit 7)                                          */
#define SCI0_DCCR_DCME_Msk                (0x80UL)                  /*!< DCME (Bitfield-Mask: 0x01)                            */
/* ==========================================================  FCR  ========================================================== */
#define SCI0_FCR_FM_Pos                   (0UL)                     /*!< FM (Bit 0)                                            */
#define SCI0_FCR_FM_Msk                   (0x1UL)                   /*!< FM (Bitfield-Mask: 0x01)                              */
#define SCI0_FCR_RFRST_Pos                (1UL)                     /*!< RFRST (Bit 1)                                         */
#define SCI0_FCR_RFRST_Msk                (0x2UL)                   /*!< RFRST (Bitfield-Mask: 0x01)                           */
#define SCI0_FCR_TFRST_Pos                (2UL)                     /*!< TFRST (Bit 2)                                         */
#define SCI0_FCR_TFRST_Msk                (0x4UL)                   /*!< TFRST (Bitfield-Mask: 0x01)                           */
#define SCI0_FCR_DRES_Pos                 (3UL)                     /*!< DRES (Bit 3)                                          */
#define SCI0_FCR_DRES_Msk                 (0x8UL)                   /*!< DRES (Bitfield-Mask: 0x01)                            */
#define SCI0_FCR_TTRG_Pos                 (4UL)                     /*!< TTRG (Bit 4)                                          */
#define SCI0_FCR_TTRG_Msk                 (0xf0UL)                  /*!< TTRG (Bitfield-Mask: 0x0f)                            */
#define SCI0_FCR_RTRG_Pos                 (8UL)                     /*!< RTRG (Bit 8)                                          */
#define SCI0_FCR_RTRG_Msk                 (0xf00UL)                 /*!< RTRG (Bitfield-Mask: 0x0f)                            */
#define SCI0_FCR_RSTRG_Pos                (12UL)                    /*!< RSTRG (Bit 12)                                        */
#define SCI0_FCR_RSTRG_Msk                (0xf000UL)                /*!< RSTRG (Bitfield-Mask: 0x0f)                           */
/* ==========================================================  FDR  ========================================================== */
#define SCI0_FDR_R_Pos                    (0UL)                     /*!< R (Bit 0)                                             */
#define SCI0_FDR_R_Msk                    (0x1fUL)                  /*!< R (Bitfield-Mask: 0x1f)                               */
#define SCI0_FDR_T_Pos                    (8UL)                     /*!< T (Bit 8)                                             */
#define SCI0_FDR_T_Msk                    (0x1f00UL)                /*!< T (Bitfield-Mask: 0x1f)                               */
/* ==========================================================  LSR  ========================================================== */
#define SCI0_LSR_ORER_Pos                 (0UL)                     /*!< ORER (Bit 0)                                          */
#define SCI0_LSR_ORER_Msk                 (0x1UL)                   /*!< ORER (Bitfield-Mask: 0x01)                            */
#define SCI0_LSR_FNUM_Pos                 (2UL)                     /*!< FNUM (Bit 2)                                          */
#define SCI0_LSR_FNUM_Msk                 (0x7cUL)                  /*!< FNUM (Bitfield-Mask: 0x1f)                            */
#define SCI0_LSR_PNUM_Pos                 (8UL)                     /*!< PNUM (Bit 8)                                          */
#define SCI0_LSR_PNUM_Msk                 (0x1f00UL)                /*!< PNUM (Bitfield-Mask: 0x1f)                            */
/* ==========================================================  CDR  ========================================================== */
#define SCI0_CDR_CMPD_Pos                 (0UL)                     /*!< CMPD (Bit 0)                                          */
#define SCI0_CDR_CMPD_Msk                 (0x1ffUL)                 /*!< CMPD (Bitfield-Mask: 0x1ff)                           */
/* =========================================================  SPTR  ========================================================== */
#define SCI0_SPTR_RXDMON_Pos              (0UL)                     /*!< RXDMON (Bit 0)                                        */
#define SCI0_SPTR_RXDMON_Msk              (0x1UL)                   /*!< RXDMON (Bitfield-Mask: 0x01)                          */
#define SCI0_SPTR_SPB2DT_Pos              (1UL)                     /*!< SPB2DT (Bit 1)                                        */
#define SCI0_SPTR_SPB2DT_Msk              (0x2UL)                   /*!< SPB2DT (Bitfield-Mask: 0x01)                          */
#define SCI0_SPTR_SPB2IO_Pos              (2UL)                     /*!< SPB2IO (Bit 2)                                        */
#define SCI0_SPTR_SPB2IO_Msk              (0x4UL)                   /*!< SPB2IO (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           MLCD                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  MLCDCR  ========================================================= */
#define MLCD_MLCDCR_TE_Pos                (0UL)                     /*!< TE (Bit 0)                                            */
#define MLCD_MLCDCR_TE_Msk                (0x1UL)                   /*!< TE (Bitfield-Mask: 0x01)                              */
#define MLCD_MLCDCR_TEIE_Pos              (5UL)                     /*!< TEIE (Bit 5)                                          */
#define MLCD_MLCDCR_TEIE_Msk              (0x20UL)                  /*!< TEIE (Bitfield-Mask: 0x01)                            */
#define MLCD_MLCDCR_TEMIE_Pos             (6UL)                     /*!< TEMIE (Bit 6)                                         */
#define MLCD_MLCDCR_TEMIE_Msk             (0x40UL)                  /*!< TEMIE (Bitfield-Mask: 0x01)                           */
#define MLCD_MLCDCR_XRST_Pos              (8UL)                     /*!< XRST (Bit 8)                                          */
#define MLCD_MLCDCR_XRST_Msk              (0x100UL)                 /*!< XRST (Bitfield-Mask: 0x01)                            */
#define MLCD_MLCDCR_BITSW_Pos             (12UL)                    /*!< BITSW (Bit 12)                                        */
#define MLCD_MLCDCR_BITSW_Msk             (0x1000UL)                /*!< BITSW (Bitfield-Mask: 0x01)                           */
#define MLCD_MLCDCR_SCKCR_Pos             (16UL)                    /*!< SCKCR (Bit 16)                                        */
#define MLCD_MLCDCR_SCKCR_Msk             (0xff0000UL)              /*!< SCKCR (Bitfield-Mask: 0xff)                           */
#define MLCD_MLCDCR_HADDRDEC_Pos          (28UL)                    /*!< HADDRDEC (Bit 28)                                     */
#define MLCD_MLCDCR_HADDRDEC_Msk          (0x10000000UL)            /*!< HADDRDEC (Bitfield-Mask: 0x01)                        */
#define MLCD_MLCDCR_VADDRDEC_Pos          (29UL)                    /*!< VADDRDEC (Bit 29)                                     */
#define MLCD_MLCDCR_VADDRDEC_Msk          (0x20000000UL)            /*!< VADDRDEC (Bitfield-Mask: 0x01)                        */
/* ========================================================  MLCDSR  ========================================================= */
#define MLCD_MLCDSR_TEND_Pos              (0UL)                     /*!< TEND (Bit 0)                                          */
#define MLCD_MLCDSR_TEND_Msk              (0x1UL)                   /*!< TEND (Bitfield-Mask: 0x01)                            */
#define MLCD_MLCDSR_TEF_Pos               (1UL)                     /*!< TEF (Bit 1)                                           */
#define MLCD_MLCDSR_TEF_Msk               (0x2UL)                   /*!< TEF (Bitfield-Mask: 0x01)                             */
/* =======================================================  MLCDADDR  ======================================================== */
#define MLCD_MLCDADDR_HADDR_Pos           (3UL)                     /*!< HADDR (Bit 3)                                         */
#define MLCD_MLCDADDR_HADDR_Msk           (0xf8UL)                  /*!< HADDR (Bitfield-Mask: 0x1f)                           */
#define MLCD_MLCDADDR_VADDR_Pos           (16UL)                    /*!< VADDR (Bit 16)                                        */
#define MLCD_MLCDADDR_VADDR_Msk           (0xff0000UL)              /*!< VADDR (Bitfield-Mask: 0xff)                           */
/* =======================================================  MLCDWRCR  ======================================================== */
#define MLCD_MLCDWRCR_BYTE_Pos            (0UL)                     /*!< BYTE (Bit 0)                                          */
#define MLCD_MLCDWRCR_BYTE_Msk            (0x3fUL)                  /*!< BYTE (Bitfield-Mask: 0x3f)                            */
#define MLCD_MLCDWRCR_LINE_Pos            (16UL)                    /*!< LINE (Bit 16)                                         */
#define MLCD_MLCDWRCR_LINE_Msk            (0x1ff0000UL)             /*!< LINE (Bitfield-Mask: 0x1ff)                           */
/* =======================================================  MLCDSEND  ======================================================== */
#define MLCD_MLCDSEND_EN_Pos              (0UL)                     /*!< EN (Bit 0)                                            */
#define MLCD_MLCDSEND_EN_Msk              (0x1UL)                   /*!< EN (Bitfield-Mask: 0x01)                              */
/* =======================================================  MLCDBKCR  ======================================================== */
#define MLCD_MLCDBKCR_BKEN_Pos            (0UL)                     /*!< BKEN (Bit 0)                                          */
#define MLCD_MLCDBKCR_BKEN_Msk            (0x1UL)                   /*!< BKEN (Bitfield-Mask: 0x01)                            */
#define MLCD_MLCDBKCR_BKSIZE_Pos          (1UL)                     /*!< BKSIZE (Bit 1)                                        */
#define MLCD_MLCDBKCR_BKSIZE_Msk          (0x2UL)                   /*!< BKSIZE (Bitfield-Mask: 0x01)                          */
#define MLCD_MLCDBKCR_BKMODE_Pos          (8UL)                     /*!< BKMODE (Bit 8)                                        */
#define MLCD_MLCDBKCR_BKMODE_Msk          (0x300UL)                 /*!< BKMODE (Bitfield-Mask: 0x03)                          */
#define MLCD_MLCDBKCR_BKHNUM_Pos          (16UL)                    /*!< BKHNUM (Bit 16)                                       */
#define MLCD_MLCDBKCR_BKHNUM_Msk          (0x3f0000UL)              /*!< BKHNUM (Bitfield-Mask: 0x3f)                          */
#define MLCD_MLCDBKCR_BKVNUM_Pos          (24UL)                    /*!< BKVNUM (Bit 24)                                       */
#define MLCD_MLCDBKCR_BKVNUM_Msk          (0x3f000000UL)            /*!< BKVNUM (Bitfield-Mask: 0x3f)                          */
/* ======================================================  MLCDVCOMCTL  ====================================================== */
#define MLCD_MLCDVCOMCTL_VCOME_Pos        (0UL)                     /*!< VCOME (Bit 0)                                         */
#define MLCD_MLCDVCOMCTL_VCOME_Msk        (0x1UL)                   /*!< VCOME (Bitfield-Mask: 0x01)                           */
#define MLCD_MLCDVCOMCTL_VCOMW_Pos        (1UL)                     /*!< VCOMW (Bit 1)                                         */
#define MLCD_MLCDVCOMCTL_VCOMW_Msk        (0x6UL)                   /*!< VCOMW (Bitfield-Mask: 0x03)                           */
#define MLCD_MLCDVCOMCTL_HWMSKEN_Pos      (9UL)                     /*!< HWMSKEN (Bit 9)                                       */
#define MLCD_MLCDVCOMCTL_HWMSKEN_Msk      (0x200UL)                 /*!< HWMSKEN (Bitfield-Mask: 0x01)                         */
#define MLCD_MLCDVCOMCTL_HWMSKF_Pos       (10UL)                    /*!< HWMSKF (Bit 10)                                       */
#define MLCD_MLCDVCOMCTL_HWMSKF_Msk       (0x400UL)                 /*!< HWMSKF (Bitfield-Mask: 0x01)                          */
#define MLCD_MLCDVCOMCTL_FMASK_Pos        (16UL)                    /*!< FMASK (Bit 16)                                        */
#define MLCD_MLCDVCOMCTL_FMASK_Msk        (0xff0000UL)              /*!< FMASK (Bitfield-Mask: 0xff)                           */
#define MLCD_MLCDVCOMCTL_BMASK_Pos        (24UL)                    /*!< BMASK (Bit 24)                                        */
#define MLCD_MLCDVCOMCTL_BMASK_Msk        (0xff000000UL)            /*!< BMASK (Bitfield-Mask: 0xff)                           */
/* =======================================================  MLCDENBCR  ======================================================= */
#define MLCD_MLCDENBCR_ENBW_Pos           (0UL)                     /*!< ENBW (Bit 0)                                          */
#define MLCD_MLCDENBCR_ENBW_Msk           (0x3ffUL)                 /*!< ENBW (Bitfield-Mask: 0x3ff)                           */
#define MLCD_MLCDENBCR_ENBEG_Pos          (16UL)                    /*!< ENBEG (Bit 16)                                        */
#define MLCD_MLCDENBCR_ENBEG_Msk          (0xff0000UL)              /*!< ENBEG (Bitfield-Mask: 0xff)                           */
/* ========================================================  DATA_W0  ======================================================== */
/* ========================================================  DATA_W1  ======================================================== */
/* ========================================================  DATA_W2  ======================================================== */
/* ========================================================  DATA_W3  ======================================================== */
/* ========================================================  DATA_W4  ======================================================== */
/* ========================================================  DATA_W5  ======================================================== */
/* ========================================================  DATA_W6  ======================================================== */
/* ========================================================  DATA_W7  ======================================================== */
/* =======================================================  DATA_HW0  ======================================================== */
/* =======================================================  DATA_HW1  ======================================================== */
/* =======================================================  DATA_HW2  ======================================================== */
/* =======================================================  DATA_HW3  ======================================================== */
/* =======================================================  DATA_HW4  ======================================================== */
/* =======================================================  DATA_HW5  ======================================================== */
/* =======================================================  DATA_HW6  ======================================================== */
/* =======================================================  DATA_HW7  ======================================================== */
/* =======================================================  DATA_HW8  ======================================================== */
/* =======================================================  DATA_HW9  ======================================================== */
/* =======================================================  DATA_HW10  ======================================================= */
/* =======================================================  DATA_HW11  ======================================================= */
/* =======================================================  DATA_HW12  ======================================================= */
/* =======================================================  DATA_HW13  ======================================================= */
/* =======================================================  DATA_HW14  ======================================================= */
/* =======================================================  DATA_HW15  ======================================================= */
/* =========================================================  DATA0  ========================================================= */
/* =========================================================  DATA1  ========================================================= */
/* =========================================================  DATA2  ========================================================= */
/* =========================================================  DATA3  ========================================================= */
/* =========================================================  DATA4  ========================================================= */
/* =========================================================  DATA5  ========================================================= */
/* =========================================================  DATA6  ========================================================= */
/* =========================================================  DATA7  ========================================================= */
/* =========================================================  DATA8  ========================================================= */
/* =========================================================  DATA9  ========================================================= */
/* ========================================================  DATA10  ========================================================= */
/* ========================================================  DATA11  ========================================================= */
/* ========================================================  DATA12  ========================================================= */
/* ========================================================  DATA13  ========================================================= */
/* ========================================================  DATA14  ========================================================= */
/* ========================================================  DATA15  ========================================================= */
/* ========================================================  DATA16  ========================================================= */
/* ========================================================  DATA17  ========================================================= */
/* ========================================================  DATA18  ========================================================= */
/* ========================================================  DATA19  ========================================================= */
/* ========================================================  DATA20  ========================================================= */
/* ========================================================  DATA21  ========================================================= */
/* ========================================================  DATA22  ========================================================= */
/* ========================================================  DATA23  ========================================================= */
/* ========================================================  DATA24  ========================================================= */
/* ========================================================  DATA25  ========================================================= */
/* ========================================================  DATA26  ========================================================= */
/* ========================================================  DATA27  ========================================================= */
/* ========================================================  DATA28  ========================================================= */
/* ========================================================  DATA29  ========================================================= */
/* ========================================================  DATA30  ========================================================= */
/* ========================================================  DATA31  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            GDT                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  GDTCR  ========================================================= */
#define GDT_GDTCR_GDTSTART_Pos            (0UL)                     /*!< GDTSTART (Bit 0)                                      */
#define GDT_GDTCR_GDTSTART_Msk            (0x1UL)                   /*!< GDTSTART (Bitfield-Mask: 0x01)                        */
#define GDT_GDTCR_IFLPEN_Pos              (4UL)                     /*!< IFLPEN (Bit 4)                                        */
#define GDT_GDTCR_IFLPEN_Msk              (0x10UL)                  /*!< IFLPEN (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_GDTDSZ_Pos              (5UL)                     /*!< GDTDSZ (Bit 5)                                        */
#define GDT_GDTCR_GDTDSZ_Msk              (0x20UL)                  /*!< GDTDSZ (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_ENDIAN_Pos              (7UL)                     /*!< ENDIAN (Bit 7)                                        */
#define GDT_GDTCR_ENDIAN_Msk              (0x80UL)                  /*!< ENDIAN (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_CIALGEN_Pos             (8UL)                     /*!< CIALGEN (Bit 8)                                       */
#define GDT_GDTCR_CIALGEN_Msk             (0x100UL)                 /*!< CIALGEN (Bitfield-Mask: 0x01)                         */
#define GDT_GDTCR_CIALGSL_Pos             (9UL)                     /*!< CIALGSL (Bit 9)                                       */
#define GDT_GDTCR_CIALGSL_Msk             (0x200UL)                 /*!< CIALGSL (Bitfield-Mask: 0x01)                         */
#define GDT_GDTCR_RTTEN_Pos               (10UL)                    /*!< RTTEN (Bit 10)                                        */
#define GDT_GDTCR_RTTEN_Msk               (0x400UL)                 /*!< RTTEN (Bitfield-Mask: 0x01)                           */
#define GDT_GDTCR_RTTFC_Pos               (11UL)                    /*!< RTTFC (Bit 11)                                        */
#define GDT_GDTCR_RTTFC_Msk               (0x1800UL)                /*!< RTTFC (Bitfield-Mask: 0x03)                           */
#define GDT_GDTCR_ISCREN_Pos              (13UL)                    /*!< ISCREN (Bit 13)                                       */
#define GDT_GDTCR_ISCREN_Msk              (0xe000UL)                /*!< ISCREN (Bitfield-Mask: 0x07)                          */
#define GDT_GDTCR_MSYNEN_Pos              (16UL)                    /*!< MSYNEN (Bit 16)                                       */
#define GDT_GDTCR_MSYNEN_Msk              (0x10000UL)               /*!< MSYNEN (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_MPCS_Pos                (17UL)                    /*!< MPCS (Bit 17)                                         */
#define GDT_GDTCR_MPCS_Msk                (0x20000UL)               /*!< MPCS (Bitfield-Mask: 0x01)                            */
#define GDT_GDTCR_MBRDEN_Pos              (18UL)                    /*!< MBRDEN (Bit 18)                                       */
#define GDT_GDTCR_MBRDEN_Msk              (0x40000UL)               /*!< MBRDEN (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_CSYNEN_Pos              (19UL)                    /*!< CSYNEN (Bit 19)                                       */
#define GDT_GDTCR_CSYNEN_Msk              (0x80000UL)               /*!< CSYNEN (Bitfield-Mask: 0x01)                          */
#define GDT_GDTCR_CPTS_Pos                (20UL)                    /*!< CPTS (Bit 20)                                         */
#define GDT_GDTCR_CPTS_Msk                (0x100000UL)              /*!< CPTS (Bitfield-Mask: 0x01)                            */
#define GDT_GDTCR_CDCS_Pos                (21UL)                    /*!< CDCS (Bit 21)                                         */
#define GDT_GDTCR_CDCS_Msk                (0xe00000UL)              /*!< CDCS (Bitfield-Mask: 0x07)                            */
#define GDT_GDTCR_CLREN_Pos               (25UL)                    /*!< CLREN (Bit 25)                                        */
#define GDT_GDTCR_CLREN_Msk               (0x2000000UL)             /*!< CLREN (Bitfield-Mask: 0x01)                           */
#define GDT_GDTCR_CLRDS0_Pos              (26UL)                    /*!< CLRDS0 (Bit 26)                                       */
#define GDT_GDTCR_CLRDS0_Msk              (0x1c000000UL)            /*!< CLRDS0 (Bitfield-Mask: 0x07)                          */
#define GDT_GDTCR_CLRDS1_Pos              (29UL)                    /*!< CLRDS1 (Bit 29)                                       */
#define GDT_GDTCR_CLRDS1_Msk              (0xe0000000UL)            /*!< CLRDS1 (Bitfield-Mask: 0x07)                          */
/* ========================================================  GDTSCR  ========================================================= */
#define GDT_GDTSCR_SHRNKEN_Pos            (0UL)                     /*!< SHRNKEN (Bit 0)                                       */
#define GDT_GDTSCR_SHRNKEN_Msk            (0x1UL)                   /*!< SHRNKEN (Bitfield-Mask: 0x01)                         */
#define GDT_GDTSCR_SHRNKSZ_Pos            (8UL)                     /*!< SHRNKSZ (Bit 8)                                       */
#define GDT_GDTSCR_SHRNKSZ_Msk            (0x700UL)                 /*!< SHRNKSZ (Bitfield-Mask: 0x07)                         */
#define GDT_GDTSCR_SBCS_Pos               (16UL)                    /*!< SBCS (Bit 16)                                         */
#define GDT_GDTSCR_SBCS_Msk               (0x10000UL)               /*!< SBCS (Bitfield-Mask: 0x01)                            */
#define GDT_GDTSCR_SHRNKNUM_Pos           (24UL)                    /*!< SHRNKNUM (Bit 24)                                     */
#define GDT_GDTSCR_SHRNKNUM_Msk           (0x7000000UL)             /*!< SHRNKNUM (Bitfield-Mask: 0x07)                        */
/* ========================================================  GDTFDCS  ======================================================== */
#define GDT_GDTFDCS_FDCEN_Pos             (0UL)                     /*!< FDCEN (Bit 0)                                         */
#define GDT_GDTFDCS_FDCEN_Msk             (0x1UL)                   /*!< FDCEN (Bitfield-Mask: 0x01)                           */
#define GDT_GDTFDCS_SAC_Pos               (4UL)                     /*!< SAC (Bit 4)                                           */
#define GDT_GDTFDCS_SAC_Msk               (0x70UL)                  /*!< SAC (Bitfield-Mask: 0x07)                             */
#define GDT_GDTFDCS_FDHAD_Pos             (7UL)                     /*!< FDHAD (Bit 7)                                         */
#define GDT_GDTFDCS_FDHAD_Msk             (0x80UL)                  /*!< FDHAD (Bitfield-Mask: 0x01)                           */
#define GDT_GDTFDCS_FDIR_Pos              (8UL)                     /*!< FDIR (Bit 8)                                          */
#define GDT_GDTFDCS_FDIR_Msk              (0x3f00UL)                /*!< FDIR (Bitfield-Mask: 0x3f)                            */
#define GDT_GDTFDCS_FDLTDSZ_Pos           (16UL)                    /*!< FDLTDSZ (Bit 16)                                      */
#define GDT_GDTFDCS_FDLTDSZ_Msk           (0x3f0000UL)              /*!< FDLTDSZ (Bitfield-Mask: 0x3f)                         */
#define GDT_GDTFDCS_FDLNGSZ_Pos           (24UL)                    /*!< FDLNGSZ (Bit 24)                                      */
#define GDT_GDTFDCS_FDLNGSZ_Msk           (0x7f000000UL)            /*!< FDLNGSZ (Bitfield-Mask: 0x7f)                         */
/* ========================================================  GDTPIER  ======================================================== */
#define GDT_GDTPIER_DATIIE_Pos            (0UL)                     /*!< DATIIE (Bit 0)                                        */
#define GDT_GDTPIER_DATIIE_Msk            (0x1UL)                   /*!< DATIIE (Bitfield-Mask: 0x01)                          */
#define GDT_GDTPIER_DATOIE_Pos            (1UL)                     /*!< DATOIE (Bit 1)                                        */
#define GDT_GDTPIER_DATOIE_Msk            (0x2UL)                   /*!< DATOIE (Bitfield-Mask: 0x01)                          */
#define GDT_GDTPIER_FDCENDIE_Pos          (2UL)                     /*!< FDCENDIE (Bit 2)                                      */
#define GDT_GDTPIER_FDCENDIE_Msk          (0x4UL)                   /*!< FDCENDIE (Bitfield-Mask: 0x01)                        */
#define GDT_GDTPIER_INTMODE_Pos           (7UL)                     /*!< INTMODE (Bit 7)                                       */
#define GDT_GDTPIER_INTMODE_Msk           (0x80UL)                  /*!< INTMODE (Bitfield-Mask: 0x01)                         */
/* =======================================================  GDTIBUF0  ======================================================== */
/* =======================================================  GDTIBUF1  ======================================================== */
/* =======================================================  GDTIBUF2  ======================================================== */
/* =======================================================  GDTIBUF3  ======================================================== */
/* =======================================================  GDTIBUF4  ======================================================== */
/* =======================================================  GDTIBUF5  ======================================================== */
/* =======================================================  GDTIBUF6  ======================================================== */
/* =======================================================  GDTIBUF7  ======================================================== */
/* =======================================================  GDTIBUF8  ======================================================== */
/* =======================================================  GDTIBUF9  ======================================================== */
/* =======================================================  GDTIBUF10  ======================================================= */
/* =======================================================  GDTIBUF11  ======================================================= */
/* =======================================================  GDTIBUF12  ======================================================= */
/* =======================================================  GDTIBUF13  ======================================================= */
/* =======================================================  GDTIBUF14  ======================================================= */
/* =======================================================  GDTIBUF15  ======================================================= */
/* =======================================================  GDTIBUF16  ======================================================= */
/* =======================================================  GDTIBUF17  ======================================================= */
/* =======================================================  GDTIBUF18  ======================================================= */
/* =======================================================  GDTIBUF19  ======================================================= */
/* =======================================================  GDTIBUF20  ======================================================= */
/* =======================================================  GDTIBUF21  ======================================================= */
/* =======================================================  GDTIBUF22  ======================================================= */
/* =======================================================  GDTIBUF23  ======================================================= */
/* =======================================================  GDTIBUF24  ======================================================= */
/* =======================================================  GDTIBUF25  ======================================================= */
/* =======================================================  GDTIBUF26  ======================================================= */
/* =======================================================  GDTIBUF27  ======================================================= */
/* =======================================================  GDTIBUF28  ======================================================= */
/* =======================================================  GDTIBUF29  ======================================================= */
/* =======================================================  GDTIBUF30  ======================================================= */
/* =======================================================  GDTIBUF31  ======================================================= */
/* =======================================================  GDTIBUF32  ======================================================= */
/* =======================================================  GDTIBUF33  ======================================================= */
/* =======================================================  GDTIBUF34  ======================================================= */
/* =======================================================  GDTIBUF35  ======================================================= */
/* =======================================================  GDTIBUF36  ======================================================= */
/* =======================================================  GDTIBUF37  ======================================================= */
/* =======================================================  GDTIBUF38  ======================================================= */
/* =======================================================  GDTIBUF39  ======================================================= */
/* =======================================================  GDTIBUF40  ======================================================= */
/* =======================================================  GDTIBUF41  ======================================================= */
/* =======================================================  GDTIBUF42  ======================================================= */
/* =======================================================  GDTIBUF43  ======================================================= */
/* =======================================================  GDTIBUF44  ======================================================= */
/* =======================================================  GDTIBUF45  ======================================================= */
/* =======================================================  GDTIBUF46  ======================================================= */
/* =======================================================  GDTIBUF47  ======================================================= */
/* =======================================================  GDTOBUF0  ======================================================== */
/* =======================================================  GDTOBUF1  ======================================================== */
/* =======================================================  GDTOBUF2  ======================================================== */
/* =======================================================  GDTOBUF3  ======================================================== */
/* =======================================================  GDTOBUF4  ======================================================== */
/* =======================================================  GDTOBUF5  ======================================================== */
/* =======================================================  GDTOBUF6  ======================================================== */
/* =======================================================  GDTOBUF7  ======================================================== */
/* =======================================================  GDTOBUF8  ======================================================== */
/* =======================================================  GDTOBUF9  ======================================================== */
/* =======================================================  GDTOBUF10  ======================================================= */
/* =======================================================  GDTOBUF11  ======================================================= */
/* =======================================================  GDTOBUF12  ======================================================= */
/* =======================================================  GDTOBUF13  ======================================================= */
/* =======================================================  GDTOBUF14  ======================================================= */
/* =======================================================  GDTOBUF15  ======================================================= */
/* =======================================================  GDTOBUF16  ======================================================= */
/* =======================================================  GDTOBUF17  ======================================================= */
/* =======================================================  GDTOBUF18  ======================================================= */
/* =======================================================  GDTOBUF19  ======================================================= */
/* =======================================================  GDTOBUF20  ======================================================= */
/* =======================================================  GDTOBUF21  ======================================================= */
/* =======================================================  GDTOBUF22  ======================================================= */
/* =======================================================  GDTOBUF23  ======================================================= */
/* =======================================================  GDTOBUF24  ======================================================= */
/* =======================================================  GDTOBUF25  ======================================================= */
/* =======================================================  GDTOBUF26  ======================================================= */
/* =======================================================  GDTOBUF27  ======================================================= */
/* =======================================================  GDTOBUF28  ======================================================= */
/* =======================================================  GDTOBUF29  ======================================================= */
/* =======================================================  GDTOBUF30  ======================================================= */
/* =======================================================  GDTOBUF31  ======================================================= */


/* =========================================================================================================================== */
/* ================                                           IRDA                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  IRCR  ========================================================== */
#define IRDA_IRCR_IRRXINV_Pos             (2UL)                     /*!< IRRXINV (Bit 2)                                       */
#define IRDA_IRCR_IRRXINV_Msk             (0x4UL)                   /*!< IRRXINV (Bitfield-Mask: 0x01)                         */
#define IRDA_IRCR_IRTXINV_Pos             (3UL)                     /*!< IRTXINV (Bit 3)                                       */
#define IRDA_IRCR_IRTXINV_Msk             (0x8UL)                   /*!< IRTXINV (Bitfield-Mask: 0x01)                         */
#define IRDA_IRCR_IRE_Pos                 (7UL)                     /*!< IRE (Bit 7)                                           */
#define IRDA_IRCR_IRE_Msk                 (0x80UL)                  /*!< IRE (Bitfield-Mask: 0x01)                             */


/* =========================================================================================================================== */
/* ================                                           SPI0                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  SPCR  ========================================================== */
#define SPI0_SPCR_SPMS_Pos                (0UL)                     /*!< SPMS (Bit 0)                                          */
#define SPI0_SPCR_SPMS_Msk                (0x1UL)                   /*!< SPMS (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCR_TXMD_Pos                (1UL)                     /*!< TXMD (Bit 1)                                          */
#define SPI0_SPCR_TXMD_Msk                (0x2UL)                   /*!< TXMD (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCR_MODFEN_Pos              (2UL)                     /*!< MODFEN (Bit 2)                                        */
#define SPI0_SPCR_MODFEN_Msk              (0x4UL)                   /*!< MODFEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCR_MSTR_Pos                (3UL)                     /*!< MSTR (Bit 3)                                          */
#define SPI0_SPCR_MSTR_Msk                (0x8UL)                   /*!< MSTR (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCR_SPEIE_Pos               (4UL)                     /*!< SPEIE (Bit 4)                                         */
#define SPI0_SPCR_SPEIE_Msk               (0x10UL)                  /*!< SPEIE (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCR_SPTIE_Pos               (5UL)                     /*!< SPTIE (Bit 5)                                         */
#define SPI0_SPCR_SPTIE_Msk               (0x20UL)                  /*!< SPTIE (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCR_SPE_Pos                 (6UL)                     /*!< SPE (Bit 6)                                           */
#define SPI0_SPCR_SPE_Msk                 (0x40UL)                  /*!< SPE (Bitfield-Mask: 0x01)                             */
#define SPI0_SPCR_SPRIE_Pos               (7UL)                     /*!< SPRIE (Bit 7)                                         */
#define SPI0_SPCR_SPRIE_Msk               (0x80UL)                  /*!< SPRIE (Bitfield-Mask: 0x01)                           */
/* =========================================================  SSLP  ========================================================== */
#define SPI0_SSLP_SSL0P_Pos               (0UL)                     /*!< SSL0P (Bit 0)                                         */
#define SPI0_SSLP_SSL0P_Msk               (0x1UL)                   /*!< SSL0P (Bitfield-Mask: 0x01)                           */
#define SPI0_SSLP_SSL1P_Pos               (1UL)                     /*!< SSL1P (Bit 1)                                         */
#define SPI0_SSLP_SSL1P_Msk               (0x2UL)                   /*!< SSL1P (Bitfield-Mask: 0x01)                           */
#define SPI0_SSLP_SSL2P_Pos               (2UL)                     /*!< SSL2P (Bit 2)                                         */
#define SPI0_SSLP_SSL2P_Msk               (0x4UL)                   /*!< SSL2P (Bitfield-Mask: 0x01)                           */
#define SPI0_SSLP_SSL3P_Pos               (3UL)                     /*!< SSL3P (Bit 3)                                         */
#define SPI0_SSLP_SSL3P_Msk               (0x8UL)                   /*!< SSL3P (Bitfield-Mask: 0x01)                           */
/* =========================================================  SPPCR  ========================================================= */
#define SPI0_SPPCR_SPLP_Pos               (0UL)                     /*!< SPLP (Bit 0)                                          */
#define SPI0_SPPCR_SPLP_Msk               (0x1UL)                   /*!< SPLP (Bitfield-Mask: 0x01)                            */
#define SPI0_SPPCR_SPLP2_Pos              (1UL)                     /*!< SPLP2 (Bit 1)                                         */
#define SPI0_SPPCR_SPLP2_Msk              (0x2UL)                   /*!< SPLP2 (Bitfield-Mask: 0x01)                           */
#define SPI0_SPPCR_MOIFV_Pos              (4UL)                     /*!< MOIFV (Bit 4)                                         */
#define SPI0_SPPCR_MOIFV_Msk              (0x10UL)                  /*!< MOIFV (Bitfield-Mask: 0x01)                           */
#define SPI0_SPPCR_MOIFE_Pos              (5UL)                     /*!< MOIFE (Bit 5)                                         */
#define SPI0_SPPCR_MOIFE_Msk              (0x20UL)                  /*!< MOIFE (Bitfield-Mask: 0x01)                           */
/* =========================================================  SPSR  ========================================================== */
#define SPI0_SPSR_OVRF_Pos                (0UL)                     /*!< OVRF (Bit 0)                                          */
#define SPI0_SPSR_OVRF_Msk                (0x1UL)                   /*!< OVRF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPSR_IDLNF_Pos               (1UL)                     /*!< IDLNF (Bit 1)                                         */
#define SPI0_SPSR_IDLNF_Msk               (0x2UL)                   /*!< IDLNF (Bitfield-Mask: 0x01)                           */
#define SPI0_SPSR_MODF_Pos                (2UL)                     /*!< MODF (Bit 2)                                          */
#define SPI0_SPSR_MODF_Msk                (0x4UL)                   /*!< MODF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPSR_PERF_Pos                (3UL)                     /*!< PERF (Bit 3)                                          */
#define SPI0_SPSR_PERF_Msk                (0x8UL)                   /*!< PERF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPSR_UDRF_Pos                (4UL)                     /*!< UDRF (Bit 4)                                          */
#define SPI0_SPSR_UDRF_Msk                (0x10UL)                  /*!< UDRF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPSR_SPTEF_Pos               (5UL)                     /*!< SPTEF (Bit 5)                                         */
#define SPI0_SPSR_SPTEF_Msk               (0x20UL)                  /*!< SPTEF (Bitfield-Mask: 0x01)                           */
#define SPI0_SPSR_SPRF_Pos                (7UL)                     /*!< SPRF (Bit 7)                                          */
#define SPI0_SPSR_SPRF_Msk                (0x80UL)                  /*!< SPRF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SPDR  ========================================================== */
/* ========================================================  SPDR_HA  ======================================================== */
/* ========================================================  SPDR_BY  ======================================================== */
/* =========================================================  SPSCR  ========================================================= */
#define SPI0_SPSCR_SPSLN_Pos              (0UL)                     /*!< SPSLN (Bit 0)                                         */
#define SPI0_SPSCR_SPSLN_Msk              (0x7UL)                   /*!< SPSLN (Bitfield-Mask: 0x07)                           */
/* =========================================================  SPSSR  ========================================================= */
#define SPI0_SPSSR_SPCP_Pos               (0UL)                     /*!< SPCP (Bit 0)                                          */
#define SPI0_SPSSR_SPCP_Msk               (0x7UL)                   /*!< SPCP (Bitfield-Mask: 0x07)                            */
#define SPI0_SPSSR_SPECM_Pos              (4UL)                     /*!< SPECM (Bit 4)                                         */
#define SPI0_SPSSR_SPECM_Msk              (0x70UL)                  /*!< SPECM (Bitfield-Mask: 0x07)                           */
/* =========================================================  SPBR  ========================================================== */
/* =========================================================  SPDCR  ========================================================= */
#define SPI0_SPDCR_SPFC_Pos               (0UL)                     /*!< SPFC (Bit 0)                                          */
#define SPI0_SPDCR_SPFC_Msk               (0x3UL)                   /*!< SPFC (Bitfield-Mask: 0x03)                            */
#define SPI0_SPDCR_SPRDTD_Pos             (4UL)                     /*!< SPRDTD (Bit 4)                                        */
#define SPI0_SPDCR_SPRDTD_Msk             (0x10UL)                  /*!< SPRDTD (Bitfield-Mask: 0x01)                          */
#define SPI0_SPDCR_SPLW_Pos               (5UL)                     /*!< SPLW (Bit 5)                                          */
#define SPI0_SPDCR_SPLW_Msk               (0x20UL)                  /*!< SPLW (Bitfield-Mask: 0x01)                            */
#define SPI0_SPDCR_SPBYT_Pos              (6UL)                     /*!< SPBYT (Bit 6)                                         */
#define SPI0_SPDCR_SPBYT_Msk              (0x40UL)                  /*!< SPBYT (Bitfield-Mask: 0x01)                           */
/* =========================================================  SPCKD  ========================================================= */
#define SPI0_SPCKD_SCKDL_Pos              (0UL)                     /*!< SCKDL (Bit 0)                                         */
#define SPI0_SPCKD_SCKDL_Msk              (0x7UL)                   /*!< SCKDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SSLND  ========================================================= */
#define SPI0_SSLND_SLNDL_Pos              (0UL)                     /*!< SLNDL (Bit 0)                                         */
#define SPI0_SSLND_SLNDL_Msk              (0x7UL)                   /*!< SLNDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SPND  ========================================================== */
#define SPI0_SPND_SPNDL_Pos               (0UL)                     /*!< SPNDL (Bit 0)                                         */
#define SPI0_SPND_SPNDL_Msk               (0x7UL)                   /*!< SPNDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SPCR2  ========================================================= */
#define SPI0_SPCR2_SPPE_Pos               (0UL)                     /*!< SPPE (Bit 0)                                          */
#define SPI0_SPCR2_SPPE_Msk               (0x1UL)                   /*!< SPPE (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCR2_SPOE_Pos               (1UL)                     /*!< SPOE (Bit 1)                                          */
#define SPI0_SPCR2_SPOE_Msk               (0x2UL)                   /*!< SPOE (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCR2_SPIIE_Pos              (2UL)                     /*!< SPIIE (Bit 2)                                         */
#define SPI0_SPCR2_SPIIE_Msk              (0x4UL)                   /*!< SPIIE (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCR2_PTE_Pos                (3UL)                     /*!< PTE (Bit 3)                                           */
#define SPI0_SPCR2_PTE_Msk                (0x8UL)                   /*!< PTE (Bitfield-Mask: 0x01)                             */
#define SPI0_SPCR2_SCKASE_Pos             (4UL)                     /*!< SCKASE (Bit 4)                                        */
#define SPI0_SPCR2_SCKASE_Msk             (0x10UL)                  /*!< SCKASE (Bitfield-Mask: 0x01)                          */
/* ========================================================  SPCMD0  ========================================================= */
#define SPI0_SPCMD0_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD0_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD0_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD0_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD0_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD0_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD0_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD0_SSLA_Msk              (0x70UL)                  /*!< SSLA (Bitfield-Mask: 0x07)                            */
#define SPI0_SPCMD0_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD0_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD0_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD0_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD0_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD0_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD0_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD0_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD0_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD0_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD0_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD0_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
/* ========================================================  SPCMD1  ========================================================= */
#define SPI0_SPCMD1_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD1_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD1_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD1_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD1_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD1_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD1_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD1_SSLA_Msk              (0x70UL)                  /*!< SSLA (Bitfield-Mask: 0x07)                            */
#define SPI0_SPCMD1_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD1_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD1_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD1_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD1_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD1_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD1_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD1_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD1_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD1_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD1_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD1_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
/* ========================================================  SPCMD2  ========================================================= */
#define SPI0_SPCMD2_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD2_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD2_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD2_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD2_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD2_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD2_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD2_SSLA_Msk              (0x70UL)                  /*!< SSLA (Bitfield-Mask: 0x07)                            */
#define SPI0_SPCMD2_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD2_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD2_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD2_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD2_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD2_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD2_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD2_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD2_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD2_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD2_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD2_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
/* ========================================================  SPCMD3  ========================================================= */
#define SPI0_SPCMD3_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD3_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD3_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD3_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD3_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD3_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD3_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD3_SSLA_Msk              (0x70UL)                  /*!< SSLA (Bitfield-Mask: 0x07)                            */
#define SPI0_SPCMD3_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD3_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD3_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD3_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD3_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD3_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD3_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD3_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD3_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD3_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD3_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD3_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
/* ========================================================  SPCMD4  ========================================================= */
#define SPI0_SPCMD4_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD4_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD4_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD4_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD4_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD4_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD4_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD4_SSLA_Msk              (0x70UL)                  /*!< SSLA (Bitfield-Mask: 0x07)                            */
#define SPI0_SPCMD4_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD4_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD4_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD4_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD4_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD4_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD4_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD4_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD4_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD4_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD4_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD4_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
/* ========================================================  SPCMD5  ========================================================= */
#define SPI0_SPCMD5_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD5_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD5_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD5_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD5_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD5_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD5_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD5_SSLA_Msk              (0x70UL)                  /*!< SSLA (Bitfield-Mask: 0x07)                            */
#define SPI0_SPCMD5_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD5_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD5_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD5_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD5_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD5_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD5_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD5_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD5_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD5_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD5_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD5_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
/* ========================================================  SPCMD6  ========================================================= */
#define SPI0_SPCMD6_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD6_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD6_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD6_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD6_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD6_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD6_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD6_SSLA_Msk              (0x70UL)                  /*!< SSLA (Bitfield-Mask: 0x07)                            */
#define SPI0_SPCMD6_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD6_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD6_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD6_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD6_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD6_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD6_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD6_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD6_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD6_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD6_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD6_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */
/* ========================================================  SPCMD7  ========================================================= */
#define SPI0_SPCMD7_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI0_SPCMD7_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD7_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI0_SPCMD7_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD7_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI0_SPCMD7_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI0_SPCMD7_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI0_SPCMD7_SSLA_Msk              (0x70UL)                  /*!< SSLA (Bitfield-Mask: 0x07)                            */
#define SPI0_SPCMD7_SSLKP_Pos             (7UL)                     /*!< SSLKP (Bit 7)                                         */
#define SPI0_SPCMD7_SSLKP_Msk             (0x80UL)                  /*!< SSLKP (Bitfield-Mask: 0x01)                           */
#define SPI0_SPCMD7_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI0_SPCMD7_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI0_SPCMD7_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI0_SPCMD7_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI0_SPCMD7_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI0_SPCMD7_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD7_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI0_SPCMD7_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI0_SPCMD7_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI0_SPCMD7_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           SPI1                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  SPCR  ========================================================== */
#define SPI1_SPCR_SPMS_Pos                (0UL)                     /*!< SPMS (Bit 0)                                          */
#define SPI1_SPCR_SPMS_Msk                (0x1UL)                   /*!< SPMS (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCR_TXMD_Pos                (1UL)                     /*!< TXMD (Bit 1)                                          */
#define SPI1_SPCR_TXMD_Msk                (0x2UL)                   /*!< TXMD (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCR_MODFEN_Pos              (2UL)                     /*!< MODFEN (Bit 2)                                        */
#define SPI1_SPCR_MODFEN_Msk              (0x4UL)                   /*!< MODFEN (Bitfield-Mask: 0x01)                          */
#define SPI1_SPCR_MSTR_Pos                (3UL)                     /*!< MSTR (Bit 3)                                          */
#define SPI1_SPCR_MSTR_Msk                (0x8UL)                   /*!< MSTR (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCR_SPEIE_Pos               (4UL)                     /*!< SPEIE (Bit 4)                                         */
#define SPI1_SPCR_SPEIE_Msk               (0x10UL)                  /*!< SPEIE (Bitfield-Mask: 0x01)                           */
#define SPI1_SPCR_SPTIE_Pos               (5UL)                     /*!< SPTIE (Bit 5)                                         */
#define SPI1_SPCR_SPTIE_Msk               (0x20UL)                  /*!< SPTIE (Bitfield-Mask: 0x01)                           */
#define SPI1_SPCR_SPE_Pos                 (6UL)                     /*!< SPE (Bit 6)                                           */
#define SPI1_SPCR_SPE_Msk                 (0x40UL)                  /*!< SPE (Bitfield-Mask: 0x01)                             */
#define SPI1_SPCR_SPRIE_Pos               (7UL)                     /*!< SPRIE (Bit 7)                                         */
#define SPI1_SPCR_SPRIE_Msk               (0x80UL)                  /*!< SPRIE (Bitfield-Mask: 0x01)                           */
/* =========================================================  SSLP  ========================================================== */
#define SPI1_SSLP_SSL0P_Pos               (0UL)                     /*!< SSL0P (Bit 0)                                         */
#define SPI1_SSLP_SSL0P_Msk               (0x1UL)                   /*!< SSL0P (Bitfield-Mask: 0x01)                           */
#define SPI1_SSLP_SSL1P_Pos               (1UL)                     /*!< SSL1P (Bit 1)                                         */
#define SPI1_SSLP_SSL1P_Msk               (0x2UL)                   /*!< SSL1P (Bitfield-Mask: 0x01)                           */
#define SPI1_SSLP_SSL2P_Pos               (2UL)                     /*!< SSL2P (Bit 2)                                         */
#define SPI1_SSLP_SSL2P_Msk               (0x4UL)                   /*!< SSL2P (Bitfield-Mask: 0x01)                           */
#define SPI1_SSLP_SSL3P_Pos               (3UL)                     /*!< SSL3P (Bit 3)                                         */
#define SPI1_SSLP_SSL3P_Msk               (0x8UL)                   /*!< SSL3P (Bitfield-Mask: 0x01)                           */
/* =========================================================  SPPCR  ========================================================= */
#define SPI1_SPPCR_SPLP_Pos               (0UL)                     /*!< SPLP (Bit 0)                                          */
#define SPI1_SPPCR_SPLP_Msk               (0x1UL)                   /*!< SPLP (Bitfield-Mask: 0x01)                            */
#define SPI1_SPPCR_SPLP2_Pos              (1UL)                     /*!< SPLP2 (Bit 1)                                         */
#define SPI1_SPPCR_SPLP2_Msk              (0x2UL)                   /*!< SPLP2 (Bitfield-Mask: 0x01)                           */
#define SPI1_SPPCR_MOIFV_Pos              (4UL)                     /*!< MOIFV (Bit 4)                                         */
#define SPI1_SPPCR_MOIFV_Msk              (0x10UL)                  /*!< MOIFV (Bitfield-Mask: 0x01)                           */
#define SPI1_SPPCR_MOIFE_Pos              (5UL)                     /*!< MOIFE (Bit 5)                                         */
#define SPI1_SPPCR_MOIFE_Msk              (0x20UL)                  /*!< MOIFE (Bitfield-Mask: 0x01)                           */
/* =========================================================  SPSR  ========================================================== */
#define SPI1_SPSR_OVRF_Pos                (0UL)                     /*!< OVRF (Bit 0)                                          */
#define SPI1_SPSR_OVRF_Msk                (0x1UL)                   /*!< OVRF (Bitfield-Mask: 0x01)                            */
#define SPI1_SPSR_IDLNF_Pos               (1UL)                     /*!< IDLNF (Bit 1)                                         */
#define SPI1_SPSR_IDLNF_Msk               (0x2UL)                   /*!< IDLNF (Bitfield-Mask: 0x01)                           */
#define SPI1_SPSR_MODF_Pos                (2UL)                     /*!< MODF (Bit 2)                                          */
#define SPI1_SPSR_MODF_Msk                (0x4UL)                   /*!< MODF (Bitfield-Mask: 0x01)                            */
#define SPI1_SPSR_PERF_Pos                (3UL)                     /*!< PERF (Bit 3)                                          */
#define SPI1_SPSR_PERF_Msk                (0x8UL)                   /*!< PERF (Bitfield-Mask: 0x01)                            */
#define SPI1_SPSR_UDRF_Pos                (4UL)                     /*!< UDRF (Bit 4)                                          */
#define SPI1_SPSR_UDRF_Msk                (0x10UL)                  /*!< UDRF (Bitfield-Mask: 0x01)                            */
#define SPI1_SPSR_SPTEF_Pos               (5UL)                     /*!< SPTEF (Bit 5)                                         */
#define SPI1_SPSR_SPTEF_Msk               (0x20UL)                  /*!< SPTEF (Bitfield-Mask: 0x01)                           */
#define SPI1_SPSR_SPRF_Pos                (7UL)                     /*!< SPRF (Bit 7)                                          */
#define SPI1_SPSR_SPRF_Msk                (0x80UL)                  /*!< SPRF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SPDR  ========================================================== */
/* ========================================================  SPDR_HA  ======================================================== */
/* ========================================================  SPDR_BY  ======================================================== */
/* =========================================================  SPBR  ========================================================== */
/* =========================================================  SPDCR  ========================================================= */
#define SPI1_SPDCR_SPRDTD_Pos             (4UL)                     /*!< SPRDTD (Bit 4)                                        */
#define SPI1_SPDCR_SPRDTD_Msk             (0x10UL)                  /*!< SPRDTD (Bitfield-Mask: 0x01)                          */
#define SPI1_SPDCR_SPLW_Pos               (5UL)                     /*!< SPLW (Bit 5)                                          */
#define SPI1_SPDCR_SPLW_Msk               (0x20UL)                  /*!< SPLW (Bitfield-Mask: 0x01)                            */
#define SPI1_SPDCR_SPBYT_Pos              (6UL)                     /*!< SPBYT (Bit 6)                                         */
#define SPI1_SPDCR_SPBYT_Msk              (0x40UL)                  /*!< SPBYT (Bitfield-Mask: 0x01)                           */
/* =========================================================  SPCKD  ========================================================= */
#define SPI1_SPCKD_SCKDL_Pos              (0UL)                     /*!< SCKDL (Bit 0)                                         */
#define SPI1_SPCKD_SCKDL_Msk              (0x7UL)                   /*!< SCKDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SSLND  ========================================================= */
#define SPI1_SSLND_SLNDL_Pos              (0UL)                     /*!< SLNDL (Bit 0)                                         */
#define SPI1_SSLND_SLNDL_Msk              (0x7UL)                   /*!< SLNDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SPND  ========================================================== */
#define SPI1_SPND_SPNDL_Pos               (0UL)                     /*!< SPNDL (Bit 0)                                         */
#define SPI1_SPND_SPNDL_Msk               (0x7UL)                   /*!< SPNDL (Bitfield-Mask: 0x07)                           */
/* =========================================================  SPCR2  ========================================================= */
#define SPI1_SPCR2_SPPE_Pos               (0UL)                     /*!< SPPE (Bit 0)                                          */
#define SPI1_SPCR2_SPPE_Msk               (0x1UL)                   /*!< SPPE (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCR2_SPOE_Pos               (1UL)                     /*!< SPOE (Bit 1)                                          */
#define SPI1_SPCR2_SPOE_Msk               (0x2UL)                   /*!< SPOE (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCR2_SPIIE_Pos              (2UL)                     /*!< SPIIE (Bit 2)                                         */
#define SPI1_SPCR2_SPIIE_Msk              (0x4UL)                   /*!< SPIIE (Bitfield-Mask: 0x01)                           */
#define SPI1_SPCR2_PTE_Pos                (3UL)                     /*!< PTE (Bit 3)                                           */
#define SPI1_SPCR2_PTE_Msk                (0x8UL)                   /*!< PTE (Bitfield-Mask: 0x01)                             */
#define SPI1_SPCR2_SCKASE_Pos             (4UL)                     /*!< SCKASE (Bit 4)                                        */
#define SPI1_SPCR2_SCKASE_Msk             (0x10UL)                  /*!< SCKASE (Bitfield-Mask: 0x01)                          */
/* ========================================================  SPCMD0  ========================================================= */
#define SPI1_SPCMD0_CPHA_Pos              (0UL)                     /*!< CPHA (Bit 0)                                          */
#define SPI1_SPCMD0_CPHA_Msk              (0x1UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCMD0_CPOL_Pos              (1UL)                     /*!< CPOL (Bit 1)                                          */
#define SPI1_SPCMD0_CPOL_Msk              (0x2UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCMD0_BRDV_Pos              (2UL)                     /*!< BRDV (Bit 2)                                          */
#define SPI1_SPCMD0_BRDV_Msk              (0xcUL)                   /*!< BRDV (Bitfield-Mask: 0x03)                            */
#define SPI1_SPCMD0_SSLA_Pos              (4UL)                     /*!< SSLA (Bit 4)                                          */
#define SPI1_SPCMD0_SSLA_Msk              (0x70UL)                  /*!< SSLA (Bitfield-Mask: 0x07)                            */
#define SPI1_SPCMD0_SPB_Pos               (8UL)                     /*!< SPB (Bit 8)                                           */
#define SPI1_SPCMD0_SPB_Msk               (0xf00UL)                 /*!< SPB (Bitfield-Mask: 0x0f)                             */
#define SPI1_SPCMD0_LSBF_Pos              (12UL)                    /*!< LSBF (Bit 12)                                         */
#define SPI1_SPCMD0_LSBF_Msk              (0x1000UL)                /*!< LSBF (Bitfield-Mask: 0x01)                            */
#define SPI1_SPCMD0_SPNDEN_Pos            (13UL)                    /*!< SPNDEN (Bit 13)                                       */
#define SPI1_SPCMD0_SPNDEN_Msk            (0x2000UL)                /*!< SPNDEN (Bitfield-Mask: 0x01)                          */
#define SPI1_SPCMD0_SLNDEN_Pos            (14UL)                    /*!< SLNDEN (Bit 14)                                       */
#define SPI1_SPCMD0_SLNDEN_Msk            (0x4000UL)                /*!< SLNDEN (Bitfield-Mask: 0x01)                          */
#define SPI1_SPCMD0_SCKDEN_Pos            (15UL)                    /*!< SCKDEN (Bit 15)                                       */
#define SPI1_SPCMD0_SCKDEN_Msk            (0x8000UL)                /*!< SCKDEN (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  CRCCR0  ========================================================= */
#define CRC_CRCCR0_GPS_Pos                (0UL)                     /*!< GPS (Bit 0)                                           */
#define CRC_CRCCR0_GPS_Msk                (0x7UL)                   /*!< GPS (Bitfield-Mask: 0x07)                             */
#define CRC_CRCCR0_LMS_Pos                (6UL)                     /*!< LMS (Bit 6)                                           */
#define CRC_CRCCR0_LMS_Msk                (0x40UL)                  /*!< LMS (Bitfield-Mask: 0x01)                             */
#define CRC_CRCCR0_DORCLR_Pos             (7UL)                     /*!< DORCLR (Bit 7)                                        */
#define CRC_CRCCR0_DORCLR_Msk             (0x80UL)                  /*!< DORCLR (Bitfield-Mask: 0x01)                          */
/* ========================================================  CRCCR1  ========================================================= */
#define CRC_CRCCR1_CRCSWR_Pos             (6UL)                     /*!< CRCSWR (Bit 6)                                        */
#define CRC_CRCCR1_CRCSWR_Msk             (0x40UL)                  /*!< CRCSWR (Bitfield-Mask: 0x01)                          */
#define CRC_CRCCR1_CRCSEN_Pos             (7UL)                     /*!< CRCSEN (Bit 7)                                        */
#define CRC_CRCCR1_CRCSEN_Msk             (0x80UL)                  /*!< CRCSEN (Bitfield-Mask: 0x01)                          */
/* ========================================================  CRCDIR  ========================================================= */
/* =======================================================  CRCDIR_BY  ======================================================= */
/* ========================================================  CRCDOR  ========================================================= */
/* =======================================================  CRCDOR_HA  ======================================================= */
/* =======================================================  CRCDOR_BY  ======================================================= */
/* ========================================================  CRCSAR  ========================================================= */
#define CRC_CRCSAR_CRCSA_Pos              (0UL)                     /*!< CRCSA (Bit 0)                                         */
#define CRC_CRCSAR_CRCSA_Msk              (0x3fffUL)                /*!< CRCSA (Bitfield-Mask: 0x3fff)                         */


/* =========================================================================================================================== */
/* ================                                           KINT                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  KRCTL  ========================================================= */
#define KINT_KRCTL_KREG_Pos               (0UL)                     /*!< KREG (Bit 0)                                          */
#define KINT_KRCTL_KREG_Msk               (0x1UL)                   /*!< KREG (Bitfield-Mask: 0x01)                            */
#define KINT_KRCTL_KRMD_Pos               (7UL)                     /*!< KRMD (Bit 7)                                          */
#define KINT_KRCTL_KRMD_Msk               (0x80UL)                  /*!< KRMD (Bitfield-Mask: 0x01)                            */
/* ==========================================================  KRF  ========================================================== */
#define KINT_KRF_KIF0_Pos                 (0UL)                     /*!< KIF0 (Bit 0)                                          */
#define KINT_KRF_KIF0_Msk                 (0x1UL)                   /*!< KIF0 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KIF1_Pos                 (1UL)                     /*!< KIF1 (Bit 1)                                          */
#define KINT_KRF_KIF1_Msk                 (0x2UL)                   /*!< KIF1 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KIF2_Pos                 (2UL)                     /*!< KIF2 (Bit 2)                                          */
#define KINT_KRF_KIF2_Msk                 (0x4UL)                   /*!< KIF2 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KIF3_Pos                 (3UL)                     /*!< KIF3 (Bit 3)                                          */
#define KINT_KRF_KIF3_Msk                 (0x8UL)                   /*!< KIF3 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KIF4_Pos                 (4UL)                     /*!< KIF4 (Bit 4)                                          */
#define KINT_KRF_KIF4_Msk                 (0x10UL)                  /*!< KIF4 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KIF5_Pos                 (5UL)                     /*!< KIF5 (Bit 5)                                          */
#define KINT_KRF_KIF5_Msk                 (0x20UL)                  /*!< KIF5 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KIF6_Pos                 (6UL)                     /*!< KIF6 (Bit 6)                                          */
#define KINT_KRF_KIF6_Msk                 (0x40UL)                  /*!< KIF6 (Bitfield-Mask: 0x01)                            */
#define KINT_KRF_KIF7_Pos                 (7UL)                     /*!< KIF7 (Bit 7)                                          */
#define KINT_KRF_KIF7_Msk                 (0x80UL)                  /*!< KIF7 (Bitfield-Mask: 0x01)                            */
/* ==========================================================  KRM  ========================================================== */
#define KINT_KRM_KIMC0_Pos                (0UL)                     /*!< KIMC0 (Bit 0)                                         */
#define KINT_KRM_KIMC0_Msk                (0x1UL)                   /*!< KIMC0 (Bitfield-Mask: 0x01)                           */
#define KINT_KRM_KIMC1_Pos                (1UL)                     /*!< KIMC1 (Bit 1)                                         */
#define KINT_KRM_KIMC1_Msk                (0x2UL)                   /*!< KIMC1 (Bitfield-Mask: 0x01)                           */
#define KINT_KRM_KIMC2_Pos                (2UL)                     /*!< KIMC2 (Bit 2)                                         */
#define KINT_KRM_KIMC2_Msk                (0x4UL)                   /*!< KIMC2 (Bitfield-Mask: 0x01)                           */
#define KINT_KRM_KIMC3_Pos                (3UL)                     /*!< KIMC3 (Bit 3)                                         */
#define KINT_KRM_KIMC3_Msk                (0x8UL)                   /*!< KIMC3 (Bitfield-Mask: 0x01)                           */
#define KINT_KRM_KIMC4_Pos                (4UL)                     /*!< KIMC4 (Bit 4)                                         */
#define KINT_KRM_KIMC4_Msk                (0x10UL)                  /*!< KIMC4 (Bitfield-Mask: 0x01)                           */
#define KINT_KRM_KIMC5_Pos                (5UL)                     /*!< KIMC5 (Bit 5)                                         */
#define KINT_KRM_KIMC5_Msk                (0x20UL)                  /*!< KIMC5 (Bitfield-Mask: 0x01)                           */
#define KINT_KRM_KIMC6_Pos                (6UL)                     /*!< KIMC6 (Bit 6)                                         */
#define KINT_KRM_KIMC6_Msk                (0x40UL)                  /*!< KIMC6 (Bitfield-Mask: 0x01)                           */
#define KINT_KRM_KIMC7_Pos                (7UL)                     /*!< KIMC7 (Bit 7)                                         */
#define KINT_KRM_KIMC7_Msk                (0x80UL)                  /*!< KIMC7 (Bitfield-Mask: 0x01)                           */


/* =========================================================================================================================== */
/* ================                                            CCC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  ADJUSTR  ======================================================== */
#define CCC_ADJUSTR_ADJUST_Pos            (0UL)                     /*!< ADJUST (Bit 0)                                        */
#define CCC_ADJUSTR_ADJUST_Msk            (0x1ffUL)                 /*!< ADJUST (Bitfield-Mask: 0x1ff)                         */
/* ========================================================  R128CNT  ======================================================== */
#define CCC_R128CNT_CF128HZ_Pos           (0UL)                     /*!< CF128HZ (Bit 0)                                       */
#define CCC_R128CNT_CF128HZ_Msk           (0x1UL)                   /*!< CF128HZ (Bitfield-Mask: 0x01)                         */
#define CCC_R128CNT_CF64HZ_Pos            (1UL)                     /*!< CF64HZ (Bit 1)                                        */
#define CCC_R128CNT_CF64HZ_Msk            (0x2UL)                   /*!< CF64HZ (Bitfield-Mask: 0x01)                          */
#define CCC_R128CNT_CF32HZ_Pos            (2UL)                     /*!< CF32HZ (Bit 2)                                        */
#define CCC_R128CNT_CF32HZ_Msk            (0x4UL)                   /*!< CF32HZ (Bitfield-Mask: 0x01)                          */
#define CCC_R128CNT_CF16HZ_Pos            (3UL)                     /*!< CF16HZ (Bit 3)                                        */
#define CCC_R128CNT_CF16HZ_Msk            (0x8UL)                   /*!< CF16HZ (Bitfield-Mask: 0x01)                          */
#define CCC_R128CNT_CF8HZ_Pos             (4UL)                     /*!< CF8HZ (Bit 4)                                         */
#define CCC_R128CNT_CF8HZ_Msk             (0x10UL)                  /*!< CF8HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CNT_CF4HZ_Pos             (5UL)                     /*!< CF4HZ (Bit 5)                                         */
#define CCC_R128CNT_CF4HZ_Msk             (0x20UL)                  /*!< CF4HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CNT_CF2HZ_Pos             (6UL)                     /*!< CF2HZ (Bit 6)                                         */
#define CCC_R128CNT_CF2HZ_Msk             (0x40UL)                  /*!< CF2HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CNT_CF1HZ_Pos             (7UL)                     /*!< CF1HZ (Bit 7)                                         */
#define CCC_R128CNT_CF1HZ_Msk             (0x80UL)                  /*!< CF1HZ (Bitfield-Mask: 0x01)                           */
/* =======================================================  R128CTRL  ======================================================== */
#define CCC_R128CTRL_CADJUSCEN_Pos        (0UL)                     /*!< CADJUSCEN (Bit 0)                                     */
#define CCC_R128CTRL_CADJUSCEN_Msk        (0x1UL)                   /*!< CADJUSCEN (Bitfield-Mask: 0x01)                       */
#define CCC_R128CTRL_ADJUSTEN_Pos         (1UL)                     /*!< ADJUSTEN (Bit 1)                                      */
#define CCC_R128CTRL_ADJUSTEN_Msk         (0x2UL)                   /*!< ADJUSTEN (Bitfield-Mask: 0x01)                        */
#define CCC_R128CTRL_CRESET_Pos           (2UL)                     /*!< CRESET (Bit 2)                                        */
#define CCC_R128CTRL_CRESET_Msk           (0x4UL)                   /*!< CRESET (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_COPSEL_Pos           (3UL)                     /*!< COPSEL (Bit 3)                                        */
#define CCC_R128CTRL_COPSEL_Msk           (0x8UL)                   /*!< COPSEL (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_CRTCOS_Pos           (4UL)                     /*!< CRTCOS (Bit 4)                                        */
#define CCC_R128CTRL_CRTCOS_Msk           (0x10UL)                  /*!< CRTCOS (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_CCIE_Pos             (5UL)                     /*!< CCIE (Bit 5)                                          */
#define CCC_R128CTRL_CCIE_Msk             (0x20UL)                  /*!< CCIE (Bitfield-Mask: 0x01)                            */
#define CCC_R128CTRL_CPIE_Pos             (6UL)                     /*!< CPIE (Bit 6)                                          */
#define CCC_R128CTRL_CPIE_Msk             (0x40UL)                  /*!< CPIE (Bitfield-Mask: 0x01)                            */
#define CCC_R128CTRL_CPES_Pos             (7UL)                     /*!< CPES (Bit 7)                                          */
#define CCC_R128CTRL_CPES_Msk             (0x180UL)                 /*!< CPES (Bitfield-Mask: 0x03)                            */
#define CCC_R128CTRL_CRTCOE_Pos           (9UL)                     /*!< CRTCOE (Bit 9)                                        */
#define CCC_R128CTRL_CRTCOE_Msk           (0x200UL)                 /*!< CRTCOE (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_CEIE_Pos             (10UL)                    /*!< CEIE (Bit 10)                                         */
#define CCC_R128CTRL_CEIE_Msk             (0x400UL)                 /*!< CEIE (Bitfield-Mask: 0x01)                            */
#define CCC_R128CTRL_CPES_EX_Pos          (11UL)                    /*!< CPES_EX (Bit 11)                                      */
#define CCC_R128CTRL_CPES_EX_Msk          (0x800UL)                 /*!< CPES_EX (Bitfield-Mask: 0x01)                         */
#define CCC_R128CTRL_PF128HZ_Pos          (16UL)                    /*!< PF128HZ (Bit 16)                                      */
#define CCC_R128CTRL_PF128HZ_Msk          (0x10000UL)               /*!< PF128HZ (Bitfield-Mask: 0x01)                         */
#define CCC_R128CTRL_PF64HZ_Pos           (17UL)                    /*!< PF64HZ (Bit 17)                                       */
#define CCC_R128CTRL_PF64HZ_Msk           (0x20000UL)               /*!< PF64HZ (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_PF16HZ_Pos           (18UL)                    /*!< PF16HZ (Bit 18)                                       */
#define CCC_R128CTRL_PF16HZ_Msk           (0x40000UL)               /*!< PF16HZ (Bitfield-Mask: 0x01)                          */
#define CCC_R128CTRL_PF4HZ_Pos            (19UL)                    /*!< PF4HZ (Bit 19)                                        */
#define CCC_R128CTRL_PF4HZ_Msk            (0x80000UL)               /*!< PF4HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CTRL_PF2HZ_Pos            (20UL)                    /*!< PF2HZ (Bit 20)                                        */
#define CCC_R128CTRL_PF2HZ_Msk            (0x100000UL)              /*!< PF2HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CTRL_PF1HZ_Pos            (21UL)                    /*!< PF1HZ (Bit 21)                                        */
#define CCC_R128CTRL_PF1HZ_Msk            (0x200000UL)              /*!< PF1HZ (Bitfield-Mask: 0x01)                           */
#define CCC_R128CTRL_PFWR0ST_Pos          (22UL)                    /*!< PFWR0ST (Bit 22)                                      */
#define CCC_R128CTRL_PFWR0ST_Msk          (0x400000UL)              /*!< PFWR0ST (Bitfield-Mask: 0x01)                         */
#define CCC_R128CTRL_PFEN_Pos             (31UL)                    /*!< PFEN (Bit 31)                                         */
#define CCC_R128CTRL_PFEN_Msk             (0x80000000UL)            /*!< PFEN (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           AGT0                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  AGT  ========================================================== */
/* ========================================================  AGTCMA  ========================================================= */
/* ========================================================  AGTCMB  ========================================================= */
/* =========================================================  AGTCR  ========================================================= */
#define AGT0_AGTCR_TSTART_Pos             (0UL)                     /*!< TSTART (Bit 0)                                        */
#define AGT0_AGTCR_TSTART_Msk             (0x1UL)                   /*!< TSTART (Bitfield-Mask: 0x01)                          */
#define AGT0_AGTCR_TCSTF_Pos              (1UL)                     /*!< TCSTF (Bit 1)                                         */
#define AGT0_AGTCR_TCSTF_Msk              (0x2UL)                   /*!< TCSTF (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCR_TSTOP_Pos              (2UL)                     /*!< TSTOP (Bit 2)                                         */
#define AGT0_AGTCR_TSTOP_Msk              (0x4UL)                   /*!< TSTOP (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCR_TEDGF_Pos              (4UL)                     /*!< TEDGF (Bit 4)                                         */
#define AGT0_AGTCR_TEDGF_Msk              (0x10UL)                  /*!< TEDGF (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCR_TUNDF_Pos              (5UL)                     /*!< TUNDF (Bit 5)                                         */
#define AGT0_AGTCR_TUNDF_Msk              (0x20UL)                  /*!< TUNDF (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCR_TCMAF_Pos              (6UL)                     /*!< TCMAF (Bit 6)                                         */
#define AGT0_AGTCR_TCMAF_Msk              (0x40UL)                  /*!< TCMAF (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCR_TCMBF_Pos              (7UL)                     /*!< TCMBF (Bit 7)                                         */
#define AGT0_AGTCR_TCMBF_Msk              (0x80UL)                  /*!< TCMBF (Bitfield-Mask: 0x01)                           */
/* ========================================================  AGTMR1  ========================================================= */
#define AGT0_AGTMR1_TMOD_Pos              (0UL)                     /*!< TMOD (Bit 0)                                          */
#define AGT0_AGTMR1_TMOD_Msk              (0x7UL)                   /*!< TMOD (Bitfield-Mask: 0x07)                            */
#define AGT0_AGTMR1_TEDGPL_Pos            (3UL)                     /*!< TEDGPL (Bit 3)                                        */
#define AGT0_AGTMR1_TEDGPL_Msk            (0x8UL)                   /*!< TEDGPL (Bitfield-Mask: 0x01)                          */
#define AGT0_AGTMR1_TCK_Pos               (4UL)                     /*!< TCK (Bit 4)                                           */
#define AGT0_AGTMR1_TCK_Msk               (0x70UL)                  /*!< TCK (Bitfield-Mask: 0x07)                             */
/* ========================================================  AGTMR2  ========================================================= */
#define AGT0_AGTMR2_CKS_Pos               (0UL)                     /*!< CKS (Bit 0)                                           */
#define AGT0_AGTMR2_CKS_Msk               (0x7UL)                   /*!< CKS (Bitfield-Mask: 0x07)                             */
#define AGT0_AGTMR2_LPM_Pos               (7UL)                     /*!< LPM (Bit 7)                                           */
#define AGT0_AGTMR2_LPM_Msk               (0x80UL)                  /*!< LPM (Bitfield-Mask: 0x01)                             */
/* ========================================================  AGTIOC  ========================================================= */
#define AGT0_AGTIOC_TEDGSEL_Pos           (0UL)                     /*!< TEDGSEL (Bit 0)                                       */
#define AGT0_AGTIOC_TEDGSEL_Msk           (0x1UL)                   /*!< TEDGSEL (Bitfield-Mask: 0x01)                         */
#define AGT0_AGTIOC_TOE_Pos               (2UL)                     /*!< TOE (Bit 2)                                           */
#define AGT0_AGTIOC_TOE_Msk               (0x4UL)                   /*!< TOE (Bitfield-Mask: 0x01)                             */
#define AGT0_AGTIOC_TIPF_Pos              (4UL)                     /*!< TIPF (Bit 4)                                          */
#define AGT0_AGTIOC_TIPF_Msk              (0x30UL)                  /*!< TIPF (Bitfield-Mask: 0x03)                            */
#define AGT0_AGTIOC_TIOGT_Pos             (6UL)                     /*!< TIOGT (Bit 6)                                         */
#define AGT0_AGTIOC_TIOGT_Msk             (0xc0UL)                  /*!< TIOGT (Bitfield-Mask: 0x03)                           */
/* ========================================================  AGTISR  ========================================================= */
#define AGT0_AGTISR_EEPS_Pos              (2UL)                     /*!< EEPS (Bit 2)                                          */
#define AGT0_AGTISR_EEPS_Msk              (0x4UL)                   /*!< EEPS (Bitfield-Mask: 0x01)                            */
/* ========================================================  AGTCMSR  ======================================================== */
#define AGT0_AGTCMSR_TCMEA_Pos            (0UL)                     /*!< TCMEA (Bit 0)                                         */
#define AGT0_AGTCMSR_TCMEA_Msk            (0x1UL)                   /*!< TCMEA (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCMSR_TOEA_Pos             (1UL)                     /*!< TOEA (Bit 1)                                          */
#define AGT0_AGTCMSR_TOEA_Msk             (0x2UL)                   /*!< TOEA (Bitfield-Mask: 0x01)                            */
#define AGT0_AGTCMSR_TOPOLA_Pos           (2UL)                     /*!< TOPOLA (Bit 2)                                        */
#define AGT0_AGTCMSR_TOPOLA_Msk           (0x4UL)                   /*!< TOPOLA (Bitfield-Mask: 0x01)                          */
#define AGT0_AGTCMSR_TCMEB_Pos            (4UL)                     /*!< TCMEB (Bit 4)                                         */
#define AGT0_AGTCMSR_TCMEB_Msk            (0x10UL)                  /*!< TCMEB (Bitfield-Mask: 0x01)                           */
#define AGT0_AGTCMSR_TOEB_Pos             (5UL)                     /*!< TOEB (Bit 5)                                          */
#define AGT0_AGTCMSR_TOEB_Msk             (0x20UL)                  /*!< TOEB (Bitfield-Mask: 0x01)                            */
#define AGT0_AGTCMSR_TOPOLB_Pos           (6UL)                     /*!< TOPOLB (Bit 6)                                        */
#define AGT0_AGTCMSR_TOPOLB_Msk           (0x40UL)                  /*!< TOPOLB (Bitfield-Mask: 0x01)                          */
/* =======================================================  AGTIOSEL  ======================================================== */
#define AGT0_AGTIOSEL_TIES_Pos            (4UL)                     /*!< TIES (Bit 4)                                          */
#define AGT0_AGTIOSEL_TIES_Msk            (0x10UL)                  /*!< TIES (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           AGTW0                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  AGT  ========================================================== */
/* ========================================================  AGTCMA  ========================================================= */
/* ========================================================  AGTCMB  ========================================================= */
/* =========================================================  AGTCR  ========================================================= */
#define AGTW0_AGTCR_TSTART_Pos            (0UL)                     /*!< TSTART (Bit 0)                                        */
#define AGTW0_AGTCR_TSTART_Msk            (0x1UL)                   /*!< TSTART (Bitfield-Mask: 0x01)                          */
#define AGTW0_AGTCR_TCSTF_Pos             (1UL)                     /*!< TCSTF (Bit 1)                                         */
#define AGTW0_AGTCR_TCSTF_Msk             (0x2UL)                   /*!< TCSTF (Bitfield-Mask: 0x01)                           */
#define AGTW0_AGTCR_TSTOP_Pos             (2UL)                     /*!< TSTOP (Bit 2)                                         */
#define AGTW0_AGTCR_TSTOP_Msk             (0x4UL)                   /*!< TSTOP (Bitfield-Mask: 0x01)                           */
#define AGTW0_AGTCR_TEDGF_Pos             (4UL)                     /*!< TEDGF (Bit 4)                                         */
#define AGTW0_AGTCR_TEDGF_Msk             (0x10UL)                  /*!< TEDGF (Bitfield-Mask: 0x01)                           */
#define AGTW0_AGTCR_TUNDF_Pos             (5UL)                     /*!< TUNDF (Bit 5)                                         */
#define AGTW0_AGTCR_TUNDF_Msk             (0x20UL)                  /*!< TUNDF (Bitfield-Mask: 0x01)                           */
#define AGTW0_AGTCR_TCMAF_Pos             (6UL)                     /*!< TCMAF (Bit 6)                                         */
#define AGTW0_AGTCR_TCMAF_Msk             (0x40UL)                  /*!< TCMAF (Bitfield-Mask: 0x01)                           */
#define AGTW0_AGTCR_TCMBF_Pos             (7UL)                     /*!< TCMBF (Bit 7)                                         */
#define AGTW0_AGTCR_TCMBF_Msk             (0x80UL)                  /*!< TCMBF (Bitfield-Mask: 0x01)                           */
/* ========================================================  AGTMR1  ========================================================= */
#define AGTW0_AGTMR1_TMOD_Pos             (0UL)                     /*!< TMOD (Bit 0)                                          */
#define AGTW0_AGTMR1_TMOD_Msk             (0x7UL)                   /*!< TMOD (Bitfield-Mask: 0x07)                            */
#define AGTW0_AGTMR1_TEDGPL_Pos           (3UL)                     /*!< TEDGPL (Bit 3)                                        */
#define AGTW0_AGTMR1_TEDGPL_Msk           (0x8UL)                   /*!< TEDGPL (Bitfield-Mask: 0x01)                          */
#define AGTW0_AGTMR1_TCK_Pos              (4UL)                     /*!< TCK (Bit 4)                                           */
#define AGTW0_AGTMR1_TCK_Msk              (0x70UL)                  /*!< TCK (Bitfield-Mask: 0x07)                             */
/* ========================================================  AGTMR2  ========================================================= */
#define AGTW0_AGTMR2_CKS_Pos              (0UL)                     /*!< CKS (Bit 0)                                           */
#define AGTW0_AGTMR2_CKS_Msk              (0x7UL)                   /*!< CKS (Bitfield-Mask: 0x07)                             */
#define AGTW0_AGTMR2_LPM_Pos              (7UL)                     /*!< LPM (Bit 7)                                           */
#define AGTW0_AGTMR2_LPM_Msk              (0x80UL)                  /*!< LPM (Bitfield-Mask: 0x01)                             */
/* ========================================================  AGTIOC  ========================================================= */
#define AGTW0_AGTIOC_TEDGSEL_Pos          (0UL)                     /*!< TEDGSEL (Bit 0)                                       */
#define AGTW0_AGTIOC_TEDGSEL_Msk          (0x1UL)                   /*!< TEDGSEL (Bitfield-Mask: 0x01)                         */
#define AGTW0_AGTIOC_TOE_Pos              (2UL)                     /*!< TOE (Bit 2)                                           */
#define AGTW0_AGTIOC_TOE_Msk              (0x4UL)                   /*!< TOE (Bitfield-Mask: 0x01)                             */
#define AGTW0_AGTIOC_TIPF_Pos             (4UL)                     /*!< TIPF (Bit 4)                                          */
#define AGTW0_AGTIOC_TIPF_Msk             (0x30UL)                  /*!< TIPF (Bitfield-Mask: 0x03)                            */
#define AGTW0_AGTIOC_TIOGT_Pos            (6UL)                     /*!< TIOGT (Bit 6)                                         */
#define AGTW0_AGTIOC_TIOGT_Msk            (0xc0UL)                  /*!< TIOGT (Bitfield-Mask: 0x03)                           */
/* ========================================================  AGTISR  ========================================================= */
#define AGTW0_AGTISR_EEPS_Pos             (2UL)                     /*!< EEPS (Bit 2)                                          */
#define AGTW0_AGTISR_EEPS_Msk             (0x4UL)                   /*!< EEPS (Bitfield-Mask: 0x01)                            */
/* ========================================================  AGTCMSR  ======================================================== */
#define AGTW0_AGTCMSR_TCMEA_Pos           (0UL)                     /*!< TCMEA (Bit 0)                                         */
#define AGTW0_AGTCMSR_TCMEA_Msk           (0x1UL)                   /*!< TCMEA (Bitfield-Mask: 0x01)                           */
#define AGTW0_AGTCMSR_TOEA_Pos            (1UL)                     /*!< TOEA (Bit 1)                                          */
#define AGTW0_AGTCMSR_TOEA_Msk            (0x2UL)                   /*!< TOEA (Bitfield-Mask: 0x01)                            */
#define AGTW0_AGTCMSR_TOPOLA_Pos          (2UL)                     /*!< TOPOLA (Bit 2)                                        */
#define AGTW0_AGTCMSR_TOPOLA_Msk          (0x4UL)                   /*!< TOPOLA (Bitfield-Mask: 0x01)                          */
#define AGTW0_AGTCMSR_TCMEB_Pos           (4UL)                     /*!< TCMEB (Bit 4)                                         */
#define AGTW0_AGTCMSR_TCMEB_Msk           (0x10UL)                  /*!< TCMEB (Bitfield-Mask: 0x01)                           */
#define AGTW0_AGTCMSR_TOEB_Pos            (5UL)                     /*!< TOEB (Bit 5)                                          */
#define AGTW0_AGTCMSR_TOEB_Msk            (0x20UL)                  /*!< TOEB (Bitfield-Mask: 0x01)                            */
#define AGTW0_AGTCMSR_TOPOLB_Pos          (6UL)                     /*!< TOPOLB (Bit 6)                                        */
#define AGTW0_AGTCMSR_TOPOLB_Msk          (0x40UL)                  /*!< TOPOLB (Bitfield-Mask: 0x01)                          */
/* =======================================================  AGTIOSEL  ======================================================== */
#define AGTW0_AGTIOSEL_TIES_Pos           (4UL)                     /*!< TIES (Bit 4)                                          */
#define AGTW0_AGTIOSEL_TIES_Msk           (0x10UL)                  /*!< TIES (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                            LST                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  LSTCNT  ========================================================= */
#define LST_LSTCNT_OTHSECCNT_Pos          (0UL)                     /*!< OTHSECCNT (Bit 0)                                     */
#define LST_LSTCNT_OTHSECCNT_Msk          (0xfUL)                   /*!< OTHSECCNT (Bitfield-Mask: 0x0f)                       */
#define LST_LSTCNT_OHSECCNT_Pos           (4UL)                     /*!< OHSECCNT (Bit 4)                                      */
#define LST_LSTCNT_OHSECCNT_Msk           (0xf0UL)                  /*!< OHSECCNT (Bitfield-Mask: 0x0f)                        */
#define LST_LSTCNT_OTSECCNT_Pos           (8UL)                     /*!< OTSECCNT (Bit 8)                                      */
#define LST_LSTCNT_OTSECCNT_Msk           (0xf00UL)                 /*!< OTSECCNT (Bitfield-Mask: 0x0f)                        */
#define LST_LSTCNT_SECCNT_Pos             (12UL)                    /*!< SECCNT (Bit 12)                                       */
#define LST_LSTCNT_SECCNT_Msk             (0x1000UL)                /*!< SECCNT (Bitfield-Mask: 0x01)                          */
/* ========================================================  LSTCTRL  ======================================================== */
#define LST_LSTCTRL_LSTSTART_Pos          (0UL)                     /*!< LSTSTART (Bit 0)                                      */
#define LST_LSTCTRL_LSTSTART_Msk          (0x1UL)                   /*!< LSTSTART (Bitfield-Mask: 0x01)                        */
#define LST_LSTCTRL_LSTRST_Pos            (1UL)                     /*!< LSTRST (Bit 1)                                        */
#define LST_LSTCTRL_LSTRST_Msk            (0x2UL)                   /*!< LSTRST (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           WUPT                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  TCM0  ========================================================== */
/* =========================================================  TCM1  ========================================================== */
/* =========================================================  TCM2  ========================================================== */
/* =========================================================  TCM3  ========================================================== */
/* ==========================================================  TCR  ========================================================== */
#define WUPT_TCR_OS_Pos                   (0UL)                     /*!< OS (Bit 0)                                            */
#define WUPT_TCR_OS_Msk                   (0x3UL)                   /*!< OS (Bitfield-Mask: 0x03)                              */
#define WUPT_TCR_TMOE_Pos                 (2UL)                     /*!< TMOE (Bit 2)                                          */
#define WUPT_TCR_TMOE_Msk                 (0x4UL)                   /*!< TMOE (Bitfield-Mask: 0x01)                            */
#define WUPT_TCR_OVIE_Pos                 (3UL)                     /*!< OVIE (Bit 3)                                          */
#define WUPT_TCR_OVIE_Msk                 (0x8UL)                   /*!< OVIE (Bitfield-Mask: 0x01)                            */
#define WUPT_TCR_TCCE_Pos                 (4UL)                     /*!< TCCE (Bit 4)                                          */
#define WUPT_TCR_TCCE_Msk                 (0x10UL)                  /*!< TCCE (Bitfield-Mask: 0x01)                            */
#define WUPT_TCR_TCRS_Pos                 (6UL)                     /*!< TCRS (Bit 6)                                          */
#define WUPT_TCR_TCRS_Msk                 (0x40UL)                  /*!< TCRS (Bitfield-Mask: 0x01)                            */
#define WUPT_TCR_TCST_Pos                 (7UL)                     /*!< TCST (Bit 7)                                          */
#define WUPT_TCR_TCST_Msk                 (0x80UL)                  /*!< TCST (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                            DIL                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  IDR0  ========================================================== */
/* =========================================================  IDR1  ========================================================== */
/* =========================================================  IDR2  ========================================================== */
/* =========================================================  IDR3  ========================================================== */
/* =========================================================  ODR0  ========================================================== */
/* =========================================================  ODR1  ========================================================== */
/* =========================================================  ODR2  ========================================================== */
/* =========================================================  ODR3  ========================================================== */
/* =========================================================  IDR10  ========================================================= */
/* =========================================================  IDR11  ========================================================= */
/* =========================================================  IDR12  ========================================================= */
/* =========================================================  IDR13  ========================================================= */
/* =========================================================  DILCR  ========================================================= */
#define DIL_DILCR_DILEN_Pos               (0UL)                     /*!< DILEN (Bit 0)                                         */
#define DIL_DILCR_DILEN_Msk               (0x1UL)                   /*!< DILEN (Bitfield-Mask: 0x01)                           */
#define DIL_DILCR_DILMODE_Pos             (16UL)                    /*!< DILMODE (Bit 16)                                      */
#define DIL_DILCR_DILMODE_Msk             (0xf0000UL)               /*!< DILMODE (Bitfield-Mask: 0x0f)                         */


/* =========================================================================================================================== */
/* ================                                            DIV                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DIVCR  ========================================================= */
#define DIV_DIVCR_EN_Pos                  (0UL)                     /*!< EN (Bit 0)                                            */
#define DIV_DIVCR_EN_Msk                  (0x1UL)                   /*!< EN (Bitfield-Mask: 0x01)                              */
#define DIV_DIVCR_CALBUSY_Pos             (8UL)                     /*!< CALBUSY (Bit 8)                                       */
#define DIV_DIVCR_CALBUSY_Msk             (0x100UL)                 /*!< CALBUSY (Bitfield-Mask: 0x01)                         */
#define DIV_DIVCR_DIVERR_Pos              (9UL)                     /*!< DIVERR (Bit 9)                                        */
#define DIV_DIVCR_DIVERR_Msk              (0x200UL)                 /*!< DIVERR (Bitfield-Mask: 0x01)                          */
/* =======================================================  DIVIDEND  ======================================================== */
/* ========================================================  DIVSOR  ========================================================= */
/* =======================================================  QUOTIENT  ======================================================== */
/* =======================================================  REMAINDER  ======================================================= */


/* =========================================================================================================================== */
/* ================                                           VREF                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  AVCR  ========================================================== */
#define VREF_AVCR_IBIASEN_Pos             (0UL)                     /*!< IBIASEN (Bit 0)                                       */
#define VREF_AVCR_IBIASEN_Msk             (0x1UL)                   /*!< IBIASEN (Bitfield-Mask: 0x01)                         */
#define VREF_AVCR_VREFEN_Pos              (4UL)                     /*!< VREFEN (Bit 4)                                        */
#define VREF_AVCR_VREFEN_Msk              (0x10UL)                  /*!< VREFEN (Bitfield-Mask: 0x01)                          */
#define VREF_AVCR_AVSEL_Pos               (8UL)                     /*!< AVSEL (Bit 8)                                         */
#define VREF_AVCR_AVSEL_Msk               (0x100UL)                 /*!< AVSEL (Bitfield-Mask: 0x01)                           */
#define VREF_AVCR_LPMD_Pos                (16UL)                    /*!< LPMD (Bit 16)                                         */
#define VREF_AVCR_LPMD_Msk                (0x10000UL)               /*!< LPMD (Bitfield-Mask: 0x01)                            */
#define VREF_AVCR_STDMD_Pos               (18UL)                    /*!< STDMD (Bit 18)                                        */
#define VREF_AVCR_STDMD_Msk               (0x40000UL)               /*!< STDMD (Bitfield-Mask: 0x01)                           */


/* =========================================================================================================================== */
/* ================                                           FACI                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  FASTAT  ========================================================= */
#define FACI_FASTAT_CMDLK_Pos             (4UL)                     /*!< CMDLK (Bit 4)                                         */
#define FACI_FASTAT_CMDLK_Msk             (0x10UL)                  /*!< CMDLK (Bitfield-Mask: 0x01)                           */
#define FACI_FASTAT_CFAE_Pos              (7UL)                     /*!< CFAE (Bit 7)                                          */
#define FACI_FASTAT_CFAE_Msk              (0x80UL)                  /*!< CFAE (Bitfield-Mask: 0x01)                            */
/* ========================================================  FAEINT  ========================================================= */
#define FACI_FAEINT_CMDLKIE_Pos           (4UL)                     /*!< CMDLKIE (Bit 4)                                       */
#define FACI_FAEINT_CMDLKIE_Msk           (0x10UL)                  /*!< CMDLKIE (Bitfield-Mask: 0x01)                         */
#define FACI_FAEINT_CFAEIE_Pos            (7UL)                     /*!< CFAEIE (Bit 7)                                        */
#define FACI_FAEINT_CFAEIE_Msk            (0x80UL)                  /*!< CFAEIE (Bitfield-Mask: 0x01)                          */
/* ========================================================  FRDYIE  ========================================================= */
#define FACI_FRDYIE_FRDYIE_Pos            (0UL)                     /*!< FRDYIE (Bit 0)                                        */
#define FACI_FRDYIE_FRDYIE_Msk            (0x1UL)                   /*!< FRDYIE (Bitfield-Mask: 0x01)                          */
/* ========================================================  FSADDR  ========================================================= */
#define FACI_FSADDR_FSADDR_Pos            (0UL)                     /*!< FSADDR (Bit 0)                                        */
#define FACI_FSADDR_FSADDR_Msk            (0xffffffffUL)            /*!< FSADDR (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  FSTATR  ========================================================= */
#define FACI_FSTATR_FLWEERR_Pos           (6UL)                     /*!< FLWEERR (Bit 6)                                       */
#define FACI_FSTATR_FLWEERR_Msk           (0x40UL)                  /*!< FLWEERR (Bitfield-Mask: 0x01)                         */
#define FACI_FSTATR_PRGSPD_Pos            (8UL)                     /*!< PRGSPD (Bit 8)                                        */
#define FACI_FSTATR_PRGSPD_Msk            (0x100UL)                 /*!< PRGSPD (Bitfield-Mask: 0x01)                          */
#define FACI_FSTATR_ERSSPD_Pos            (9UL)                     /*!< ERSSPD (Bit 9)                                        */
#define FACI_FSTATR_ERSSPD_Msk            (0x200UL)                 /*!< ERSSPD (Bitfield-Mask: 0x01)                          */
#define FACI_FSTATR_DBFULL_Pos            (10UL)                    /*!< DBFULL (Bit 10)                                       */
#define FACI_FSTATR_DBFULL_Msk            (0x400UL)                 /*!< DBFULL (Bitfield-Mask: 0x01)                          */
#define FACI_FSTATR_SUSRDY_Pos            (11UL)                    /*!< SUSRDY (Bit 11)                                       */
#define FACI_FSTATR_SUSRDY_Msk            (0x800UL)                 /*!< SUSRDY (Bitfield-Mask: 0x01)                          */
#define FACI_FSTATR_PRGERR_Pos            (12UL)                    /*!< PRGERR (Bit 12)                                       */
#define FACI_FSTATR_PRGERR_Msk            (0x1000UL)                /*!< PRGERR (Bitfield-Mask: 0x01)                          */
#define FACI_FSTATR_ERSERR_Pos            (13UL)                    /*!< ERSERR (Bit 13)                                       */
#define FACI_FSTATR_ERSERR_Msk            (0x2000UL)                /*!< ERSERR (Bitfield-Mask: 0x01)                          */
#define FACI_FSTATR_ILGLERR_Pos           (14UL)                    /*!< ILGLERR (Bit 14)                                      */
#define FACI_FSTATR_ILGLERR_Msk           (0x4000UL)                /*!< ILGLERR (Bitfield-Mask: 0x01)                         */
#define FACI_FSTATR_FRDY_Pos              (15UL)                    /*!< FRDY (Bit 15)                                         */
#define FACI_FSTATR_FRDY_Msk              (0x8000UL)                /*!< FRDY (Bitfield-Mask: 0x01)                            */
#define FACI_FSTATR_OTERR_Pos             (20UL)                    /*!< OTERR (Bit 20)                                        */
#define FACI_FSTATR_OTERR_Msk             (0x100000UL)              /*!< OTERR (Bitfield-Mask: 0x01)                           */
#define FACI_FSTATR_SECERR_Pos            (21UL)                    /*!< SECERR (Bit 21)                                       */
#define FACI_FSTATR_SECERR_Msk            (0x200000UL)              /*!< SECERR (Bitfield-Mask: 0x01)                          */
#define FACI_FSTATR_FESETERR_Pos          (22UL)                    /*!< FESETERR (Bit 22)                                     */
#define FACI_FSTATR_FESETERR_Msk          (0x400000UL)              /*!< FESETERR (Bitfield-Mask: 0x01)                        */
#define FACI_FSTATR_ILGCOMERR_Pos         (23UL)                    /*!< ILGCOMERR (Bit 23)                                    */
#define FACI_FSTATR_ILGCOMERR_Msk         (0x800000UL)              /*!< ILGCOMERR (Bitfield-Mask: 0x01)                       */
/* ========================================================  FENTRYR  ======================================================== */
#define FACI_FENTRYR_FENTRYC_Pos          (0UL)                     /*!< FENTRYC (Bit 0)                                       */
#define FACI_FENTRYR_FENTRYC_Msk          (0x1UL)                   /*!< FENTRYC (Bitfield-Mask: 0x01)                         */
#define FACI_FENTRYR_KEY_Pos              (8UL)                     /*!< KEY (Bit 8)                                           */
#define FACI_FENTRYR_KEY_Msk              (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
/* =======================================================  FSUINITR  ======================================================== */
#define FACI_FSUINITR_SUINIT_Pos          (0UL)                     /*!< SUINIT (Bit 0)                                        */
#define FACI_FSUINITR_SUINIT_Msk          (0x1UL)                   /*!< SUINIT (Bitfield-Mask: 0x01)                          */
#define FACI_FSUINITR_KEY_Pos             (8UL)                     /*!< KEY (Bit 8)                                           */
#define FACI_FSUINITR_KEY_Msk             (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
/* =========================================================  FCMDR  ========================================================= */
#define FACI_FCMDR_PCMDR_Pos              (0UL)                     /*!< PCMDR (Bit 0)                                         */
#define FACI_FCMDR_PCMDR_Msk              (0xffUL)                  /*!< PCMDR (Bitfield-Mask: 0xff)                           */
#define FACI_FCMDR_CMDR_Pos               (8UL)                     /*!< CMDR (Bit 8)                                          */
#define FACI_FCMDR_CMDR_Msk               (0xff00UL)                /*!< CMDR (Bitfield-Mask: 0xff)                            */
/* ========================================================  FAWMON  ========================================================= */
#define FACI_FAWMON_FAWS_Pos              (0UL)                     /*!< FAWS (Bit 0)                                          */
#define FACI_FAWMON_FAWS_Msk              (0x3ffUL)                 /*!< FAWS (Bitfield-Mask: 0x3ff)                           */
#define FACI_FAWMON_FSPR_Pos              (15UL)                    /*!< FSPR (Bit 15)                                         */
#define FACI_FAWMON_FSPR_Msk              (0x8000UL)                /*!< FSPR (Bitfield-Mask: 0x01)                            */
#define FACI_FAWMON_FAWE_Pos              (16UL)                    /*!< FAWE (Bit 16)                                         */
#define FACI_FAWMON_FAWE_Msk              (0x3ff0000UL)             /*!< FAWE (Bitfield-Mask: 0x3ff)                           */
#define FACI_FAWMON_BTFLG_Pos             (31UL)                    /*!< BTFLG (Bit 31)                                        */
#define FACI_FAWMON_BTFLG_Msk             (0x80000000UL)            /*!< BTFLG (Bitfield-Mask: 0x01)                           */
/* ========================================================  FPCKAR  ========================================================= */
#define FACI_FPCKAR_PCKA_Pos              (0UL)                     /*!< PCKA (Bit 0)                                          */
#define FACI_FPCKAR_PCKA_Msk              (0xffUL)                  /*!< PCKA (Bitfield-Mask: 0xff)                            */
#define FACI_FPCKAR_KEY_Pos               (8UL)                     /*!< KEY (Bit 8)                                           */
#define FACI_FPCKAR_KEY_Msk               (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */
/* ========================================================  FSUACR  ========================================================= */
#define FACI_FSUACR_SAS_Pos               (0UL)                     /*!< SAS (Bit 0)                                           */
#define FACI_FSUACR_SAS_Msk               (0x3UL)                   /*!< SAS (Bitfield-Mask: 0x03)                             */
#define FACI_FSUACR_KEY_Pos               (8UL)                     /*!< KEY (Bit 8)                                           */
#define FACI_FSUACR_KEY_Msk               (0xff00UL)                /*!< KEY (Bitfield-Mask: 0xff)                             */


/* =========================================================================================================================== */
/* ================                                           QSPI                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  SFMSMD  ========================================================= */
#define QSPI_SFMSMD_SFMRM_Pos             (0UL)                     /*!< SFMRM (Bit 0)                                         */
#define QSPI_SFMSMD_SFMRM_Msk             (0x7UL)                   /*!< SFMRM (Bitfield-Mask: 0x07)                           */
#define QSPI_SFMSMD_SFMSE_Pos             (4UL)                     /*!< SFMSE (Bit 4)                                         */
#define QSPI_SFMSMD_SFMSE_Msk             (0x30UL)                  /*!< SFMSE (Bitfield-Mask: 0x03)                           */
#define QSPI_SFMSMD_SFMPFE_Pos            (6UL)                     /*!< SFMPFE (Bit 6)                                        */
#define QSPI_SFMSMD_SFMPFE_Msk            (0x40UL)                  /*!< SFMPFE (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSMD_SFMMD3_Pos            (8UL)                     /*!< SFMMD3 (Bit 8)                                        */
#define QSPI_SFMSMD_SFMMD3_Msk            (0x100UL)                 /*!< SFMMD3 (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSMD_SFMOEX_Pos            (9UL)                     /*!< SFMOEX (Bit 9)                                        */
#define QSPI_SFMSMD_SFMOEX_Msk            (0x200UL)                 /*!< SFMOEX (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSMD_SFMCCE_Pos            (15UL)                    /*!< SFMCCE (Bit 15)                                       */
#define QSPI_SFMSMD_SFMCCE_Msk            (0x8000UL)                /*!< SFMCCE (Bitfield-Mask: 0x01)                          */
/* ========================================================  SFMSSC  ========================================================= */
#define QSPI_SFMSSC_SFMSW_Pos             (0UL)                     /*!< SFMSW (Bit 0)                                         */
#define QSPI_SFMSSC_SFMSW_Msk             (0xfUL)                   /*!< SFMSW (Bitfield-Mask: 0x0f)                           */
#define QSPI_SFMSSC_SFMSHD_Pos            (4UL)                     /*!< SFMSHD (Bit 4)                                        */
#define QSPI_SFMSSC_SFMSHD_Msk            (0x10UL)                  /*!< SFMSHD (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSSC_SFMSLD_Pos            (5UL)                     /*!< SFMSLD (Bit 5)                                        */
#define QSPI_SFMSSC_SFMSLD_Msk            (0x20UL)                  /*!< SFMSLD (Bitfield-Mask: 0x01)                          */
/* ========================================================  SFMSKC  ========================================================= */
#define QSPI_SFMSKC_SFMDV_Pos             (0UL)                     /*!< SFMDV (Bit 0)                                         */
#define QSPI_SFMSKC_SFMDV_Msk             (0x1fUL)                  /*!< SFMDV (Bitfield-Mask: 0x1f)                           */
#define QSPI_SFMSKC_SFMDTY_Pos            (5UL)                     /*!< SFMDTY (Bit 5)                                        */
#define QSPI_SFMSKC_SFMDTY_Msk            (0x20UL)                  /*!< SFMDTY (Bitfield-Mask: 0x01)                          */
/* ========================================================  SFMSST  ========================================================= */
#define QSPI_SFMSST_PFCNT_Pos             (0UL)                     /*!< PFCNT (Bit 0)                                         */
#define QSPI_SFMSST_PFCNT_Msk             (0x1fUL)                  /*!< PFCNT (Bitfield-Mask: 0x1f)                           */
#define QSPI_SFMSST_PFFUL_Pos             (6UL)                     /*!< PFFUL (Bit 6)                                         */
#define QSPI_SFMSST_PFFUL_Msk             (0x40UL)                  /*!< PFFUL (Bitfield-Mask: 0x01)                           */
#define QSPI_SFMSST_PFOFF_Pos             (7UL)                     /*!< PFOFF (Bit 7)                                         */
#define QSPI_SFMSST_PFOFF_Msk             (0x80UL)                  /*!< PFOFF (Bitfield-Mask: 0x01)                           */
/* ========================================================  SFMCOM  ========================================================= */
#define QSPI_SFMCOM_SFMD_Pos              (0UL)                     /*!< SFMD (Bit 0)                                          */
#define QSPI_SFMCOM_SFMD_Msk              (0xffUL)                  /*!< SFMD (Bitfield-Mask: 0xff)                            */
/* ========================================================  SFMCMD  ========================================================= */
#define QSPI_SFMCMD_DCOM_Pos              (0UL)                     /*!< DCOM (Bit 0)                                          */
#define QSPI_SFMCMD_DCOM_Msk              (0x1UL)                   /*!< DCOM (Bitfield-Mask: 0x01)                            */
/* ========================================================  SFMCST  ========================================================= */
#define QSPI_SFMCST_COMBSY_Pos            (0UL)                     /*!< COMBSY (Bit 0)                                        */
#define QSPI_SFMCST_COMBSY_Msk            (0x1UL)                   /*!< COMBSY (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMCST_EROMR_Pos             (7UL)                     /*!< EROMR (Bit 7)                                         */
#define QSPI_SFMCST_EROMR_Msk             (0x80UL)                  /*!< EROMR (Bitfield-Mask: 0x01)                           */
/* ========================================================  SFMSIC  ========================================================= */
#define QSPI_SFMSIC_SFMCIC_Pos            (0UL)                     /*!< SFMCIC (Bit 0)                                        */
#define QSPI_SFMSIC_SFMCIC_Msk            (0xffUL)                  /*!< SFMCIC (Bitfield-Mask: 0xff)                          */
/* ========================================================  SFMSAC  ========================================================= */
#define QSPI_SFMSAC_SFMAS_Pos             (0UL)                     /*!< SFMAS (Bit 0)                                         */
#define QSPI_SFMSAC_SFMAS_Msk             (0x3UL)                   /*!< SFMAS (Bitfield-Mask: 0x03)                           */
#define QSPI_SFMSAC_SFM4BC_Pos            (4UL)                     /*!< SFM4BC (Bit 4)                                        */
#define QSPI_SFMSAC_SFM4BC_Msk            (0x10UL)                  /*!< SFM4BC (Bitfield-Mask: 0x01)                          */
/* ========================================================  SFMSDC  ========================================================= */
#define QSPI_SFMSDC_SFMDN_Pos             (0UL)                     /*!< SFMDN (Bit 0)                                         */
#define QSPI_SFMSDC_SFMDN_Msk             (0xfUL)                   /*!< SFMDN (Bitfield-Mask: 0x0f)                           */
#define QSPI_SFMSDC_SFMXST_Pos            (6UL)                     /*!< SFMXST (Bit 6)                                        */
#define QSPI_SFMSDC_SFMXST_Msk            (0x40UL)                  /*!< SFMXST (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSDC_SFMXEN_Pos            (7UL)                     /*!< SFMXEN (Bit 7)                                        */
#define QSPI_SFMSDC_SFMXEN_Msk            (0x80UL)                  /*!< SFMXEN (Bitfield-Mask: 0x01)                          */
#define QSPI_SFMSDC_SFMXD_Pos             (8UL)                     /*!< SFMXD (Bit 8)                                         */
#define QSPI_SFMSDC_SFMXD_Msk             (0xff00UL)                /*!< SFMXD (Bitfield-Mask: 0xff)                           */
/* ========================================================  SFMSPC  ========================================================= */
#define QSPI_SFMSPC_SFMSPI_Pos            (0UL)                     /*!< SFMSPI (Bit 0)                                        */
#define QSPI_SFMSPC_SFMSPI_Msk            (0x3UL)                   /*!< SFMSPI (Bitfield-Mask: 0x03)                          */
#define QSPI_SFMSPC_SFMSDE_Pos            (4UL)                     /*!< SFMSDE (Bit 4)                                        */
#define QSPI_SFMSPC_SFMSDE_Msk            (0x10UL)                  /*!< SFMSDE (Bitfield-Mask: 0x01)                          */
/* ========================================================  SFMPMD  ========================================================= */
#define QSPI_SFMPMD_SFMWPL_Pos            (2UL)                     /*!< SFMWPL (Bit 2)                                        */
#define QSPI_SFMPMD_SFMWPL_Msk            (0x4UL)                   /*!< SFMWPL (Bitfield-Mask: 0x01)                          */
/* ========================================================  SFMCNT1  ======================================================== */
#define QSPI_SFMCNT1_QSPI_EXT_Pos         (26UL)                    /*!< QSPI_EXT (Bit 26)                                     */
#define QSPI_SFMCNT1_QSPI_EXT_Msk         (0xfc000000UL)            /*!< QSPI_EXT (Bitfield-Mask: 0x3f)                        */

/** @} */ /* End of group PosMask_peripherals */


#ifdef __cplusplus
}
#endif

#endif /* RE01_256KB_H */


/** @} */ /* End of group RE01_256KB */

/** @} */ /* End of group Renesas Electronics Corporation */
